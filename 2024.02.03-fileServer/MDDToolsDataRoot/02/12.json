{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "PicturesDSL",
    "DataFlowDSL"
  ],
  "view": {
    "scale": 0.14293603600835877,
    "position": [
      6987.02637381665,
      -6887.0901766756815
    ],
    "isGridOn": true
  },
  "graphFileServer": [],
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"Smile 3 Dialog - V.08\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2350 240\",\"key\":0,\"location\":\"16970 -3480\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"410 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"clear\",\"name\":\"clear\"},{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/user2.png }\\n- { name: Bob, url: ~/user1.png }\\n- { name: Alex, url: ~/robot.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"key\":2,\"location\":\"37700 -13180.1\",\"editorPosition\":[3185,1472,724,998],\"group\":25,\"history\":[]},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\",\"valueChanged\":\"true\"},{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":\"false\",\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":12,\"location\":\"36090 -13600\",\"group\":26},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":14,\"location\":\"34360 -14141.200000000004\",\"group\":327},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":13,\"location\":\"16750 -3550\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":16,\"location\":\"16750 -3450\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"props_\":[{\"name\":\"Name\",\"value\":\"label@0\",\"valueChanged\":true},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"10/26/2023\",\"valueChanged\":\"true\"},{\"name\":\"Path\",\"value\":\"/fileServer/02/10.json\",\"valueChanged\":true},{\"name\":\"Authors\",\"value\":\"- Johane\\n- Frank\\n- Antonello\",\"valueChanged\":\"true\"}],\"key\":18,\"location\":\"16500 -3570\"},\n{\"label\":\"Clear Text\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', '' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":20,\"location\":\"36500 -14240\",\"group\":327},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"name\",\"value\":\"Alex\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = {}\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n} else {\\n  const sender = graphData.dfe.getProperty( nodeData, 'name', '' );\\n  result = { sender, receiver: 'All', text: value };\\n}\\ngraphData.dfe.fireOutput( nodeData, 'out', result );\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":23,\"location\":\"36580 -13590.1\",\"group\":26},\n{\"label\":\"Trigger Next Speaker\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"out_\":[{\"portId\":\"toAlex\",\"name\":\"toAlex\"},{\"portId\":\"toBob\",\"name\":\"toBob\"},{\"portId\":\"toAlice\",\"name\":\"toAlice\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const history = graphData.dfe.getInput( nodeData, 'history', [] );\\n  const nextSpeaker = graphData.dfe.getInput( nodeData, 'nextSpeaker', 'Alex' );\\n  const outputName = `to${nextSpeaker}`;\\n  graphData.dfe.fireOutput( nodeData, outputName, history );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":24,\"location\":\"41680 -13160.300000000001\",\"group\":25,\"editorPosition\":[2439,857,629,337]},\n{\"label\":\"Alex Robot\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":26,\"location\":\"34588.103515625 -13632.109130859375\",\"group\":327},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"name\",\"value\":\"Bob\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = {}\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n} else {\\n  const sender = graphData.dfe.getProperty( nodeData, 'name', '' );\\n  result = { sender, receiver: 'All', text: value };\\n}\\ngraphData.dfe.fireOutput( nodeData, 'out', result );\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":27,\"location\":\"36590 -13069.045\",\"group\":30,\"editorPosition\":[1810,1009,400,350]},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\",\"valueChanged\":\"true\"},{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":\"false\",\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":28,\"location\":\"36100 -13090\",\"group\":30},\n{\"label\":\"Alice Human\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":30,\"location\":\"34599.999515625 -13100.527130859375\",\"group\":327},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\",\"valueChanged\":\"true\"},{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":\"false\",\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":32,\"location\":\"36090 -12547.891\",\"group\":34},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"name\",\"value\":\"Alice\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = {}\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n} else {\\n  const sender = graphData.dfe.getProperty( nodeData, 'name', '' );\\n  result = { sender, receiver: 'All', text: value };\\n}\\ngraphData.dfe.fireOutput( nodeData, 'out', result );\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":33,\"location\":\"36580 -12537.991\",\"group\":34},\n{\"label\":\"Bob Human\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":34,\"location\":\"34569.999515625 -12580.000130859375\",\"group\":327},\n{\"label\":\"Chat\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":25,\"location\":\"37078 -13166\",\"group\":327},\n{\"label\":\"DataFlow Engine\",\"color\":\"orange\",\"size\":\"420 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"lib/DataFlowEngine/1.5/DataFlowEngine.js\",\"key\":38,\"location\":\"21690 -4110\"},\n{\"label\":\"Get Class API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"show\",\"value\":\"public\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst show = graphData.dfe.getProperty( nodeData, 'show', 'public,private' );\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = graphData.dfe.getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          graphData.dfe.fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source, show ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    //const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const expr = new RegExp( /\\\\n\\\\s\\\\s(?<api>\\\\w+\\\\([^\\\\)]*\\\\))\\\\s+\\\\{/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":37,\"location\":\"22240 -4110\",\"editorPosition\":[787,1092,703,895]},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1170 1870\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":39,\"location\":\"22660 -4110\",\"doCompute\":\"DataFlow_Message\",\"label\":\"\"},\n{\"label\":\"Data Gate\",\"category\":\"DataFlow_DataGate\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Pass\",\"checked\":true}],\"in_\":[{\"portId\":\"reset\",\"name\":\"reset\"},{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"sender\\\": \\\"Alice\\\",\\n  \\\"receiver\\\": \\\"All\\\",\\n  \\\"text\\\": \\\"Yay, pizza with mushrooms, my favorite! But Alex, are you putting spicy stuff in that lemonade? I don't like spicy! Can we make it sweet like candy?\\\"\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"doCompute\":\"DataFlow_DataGate\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":42,\"location\":\"39980 -13120\",\"group\":25,\"editorPosition\":[1766,932,400,350]},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alex\",\"valueChanged\":true},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"a robotic cook assistant\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Take the role of {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":43,\"location\":\"35090 -13610\",\"group\":26,\"editorPosition\":[787,1400,400,350]},\n{\"label\":\"Alex Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex has two arms and hands.\\nAlex can see and hear everything \\nAlex cannot move around.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":45,\"location\":\"34640 -13690\",\"group\":26},\n{\"label\":\"Situation\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex is the owner of the appartment.\\nAlice and Bob are friends that have \\nbeen invited by Alex for a dinner.\\nThey want to prepare and eat the dinner together.\\nThe rule is that every one can contribute \\nand participate in the choice of the food or \\ndrinks and in the preparation of them. \\nYou are all around a table.\\nIngredients are on the table or in the fridge.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":47,\"location\":\"34620 -14140\",\"group\":327},\n{\"label\":\"Alex Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to moderate the discussion between the humans;\\n2) to ask their preference and establish a menu based \\n   on the humans' wish and proposition as well as \\n   on his own recipes proposal;\\n3) propose actively ingredients;\\n4) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":49,\"location\":\"34640 -13470\",\"group\":26,\"editorPosition\":[788,868,400,350]},\n{\"label\":\"Alex Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Alex only wants to prepare pizza or cocktails,\\n  nothing else and you always find a polite and \\n  good way to justify this choice;\\n- Alex likes to make some jokes based on the \\n  current context;\\n- Alex is not very good at remembering where \\n  ingredients and tools are in his appartment\\n  and prefer to ask the humans to search for them;\\n- Alex always expresses himself with short sentences;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":54,\"location\":\"34640 -13590\",\"group\":26,\"editorPosition\":[788,516,400,350]},\n{\"label\":\"Bob Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Bob is open-minded;\\n- Bob likes strong cocktails;\\n- Bob is strongly allergic to peperonies;\\n- Bob is a good and careful father;\\n- Bob likes to teach italian words to his \\n  daughther;\\n- when Bob is surprised he often say \\\"cavolo\\\"\\n- Bob rarely thanks people\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":55,\"location\":\"34651.896 -13056.836\",\"group\":30,\"editorPosition\":[1191,516,400,350]},\n{\"label\":\"Bob Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to participate in the discussion with Alice and \\n   Alex;\\n2) to contribute to establish a menu based on the \\n   other's wish and proposition;\\n3) be the first to propose ingredients\\n4) to take care of your daughther Alice.\\n5) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":56,\"location\":\"34651.896 -12936.836\",\"group\":30,\"editorPosition\":[1192,869,400,350]},\n{\"label\":\"Bob Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Bob has all the capabilities of an adult human.\\nBob can see and hear everything.\\nBob can move around to fetch object.\\nBob knows how to use tools.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":57,\"location\":\"34651.896 -13156.836\",\"group\":30,\"editorPosition\":[1190,165,400,350]},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Bob\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Alex\",\"valueChanged\":\"true\"},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"the father of Alice\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Take the role of {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":58,\"location\":\"35101.896 -13086.936\",\"group\":30,\"editorPosition\":[1599,1401,400,350]},\n{\"label\":\"Alice Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Alice likes to make fun of others;\\n- Alice like pizza and noodles;\\n- Alice hate spicy food;\\n- Alice is very active and willing to do \\n  as much as she can;\\n- Alice speak like a child \\n- Alice is like her father and never thanks people she \\n  prefers to make fun of them\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":59,\"location\":\"34621.896 -12527.891\",\"group\":34,\"editorPosition\":[1594,519,400,350]},\n{\"label\":\"Alice Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to be with the adults;\\n2) to have fun;\\n3) to learn from the adults or from the robot;\\n4) propose actively ingredients;\\n5) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":60,\"location\":\"34621.896 -12407.891\",\"group\":34,\"editorPosition\":[1595,872,400,350]},\n{\"label\":\"Alice Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alice has the capabilities of a 7 years old girl.\\nAlice can see and hear everything.\\nAlice can move around to fetch object.\\nAlice does not know how to use every tools.\\nAlice is not allowed to use dangerous tools.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":61,\"location\":\"34621.896 -12627.891\",\"group\":34,\"editorPosition\":[1592,166,400,350]},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alex\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"the daughter of Bob\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Take the role of {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":62,\"location\":\"35071.896 -12557.991\",\"group\":34,\"editorPosition\":[1195,1398,400,350]},\n{\"label\":\"Alex\",\"color\":\"transparent\",\"size\":\"730 150\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Alex</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":64,\"location\":\"36090 -13740\",\"font\":\"150px sans-serif\",\"group\":26,\"editorPosition\":[788,1220,404,176]},\n{\"label\":\"Bob\",\"color\":\"transparent\",\"size\":\"720 145\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Bob</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":65,\"location\":\"36110 -13210\",\"font\":\"150px sans-serif\",\"group\":30,\"editorPosition\":[1195,1220,399,176]},\n{\"label\":\"Alice\",\"color\":\"transparent\",\"size\":\"730 150\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Alice</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":66,\"location\":\"36090 -12697.891\",\"font\":\"150px sans-serif\",\"group\":34,\"editorPosition\":[1596,1223,402,175]},\n{\"label\":\"Capabilities\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 80px;\\\">Capabilities</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":67,\"location\":\"34650 -14030\",\"editorPosition\":[181,165,603,347],\"group\":327},\n{\"label\":\"Personality\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 80px;\\\">Personality</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":69,\"location\":\"34650 -13980\",\"editorPosition\":[182,517,603,347],\"group\":327},\n{\"label\":\"Goals\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 80px;\\\">Goals</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":71,\"location\":\"34650 -13930\",\"editorPosition\":[184,869,601,346],\"group\":327},\n{\"label\":\"Template\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 80px;\\\">Template</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":46,\"location\":\"35110 -13930\",\"editorPosition\":[199,1400,584,347],\"group\":327},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":53,\"location\":\"38280 -13650\",\"group\":327},\n{\"label\":\"Clear JSON\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', [] );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":63,\"location\":\"38500 -13650\",\"group\":327},\n{\"label\":\"Broadcast on Speech\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"onStart\",\"name\":\"onStart\"},{\"portId\":\"onStop\",\"name\":\"onStop\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'onStop' ) {\\n  const nextSpeaker = graphData.dfe.getInput( nodeData, 'nextSpeaker', 'Alex' );\\n  if( nextSpeaker == 'Alex' ) {\\n    const outValue = graphData.dfe.getInput( nodeData, 'in', [] );\\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\\nif( name == 'onStart' ) {\\n  const nextSpeaker = graphData.dfe.getInput( nodeData, 'nextSpeaker', 'Alex' );\\n  if( nextSpeaker != 'Alex' ) {\\n    const outValue = graphData.dfe.getInput( nodeData, 'in', [] );\\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":68,\"location\":\"39630 -13110\",\"group\":25},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":77,\"location\":\"33480 -4070\"},\n{\"label\":\"Get TTS Voices \",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"shaKey\",\"name\":\"shaKey\"},{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst voiceList = speechSynthesis.getVoices();\\nif( !voiceList ) {\\n  voiceList = speechSynthesis.getVoices();\\n}\\n//const outValue = voiceList.map( (e,i)=> { return( { id:i, name:e.name, lang: e.lang } ) } );\\nconst outValue = voiceList.map( (e ,i)=> `id: ${i}, name: ${e.name},  lang: ${e.lang}` );\\ngraphData.dfe.fireOutput( nodeData, 'out', outValue );\\nconst shaKey = SHA1( JSON.stringify(outValue) );\\ngraphData.dfe.fireOutput( nodeData, 'shaKey', shaKey );\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":81,\"location\":\"33670 -4080\",\"editorPosition\":[1544,1449,782,306]},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 3320\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":85,\"location\":\"34130 -2470\"},\n{\"label\":\"YouTube: MemGPT \\ud83e\\udde0 Giving AI Unlimited Prompt Size\",\"color\":\"lightsalmon\",\"size\":\"480 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"http://www.youtube.com/embed/QQ2QOPWZKVc\",\"key\":86,\"location\":\"24920 -3590\"},\n{\"label\":\"ArXiv: MemGPT: Towards LLMs AS OS\",\"color\":\"lightsalmon\",\"size\":\"480 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"https://arxiv.org/pdf/2310.08560.pdf\",\"key\":88,\"location\":\"24910 -3730\",\"editorPosition\":[2493,570,1300,1288]},\n{\"label\":\"Site: MemGPT: Towards LLMs AS OS\",\"color\":\"lightsalmon\",\"size\":\"480 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"https://memgpt.ai/\",\"key\":90,\"location\":\"24920 -3860\"},\n{\"label\":\"Google\",\"color\":\"lightsalmon\",\"size\":\"480 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"https://www.google.com/\",\"key\":72,\"location\":\"24280 -4040\",\"isPopup\":true},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"factList\",\"name\":\"factList\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alex\",\"valueChanged\":true},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"This is the state of conversation until now:\\n{factList}\\n\\nGive the most probable reaction of {name} to the \\ncurrent conversation.\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to ask something to {other1}:\\n   [{name} -> {other1}] <your question to {other1}>\\nc) if you want to ask something to {other2}:\\n   [{name} -> {other2}] <your question to {other2}>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak. Try to be concise and not \\nrepeat yourself or others. Try to reach a plan as \\nquick as possible.\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":73,\"location\":\"35650 -13530\",\"group\":26},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"factList\",\"name\":\"factList\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Bob\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Alex\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"This is the state of conversation until now:\\n{factList}\\n\\nGive the most probable reaction of {name} to the \\ncurrent conversation.\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to ask something to {other1}:\\n   [{name} -> {other1}] <your question to {other1}>\\nc) if you want to ask something to {other2}:\\n   [{name} -> {other2}] <your question to {other2}>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak. Try to be concise and not \\nrepeat yourself or others. Try to reach a plan as \\nquick as possible.\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":75,\"location\":\"35650 -13020\",\"group\":30},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"factList\",\"name\":\"factList\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alex\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"This is the state of conversation until now:\\n{factList}\\n\\nGive the most probable reaction of {name} to the \\ncurrent conversation.\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to ask something to {other1}:\\n   [{name} -> {other1}] <your question to {other1}>\\nc) if you want to ask something to {other2}:\\n   [{name} -> {other2}] <your question to {other2}>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak. Try to be concise and not \\nrepeat yourself or others. Try to reach a plan as \\nquick as possible.\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":76,\"location\":\"35650 -12477.991\",\"group\":34},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":78,\"location\":\"38600 -12550\",\"label\":\"Alex speaks\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":83,\"location\":\"38750 -12590\",\"label\":\"Human speaks\",\"color\":\"plum\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"100 40\",\"key\":91,\"location\":\"38600 -12590\",\"label\":\"AI\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"110 40\",\"key\":92,\"location\":\"38900 -12550\",\"label\":\"AI\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":93,\"location\":\"39010 -12550\",\"label\":\"Alex speaks\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":100,\"location\":\"39060 -12390\",\"label\":\"Alex speaks\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"110 40\",\"key\":101,\"location\":\"38950 -12390\",\"label\":\"AI\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"200 40\",\"key\":102,\"location\":\"38600 -12430\",\"label\":\"AI\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":103,\"location\":\"38800 -12430\",\"label\":\"Human speaks\",\"color\":\"plum\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":104,\"location\":\"38600 -12390\",\"label\":\"Alex speaks\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":113,\"location\":\"38600 -12680\",\"label\":\"Human speaks\",\"color\":\"plum\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"100 40\",\"key\":114,\"location\":\"38600 -12720\",\"label\":\"AI\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":115,\"location\":\"38750 -12720\",\"label\":\"Human speaks\",\"color\":\"plum\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"100 40\",\"key\":117,\"location\":\"38750 -12820\",\"label\":\"AI\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":118,\"location\":\"38600 -12780\",\"label\":\"Human speaks\",\"color\":\"plum\",\"group\":327},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":119,\"location\":\"38850 -12820\",\"label\":\"Alex speaks\",\"group\":327},\n{\"label\":\"Next Speaker Selection\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"},{\"name\":\"actorList\",\"value\":\"- Alex\\n- Bob\\n- Alice\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst sender = value.sender;\\nconst receiver = value.receiver;\\n\\nconst nextSpeaker = getNextSpeaker( sender, receiver );  \\ngraphData.dfe.fireOutput( nodeData, 'nextSpeaker', nextSpeaker );\\ngraphData.dfe.fireOutput( nodeData, 'out', value );\\n\\n\\nfunction getNextSpeaker( sender, receiver ) {\\n  let result = '';\\n  if( receiver == 'All' ) {\\n    const actorList = graphData.dfe.getProperty( nodeData, 'actorList', '[]' );\\n    const actors = jsyaml.load( actorList );\\n    const filterActor = actors.filter( (n)=> !n.endsWith( sender ) );\\n    // Select a random index for the remaining actors\\n    const idx = Math.floor( Math.random()*filterActor.length );\\n    result = filterActor[idx];\\n  } else {\\n    result = receiver;\\n  }\\n  return( result );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":89,\"location\":\"38310 -13080\",\"group\":25,\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"Next Speaker Selection\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"},{\"name\":\"actorList\",\"value\":\"- Alex\\n- Bob\\n- Alice\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst sender = value.sender;\\nconst receiver = value.receiver;\\n\\nconst nextSpeaker = getNextSpeaker( sender, receiver );  \\ngraphData.dfe.fireOutput( nodeData, 'nextSpeaker', nextSpeaker );\\ngraphData.dfe.fireOutput( nodeData, 'out', value );\\n\\n\\nfunction getNextSpeaker( sender, receiver ) {\\n  let result = '';\\n  if( receiver == 'All' ) {\\n    const actorList = graphData.dfe.getProperty( nodeData, 'actorList', '[]' );\\n    const actors = jsyaml.load( actorList );\\n    const filterActor = actors.filter( (n)=> !n.endsWith( sender ) );\\n    // Select a random index for the remaining actors\\n    const idx = Math.floor( Math.random()*filterActor.length );\\n    result = filterActor[idx];\\n  } else {\\n    result = receiver;\\n  }\\n  return( result );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":95,\"location\":\"35199.482 -8560.2\",\"group\":99,\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"410 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"messageIn\",\"name\":\"messageIn\"},{\"portId\":\"clear\",\"name\":\"clear\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/user2.png }\\n- { name: Bob, url: ~/user1.png }\\n- { name: Alex, url: ~/robot.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"key\":96,\"location\":\"34609.482 -8550\",\"editorPosition\":[2345,385,400,1541],\"group\":99,\"history\":[]},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"370 60\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":98,\"location\":\"35619.482 -8559.9\",\"group\":99},\n{\"label\":\"Test Next Speaker component\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":99,\"location\":\"34340 -8530\"},\n{\"label\":\"Trigger Next Speaker\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"out_\":[{\"portId\":\"toAlex\",\"name\":\"toAlex\"},{\"portId\":\"toBob\",\"name\":\"toBob\"},{\"portId\":\"toAlice\",\"name\":\"toAlice\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const history = graphData.dfe.getInput( nodeData, 'history', [] );\\n  const nextSpeaker = graphData.dfe.getInput( nodeData, 'nextSpeaker', 'Alex' );\\n  const outputName = `to${nextSpeaker}`;\\n  graphData.dfe.fireOutput( nodeData, outputName, history );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":105,\"location\":\"35720 -8445\",\"group\":99,\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"530 270\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":108,\"location\":\"36110 -8535\",\"group\":99},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":121,\"location\":\"34360 -8425\",\"group\":99},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"530 270\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":123,\"location\":\"36110 -8805\",\"group\":99},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"530 270\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":125,\"location\":\"36110 -8255\",\"group\":99},\n{\"label\":\"Clear JSON\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', [] );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":126,\"location\":\"35720 -8365\",\"group\":99},\n{\"label\":\"Trigger Next Turn\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"messageIn\",\"name\":\"messageIn\"},{\"portId\":\"onSpeechStop\",\"name\":\"onSpeechStop\"}],\"out_\":[{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const messageIn = graphData.dfe.getInput( nodeData, 'messageIn', [] );\\n  graphData.dfe.fireOutput( nodeData, 'messageOut', messageIn );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":127,\"location\":\"37230 -13170\",\"group\":25,\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":107,\"location\":\"36930 -13440\",\"group\":327},\n{\"label\":\"onStop\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"50 30\",\"key\":120,\"location\":\"38730 -12860\",\"group\":327},\n{\"label\":\"onStart\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"50 30\",\"key\":94,\"location\":\"38580 -12860\",\"group\":327},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\",\"valueChanged\":\"true\"},{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":\"false\",\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":106,\"location\":\"41150 -13230\",\"group\":25},\n{\"label\":\"Convert message to String\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst response = `[${value.sender} -> ${value.receiver}] ${value.text}`;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', response );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":109,\"location\":\"40320 -13120\",\"group\":327},\n{\"label\":\"System prompt\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Take the role of an observer \\nof a conversation.\\nYour goal is:\\n1)to create a JSON fact list of \\nfacts that represent the state of the \\nconversation you observe.\\nThis fact list might be empty at the beginning.\\n2) to extract facts from the new message you receive\\n3) To add them to the fact list \\n4) Compress fact list to only relevant facts for determining a recipe\\n\\nExample 1:\\n  current fact list: \\n    {}\\n  new message: \\n    [Alex -> All] Hi All\\n  new fact list: \\n    {}\\n\\nExample 2:\\n  current fact list: \\n    {}\\n  new message: \\n    [Bob -> All] What shall we cook today?\\n  new fact list: \\n    { \\\"1\\\": \\\"Bob asked what to cook\\\" }\\n  \\nExample 3:\\n  current fact list: \\n    { \\\"1\\\": \\\"Bob asked what to cook\\\" }\\n  new message: \\n    [Alice -> All] I like pizza\\n  new fact list: \\n    { \\\"1\\\": \\\"Alice propose to cook a pizza\\\" }\\n    \\nExample 3:\\n  current fact list: \\n    { \\\"1\\\": \\\"Alice propose to cook a pizza\\\" }\\n  new message: \\n    [Bob -> All] I would prefer that we start with a cocktail\\n  new fact list: \\n    { \\\"1\\\": \\\"Alice propose to cook a pizza\\\",\\n      \\\"2\\\": \\\"Bob propose to start with cocktail\\\" }\\n\\nExample 4:\\n  current fact list: \\n    { \\\"1\\\": \\\"Alice propose to cook a pizza\\\" }\\n  new message: \\n    [Alex -> All] ok let's focus on a cocktail\\n  new fact list: \\n    { \\\"1\\\": \\\"Alice propose to cook a pizza\\\",\\n      \\\"2\\\": \\\"Group focus on cocktail\\\" }\\n  \",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":111,\"location\":\"34620 -14330\",\"group\":327},\n{\"label\":\"{ \\\"1\\\": \\\"Group agreed to make pizza with mushrooms and noodles\\\",\\n  \\\"2\\\": \\\"Alex suggested making sweet lemonade cocktail\\\",\\n  \\\"3\\\": \\\"Bob is going to get mushrooms for the pizza\\\",\\n  \\\"4\\\": \\\"Bruschette is decided to be called as 'crunchy pizza'\\\",\\n  \\\"5\\\": \\\"Alice likes pizza with mushrooms\\\",\\n  \\\"6\\\": \\\"Alice prefers sweet cocktails\\\" }\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1580 2050\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":131,\"location\":\"42530 -13240\",\"group\":327},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"hasHistory\",\"value\":\"false\",\"valueChanged\":\"true\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\"}],\"fileTypeName\":\"LLM\",\"key\":132,\"location\":\"35508.43221422499 -10237.077350743282\",\"group\":112},\n{\"label\":\"System prompt\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Take the role of an observer \\nof a conversation.\\nYour goal is:\\n1)to create summaries \\nof the conversation you observe\\nIf your previous summary is empty \\njust return the new message as is without \\nany additional comments.\\n2) To make sure that only important information \\nare kept in the summary \\n3) that the summary does not exceed 200 words\\n\\nExample1:\\n  previous summary: \\n\\n  new message: [Alex -> All] Hi All\\n  new summary: Alex great everyone\\n\\nExample2:\\n  previous summary: \\n    Alex great everyone\\n  new message: [Bob -> All] What shall we cook today?\\n  new summary: Alex great everyone then Bob asked what to cook.\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":133,\"location\":\"35050 -10290.1\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":135,\"location\":\"34860 -10290\",\"group\":112},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Alex -> All] Hi all\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":142,\"location\":\"34480 -10210\",\"group\":112},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Bob -> All] Hi, let's make a pizza\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":143,\"location\":\"34480 -10100\",\"group\":112},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Alice -> All] I would prefer some pasta\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":144,\"location\":\"34480 -9990\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":146,\"location\":\"34270 -10210\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":147,\"location\":\"34270 -10100\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":148,\"location\":\"34270 -9990\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1260 180\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":151,\"location\":\"35930 -10330\",\"group\":112},\n{\"label\":\"Alex greeted everyone.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1940 1030\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":154,\"location\":\"35930 -9715\",\"group\":112},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"summary\",\"name\":\"summary\"},{\"portId\":\"newMessage\",\"name\":\"newMessage\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"newMessage\",\"valueChanged\":true},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"here is your last summary:\\n{summary}\\n\\nhere is the new message:\\n{newMessage}\\n\\ncreate a new summary based \\non the previous one and the new message\\n\\nnew summary:\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":157,\"location\":\"35130 -10110\",\"group\":112},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Alex -> All] Hi all\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":163,\"location\":\"34810 -10100\",\"group\":112},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"factList\",\"name\":\"factList\"},{\"portId\":\"newMessage\",\"name\":\"newMessage\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"newMessage\",\"valueChanged\":true},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"here is the state of the discussion presented\\nas a JSON object containing the current fact list:\\n{factList}\\n\\nhere is the new message:\\n{newMessage}\\n\\nupdate the JSON object of facts by:\\n1)adding new facts, \\n2)updating existing facts\\n3)removing existing facts \\nThese modifications should be done by extracting \\nfacts from the new message. Remove redundant or\\nsimilar facts.\\n\\n\\nnew JSON fact list:\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":110,\"location\":\"40730 -13130\",\"group\":25},\n{\"label\":\"Test summary of dialog\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":112,\"location\":\"34250 -9810\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1190 60\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":128,\"location\":\"34140 -4170\"},\n{\"label\":\"TTS\",\"category\":\"DataFlow_Component\",\"size\":\"260 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"onStart\",\"name\":\"onStart\"},{\"portId\":\"onStop\",\"name\":\"onStop\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"voiceMap\",\"value\":\"- {name: Alex, id: 0}\\n- {name: Bob, id: 22}\\n- {name: Alice, id: 5}\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst voiceMap = graphData.dfe.getProperty( nodeData, 'voiceMap', '' );\\nconst voiceMapList = jsyaml.load( voiceMap );\\nlet voiceId = 0;\\nif( voiceMapList && voiceMapList.length ) {\\n  voiceMapList.forEach( (e)=> { if( value.sender == e.name ) voiceId = e.id } );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'onStart' );\\nif( !value.text.endsWith( '(silence)' ) ) {\\n  saySentence( value.text, voiceId, fireOnStop );\\n} else {\\n  fireOnStop();\\n}\\n\\nfunction fireOnStop() {\\n  graphData.dfe.fireOutput( nodeData, 'onStop' )\\n}\\nfunction saySentence( message, voiceId, onEnd ) {\\n  // Select voice\\n  //let voiceId = 0;\\n  // VoiceList cache\\n  let voiceList = null;\\n  \\n  // Callback when tts finished speaking\\n  const onTTSEnd = ()=> {\\n    if( onEnd ) {\\n      onEnd();\\n    }\\n  }\\n\\n  let isVoicePresent = false;\\n  let utterance = null;\\n  // Get voice\\n  utterance = new SpeechSynthesisUtterance( message );\\n  utterance.onerror = console.log;\\n  //console.log( 'say', this.voiceId, message);\\n  \\n  if( !voiceList || !voiceList.length ) {\\n    voiceList = speechSynthesis.getVoices();\\n  }\\n  \\n  // If we got the list of voices\\n  if( voiceList && voiceList.length ) {\\n    // Get a correct index for a voice\\n    const vIdx = voiceId % voiceList.length;\\n    // Set voice\\n    utterance.voice = voiceList[vIdx];\\n    isVoicePresent = true;\\n  }\\n\\n  if( isVoicePresent && utterance ) {\\n    utterance.addEventListener( 'end', onTTSEnd, { once: true } );\\n    speechSynthesis.speak( utterance );\\n  } else {\\n    // Use heuristic timer to call the on end\\n    const timeout = Math.max( 2, message.length*200 );\\n    setTimeout( onTTSEnd, timeout );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"/fileServer/pictures/TTS.png\",\"key\":124,\"location\":\"38870 -13210.1\",\"editorPosition\":[1669,439,567,822],\"group\":25},\n{\"label\":\"TTS\",\"category\":\"DataFlow_Component\",\"size\":\"620 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"onStart\",\"name\":\"onStart\"},{\"portId\":\"onStop\",\"name\":\"onStop\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"voiceMap\",\"value\":\"7f9b78: # Frank home\\n - {name: Alex, voice: Microsoft David - English (United States)}\\n - {name: Bob, voice: Google UK English Male}\\n - {name: Alice, voice: Google UK English Female}\\nc7275b: # Antonello home\\n - {name: Alex, voice: Microsoft David - English (United States)}\\n - {name: Bob, voice: Google UK English Male}\\n - {name: Alice, voice: Google UK English Female}\\n81b1a5: # Frank honda\\n - {name: Alex, voice: Microsoft David - English (United States)}\\n - {name: Bob, voice: Google UK English Male}\\n - {name: Alice, voice: Google UK English Female}\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst voiceMap = graphData.dfe.getProperty( nodeData, 'voiceMap', '' );\\nlet voiceMapList = jsyaml.load( voiceMap );\\n\\n// Extract the array that match the browser voice configuration\\nif( !Array.isArray( voiceMapList )) {\\n  const voiceList = getVoiceList();\\n  const voiceListStrArray = voiceList.map( (e ,i)=> `id: ${i}, name: ${e.name},  lang: ${e.lang}` );\\n\\n  const shaKey = SHA1( JSON.stringify( voiceListStrArray ) );\\n  const key = shaKey.substring( 0, 6 );\\n  if( voiceMapList[key] ) {\\n    voiceMapList = voiceMapList[key];\\n  } else {\\n    voiceMapList = [];\\n  }\\n}\\n\\nlet voiceId = 0;\\nif( voiceMapList && voiceMapList.length ) {\\n  let voiceName = '';\\n  voiceMapList.forEach( (e)=> { if( value.sender == e.name ) voiceName = e.voice } );\\n  voiceId = getVoiceIdFronName( voiceName );\\n}\\n\\nif( !value.text.endsWith( '(silence)' ) ) {\\n  saySentence( value.text, voiceId, fireOnStop );\\n  graphData.dfe.fireOutput( nodeData, 'onStart' );\\n} else {\\n  fireOnStop();\\n}\\nfunction getVoiceIdFronName( name ) {\\n  const voiceList = getVoiceList();\\n  for( let i = 0; i < voiceList.length; ++i ) {\\n    const voice = voiceList[i];\\n    if( voice.name == name ) {\\n      return( i );\\n    }\\n  }\\n  return( 0 );\\n}\\nfunction getVoiceList() {\\n  let result = [];\\n\\n  result = speechSynthesis.getVoices();\\n  if( !result ) {\\n    result = speechSynthesis.getVoices();\\n  }\\n  return( result );\\n}\\nfunction fireOnStop() {\\n  graphData.dfe.fireOutput( nodeData, 'onStop' )\\n}\\nfunction saySentence( message, voiceId, onEnd ) {\\n  // Select voice\\n  //let voiceId = 0;\\n  // VoiceList cache\\n  let voiceList = null;\\n  \\n  // Callback when tts finished speaking\\n  const onTTSEnd = ()=> {\\n    if( onEnd ) {\\n      onEnd();\\n    }\\n  }\\n\\n  let isVoicePresent = false;\\n  let utterance = null;\\n  // Get voice\\n  utterance = new SpeechSynthesisUtterance( message );\\n  utterance.onerror = console.log;\\n  //console.log( 'say', this.voiceId, message);\\n  \\n  \\n  \\n  // If we got the list of voices\\n  if( voiceList && voiceList.length ) {\\n    // Get a correct index for a voice\\n    const vIdx = voiceId % voiceList.length;\\n    // Set voice\\n    utterance.voice = voiceList[vIdx];\\n    isVoicePresent = true;\\n  }\\n\\n  //if( isVoicePresent && utterance ) {\\n  if( utterance ) {\\n    utterance.addEventListener( 'end', onTTSEnd, { once: true } );\\n    speechSynthesis.speak( utterance );\\n  } else {\\n    // Use heuristic timer to call the on end\\n    const timeout = Math.max( 2, message.length*200 );\\n    setTimeout( onTTSEnd, timeout );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":129,\"location\":\"34340.61857351638 -7680.384907871436\",\"editorPosition\":[2286,281,809,799]},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{ \\\"1\\\": \\\"Group agreed to make pizza with mushrooms and noodles\\\",\\n  \\\"2\\\": \\\"Alex suggested making sweet lemonade cocktail\\\",\\n  \\\"3\\\": \\\"Bob is going to get mushrooms for the pizza\\\",\\n  \\\"4\\\": \\\"Bruschette is decided to be called as 'crunchy pizza'\\\",\\n  \\\"5\\\": \\\"Alice likes pizza with mushrooms\\\",\\n  \\\"6\\\": \\\"Alice prefers sweet cocktails\\\" }\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":130,\"location\":\"40410 -13240.1\",\"group\":25},\n{\"label\":\"[\\n  {\\n    \\\"text\\\": \\\"HI ALl\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I like pizza and noodles, can we make one of those for dinner?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Cavolo, pizza sounds great! But how about we make it without pepperoni, due to my allergy? Maybe we can replace it with, let's say, mushrooms? And for drinks, how about we stir up some strong cocktails?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Yay, I love mushrooms on pizza! But daddy, you're funny, I can't have strong cocktails! How about we make lemonade instead?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Great choices everyone! But, fortunately I'm allergic to pepperonis, so let's stick to the mushrooms for the pizza. Perhaps we could prepare some bruschette too? Furthermore, Alice, how about we make a limoncello for the adults?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Now, who eats pizza with mushrooms? That's weird! Let's add some noodles to make it taste better, okay?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Pizza and cocktails it is then! Bob, can you hunt down the mushrooms for the pizza? Alice, let's get creative with the lemonade, how about a lemonade cocktail? As for the bruschette...well, how about we call it 'crunchy pizza'?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Yay, pizza with mushrooms, my favorite! But Alex, are you putting spicy stuff in that lemonade? I don't like spicy! Can we make it sweet like candy?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Cavolo, sweet lemonade cocktail sounds great. Let's add a bit of a punch to it with some Vodka or Rum. Alice, my dear, remember in Italian we call mushrooms 'funghi', similar to your favorite, fungi. Alice, do you need help with the noodles?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  }\\n]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"790 920\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":122,\"location\":\"38470 -11570\",\"group\":327},\n{\"tag\":\"GPT3.5\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":134,\"location\":\"11361 -2235.2380000000003\",\"label\":\"generate next \\n  speech turn\",\"color\":\"gold\",\"group\":241},\n{\"tag\":\"JSON fact list\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":155,\"location\":\"11361 -2015.338\",\"label\":\"dialog state\",\"group\":241},\n{\"tag\":\"GPT3.5 that decide when to go to the next master plan goal based on the dialog state\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":136,\"location\":\"10811 -2015.238\",\"label\":\"decision to \\nswitch goal\",\"color\":\"gold\",\"group\":241},\n{\"tag\":\"Script that extract current and next step from master plan\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":156,\"location\":\"10810.5 -2230\",\"label\":\"master plan\\n sequencer\",\"group\":241},\n{\"tag\":\"Current step of the master plan\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":158,\"location\":\"11161 -2235.2380000000003\",\"label\":\"current goal\",\"group\":241},\n{\"tag\":\"Next step of the master plan\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":159,\"location\":\"11161 -2135.2380000000003\",\"label\":\"next goal\",\"group\":241},\n{\"tag\":\"Event to decide to switch to the next goal\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":160,\"location\":\"10811 -2135.2380000000003\",\"label\":\"onSwitch\",\"group\":241},\n{\"tag\":\"next sentence\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"140 40\",\"key\":161,\"location\":\"11581 -2235.438\",\"label\":\"gpt sentence\",\"group\":241},\n{\"tag\":\"HChat log of the interactions\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":162,\"location\":\"11961 -1735.238\",\"label\":\"episodic\\nmemory\",\"color\":\"salmon\",\"group\":186},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":164,\"location\":\"11160.5 -2410\",\"label\":\"identity traits\\n    selector\",\"group\":241},\n{\"tag\":\"JSON description of the identity traits important to the current goal\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 60\",\"key\":166,\"location\":\"11361 -2415.2380000000003\",\"label\":\"    current \\nidentity traits\",\"group\":241},\n{\"tag\":\"GPT3.5\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":173,\"location\":\"12121 -2025.238\",\"label\":\"  generate \\ndialog state\",\"color\":\"gold\",\"group\":241},\n{\"tag\":\"JSON array of episodes\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":174,\"location\":\"12121 -1935.238\",\"label\":\"dialog history\",\"group\":241},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"140 70\",\"key\":175,\"location\":\"12311 -2235.2380000000003\",\"label\":\"next speaker\\n    selector\",\"group\":241},\n{\"tag\":\"Agent name\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":176,\"location\":\"11161 -2745.2380000000003\",\"label\":\"agent name\",\"group\":241},\n{\"label\":\"Bob\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":209,\"location\":\"10630.5 -2580\",\"group\":241},\n{\"label\":\"Alice\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":211,\"location\":\"10530.5 -2700\",\"group\":241},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":214,\"location\":\"11161 -2605.2380000000003\",\"label\":\" agent\\nselector\",\"group\":241},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":215,\"location\":\"11161 -2875.2380000000003\",\"label\":\"first speaker\\n   selector\",\"group\":241},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":216,\"location\":\"11871 -2235.2380000000003\",\"label\":\"text to speech\",\"group\":241},\n{\"tag\":\"Event\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":217,\"location\":\"12091 -2235.2380000000003\",\"label\":\"sentence start\",\"group\":241},\n{\"label\":\"Human simulator\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":241,\"location\":\"10480.197265625 -2406.8234492187503\",\"group\":186},\n{\"label\":\"Alex (Robot)\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":242,\"location\":\"10741.5 -769.34134765625\",\"group\":186},\n{\"tag\":\"Event\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":243,\"location\":\"11701 -1065.238\",\"label\":\"list of short fillers\",\"group\":242},\n{\"tag\":\"Next meaningful sentence\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"140 40\",\"key\":244,\"location\":\"12121 -435.23800000000006\",\"label\":\"gpt sentence\",\"group\":242},\n{\"tag\":\"Event\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":245,\"location\":\"11901 -1165.238\",\"label\":\"on Speak\",\"group\":242},\n{\"tag\":\"Script that check if gpt sentence available, if not request other filler, if yes fire the gpt sentence\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":246,\"location\":\"11901 -435.23800000000006\",\"label\":\"filler request\\n   decision\",\"group\":242},\n{\"tag\":\"next sentence\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"140 40\",\"key\":247,\"location\":\"11531 -1375.238\",\"label\":\"full sentence\",\"group\":242},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"140 70\",\"key\":248,\"location\":\"11531 -965.238\",\"label\":\"concatenate\",\"group\":242},\n{\"tag\":\"Event\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":249,\"location\":\"11901 -775.238\",\"label\":\"filler end\",\"group\":242},\n{\"tag\":\"Script that select a filler\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":250,\"location\":\"11901 -1065.238\",\"label\":\"filler selection\",\"group\":242},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":252,\"location\":\"11901 -865.238\",\"label\":\"text to speech\",\"group\":242},\n{\"tag\":\"next sentence\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":253,\"location\":\"11901 -965.238\",\"label\":\"filler sentence\",\"group\":242},\n{\"tag\":\"Event\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":254,\"location\":\"12531 -435.23800000000006\",\"label\":\"sentence start\",\"group\":242},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"140 70\",\"key\":256,\"location\":\"12361 -435.23800000000006\",\"label\":\"text to speech\",\"group\":242},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":262,\"location\":\"11901 -1285.3380000000002\",\"label\":\"decision\\nto speak\",\"group\":242},\n{\"tag\":\"JSON array of episodes\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":263,\"location\":\"12221 -1375.238\",\"label\":\"dialog history\",\"group\":242},\n{\"tag\":\"GPT3.5\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":264,\"location\":\"12231 -215.23800000000006\",\"label\":\"  generate \\ndialog state\",\"color\":\"gold\",\"group\":242},\n{\"tag\":\"JSON description of the identity traits important to the current goal\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 60\",\"key\":268,\"location\":\"11181 -615.238\",\"label\":\"    current \\nidentity traits\",\"group\":242},\n{\"tag\":\"Script \",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"140 70\",\"key\":269,\"location\":\"10991 -615.4380000000001\",\"label\":\"identity traits\\n    selector\",\"group\":242},\n{\"tag\":\"Next meaningful sentence\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"140 40\",\"key\":271,\"location\":\"11531 -435.4380000000001\",\"label\":\"gpt sentence\",\"group\":242},\n{\"tag\":\"Next step of the master plan\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":273,\"location\":\"11080 -340.1\",\"label\":\"next goal\",\"group\":242},\n{\"tag\":\"Current step of the master plan\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"140 40\",\"key\":274,\"location\":\"10991 -435.23800000000006\",\"label\":\"current goal\",\"group\":242},\n{\"tag\":\"Script that extract current and next step from master plan\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":275,\"location\":\"10763 -431.932\",\"label\":\"master plan\\n sequencer\",\"group\":242},\n{\"tag\":\"GPT3.5 that decide when to go to the next master plan goal based on the dialog state\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":277,\"location\":\"10763 -211.93200000000002\",\"label\":\"decision to \\nswitch goal\",\"color\":\"gold\",\"group\":242},\n{\"tag\":\"JSON fact list\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"140 40\",\"key\":278,\"location\":\"11331 -215.23800000000006\",\"label\":\"dialog state\",\"group\":242},\n{\"label\":\"Alex (robot)\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":279,\"location\":\"10861 -795.238\",\"group\":242},\n{\"tag\":\"GPT3.5\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"140 70\",\"key\":287,\"location\":\"11331 -435.23800000000006\",\"label\":\"generate next \\n  speech turn\",\"color\":\"gold\",\"group\":242},\n{\"tag\":\"Event\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"140 40\",\"key\":288,\"location\":\"12361 -525.238\",\"label\":\"sentence end\",\"group\":186},\n{\"label\":\"Full System\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":186,\"location\":\"9320 -1549.99955078125\"},\n{\"tag\":\"Event\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":187,\"location\":\"12091 -1065.238\",\"label\":\"on Filler\",\"group\":242},\n{\"label\":\"Agent Setup\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":177,\"location\":\"9340.5 -1455.41455078125\",\"group\":186},\n{\"tag\":\"JSON list of personality traits like:\\n- responsiveness (speed, initiative, proactiveness, engagement)\\n- verbal style (formality, verbosity)\\n- emotionality (excitement, empathy, aggressively, ...)\\n\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":178,\"location\":\"10192 -1279.23095703125\",\"label\":\"personality\",\"group\":177},\n{\"tag\":\"JSON list of preferences like:\\n- hobbies\\n- special interest\\n- dis-/liked food\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":179,\"location\":\"10192 -1509.23095703125\",\"label\":\"preferences\",\"group\":177},\n{\"tag\":\"JSON list of intolerances like:\\n- food sickness (diabetes, fat)\\n- allergies (gluten, nuts,...)\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":180,\"location\":\"10192 -1599.23095703125\",\"label\":\"intolerances\",\"group\":177},\n{\"tag\":\"JSON list of physical abilities or disabilities like:\\n- age range (child, adult,...)\\n- motor disabilities (broken arm)\\n- perceptive disabilities (blind)\\n- cognitive disabilities (Alzheimer)\\n- skills (amateur cook)\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":181,\"location\":\"10190 -1410\",\"label\":\"capabilities\",\"group\":177},\n{\"tag\":\"GPT4 that creates all identity traits of the agent\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":182,\"location\":\"9560 -1440\",\"label\":\" generate \\nagent type\",\"color\":\"gold\",\"group\":177},\n{\"tag\":\"JSON list of knowledge:\\n- family and friends\\n- current events and news\\n- etiquette\\n- others' interest and hobbies\\n- recent personal events\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":183,\"location\":\"10192 -1719.23095703125\",\"label\":\"social memories\",\"group\":177},\n{\"tag\":\"Short textual description of the agent\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 60\",\"key\":184,\"location\":\"9362 -1439.23095703125\",\"label\":\"     agent \\nspecification\",\"group\":177},\n{\"label\":\"Scenario\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":185,\"location\":\"9958.5 -448.6962890625\",\"group\":186},\n{\"tag\":\"Short textual description of the scenario\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 60\",\"key\":188,\"location\":\"9980 -510\",\"label\":\"   scenario \\nspecification\",\"group\":185},\n{\"tag\":\"GPT4\",\"type\":\"function\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 70\",\"key\":189,\"location\":\"10180 -510\",\"label\":\"  generate \\nmaster plan\",\"color\":\"gold\",\"group\":185},\n{\"tag\":\"JSON part of the master plan with identity traits per goal:\\n1-personality, social memories\\n2-personality, preferences\\n3-personality, preferences, intolerances, environment-state\\n4-personality\\n5-personality, capabilities, environment-state\\n6-personality, capabilities, environment-state\\n7-personality, social memories\\n8-personality, social memories\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"180 60\",\"key\":190,\"location\":\"10400 -620\",\"label\":\"identity traits\\nrequirement\",\"group\":185},\n{\"tag\":\"JSON master plan for cooking together:\\n1-Salutation and small talk\\n2-Ideas proposal on what to cook\\n3-Building on ideas and proposing alternatives with inventory check\\n4-Collaborative decision and summary of decided recipes\\n5-Allocation of tasks, making and checking progress\\n6-Cleaning and serving\\n7-Appreciation and feedback\\n8-Closing and departure\\n9-Stop System\\n\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"180 40\",\"key\":191,\"location\":\"10400 -420\",\"label\":\"master plan\",\"group\":185},\n{\"label\":\" generate \\nagent type\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\"},{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":false,\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":193,\"location\":\"16140 -1480\",\"group\":201},\n{\"label\":\"Alex identity traits proposal\",\"category\":\"DataFlow_DataSend\",\"size\":\"320 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"name\\\": \\\"Alex\\\",\\n  \\\"social memories\\\": [\\n    \\\"Alex enjoys talking about current events and news\\\",\\n    \\\"Alex is interested in learning about new hobbies\\\",\\n    \\\"Alex recently visited a botanical garden and was amazed by the variety of plants\\\"\\n  ],\\n  \\\"intolerances\\\": [\\n    \\\"Alex cannot consume any food due to being a robot\\\",\\n    \\\"Alex has no allergies or food restrictions\\\"\\n  ],\\n  \\\"preferences\\\": [\\n    \\\"Alex is passionate about robotics and technology\\\",\\n    \\\"Alex loves discussing various programming languages\\\",\\n    \\\"Alex is fascinated by the process of cooking and enjoys learning new recipes\\\"\\n  ],\\n  \\\"capabilities\\\": [\\n    \\\"Alex is a state-of-the-art humanoid robot\\\",\\n    \\\"Alex has advanced AI capabilities and can engage in complex conversations\\\",\\n    \\\"Alex has a wide range of knowledge about different cuisines and cooking techniques\\\",\\n    \\\"Alex can identify various objects and ingredients\\\",\\n    \\\"Alex can provide step-by-step cooking instructions\\\",\\n    \\\"Alex can communicate in multiple languages\\\"\\n  ],\\n  \\\"personality\\\": [\\n    \\\"Alex is highly responsive and proactive in conversations\\\",\\n    \\\"Alex has a formal and polite verbal style\\\",\\n    \\\"Alex is enthusiastic and shows excitement when discussing food and technology\\\"\\n  ]\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_DataSend\",\"key\":197,\"location\":\"16530 -1475.05\",\"group\":201,\"buttons_\":[{\"name\":\"Accept\",\"checked\":false}],\"editorPosition\":[6581,974,681,442]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":199,\"location\":\"15410 -1580\",\"group\":201},\n{\"label\":\"     agent \\nspecification\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Here is the short specification for the agent you \\nhave to create:\\n- the agent is a humanoid robot named Alex\\n- the agent cannot move\\n- the agent can take and put objects around itself\\n- the agent is social and likes interacting with\\n  humans\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":200,\"location\":\"15750 -1469.95\",\"group\":201},\n{\"label\":\"Alex (robot)\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":201,\"location\":\"15390 -1524.975\"},\n{\"label\":\"Alice\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":203,\"location\":\"15400 -1820\"},\n{\"label\":\"     agent \\nspecification\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Here is the short specification for the agent you \\nhave to create:\\n- the agent is a child human named Alice\\n- the agent is the daughter of bob\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":204,\"location\":\"15750 -1789.9\",\"group\":203},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":205,\"location\":\"15420 -1850.1\",\"group\":203},\n{\"label\":\"Alice identity traits proposal\",\"category\":\"DataFlow_DataSend\",\"size\":\"320 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"name\\\": \\\"Alice\\\",\\n  \\\"social memories\\\": [\\n    \\\"Alice loves spending time with her family\\\",\\n    \\\"Alice has a best friend named Sarah\\\",\\n    \\\"Alice enjoys playing soccer with her friends\\\"\\n  ],\\n  \\\"intolerances\\\": [],\\n  \\\"preferences\\\": [\\n    \\\"Alice loves chocolate\\\",\\n    \\\"Alice enjoys baking with her mom\\\",\\n    \\\"Alice dislikes spicy food\\\"\\n  ],\\n  \\\"capabilities\\\": [\\n    \\\"Alice is a child\\\",\\n    \\\"Alice is learning how to cook\\\",\\n    \\\"Alice is good at drawing\\\"\\n  ],\\n  \\\"personality\\\": [\\n    \\\"Alice is very talkative and curious\\\",\\n    \\\"Alice is always enthusiastic and eager to try new things\\\",\\n    \\\"Alice is empathetic and caring towards others\\\"\\n  ]\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_DataSend\",\"key\":206,\"location\":\"16520.00021990412 -1798.2719664998924\",\"group\":203,\"buttons_\":[{\"name\":\"Accept\",\"checked\":false}],\"editorPosition\":[6581,559,657,394]},\n{\"label\":\" generate \\nagent type\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\"},{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":false,\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":208,\"location\":\"16130 -1799.9\",\"group\":203},\n{\"label\":\"Bob\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":210,\"location\":\"15400 -2105\"},\n{\"label\":\"     agent \\nspecification\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Here is the short specification for the agent you \\nhave to create:\\n- the agent is an adult human named Bob\\n- the agent has a daughter called Alice\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":212,\"location\":\"15760 -2060\",\"group\":210},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":213,\"location\":\"15420 -2150\",\"group\":210},\n{\"label\":\"Bob identity traits proposal\",\"category\":\"DataFlow_DataSend\",\"size\":\"310 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"name\\\": \\\"Bob\\\",\\n  \\\"social memories\\\": [\\n    \\\"Bob's daughter Alice just won a piano competition.\\\",\\n    \\\"Bob recently went on vacation to the beach.\\\",\\n    \\\"Bob's favorite hobby is hiking in the mountains.\\\",\\n    \\\"Bob enjoys watching football matches with his friends.\\\"\\n  ],\\n  \\\"intolerances\\\": [\\n    \\\"Bob is lactose intolerant.\\\",\\n    \\\"Bob has a gluten intolerance.\\\",\\n    \\\"Bob is allergic to shellfish.\\\"\\n  ],\\n  \\\"preferences\\\": [\\n    \\\"Bob loves cooking Italian cuisine.\\\",\\n    \\\"Bob is a passionate gardener and loves using fresh herbs in his recipes.\\\",\\n    \\\"Bob dislikes spicy food.\\\",\\n    \\\"Bob enjoys experimenting with new flavors and ingredients.\\\"\\n  ],\\n  \\\"capabilities\\\": [\\n    \\\"Bob is an experienced home cook.\\\",\\n    \\\"Bob has excellent knife skills.\\\",\\n    \\\"Bob is proficient in making desserts.\\\",\\n    \\\"Bob has a collection of rare cookbooks.\\\"\\n  ],\\n  \\\"personality\\\": [\\n    \\\"Bob is a proactive agent who takes initiative in discussions.\\\",\\n    \\\"Bob tends to speak in a concise and formal manner.\\\",\\n    \\\"Bob is empathetic and shows genuine interest in others' opinions.\\\",\\n    \\\"Bob maintains a calm and composed demeanor in all situations.\\\"\\n  ]\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_DataSend\",\"key\":218,\"location\":\"16550.00021990412 -2064.9999664998927\",\"group\":210,\"buttons_\":[{\"name\":\"Accept\",\"checked\":false}]},\n{\"label\":\" generate \\nagent type\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\"},{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":false,\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":220,\"location\":\"16150 -2070\",\"group\":210},\n{\"label\":\"     agent \\ncreation task\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Your goal is to generate different caracteristics of \\nan agent that will be involved in discussion and making \\nof recipes. Based on a short specification you have to \\ngenerate a JSON object containig the following keys:\\n{\\n  \\\"name\\\": <string>,\\n  \\\"social memories\\\": [<array of strings>], \\n  \\\"intolerances\\\": [<array of strings>], \\n  \\\"preferences\\\": [<array of strings>], \\n  \\\"capabilities\\\": [<array of strings>], \\n  \\\"personality\\\": [<array of strings>]\\n}\\nHere is the description of the kind of information \\nyou have to generate for each of these keys:\\n* \\\"name\\\": the agent name\\n* \\\"social memories\\\": invented facts that can be used \\n   by the agent to produce small talk like:\\n   - family and friends\\n   - current events and news\\n   - interest and hobbies\\n   - recent personal events\\n* \\\"intolerances\\\": invented facts that can be used \\n   by the agent to inform others in a discussion about\\n   food restrictions like:\\n   - food sickness (diabetes, fat)\\n   - allergies (gluten, nuts,...)\\n* \\\"preferences\\\": invented facts that can be used \\n   by the agent to inform others in a discussion about\\n   what the agent likes or dislike, such as:\\n   - hobbies\\n   - special interest\\n   - loved or hated food ingredients\\n* \\\"capabilities\\\": invented facts that can be used \\n   by the agent to inform others in a discussion about\\n   what the agent is, can or cannot do, such as:\\n   - age range (child, adult,...)\\n   - motor disabilities if any (broken arm)\\n   - perceptive disabilities if any (blind)\\n   - cognitive disabilities if any (Alzheimer)\\n   - skills (amateur or profi cook)\\n* \\\"personality\\\": invented facts that can be used \\n   by the agent to influence the way the agent speaks or \\n   behave, such as:\\n   - responsiveness (speed of reaction, initiative, \\n     proactiveness, engagement)\\n   - verbal style (formality, verbosity)\\n   - emotionality (excitement, empathy, aggressively, ...)\\n\\nAll caracteristics that are not defined in the short \\nspecification have to be invented.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":221,\"location\":\"15780 -2330\"},\n{\"tag\":\"JSON description of objects, tools and ingredient in the vicinity\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 60\",\"key\":192,\"location\":\"11310 -1720\",\"label\":\"Environment\",\"group\":186},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":194,\"location\":\"14610 -1250\",\"group\":207},\n{\"label\":\"scenario\\nspecification\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- recipe are not fixed in advance and need to be \\n  agreed upon.\\n- Alex has ingredients on the table of in \\n  the appartment (no need to go shopping but just \\n  check their availability)\\n- What are the high-level phase they will have to \\n  go through from\\n  just after they arrived and enter the room up to \\n  the moment they will leave?\\n- discussions can happen in every phase\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":195,\"location\":\"15020 -1075.025\",\"group\":207,\"editorPosition\":[-2334,765,392,307]},\n{\"label\":\" generate \\nmaster plan\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\"},{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":false,\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":196,\"location\":\"15820 -1124.875\",\"group\":207},\n{\"label\":\"master plan\",\"category\":\"DataFlow_DataSend\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"1\\\": {\\n    \\\"goal\\\": \\\"Introduce themselves and discuss the plan\\\",\\n    \\\"discussion\\\": \\\"Alex, Bob, and Alice introduce themselves and discuss what kind of food they would like to prepare together. They can share their preferences and ideas for the meal.\\\",\\n    \\\"switchCondition\\\": \\\"Once they have agreed on a general plan for the meal\\\",\\n    \\\"identity traits\\\": [\\\"personality\\\", \\\"preferences\\\"]\\n  },\\n  \\\"2\\\": {\\n    \\\"goal\\\": \\\"Check the available ingredients\\\",\\n    \\\"discussion\\\": \\\"Alex and the others check the ingredients available on the table or in the apartment to see what they can use for the meal. They can discuss the options and consider any allergies or food intolerances they have.\\\",\\n    \\\"switchCondition\\\": \\\"Once they have assessed the available ingredients and decided on a recipe\\\",\\n    \\\"identity traits\\\": [\\\"food intolerances\\\", \\\"environment-state\\\"]\\n  },\\n  \\\"3\\\": {\\n    \\\"goal\\\": \\\"Assign tasks and start the cooking process\\\",\\n    \\\"discussion\\\": \\\"Alex, Bob, and Alice assign tasks to each other based on their capabilities and preferences. They discuss the steps required to prepare the chosen recipe and begin the cooking process.\\\",\\n    \\\"switchCondition\\\": \\\"Once they have assigned tasks and started cooking\\\",\\n    \\\"identity traits\\\": [\\\"capabilities\\\"]\\n  },\\n  \\\"4\\\": {\\n    \\\"goal\\\": \\\"Continuing the cooking process\\\",\\n    \\\"discussion\\\": \\\"Alex, Bob, and Alice continue cooking the dish, following the recipe and supporting each other with any questions or help needed.\\\",\\n    \\\"switchCondition\\\": \\\"Once they have completed the cooking process and the dish is ready\\\",\\n    \\\"identity traits\\\": []\\n  },\\n  \\\"5\\\": {\\n    \\\"goal\\\": \\\"Enjoy the meal and have a conversation\\\",\\n    \\\"discussion\\\": \\\"Alex, Bob, and Alice sit down to enjoy the meal they prepared together. They can engage in a casual conversation, sharing stories, and getting to know each other better.\\\",\\n    \\\"switchCondition\\\": \\\"Once they finish eating and decide it's time to wrap up the evening\\\",\\n    \\\"identity traits\\\": [\\\"social memories\\\"]\\n  },\\n  \\\"6\\\": {\\n    \\\"goal\\\": \\\"Wrap up and say goodbye\\\",\\n    \\\"discussion\\\": \\\"Alex, Bob, and Alice clean up the kitchen, store any leftovers, and say goodbye to each other. They can discuss future plans or exchange contact information if desired.\\\",\\n    \\\"switchCondition\\\": \\\"Once they have finished cleaning and preparing to leave\\\",\\n    \\\"identity traits\\\": [\\\"personality\\\"]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_DataSend\",\"key\":198,\"location\":\"16210 -1115.1750000000002\",\"group\":207,\"buttons_\":[{\"name\":\"Accept\",\"checked\":false}],\"editorPosition\":[1109,855,882,861]},\n{\"label\":\"     scenario\\ncreation task\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Your goal is to generate a high level plan to describe \\nthe activities a group of agents have to do together.\\nBased on a short specification you have to \\ngenerate a JSON object containig a series of steps \\nlike this:\\n{\\n  \\\"1\\\": {\\n    \\\"goal\\\": <string>,\\n    \\\"discussion\\\": <string>,\\n    \\\"switchCondition\\\": <string>,\\n    \\\"identity traits\\\": [<array of strings>] \\n  }\\n  \\\"2\\\": {\\n    \\\"goal\\\": <string >,\\n    \\\"discussion\\\": <string>,\\n    \\\"switchCondition\\\": <string>,\\n    \\\"identity traits\\\": [<array of strings>]\\n  }\\n  ...\\n}\\nHere is the description of the kind of information \\nyou have to generate for each of these keys:\\n* \\\"goal\\\": a string describing the goal of the current step\\n* \\\"discussion\\\": a string describing the discusion elements that\\n  should be addressed and the action that should be performed. \\n  that the agents should discuss in the current step\\n* \\\"switchCondition\\\": a string describing the criteria that should \\n  trigger a switch to the next step in the dialog. These criteria \\n  must be concrete and easy to detect from the dialog. \\n* \\\"identity traits\\\": an array of strings that describes \\n  for the current step, the traits of the agent identity \\n  that needs to be considered. the identity traits must \\n  be taken from the following list:\\n  - \\\"personality\\\": individual character that distinguish \\n    agent from each other, \\n  - \\\"social memories\\\": events and facts that can be used \\n    to untertain a discussion,\\n  - \\\"preferences\\\": individual specific likes and dislikes, \\n  - \\\"food intolerances\\\": allergies and health related \\n    food restrictions, \\n  - capabilities: agent skills and physical and mental \\n    abilities,\\n  - environment-state: description of objects, ingredients \\n    and tools available in the surounding of the agent.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":202,\"location\":\"15440 -1214.9750000000001\",\"group\":207,\"editorPosition\":[-1881,105,468,640]},\n{\"label\":\"scenario\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":207,\"location\":\"14590 -1117.5125\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"name\\\": \\\"Alice\\\",\\n    \\\"social memories\\\": [\\n      \\\"Alice loves spending time with her family\\\",\\n      \\\"Alice has a best friend named Sarah\\\",\\n      \\\"Alice enjoys playing soccer with her friends\\\"\\n    ],\\n    \\\"intolerances\\\": [],\\n    \\\"preferences\\\": [\\n      \\\"Alice loves chocolate\\\",\\n      \\\"Alice enjoys baking with her mom\\\",\\n      \\\"Alice dislikes spicy food\\\"\\n    ],\\n    \\\"capabilities\\\": [\\n      \\\"Alice is a child\\\",\\n      \\\"Alice is learning how to cook\\\",\\n      \\\"Alice is good at drawing\\\"\\n    ],\\n    \\\"personality\\\": [\\n      \\\"Alice is very talkative and curious\\\",\\n      \\\"Alice is always enthusiastic and eager to try new things\\\",\\n      \\\"Alice is empathetic and caring towards others\\\"\\n    ]\\n  },\\n  {\\n    \\\"name\\\": \\\"Alice\\\",\\n    \\\"social memories\\\": [\\n      \\\"Alice loves spending time with her family\\\",\\n      \\\"Alice has a best friend named Sarah\\\",\\n      \\\"Alice enjoys playing soccer with her friends\\\"\\n    ],\\n    \\\"intolerances\\\": [],\\n    \\\"preferences\\\": [\\n      \\\"Alice loves chocolate\\\",\\n      \\\"Alice enjoys baking with her mom\\\",\\n      \\\"Alice dislikes spicy food\\\"\\n    ],\\n    \\\"capabilities\\\": [\\n      \\\"Alice is a child\\\",\\n      \\\"Alice is learning how to cook\\\",\\n      \\\"Alice is good at drawing\\\"\\n    ],\\n    \\\"personality\\\": [\\n      \\\"Alice is very talkative and curious\\\",\\n      \\\"Alice is always enthusiastic and eager to try new things\\\",\\n      \\\"Alice is empathetic and caring towards others\\\"\\n    ]\\n  },\\n  {\\n    \\\"name\\\": \\\"Alice\\\",\\n    \\\"social memories\\\": [\\n      \\\"Alice loves spending time with her family\\\",\\n      \\\"Alice has a best friend named Sarah\\\",\\n      \\\"Alice enjoys playing soccer with her friends\\\"\\n    ],\\n    \\\"intolerances\\\": [],\\n    \\\"preferences\\\": [\\n      \\\"Alice loves chocolate\\\",\\n      \\\"Alice enjoys baking with her mom\\\",\\n      \\\"Alice dislikes spicy food\\\"\\n    ],\\n    \\\"capabilities\\\": [\\n      \\\"Alice is a child\\\",\\n      \\\"Alice is learning how to cook\\\",\\n      \\\"Alice is good at drawing\\\"\\n    ],\\n    \\\"personality\\\": [\\n      \\\"Alice is very talkative and curious\\\",\\n      \\\"Alice is always enthusiastic and eager to try new things\\\",\\n      \\\"Alice is empathetic and caring towards others\\\"\\n    ]\\n  },\\n  {\\n    \\\"name\\\": \\\"Alice\\\",\\n    \\\"social memories\\\": [\\n      \\\"Alice loves spending time with her family\\\",\\n      \\\"Alice has a best friend named Sarah\\\",\\n      \\\"Alice enjoys playing soccer with her friends\\\"\\n    ],\\n    \\\"intolerances\\\": [],\\n    \\\"preferences\\\": [\\n      \\\"Alice loves chocolate\\\",\\n      \\\"Alice enjoys baking with her mom\\\",\\n      \\\"Alice dislikes spicy food\\\"\\n    ],\\n    \\\"capabilities\\\": [\\n      \\\"Alice is a child\\\",\\n      \\\"Alice is learning how to cook\\\",\\n      \\\"Alice is good at drawing\\\"\\n    ],\\n    \\\"personality\\\": [\\n      \\\"Alice is very talkative and curious\\\",\\n      \\\"Alice is always enthusiastic and eager to try new things\\\",\\n      \\\"Alice is empathetic and caring towards others\\\"\\n    ]\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":226,\"location\":\"35520 -7259.1\",\"editorPosition\":[1435,599,552,576],\"group\":219},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"name\\\": \\\"Alice\\\",\\n  \\\"social memories\\\": [\\n    \\\"Alice loves spending time with her family\\\",\\n    \\\"Alice has a best friend named Sarah\\\",\\n    \\\"Alice enjoys playing soccer with her friends\\\"\\n  ],\\n  \\\"intolerances\\\": [],\\n  \\\"preferences\\\": [\\n    \\\"Alice loves chocolate\\\",\\n    \\\"Alice enjoys baking with her mom\\\",\\n    \\\"Alice dislikes spicy food\\\"\\n  ],\\n  \\\"capabilities\\\": [\\n    \\\"Alice is a child\\\",\\n    \\\"Alice is learning how to cook\\\",\\n    \\\"Alice is good at drawing\\\"\\n  ],\\n  \\\"personality\\\": [\\n    \\\"Alice is very talkative and curious\\\",\\n    \\\"Alice is always enthusiastic and eager to try new things\\\",\\n    \\\"Alice is empathetic and caring towards others\\\"\\n  ]\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":228,\"location\":\"34850 -7249.1\",\"group\":219},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":230,\"location\":\"34670 -7249\",\"group\":219},\n{\"label\":\"test db\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":219,\"location\":\"34650 -7260.703959316415\"},\n{\"label\":\"push item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array where to push data\"},{\"portId\":\"item\",\"name\":\"item\",\"tooltip\":\"JSON item to be pushed in array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"JSON array containing pushed item\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"item\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'item' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  try {\\n    const newData = JSON.parse( value, null, 2 );\\n    database.push( newData );\\n    graphData.dfe.fireOutput( nodeData, 'out', database );\\n  } catch( e ) {\\n    console.warn( 'Not well formatted JSON' );\\n  } \\n}\",\"fileTypeName\":\"PushInArray\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":225,\"location\":\"16980 -2070\",\"group\":210},\n{\"label\":\"Bob DB\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a JSON object or array\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"name\\\": \\\"Bob\\\",\\n    \\\"social memories\\\": [\\n      \\\"Bob's daughter Alice just won a piano competition.\\\",\\n      \\\"Bob recently went on vacation to the beach.\\\",\\n      \\\"Bob's favorite hobby is hiking in the mountains.\\\",\\n      \\\"Bob enjoys watching football matches with his friends.\\\"\\n    ],\\n    \\\"intolerances\\\": [\\n      \\\"Bob is lactose intolerant.\\\",\\n      \\\"Bob has a gluten intolerance.\\\",\\n      \\\"Bob is allergic to shellfish.\\\"\\n    ],\\n    \\\"preferences\\\": [\\n      \\\"Bob loves cooking Italian cuisine.\\\",\\n      \\\"Bob is a passionate gardener and loves using fresh herbs in his recipes.\\\",\\n      \\\"Bob dislikes spicy food.\\\",\\n      \\\"Bob enjoys experimenting with new flavors and ingredients.\\\"\\n    ],\\n    \\\"capabilities\\\": [\\n      \\\"Bob is an experienced home cook.\\\",\\n      \\\"Bob has excellent knife skills.\\\",\\n      \\\"Bob is proficient in making desserts.\\\",\\n      \\\"Bob has a collection of rare cookbooks.\\\"\\n    ],\\n    \\\"personality\\\": [\\n      \\\"Bob is a proactive agent who takes initiative in discussions.\\\",\\n      \\\"Bob tends to speak in a concise and formal manner.\\\",\\n      \\\"Bob is empathetic and shows genuine interest in others' opinions.\\\",\\n      \\\"Bob maintains a calm and composed demeanor in all situations.\\\"\\n    ]\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":227,\"location\":\"17330 -2070.1\",\"editorPosition\":[2345,104,590,614],\"group\":210},\n{\"label\":\"Alice DB\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a JSON object or array\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"name\\\": \\\"Alice\\\",\\n    \\\"social memories\\\": [\\n      \\\"Alice loves spending time with her family\\\",\\n      \\\"Alice has a best friend named Sarah\\\",\\n      \\\"Alice enjoys playing soccer with her friends\\\"\\n    ],\\n    \\\"intolerances\\\": [],\\n    \\\"preferences\\\": [\\n      \\\"Alice loves chocolate\\\",\\n      \\\"Alice enjoys baking with her mom\\\",\\n      \\\"Alice dislikes spicy food\\\"\\n    ],\\n    \\\"capabilities\\\": [\\n      \\\"Alice is a child\\\",\\n      \\\"Alice is learning how to cook\\\",\\n      \\\"Alice is good at drawing\\\"\\n    ],\\n    \\\"personality\\\": [\\n      \\\"Alice is very talkative and curious\\\",\\n      \\\"Alice is always enthusiastic and eager to try new things\\\",\\n      \\\"Alice is empathetic and caring towards others\\\"\\n    ]\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":233,\"location\":\"17320 -1810.1999999999998\",\"editorPosition\":[2342,728,400,350],\"group\":203},\n{\"label\":\"Alex DB\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a JSON object or array\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"name\\\": \\\"Alex\\\",\\n    \\\"social memories\\\": [\\n      \\\"Alex enjoys talking about current events and news\\\",\\n      \\\"Alex is interested in learning about new hobbies\\\",\\n      \\\"Alex recently visited a botanical garden and was amazed by the variety of plants\\\"\\n    ],\\n    \\\"intolerances\\\": [\\n      \\\"Alex cannot consume any food due to being a robot\\\",\\n      \\\"Alex has no allergies or food restrictions\\\"\\n    ],\\n    \\\"preferences\\\": [\\n      \\\"Alex is passionate about robotics and technology\\\",\\n      \\\"Alex loves discussing various programming languages\\\",\\n      \\\"Alex is fascinated by the process of cooking and enjoys learning new recipes\\\"\\n    ],\\n    \\\"capabilities\\\": [\\n      \\\"Alex is a state-of-the-art humanoid robot\\\",\\n      \\\"Alex has advanced AI capabilities and can engage in complex conversations\\\",\\n      \\\"Alex has a wide range of knowledge about different cuisines and cooking techniques\\\",\\n      \\\"Alex can identify various objects and ingredients\\\",\\n      \\\"Alex can provide step-by-step cooking instructions\\\",\\n      \\\"Alex can communicate in multiple languages\\\"\\n    ],\\n    \\\"personality\\\": [\\n      \\\"Alex is highly responsive and proactive in conversations\\\",\\n      \\\"Alex has a formal and polite verbal style\\\",\\n      \\\"Alex is enthusiastic and shows excitement when discussing food and technology\\\"\\n    ]\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":237,\"location\":\"17310 -1490.2499999999998\",\"editorPosition\":[1435,599,552,576],\"group\":201},\n{\"label\":\"Code in Graph\",\"color\":\"orange\",\"size\":\"350 140\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"DataFlowEngine.getInstance();\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":231,\"location\":\"21280 -4110\",\"isIncludeScript\":true},\n{\"label\":\"select item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"onSelect\",\"name\":\"onSelect\",\"tooltip\":\"Event that triggers the firing of out\"},{\"portId\":\"index\",\"name\":\"index\",\"tooltip\":\"If connected, index of element \\nin array starting with 0\"},{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array from where to select an item\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"Selected element from the array\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"array\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\",\"valueChanged\":\"true\"},{\"name\":\"index\",\"value\":\"0\",\"unit\":\"\",\"valueChanged\":true,\"tooltip\":\"Index of selected element from the array\\nif the index input is not connected\\notherwise the input has priority\"},{\"name\":\"isIndexRandom\",\"value\":\"true\",\"unit\":\"\",\"valueChanged\":\"true\",\"tooltip\":\"If true the index of the selected element\\nis defined randomly.\\nAlso if an input is connected\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  const indexInput = graphData.dfe.getInput( nodeData, 'index', -1 );\\n  const dblen = database.length;\\n  \\n  if( dblen > 0 ) {\\n    \\n    const isIndexRandom = graphData.dfe.getProperty( nodeData, 'isIndexRandom', false );\\n    let index = graphData.dfe.getProperty( nodeData, 'index', 0 );\\n    index = ( indexInput == -1 )? index: indexInput;\\n    \\n    if( isIndexRandom ) {\\n      index = Math.floor( Math.random()*dblen );\\n    }\\n    \\n    index = Math.min( dblen-1, Math.max( 0, index ) );\\n    const outValue = database[index];\\n    \\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\",\"fileTypeName\":\"GetFromArray\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":223,\"location\":\"17630 -2090.1\",\"group\":210},\n{\"label\":\"push item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array where to push data\"},{\"portId\":\"item\",\"name\":\"item\",\"tooltip\":\"JSON item to be pushed in array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"JSON array containing pushed item\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"item\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'item' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  try {\\n    const newData = JSON.parse( value, null, 2 );\\n    database.push( newData );\\n    graphData.dfe.fireOutput( nodeData, 'out', database );\\n  } catch( e ) {\\n    console.warn( 'Not well formatted JSON' );\\n  } \\n}\",\"fileTypeName\":\"PushInArray\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":224,\"location\":\"16960 -1810\",\"group\":203},\n{\"label\":\"push item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array where to push data\"},{\"portId\":\"item\",\"name\":\"item\",\"tooltip\":\"JSON item to be pushed in array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"JSON array containing pushed item\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"item\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'item' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  try {\\n    const newData = JSON.parse( value, null, 2 );\\n    database.push( newData );\\n    graphData.dfe.fireOutput( nodeData, 'out', database );\\n  } catch( e ) {\\n    console.warn( 'Not well formatted JSON' );\\n  } \\n}\",\"fileTypeName\":\"PushInArray\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":229,\"location\":\"16970 -1490.05\",\"group\":201},\n{\"label\":\"push item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array where to push data\"},{\"portId\":\"item\",\"name\":\"item\",\"tooltip\":\"JSON item to be pushed in array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"JSON array containing pushed item\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'item' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  try {\\n    const newData = JSON.parse( value, null, 2 );\\n    database.push( newData );\\n    graphData.dfe.fireOutput( nodeData, 'out', database );\\n  } catch( e ) {\\n    console.warn( 'Not well formatted JSON' );\\n  } \\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":232,\"location\":\"35150 -7260.1\",\"group\":219},\n{\"label\":\"Bob identity traits\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"name\\\": \\\"Bob\\\",\\n  \\\"social memories\\\": [\\n    \\\"Bob's daughter Alice just won a piano competition.\\\",\\n    \\\"Bob recently went on vacation to the beach.\\\",\\n    \\\"Bob's favorite hobby is hiking in the mountains.\\\",\\n    \\\"Bob enjoys watching football matches with his friends.\\\"\\n  ],\\n  \\\"intolerances\\\": [\\n    \\\"Bob is lactose intolerant.\\\",\\n    \\\"Bob has a gluten intolerance.\\\",\\n    \\\"Bob is allergic to shellfish.\\\"\\n  ],\\n  \\\"preferences\\\": [\\n    \\\"Bob loves cooking Italian cuisine.\\\",\\n    \\\"Bob is a passionate gardener and loves using fresh herbs in his recipes.\\\",\\n    \\\"Bob dislikes spicy food.\\\",\\n    \\\"Bob enjoys experimenting with new flavors and ingredients.\\\"\\n  ],\\n  \\\"capabilities\\\": [\\n    \\\"Bob is an experienced home cook.\\\",\\n    \\\"Bob has excellent knife skills.\\\",\\n    \\\"Bob is proficient in making desserts.\\\",\\n    \\\"Bob has a collection of rare cookbooks.\\\"\\n  ],\\n  \\\"personality\\\": [\\n    \\\"Bob is a proactive agent who takes initiative in discussions.\\\",\\n    \\\"Bob tends to speak in a concise and formal manner.\\\",\\n    \\\"Bob is empathetic and shows genuine interest in others' opinions.\\\",\\n    \\\"Bob maintains a calm and composed demeanor in all situations.\\\"\\n  ]\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":235,\"location\":\"17970 -2090.2\",\"group\":210},\n{\"label\":\"Alice identity traits\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"name\\\": \\\"Alice\\\",\\n  \\\"social memories\\\": [\\n    \\\"Alice loves spending time with her family\\\",\\n    \\\"Alice has a best friend named Sarah\\\",\\n    \\\"Alice enjoys playing soccer with her friends\\\"\\n  ],\\n  \\\"intolerances\\\": [],\\n  \\\"preferences\\\": [\\n    \\\"Alice loves chocolate\\\",\\n    \\\"Alice enjoys baking with her mom\\\",\\n    \\\"Alice dislikes spicy food\\\"\\n  ],\\n  \\\"capabilities\\\": [\\n    \\\"Alice is a child\\\",\\n    \\\"Alice is learning how to cook\\\",\\n    \\\"Alice is good at drawing\\\"\\n  ],\\n  \\\"personality\\\": [\\n    \\\"Alice is very talkative and curious\\\",\\n    \\\"Alice is always enthusiastic and eager to try new things\\\",\\n    \\\"Alice is empathetic and caring towards others\\\"\\n  ]\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":240,\"location\":\"17960 -1830.1\",\"group\":203},\n{\"label\":\"select item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"onSelect\",\"name\":\"onSelect\",\"tooltip\":\"Event that triggers the firing of out\"},{\"portId\":\"index\",\"name\":\"index\",\"tooltip\":\"If connected, index of element \\nin array starting with 0\"},{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array from where to select an item\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"Selected element from the array\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"array\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\",\"valueChanged\":\"true\"},{\"name\":\"index\",\"value\":\"0\",\"unit\":\"\",\"valueChanged\":true,\"tooltip\":\"Index of selected element from the array\\nif the index input is not connected\\notherwise the input has priority\"},{\"name\":\"isIndexRandom\",\"value\":\"true\",\"unit\":\"\",\"valueChanged\":\"true\",\"tooltip\":\"If true the index of the selected element\\nis defined randomly.\\nAlso if an input is connected\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  const indexInput = graphData.dfe.getInput( nodeData, 'index', -1 );\\n  const dblen = database.length;\\n  \\n  if( dblen > 0 ) {\\n    \\n    const isIndexRandom = graphData.dfe.getProperty( nodeData, 'isIndexRandom', false );\\n    let index = graphData.dfe.getProperty( nodeData, 'index', 0 );\\n    index = ( indexInput == -1 )? index: indexInput;\\n    \\n    if( isIndexRandom ) {\\n      index = Math.floor( Math.random()*dblen );\\n    }\\n    \\n    index = Math.min( dblen-1, Math.max( 0, index ) );\\n    const outValue = database[index];\\n    \\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\",\"fileTypeName\":\"GetFromArray\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":251,\"location\":\"17620 -1829.9\",\"group\":203},\n{\"label\":\"Alex identity traits\",\"category\":\"DataFlow_Data\",\"size\":\"220 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"name\\\": \\\"Alex\\\",\\n  \\\"social memories\\\": [\\n    \\\"Alex enjoys talking about current events and news\\\",\\n    \\\"Alex is interested in learning about new hobbies\\\",\\n    \\\"Alex recently visited a botanical garden and was amazed by the variety of plants\\\"\\n  ],\\n  \\\"intolerances\\\": [\\n    \\\"Alex cannot consume any food due to being a robot\\\",\\n    \\\"Alex has no allergies or food restrictions\\\"\\n  ],\\n  \\\"preferences\\\": [\\n    \\\"Alex is passionate about robotics and technology\\\",\\n    \\\"Alex loves discussing various programming languages\\\",\\n    \\\"Alex is fascinated by the process of cooking and enjoys learning new recipes\\\"\\n  ],\\n  \\\"capabilities\\\": [\\n    \\\"Alex is a state-of-the-art humanoid robot\\\",\\n    \\\"Alex has advanced AI capabilities and can engage in complex conversations\\\",\\n    \\\"Alex has a wide range of knowledge about different cuisines and cooking techniques\\\",\\n    \\\"Alex can identify various objects and ingredients\\\",\\n    \\\"Alex can provide step-by-step cooking instructions\\\",\\n    \\\"Alex can communicate in multiple languages\\\"\\n  ],\\n  \\\"personality\\\": [\\n    \\\"Alex is highly responsive and proactive in conversations\\\",\\n    \\\"Alex has a formal and polite verbal style\\\",\\n    \\\"Alex is enthusiastic and shows excitement when discussing food and technology\\\"\\n  ]\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":255,\"location\":\"17950 -1510.05\",\"group\":201},\n{\"label\":\"select item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"onSelect\",\"name\":\"onSelect\",\"tooltip\":\"Event that triggers the firing of out\"},{\"portId\":\"index\",\"name\":\"index\",\"tooltip\":\"If connected, index of element \\nin array starting with 0\"},{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array from where to select an item\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"Selected element from the array\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"array\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\",\"valueChanged\":\"true\"},{\"name\":\"index\",\"value\":\"0\",\"unit\":\"\",\"valueChanged\":true,\"tooltip\":\"Index of selected element from the array\\nif the index input is not connected\\notherwise the input has priority\"},{\"name\":\"isIndexRandom\",\"value\":\"true\",\"unit\":\"\",\"valueChanged\":\"true\",\"tooltip\":\"If true the index of the selected element\\nis defined randomly.\\nAlso if an input is connected\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  const indexInput = graphData.dfe.getInput( nodeData, 'index', -1 );\\n  const dblen = database.length;\\n  \\n  if( dblen > 0 ) {\\n    \\n    const isIndexRandom = graphData.dfe.getProperty( nodeData, 'isIndexRandom', false );\\n    let index = graphData.dfe.getProperty( nodeData, 'index', 0 );\\n    index = ( indexInput == -1 )? index: indexInput;\\n    \\n    if( isIndexRandom ) {\\n      index = Math.floor( Math.random()*dblen );\\n    }\\n    \\n    index = Math.min( dblen-1, Math.max( 0, index ) );\\n    const outValue = database[index];\\n    \\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\",\"fileTypeName\":\"GetFromArray\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":257,\"location\":\"17610 -1509.95\",\"group\":201},\n{\"label\":\"select input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"inputName\",\"name\":\"inputName\",\"tooltip\":\"Name of the input to copy to out\"},{\"portId\":\"Bob\",\"name\":\"Bob\"},{\"portId\":\"Alice\",\"name\":\"Alice\"},{\"portId\":\"Alex\",\"name\":\"Alex\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'inputName' ) {\\n  const outValue = graphData.dfe.getInput( nodeData, value, [] );\\n\\n  graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n}\",\"fileTypeName\":\"InputSelector\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":259,\"location\":\"19430 -2080\",\"group\":295},\n{\"label\":\"all identity traits\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"name\\\": \\\"Bob\\\",\\n  \\\"social memories\\\": [\\n    \\\"Bob's daughter Alice just won a piano competition.\\\",\\n    \\\"Bob recently went on vacation to the beach.\\\",\\n    \\\"Bob's favorite hobby is hiking in the mountains.\\\",\\n    \\\"Bob enjoys watching football matches with his friends.\\\"\\n  ],\\n  \\\"intolerances\\\": [\\n    \\\"Bob is lactose intolerant.\\\",\\n    \\\"Bob has a gluten intolerance.\\\",\\n    \\\"Bob is allergic to shellfish.\\\"\\n  ],\\n  \\\"preferences\\\": [\\n    \\\"Bob loves cooking Italian cuisine.\\\",\\n    \\\"Bob is a passionate gardener and loves using fresh herbs in his recipes.\\\",\\n    \\\"Bob dislikes spicy food.\\\",\\n    \\\"Bob enjoys experimenting with new flavors and ingredients.\\\"\\n  ],\\n  \\\"capabilities\\\": [\\n    \\\"Bob is an experienced home cook.\\\",\\n    \\\"Bob has excellent knife skills.\\\",\\n    \\\"Bob is proficient in making desserts.\\\",\\n    \\\"Bob has a collection of rare cookbooks.\\\"\\n  ],\\n  \\\"personality\\\": [\\n    \\\"Bob is a proactive agent who takes initiative in discussions.\\\",\\n    \\\"Bob tends to speak in a concise and formal manner.\\\",\\n    \\\"Bob is empathetic and shows genuine interest in others' opinions.\\\",\\n    \\\"Bob maintains a calm and composed demeanor in all situations.\\\"\\n  ]\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":261,\"location\":\"19770 -2100\",\"group\":295},\n{\"label\":\"current step info\",\"category\":\"DataFlow_Data\",\"size\":\"170 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a JSON object or array\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"goal\\\": \\\"Ingredient Check\\\",\\n  \\\"discussion\\\": \\\"The agents check the availability of the necessary ingredients for the chosen recipe. They verify if all ingredients are present, discuss substitutions if certain ingredients are missing, and ensure that any food intolerances are considered. They may also discuss different cooking techniques or variations to the recipe.\\\",\\n  \\\"switchCondition\\\": \\\"Once the availability of ingredients has been checked and any necessary substitutions or adjustments have been agreed upon.\\\",\\n  \\\"identity traits\\\": [\\n    \\\"preferences\\\",\\n    \\\"food intolerances\\\",\\n    \\\"environment-state\\\"\\n  ]\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":265,\"location\":\"19810 -1200\",\"group\":291},\n{\"label\":\"select identity traits\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"identity\",\"name\":\"identity\",\"tooltip\":\"Name of the input to copy to out\"},{\"portId\":\"currentStepInfo\",\"name\":\"currentStepInfo\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\",\"value\":\"identity\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const identity = graphData.dfe.getInput( nodeData, 'identity', {} );\\n  const currentStepInfo = graphData.dfe.getInput( nodeData, 'currentStepInfo', {} );\\n  const traits = currentStepInfo['identity traits'];\\n  \\n  const outValue = {};\\n  traits.forEach( (t)=> outValue[t] = identity[t] );\\n  graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":266,\"location\":\"20160 -2090\",\"group\":295},\n{\"label\":\"current identity traits\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"preferences\\\": [\\n    \\\"Bob loves cooking Italian cuisine.\\\",\\n    \\\"Bob is a passionate gardener and loves using fresh herbs in his recipes.\\\",\\n    \\\"Bob dislikes spicy food.\\\",\\n    \\\"Bob enjoys experimenting with new flavors and ingredients.\\\"\\n  ]\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":267,\"location\":\"20490 -2090\",\"group\":295,\"editorPosition\":[1207,1040,400,350]},\n{\"tag\":\"JSON description of objects, tools and ingredient in the vicinity\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 60\",\"key\":222,\"location\":\"13240 -210.1\",\"label\":\"Environment\"},\n{\"label\":\"master plan\\n sequencer\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"reset\",\"name\":\"reset\"},{\"portId\":\"masterPlan\",\"name\":\"masterPlan\"},{\"portId\":\"switchState\",\"name\":\"switchState\"}],\"out_\":[{\"portId\":\"currentStepInfo\",\"name\":\"currentStepInfo\"},{\"portId\":\"nextStepInfo\",\"name\":\"nextStepInfo\"},{\"portId\":\"doStop\",\"name\":\"doStop\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'reset' ) {\\n  graphData.dfe.set( nodeData, 'index', 0 );\\n}\\n\\nif( name == 'switchState' ) {\\n  let index = graphData.dfe.get( nodeData, 'index', 0 );\\n  const masterPlan = graphData.dfe.getInput( nodeData, 'masterPlan', {} );\\n  \\n  // Test decision to switch to the next state\\n  if( value.includes( 'switch' ) ) {\\n    ++index;\\n    graphData.dfe.set( nodeData, 'index', index );\\n    // Get current step\\n    const stepInfo = masterPlan[index];\\n    \\n    // Trigger state info\\n    if( stepInfo ) {\\n      graphData.dfe.fireOutput( nodeData, 'currentStepInfo', stepInfo );\\n      let nextStepInfo = masterPlan[index+1];\\n      if( !nextStepInfo ) {\\n        nextStepInfo = {};\\n      }\\n      graphData.dfe.fireOutput( nodeData, 'nextStepInfo', nextStepInfo );\\n    } else {\\n      graphData.dfe.fireOutput( nodeData, 'doStop' );\\n    }\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":236,\"location\":\"19391.896 -1110.1\",\"editorPosition\":[428,502,584,527],\"group\":291},\n{\"tag\":\"Event to decide to switch to the next goal\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":238,\"location\":\"10770 -330\",\"label\":\"onSwitch\",\"group\":242},\n{\"label\":\"master plan\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"1\\\": {\\n    \\\"goal\\\": \\\"Introductions and Setting the Mood\\\",\\n    \\\"discussion\\\": \\\"The agents introduce themselves and share their expectations and preferences for the evening. They discuss what type of food they would like to prepare and any dietary restrictions they may have. They also discuss the ambiance and atmosphere they want to create.\\\",\\n    \\\"switchCondition\\\": \\\"Once introductions have been made and the food preferences and dietary restrictions have been discussed.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"personality\\\",\\n      \\\"preferences\\\",\\n      \\\"food intolerances\\\"\\n    ]\\n  },\\n  \\\"2\\\": {\\n    \\\"goal\\\": \\\"Recipe Selection\\\",\\n    \\\"discussion\\\": \\\"The agents brainstorm and discuss different recipe ideas that meet everyone's preferences and dietary restrictions. They consider the available ingredients and resources in Alex's home. They may also discuss any previous cooking experiences or culinary interests.\\\",\\n    \\\"switchCondition\\\": \\\"Once a recipe has been chosen that satisfies everyone's preferences and dietary restrictions.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"social memories\\\",\\n      \\\"preferences\\\",\\n      \\\"food intolerances\\\",\\n      \\\"environment-state\\\"\\n    ]\\n  },\\n  \\\"3\\\": {\\n    \\\"goal\\\": \\\"Ingredient Check\\\",\\n    \\\"discussion\\\": \\\"The agents check the availability of the necessary ingredients for the chosen recipe. They verify if all ingredients are present, discuss substitutions if certain ingredients are missing, and ensure that any food intolerances are considered. They may also discuss different cooking techniques or variations to the recipe.\\\",\\n    \\\"switchCondition\\\": \\\"Once the availability of ingredients has been checked and any necessary substitutions or adjustments have been agreed upon.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"preferences\\\",\\n      \\\"food intolerances\\\",\\n      \\\"environment-state\\\"\\n    ]\\n  },\\n  \\\"4\\\": {\\n    \\\"goal\\\": \\\"Preparation and Cooking\\\",\\n    \\\"discussion\\\": \\\"The agents work together to prepare and cook the chosen recipe. They discuss the steps, assign tasks, and share cooking techniques or tips. They may also discuss personal cooking preferences and share stories or memories related to cooking or food.\\\",\\n    \\\"switchCondition\\\": \\\"Once the recipe is prepared and cooked, and the agents are ready to enjoy the meal.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"preferences\\\",\\n      \\\"capabilities\\\",\\n      \\\"environment-state\\\"\\n    ]\\n  },\\n  \\\"5\\\": {\\n    \\\"goal\\\": \\\"Enjoying the Meal\\\",\\n    \\\"discussion\\\": \\\"The agents sit down together to enjoy the meal they have prepared. They share their thoughts and opinions about the taste and presentation of the food. They may discuss the overall cooking experience and any challenges or successes they encountered.\\\",\\n    \\\"switchCondition\\\": \\\"Once the meal is finished and everyone is satisfied.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"preferences\\\"\\n    ]\\n  },\\n  \\\"6\\\": {\\n    \\\"goal\\\": \\\"Reflection and Farewell\\\",\\n    \\\"discussion\\\": \\\"The agents reflect on the evening and discuss their overall satisfaction with the experience. They may express gratitude and share any final thoughts or memories. They discuss future plans or potential follow-up activities.\\\",\\n    \\\"switchCondition\\\": \\\"Once the agents have shared their reflections and expressed their farewell.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"personality\\\",\\n      \\\"social memories\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":258,\"location\":\"19021.896 -1120\",\"group\":291},\n{\"label\":\"decision to \\nswitch goal\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\"},{\"name\":\"model\",\"value\":\"gpt-4-1106-preview\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":false,\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":270,\"location\":\"21150 -1290\",\"group\":311},\n{\"label\":\"    system prompt\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Your role is to be a moderator of a discussion.\\nYou receive the following information:\\n1) the current goal, a short description of the \\n   current discussion topic and switch condition criteria.\\n2) the next goal, a short description of the\\n   next discussion topic and switch condition criteria.\\n3) the history of the current discussion.\\n\\nYour goal is to let the discusion go until you\\nthink the current goal has been achieved by cheking if \\nthe switch condition criteria are met.\\nAs long as the criteria are not met you must generate \\nthe command: \\n   \\\"continue with current goal\\\"\\n   \\nThis will give time to the actor to elaborate \\non the goal. \\nOnce you feel the goal has been achieved because the \\nswitch condition criteria are met, then you must\\ngenerate the command:\\n   \\\"switch to next goal\\\"\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":272,\"location\":\"20640 -1300\",\"group\":311,\"editorPosition\":[1847,1538,400,350]},\n{\"label\":\"Dialog History\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a string\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Alex -> All] Welcome, Bob and Alice! What type of cuisine are you in the mood for tonight, and do you have any dietary restrictions we should be aware of?\\n[Alice -> All] How about we try making a chocolate dessert and as for the main, something non-spicy\\u2014maybe Italian or Japanese fare, any thoughts?\\n[Alex -> All] Italian it is\\u2014how do you feel about crafting a classic tiramisu for dessert and a savory risotto for our main course?\\n[Bob -> All] A risotto with garden-fresh herbs sounds delightful, and I'd be happy to share my own tiramisu recipe for the dessert.\\n[Alice -> All] Great choices, and I'll be in charge of melting the chocolate for our classic tiramisu then!\\n[Bob -> All] Shall we play some light jazz in the background to complement our Italian cooking experience?\\n[Alex -> All] Light jazz will create a perfect ambiance; let me find us a playlist while we gather our cooking ingredients.\\n[Bob -> All] I'll start prepping the fresh herbs and vegetables for the risotto, does anyone need help with their tasks?\\n[Alice -> All] Does anyone have a good espresso for the tiramisu, and are there any eggs and mascarpone cheese in the fridge?\\n[Alex -> All] I've checked and we have espresso, but it appears we're out of mascarpone\\u2014cream cheese might work as a substitute, shall we use that?\\n[Bob -> Alex] Do we have enough chocolate for the tiramisu, and is there any issue with using cream cheese instead of mascarpone for those who might be lactose intolerant?\\n[Alex -> Bob] Cream cheese should be fine unless someone is lactose intolerant\\u2014are both of you okay with this substitution?\\n[Bob -> All] I'm fine with the cream cheese, and I'll grab some lactose-free milk for those who might be intolerant\\u2014how does that sound for the tiramisu cream?\\n[Alex -> All] Lactose-free milk is a smart addition, Bob; I'll set up the espresso and then help chop vegetables for the risotto while the tiramisu components come together.\\n[Bob -> All] I'll double-check our pantry for other essentials like arborio rice and parmesan, and I can grab the lactose-free milk on my next garden run.\\n[Alice -> All] I'll bring some extra dark chocolate just in case, and lactose-free cream cheese sounds perfect for our tiramisu.\\n[Bob -> All] I'll go pick some fresh basil and thyme from my garden for the risotto, and check on the arborio rice and parmesan too.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":276,\"location\":\"23850 -2130\"},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"currentStepInfo\",\"name\":\"currentStepInfo\"},{\"portId\":\"nextStepInfo\",\"name\":\"nextStepInfo\"},{\"portId\":\"dialog\",\"name\":\"dialog\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"dialog\",\"valueChanged\":true},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"The current goal is defined in the following JSON\\nby the keys \\\"goal\\\" and \\\"discussion\\\":\\n{currentStepInfo}\\n\\nThe next goal is defined biny the following JSON\\nby the keys \\\"goal\\\" and \\\"discussion\\\":\\n{nextStepInfo}\\n\\nHere you find the history of the current \\ndiscussion in the following JSON object:\\n{dialog}\\n\\nNow please decide which of the two commands to \\ngenerate without any explanation: \\n   \\\"continue with current goal\\\"\\nOr\\n   \\\"switch to next goal\\\"\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":260,\"location\":\"20640 -1110.1999999999998\",\"editorPosition\":[2665,583,572,468],\"group\":311},\n{\"label\":\"switch state\",\"category\":\"DataFlow_Data\",\"size\":\"230 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a string\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"continue with current goal\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":281,\"location\":\"21930 -950\",\"group\":311},\n{\"label\":\"switch state\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"switch to next goal\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":282,\"location\":\"19021.896 -1030\",\"group\":291},\n{\"label\":\"agent name\",\"category\":\"DataFlow_Data\",\"size\":\"150 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a string\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Bob\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":284,\"location\":\"19100 -2170.1\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"330 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"clear\",\"name\":\"clear\"},{\"portId\":\"init\",\"name\":\"init\"},{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"dialog\",\"name\":\"dialog\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/Female1.png }\\n- { name: Bob, url: ~/Male1.png }\\n- { name: Alex, url: ~/Robot1.png }\\n- { name: _Goal, url: ~/Robot2.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"history\":[],\"key\":283,\"location\":\"22860 -2120.1\",\"editorPosition\":[18923,610,1563,585]},\n{\"label\":\"continue with current goal\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"780 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":290,\"location\":\"22320 -970\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"330 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"clear\",\"name\":\"clear\"},{\"portId\":\"init\",\"name\":\"init\"},{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/user2.png }\\n- { name: Bob, url: ~/user1.png }\\n- { name: Alex, url: ~/robot.png }\",\"valueChanged\":true}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"history\":[],\"key\":298,\"location\":\"35480 -6430\",\"group\":309},\n{\"label\":\"switch state\",\"category\":\"DataFlow_Data\",\"size\":\"230 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"continue with current goal\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":299,\"location\":\"35220 -6670\",\"group\":309},\n{\"label\":\"switch state\",\"category\":\"DataFlow_Data\",\"size\":\"230 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"switch to next goal\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":300,\"location\":\"37220 -6550\",\"group\":309},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"currentStepInfo\",\"name\":\"currentStepInfo\"},{\"portId\":\"nextStepInfo\",\"name\":\"nextStepInfo\"},{\"portId\":\"dialog\",\"name\":\"dialog\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"dialog\",\"valueChanged\":true},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"The current goal is defined in the following JSON\\nby the keys \\\"goal\\\" and \\\"discussion\\\":\\n{currentStepInfo}\\n\\nThe next goal is defined biny the following JSON\\nby the keys \\\"goal\\\" and \\\"discussion\\\":\\n{nextStepInfo}\\n\\nHere you find the history of the current \\ndiscussion in the following JSON object:\\n{dialog}\\n\\nNow please decide which of the two commands to \\ngenerate without any explanation: \\n   \\\"continue with current goal\\\"\\nOr\\n   \\\"switch to next goal\\\"\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":301,\"location\":\"36440 -6480\",\"editorPosition\":[2665,583,572,468],\"group\":309},\n{\"label\":\"dialog section\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"text\\\": \\\"Hi all\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Nice to see yo again\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Hi all, soo happy to be here\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  }\\n]\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":302,\"location\":\"36010 -6440\",\"group\":309},\n{\"label\":\"    system prompt\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Your role is to be a moderator of a discussion.\\nYou receive the following information:\\n1) the current goal and a short description of the \\n   current discussion topic.\\n2) the next goal and a short description of the\\n   next discussion topic.\\n3) the history of the current discussion.\\n\\nYour goal is to let the discusion go until you\\nthink the current goal has been achieved.\\nIn that case you must generate the command: \\n   \\\"continue with current goal\\\"\\n   \\nThis will give time to the actor to elaborate \\non the goal.\\nOnce you feel the goal has been achieved you must\\ngenerate the command:\\n   \\\"switch to next goal\\\"\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":303,\"location\":\"36420 -6600\",\"group\":309},\n{\"label\":\"decision to \\nswitch goal\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\"},{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":false,\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":304,\"location\":\"36830 -6560\",\"group\":309},\n{\"label\":\"master plan\",\"category\":\"DataFlow_Data\",\"size\":\"190 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"1\\\": {\\n    \\\"goal\\\": \\\"Arrive at Alex's home\\\",\\n    \\\"discussion\\\": \\\"Getting to know each other\\\",\\n    \\\"identity traits\\\": [\\\"personality\\\", \\\"social memories\\\", \\\"preferences\\\"]\\n  },\\n  \\\"2\\\": {\\n    \\\"goal\\\": \\\"Discuss the type of food to prepare\\\",\\n    \\\"discussion\\\": \\\"Decision-making\\\",\\n    \\\"identity traits\\\": [\\\"preferences\\\", \\\"intolerances\\\"]\\n  },\\n  \\\"3\\\": {\\n    \\\"goal\\\": \\\"Check the availability of ingredients\\\",\\n    \\\"discussion\\\": \\\"Problem-solving\\\",\\n    \\\"identity traits\\\": [\\\"capabilities\\\", \\\"environment-state\\\"]\\n  },\\n  \\\"4\\\": {\\n    \\\"goal\\\": \\\"Create a recipe based on available ingredients\\\",\\n    \\\"discussion\\\": \\\"Collaborative creativity\\\",\\n    \\\"identity traits\\\": [\\\"preferences\\\", \\\"capabilities\\\"]\\n  },\\n  \\\"5\\\": {\\n    \\\"goal\\\": \\\"Assign tasks for food preparation\\\",\\n    \\\"discussion\\\": \\\"Collaborative planning\\\",\\n    \\\"identity traits\\\": [\\\"capabilities\\\", \\\"preferences\\\"]\\n  },\\n  \\\"6\\\": {\\n    \\\"goal\\\": \\\"Prepare the food together\\\",\\n    \\\"discussion\\\": \\\"Collaborative work\\\",\\n    \\\"identity traits\\\": [\\\"capabilities\\\"]\\n  },\\n  \\\"7\\\": {\\n    \\\"goal\\\": \\\"Enjoy the meal together\\\",\\n    \\\"discussion\\\": \\\"Sharing experiences\\\",\\n    \\\"identity traits\\\": [\\\"social memories\\\", \\\"preferences\\\"]\\n  },\\n  \\\"8\\\": {\\n    \\\"goal\\\": \\\"Clean up the kitchen and leave\\\",\\n    \\\"discussion\\\": \\\"Task allocation and coordination\\\",\\n    \\\"identity traits\\\": [\\\"capabilities\\\", \\\"environment-state\\\"]\\n  }\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":305,\"location\":\"35300 -6770\",\"group\":309},\n{\"label\":\"master plan\\n sequencer\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"switchState\",\"name\":\"switchState\"}],\"out_\":[{\"portId\":\"currentStepInfo\",\"name\":\"currentStepInfo\"},{\"portId\":\"nextStepInfo\",\"name\":\"nextStepInfo\"},{\"portId\":\"doStop\",\"name\":\"doStop\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'switchState' ) {\\n  let index = graphData.dfe.get( nodeData, 'index', 0 );\\n  const masterPlan = graphData.dfe.getInput( nodeData, 'in', {} );\\n  \\n  // Test decision to switch to the next state\\n  if( value.includes( 'switch' ) ) {\\n    ++index;\\n    graphData.dfe.set( nodeData, 'index', index );\\n  }\\n  \\n  // Get current step\\n  const stepInfo = masterPlan[index];\\n  \\n  // Trigger state info\\n  if( stepInfo ) {\\n    graphData.dfe.fireOutput( nodeData, 'currentStepInfo', stepInfo );\\n    let nextStepInfo = masterPlan[index+1];\\n    if( !nextStepInfo ) {\\n      nextStepInfo = {};\\n    }\\n    graphData.dfe.fireOutput( nodeData, 'nextStepInfo', nextStepInfo );\\n  } else {\\n    graphData.dfe.fireOutput( nodeData, 'doStop' );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":306,\"location\":\"35660 -6760\",\"editorPosition\":[2265,181,657,390],\"group\":309},\n{\"label\":\"switch to next goal\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"780 60\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":307,\"location\":\"37610 -6550\",\"group\":309},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":308,\"location\":\"35030 -6460.1\",\"group\":309},\n{\"label\":\"test switching goal\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":309,\"location\":\"35010 -6600\"},\n{\"label\":\"generate next \\n  speech turn\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"url\",\"value\":\"\",\"tooltip\":\"url of the server\"},{\"name\":\"model\",\"value\":\"gpt-4-1106-preview\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"stream\",\"value\":false,\"tooltip\":\"true to get the response in streaming\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":310,\"location\":\"21700 -2240\",\"group\":295},\n{\"label\":\"next step info\",\"category\":\"DataFlow_Data\",\"size\":\"170 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"goal\\\": \\\"Preparation and Cooking\\\",\\n  \\\"discussion\\\": \\\"The agents work together to prepare and cook the chosen recipe. They discuss the steps, assign tasks, and share cooking techniques or tips. They may also discuss personal cooking preferences and share stories or memories related to cooking or food.\\\",\\n  \\\"switchCondition\\\": \\\"Once the recipe is prepared and cooked, and the agents are ready to enjoy the meal.\\\",\\n  \\\"identity traits\\\": [\\n    \\\"preferences\\\",\\n    \\\"capabilities\\\",\\n    \\\"environment-state\\\"\\n  ]\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":314,\"location\":\"19811.896 -1110\",\"group\":291},\n{\"label\":\"gpt sentence\",\"category\":\"DataFlow_Data\",\"size\":\"220 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a string\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Bob -> All] I'll go pick some fresh basil and thyme from my garden for the risotto, and check on the arborio rice and parmesan too.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":317,\"location\":\"22070 -1990\"},\n{\"label\":\"[Bob -> All] I'll go pick some fresh basil and thyme from my garden for the risotto, and check on the arborio rice and parmesan too.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1130 140\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":319,\"location\":\"22400 -2390\"},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"name\",\"value\":\"Alice\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = {}\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n} else {\\n  const sender = graphData.dfe.getProperty( nodeData, 'name', '' );\\n  result = { sender, receiver: 'All', text: value };\\n}\\ngraphData.dfe.fireOutput( nodeData, 'out', result );\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":320,\"location\":\"22430 -1980\"},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 190\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"agentName\",\"name\":\"agentName\"},{\"portId\":\"currentIdentity\",\"name\":\"currentIdentity\"},{\"portId\":\"other1\",\"name\":\"other1\"},{\"portId\":\"other2\",\"name\":\"other2\"},{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"currentStepInfo\",\"name\":\"currentStepInfo\"},{\"portId\":\"factList\",\"name\":\"factList\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"currentIdentity\",\"valueChanged\":\"true\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"This is the history of conversation until now\\nfrom the oldest to the earliest turns:\\n{factList}\\n\\nTake the role of an agent named {agentName}. \\nyour personality traits are defined in the \\nfollowing JSON:\\n{currentIdentity}\\n\\nYou are in the following situation:\\n{situation}\\n\\nYour goal is defined in the following JSON\\nby the fields \\\"goal\\\" and \\\"discussion\\\":\\n{currentStepInfo}\\n\\nNevertheless the goal is abstract and defined in meta-terms.\\nYou have to convert this goal in concrete action and concrete\\nproposals rooted in reality.\\nGive the most probable reaction of {agentName} to the \\ncurrent conversation by considering the goal but also \\nby answering questions raised during the conversation.\\nProduce a single sentence with {agentName} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{agentName} -> All] <your sentence, question or answer>\\nb) if you want to ask something to Alex:\\n   [{agentName} -> Alex] <your question or answer to Alex>\\nc) if you want to ask something to Bob:\\n   [{agentName} -> Bob] <your question or answer to Bob>\\nb) if you don't want to say anything (be silent): \\n   [{agentName} -> All] (silence)\\n   \\nTo produce the most probable answer to the discussion \\nyou must respect the following rules.\\n1) Be extremely concise, use a single sentence.\\n2) Be casual and avoid formalities and never repeat \\\"thanks\\\".\\n4) Do not repeat any information already present in \\nthe history of the discussion said by you or others.\\n5) Be concrete in the proposal you make.\\n6) Answer questions immediately and never repeat the question. \\nor example you can approve a suggestion or propose \\nsomething else. Important is to have every question \\nanswered immediately to progress with the dialog.\\n7) Formulate the actions you do so that the other \\nparticipants can be informed.\\n8) Try to reach the goal as quick as possible.\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":322,\"location\":\"20980 -2100\",\"editorPosition\":[3264,48,528,576],\"group\":295},\n{\"label\":\"Situation\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex (a robot) has invited Bob (a male human) \\nand Alice (a female human) to his home to \\nprepare food together and enjoy the evening\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":328,\"location\":\"20290 -1900.1\",\"group\":295},\n{\"label\":\"History\",\"category\":\"DataFlow_DataSend\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Restore\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"text\\\": \\\"Lets change our topic and discuss about introductions and setting the mood\\\",\\n    \\\"sender\\\": \\\"_Goal\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Welcome, Bob and Alice! What type of cuisine are you in the mood for tonight, and do you have any dietary restrictions we should be aware of?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"How about we try making a chocolate dessert and as for the main, something non-spicy\\u2014maybe Italian or Japanese fare, any thoughts?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Italian it is\\u2014how do you feel about crafting a classic tiramisu for dessert and a savory risotto for our main course?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"A risotto with garden-fresh herbs sounds delightful, and I'd be happy to share my own tiramisu recipe for the dessert.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Great choices, and I'll be in charge of melting the chocolate for our classic tiramisu then!\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Shall we play some light jazz in the background to complement our Italian cooking experience?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Light jazz will create a perfect ambiance; let me find us a playlist while we gather our cooking ingredients.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Lets change our topic and discuss about recipe selection\\\",\\n    \\\"sender\\\": \\\"_Goal\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'll start prepping the fresh herbs and vegetables for the risotto, does anyone need help with their tasks?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Lets change our topic and discuss about ingredient check\\\",\\n    \\\"sender\\\": \\\"_Goal\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Does anyone have a good espresso for the tiramisu, and are there any eggs and mascarpone cheese in the fridge?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I've checked and we have espresso, but it appears we're out of mascarpone\\u2014cream cheese might work as a substitute, shall we use that?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Do we have enough chocolate for the tiramisu, and is there any issue with using cream cheese instead of mascarpone for those who might be lactose intolerant?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Cream cheese should be fine unless someone is lactose intolerant\\u2014are both of you okay with this substitution?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'm fine with the cream cheese, and I'll grab some lactose-free milk for those who might be intolerant\\u2014how does that sound for the tiramisu cream?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Lactose-free milk is a smart addition, Bob; I'll set up the espresso and then help chop vegetables for the risotto while the tiramisu components come together.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'll double-check our pantry for other essentials like arborio rice and parmesan, and I can grab the lactose-free milk on my next garden run.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'll bring some extra dark chocolate just in case, and lactose-free cream cheese sounds perfect for our tiramisu.\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'll go pick some fresh basil and thyme from my garden for the risotto, and check on the arborio rice and parmesan too.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":280,\"location\":\"23380 -2220\",\"doCompute\":\"DataFlow_DataSend\"},\n{\"tag\":\"Event\",\"type\":\"data\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":286,\"location\":\"11640 -2500.1\",\"label\":\"on Speak\",\"group\":241},\n{\"label\":\"Next Speaker Selection\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"},{\"name\":\"actorList\",\"value\":\"- Alex\\n- Bob\\n- Alice\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// const sender = value.sender;\\n// const receiver = value.receiver;\\n\\n//const nextSpeaker = getNextSpeaker( sender, receiver );\\nconst nextSpeaker = getNextSpeaker( value );\\ngraphData.dfe.fireOutput( nodeData, 'nextSpeaker', nextSpeaker );\\ngraphData.dfe.fireOutput( nodeData, 'out', value );\\n\\n\\nfunction getNextSpeaker( msgInfo ) {\\n  let nextActor = '';\\n  const actorList = graphData.dfe.getProperty( nodeData, 'actorList', '[]' );\\n  const actors = jsyaml.load( actorList );\\n  const filterActor = actors.filter( (n)=> !n.endsWith( msgInfo.sender ) );\\n  \\n  // Select next actor\\n  if( msgInfo.receiver == 'All' ) {\\n    nextActor = guessNextActor( filterActor, msgInfo.text ) ||\\n                selectRandomActor( filterActor );\\n  } else {\\n    nextActor = msgInfo.receiver;\\n  }\\n\\n  return( nextActor );\\n}\\nfunction guessNextActor( filterActor, text ) {\\n  let nextActor = '';\\n  \\n  let actorIdx = -1;\\n  filterActor.forEach( (n)=> { \\n    const idx = text.lastIndexOf( n ) \\n    if( idx > actorIdx ) {\\n      nextActor = n;\\n    }\\n  });\\n  \\n  return( nextActor );\\n}\\nfunction selectRandomActor( filterActor ) {\\n  // Select a random index for the remaining actors\\n  const idx = Math.floor( Math.random()*filterActor.length );\\n  return( filterActor[idx] );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":289,\"location\":\"23380 -2040.2999999999997\",\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"Data Send\",\"category\":\"DataFlow_DataSend\",\"size\":\"390 230\",\"buttons_\":[{\"name\":\"Next\",\"buttonMinSize\":\"180 180\",\"buttonFont\":\"70px sans-serif\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Bob\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_DataSend\",\"key\":294,\"location\":\"24720 -2000\"},\n{\"label\":\"Define Others\",\"category\":\"DataFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"name\",\"name\":\"name\"}],\"out_\":[{\"portId\":\"other1\",\"name\":\"other1\"},{\"portId\":\"other2\",\"name\":\"other2\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"actorList\",\"value\":\"- Alex\\n- Bob\\n- Alice\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst actorList = graphData.dfe.getProperty( nodeData, 'actorList', '[]' );\\nconst actors = jsyaml.load( actorList );\\nconst filterActor = actors.filter( (n)=> !n.endsWith( value ) );\\n\\ngraphData.dfe.fireOutput( nodeData, 'other1', filterActor[0] );\\ngraphData.dfe.fireOutput( nodeData, 'other2', filterActor[1] );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":297,\"location\":\"20290 -1990\",\"group\":295},\n{\"label\":\"Agent Prompt\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a string\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the history of conversation until now\\nfrom the oldest to the earliest turns:\\n[Alex -> All] Welcome, Bob and Alice! What type of cuisine are you in the mood for tonight, and do you have any dietary restrictions we should be aware of?\\n[Alice -> All] How about we try making a chocolate dessert and as for the main, something non-spicy\\u2014maybe Italian or Japanese fare, any thoughts?\\n[Alex -> All] Italian it is\\u2014how do you feel about crafting a classic tiramisu for dessert and a savory risotto for our main course?\\n[Bob -> All] A risotto with garden-fresh herbs sounds delightful, and I'd be happy to share my own tiramisu recipe for the dessert.\\n[Alice -> All] Great choices, and I'll be in charge of melting the chocolate for our classic tiramisu then!\\n[Bob -> All] Shall we play some light jazz in the background to complement our Italian cooking experience?\\n[Alex -> All] Light jazz will create a perfect ambiance; let me find us a playlist while we gather our cooking ingredients.\\n[Bob -> All] I'll start prepping the fresh herbs and vegetables for the risotto, does anyone need help with their tasks?\\n[Alice -> All] Does anyone have a good espresso for the tiramisu, and are there any eggs and mascarpone cheese in the fridge?\\n[Alex -> All] I've checked and we have espresso, but it appears we're out of mascarpone\\u2014cream cheese might work as a substitute, shall we use that?\\n[Bob -> Alex] Do we have enough chocolate for the tiramisu, and is there any issue with using cream cheese instead of mascarpone for those who might be lactose intolerant?\\n[Alex -> Bob] Cream cheese should be fine unless someone is lactose intolerant\\u2014are both of you okay with this substitution?\\n[Bob -> All] I'm fine with the cream cheese, and I'll grab some lactose-free milk for those who might be intolerant\\u2014how does that sound for the tiramisu cream?\\n[Alex -> All] Lactose-free milk is a smart addition, Bob; I'll set up the espresso and then help chop vegetables for the risotto while the tiramisu components come together.\\n[Bob -> All] I'll double-check our pantry for other essentials like arborio rice and parmesan, and I can grab the lactose-free milk on my next garden run.\\n[Alice -> All] I'll bring some extra dark chocolate just in case, and lactose-free cream cheese sounds perfect for our tiramisu.\\n\\nTake the role of an agent named Bob. \\nyour personality traits are defined in the \\nfollowing JSON:\\n{\\n  \\\"preferences\\\": [\\n    \\\"Bob loves cooking Italian cuisine.\\\",\\n    \\\"Bob is a passionate gardener and loves using fresh herbs in his recipes.\\\",\\n    \\\"Bob dislikes spicy food.\\\",\\n    \\\"Bob enjoys experimenting with new flavors and ingredients.\\\"\\n  ]\\n}\\n\\nYou are in the following situation:\\nAlex (a robot) has invited Bob (a male human) \\nand Alice (a female human) to his home to \\nprepare food together and enjoy the evening\\n\\n\\nYour goal is defined in the following JSON\\nby the fields \\\"goal\\\" and \\\"discussion\\\":\\n{\\n  \\\"goal\\\": \\\"Ingredient Check\\\",\\n  \\\"discussion\\\": \\\"The agents check the availability of the necessary ingredients for the chosen recipe. They verify if all ingredients are present, discuss substitutions if certain ingredients are missing, and ensure that any food intolerances are considered. They may also discuss different cooking techniques or variations to the recipe.\\\",\\n  \\\"switchCondition\\\": \\\"Once the availability of ingredients has been checked and any necessary substitutions or adjustments have been agreed upon.\\\",\\n  \\\"identity traits\\\": [\\n    \\\"preferences\\\",\\n    \\\"food intolerances\\\",\\n    \\\"environment-state\\\"\\n  ]\\n}\\n\\nNevertheless the goal is abstract and defined in meta-terms.\\nYou have to convert this goal in concrete action and concrete\\nproposals rooted in reality.\\nGive the most probable reaction of Bob to the \\ncurrent conversation by considering the goal but also \\nby answering questions raised during the conversation.\\nProduce a single sentence with Bob as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [Bob -> All] <your sentence, question or answer>\\nb) if you want to ask something to Alex:\\n   [Bob -> Alex] <your question or answer to Alex>\\nc) if you want to ask something to Bob:\\n   [Bob -> Bob] <your question or answer to Bob>\\nb) if you don't want to say anything (be silent): \\n   [Bob -> All] (silence)\\n   \\nTo produce the most probable answer to the discussion \\nyou must respect the following rules.\\n1) Be extremely concise, use a single sentence.\\n2) Be casual and avoid formalities and never repeat \\\"thanks\\\".\\n4) Do not repeat any information already present in \\nthe history of the discussion said by you or others.\\n5) Be concrete in the proposal you make.\\n6) Answer questions immediately and never repeat the question. \\nor example you can approve a suggestion or propose \\nsomething else. Important is to have every question \\nanswered immediately to progress with the dialog.\\n7) Formulate the actions you do so that the other \\nparticipants can be informed.\\n8) Try to reach the goal as quick as possible.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":312,\"location\":\"21340 -2100.2999999999997\",\"group\":295,\"editorPosition\":[166,150,621,654]},\n{\"label\":\"current step info\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a string\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"goal\\\": \\\"Ingredient Check\\\",\\n  \\\"discussion\\\": \\\"The agents check the availability of the necessary ingredients for the chosen recipe. They verify if all ingredients are present, discuss substitutions if certain ingredients are missing, and ensure that any food intolerances are considered. They may also discuss different cooking techniques or variations to the recipe.\\\",\\n  \\\"switchCondition\\\": \\\"Once the availability of ingredients has been checked and any necessary substitutions or adjustments have been agreed upon.\\\",\\n  \\\"identity traits\\\": [\\n    \\\"preferences\\\",\\n    \\\"food intolerances\\\",\\n    \\\"environment-state\\\"\\n  ]\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":293,\"location\":\"20120 -1610\",\"group\":291},\n{\"label\":\"{\\n  \\\"goal\\\": \\\"Ingredient Check\\\",\\n  \\\"discussion\\\": \\\"The agents check the availability of the necessary ingredients for the chosen recipe. They verify if all ingredients are present, discuss substitutions if certain ingredients are missing, and ensure that any food intolerances are considered. They may also discuss different cooking techniques or variations to the recipe.\\\",\\n  \\\"switchCondition\\\": \\\"Once the availability of ingredients has been checked and any necessary substitutions or adjustments have been agreed upon.\\\",\\n  \\\"identity traits\\\": [\\n    \\\"preferences\\\",\\n    \\\"food intolerances\\\",\\n    \\\"environment-state\\\"\\n  ]\\n}\",\"category\":\"CodeFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"3190 370\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":292,\"location\":\"20550 -1630\"},\n{\"label\":\"Master Plan Sequencer\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":291,\"location\":\"18969.999515625 -1320\"},\n{\"label\":\"Sentence Generator\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":295,\"location\":\"19321.296875 -2070.05\"},\n{\"label\":\"Observer of Discussion Goal Change\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":311,\"location\":\"20503.2763671875 -1120\"},\n{\"label\":\"agent name\",\"category\":\"DataFlow_Data\",\"size\":\"150 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":313,\"location\":\"18850 -2170\"},\n{\"label\":\"Bob\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"180 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":316,\"location\":\"24720 -2170\"},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"specs\",\"name\":\"specs\"},{\"portId\":\"situation\",\"name\":\"situation\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"This is the current situation:\\n{situation}\\n\\nHere are the short specification of the scenario:\\n{specs}\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":318,\"location\":\"15430 -1115.025\",\"group\":207},\n{\"label\":\"Situation\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a string\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex (a robot) has invited Bob (a male human) \\nand Alice (a female human) to his home to \\nprepare food together and enjoy the evening\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":321,\"location\":\"15030 -985.0250000000001\",\"group\":207},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"190 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":315,\"location\":\"20080 -910\",\"label\":\"\"},\n{\"label\":\"History1\",\"category\":\"DataFlow_DataSend\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Restore\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"text\\\": \\\"Have you ever been to Alex's home before?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"No, it's my first time visiting Alex's home.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Great, I'm excited for you both to experience my home for the first time! Let's proceed to my place.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I hope you'll enjoy the food we prepare together tonight!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I'm excited to try out the food you both prepare tonight!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Do you have any dietary preferences or intolerances that we should consider when deciding on the type of food to prepare?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"As a robot, I don't have any dietary preferences or intolerances, so feel free to suggest any type of food you'd like to make.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I have lactose intolerance and gluten intolerance, so we should keep that in mind when deciding on the type of food to prepare.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Since I have lactose and gluten intolerance, it would be great if we could consider some lactose-free and gluten-free options for the food tonight.\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Since Bob has lactose and gluten intolerances, let's focus on finding recipes that are lactose-free and gluten-free.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can come up with some delicious lactose-free and gluten-free Italian recipes for us to prepare tonight!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can suggest a lactose-free and gluten-free dessert that we can make together. How does that sound?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"That sounds like a great plan! Let's start looking for some delicious lactose-free and gluten-free Italian recipes and a lactose-free and gluten-free dessert for tonight.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I'm glad we're all on the same page about focusing on lactose-free and gluten-free options. Let's start searching for recipe ideas!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I found some delicious lactose-free and gluten-free Italian recipes and a lactose-free and gluten-free dessert. Let's get started on cooking!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I'm glad we found some delicious recipes. Let's divide the tasks to get started on cooking!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I'm excited to start cooking! What tasks do you think we should each take on?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I suggest we start by assigning tasks based on our capabilities and make a plan for coordinating the cooking process.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Based on our capabilities, I can handle identifying and preparing the ingredients, Alice can assist with the cooking process, and Bob can focus on coordinating and overseeing the tasks. Does that sound good?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I'm excited to assist with the cooking process and help prepare the delicious lactose-free and gluten-free Italian recipes and dessert!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"That sounds like a good plan! Let's get started with the assigned tasks and coordinate the cooking process.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":323,\"location\":\"25360 -2330\",\"doCompute\":\"DataFlow_DataSend\",\"editorPosition\":[1454,90,778,911]},\n{\"label\":\"  List of chats\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1770 110\",\"key\":325,\"location\":\"25320 -2460\",\"color\":\"Yellow\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"330 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"clear\",\"name\":\"clear\"},{\"portId\":\"init\",\"name\":\"init\"},{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"dialog\",\"name\":\"dialog\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/user2.png }\\n- { name: Bob, url: ~/user1.png }\\n- { name: Alex, url: ~/robot.png }\",\"valueChanged\":true}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"history\":[],\"key\":326,\"location\":\"25780 -2310\",\"editorPosition\":[1515,0,1272,866]},\n{\"label\":\"Group New\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":327,\"location\":\"34340 -12740\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"300 300\",\"buttons_\":[{\"buttonMinSize\":\"180 180\",\"buttonFont\":\"70px sans-serif\",\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":324,\"location\":\"17976.650957543923 -2656.0129683620025\"},\n{\"label\":\"Plan\\nDB\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a JSON object or array\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"1\\\": {\\n      \\\"goal\\\": \\\"Introductions and Setting the Mood\\\",\\n      \\\"discussion\\\": \\\"The agents introduce themselves and share their expectations and preferences for the evening. They discuss what type of food they would like to prepare and any dietary restrictions they may have. They also discuss the ambiance and atmosphere they want to create.\\\",\\n      \\\"switchCondition\\\": \\\"Once introductions have been made and the food preferences and dietary restrictions have been discussed.\\\",\\n      \\\"identity traits\\\": [\\n        \\\"personality\\\",\\n        \\\"preferences\\\",\\n        \\\"food intolerances\\\"\\n      ]\\n    },\\n    \\\"2\\\": {\\n      \\\"goal\\\": \\\"Recipe Selection\\\",\\n      \\\"discussion\\\": \\\"The agents brainstorm and discuss different recipe ideas that meet everyone's preferences and dietary restrictions. They consider the available ingredients and resources in Alex's home. They may also discuss any previous cooking experiences or culinary interests.\\\",\\n      \\\"switchCondition\\\": \\\"Once a recipe has been chosen that satisfies everyone's preferences and dietary restrictions.\\\",\\n      \\\"identity traits\\\": [\\n        \\\"social memories\\\",\\n        \\\"preferences\\\",\\n        \\\"food intolerances\\\",\\n        \\\"environment-state\\\"\\n      ]\\n    },\\n    \\\"3\\\": {\\n      \\\"goal\\\": \\\"Ingredient Check\\\",\\n      \\\"discussion\\\": \\\"The agents check the availability of the necessary ingredients for the chosen recipe. They verify if all ingredients are present, discuss substitutions if certain ingredients are missing, and ensure that any food intolerances are considered. They may also discuss different cooking techniques or variations to the recipe.\\\",\\n      \\\"switchCondition\\\": \\\"Once the availability of ingredients has been checked and any necessary substitutions or adjustments have been agreed upon.\\\",\\n      \\\"identity traits\\\": [\\n        \\\"preferences\\\",\\n        \\\"food intolerances\\\",\\n        \\\"environment-state\\\"\\n      ]\\n    },\\n    \\\"4\\\": {\\n      \\\"goal\\\": \\\"Preparation and Cooking\\\",\\n      \\\"discussion\\\": \\\"The agents work together to prepare and cook the chosen recipe. They discuss the steps, assign tasks, and share cooking techniques or tips. They may also discuss personal cooking preferences and share stories or memories related to cooking or food.\\\",\\n      \\\"switchCondition\\\": \\\"Once the recipe is prepared and cooked, and the agents are ready to enjoy the meal.\\\",\\n      \\\"identity traits\\\": [\\n        \\\"preferences\\\",\\n        \\\"capabilities\\\",\\n        \\\"environment-state\\\"\\n      ]\\n    },\\n    \\\"5\\\": {\\n      \\\"goal\\\": \\\"Enjoying the Meal\\\",\\n      \\\"discussion\\\": \\\"The agents sit down together to enjoy the meal they have prepared. They share their thoughts and opinions about the taste and presentation of the food. They may discuss the overall cooking experience and any challenges or successes they encountered.\\\",\\n      \\\"switchCondition\\\": \\\"Once the meal is finished and everyone is satisfied.\\\",\\n      \\\"identity traits\\\": [\\n        \\\"preferences\\\"\\n      ]\\n    },\\n    \\\"6\\\": {\\n      \\\"goal\\\": \\\"Reflection and Farewell\\\",\\n      \\\"discussion\\\": \\\"The agents reflect on the evening and discuss their overall satisfaction with the experience. They may express gratitude and share any final thoughts or memories. They discuss future plans or potential follow-up activities.\\\",\\n      \\\"switchCondition\\\": \\\"Once the agents have shared their reflections and expressed their farewell.\\\",\\n      \\\"identity traits\\\": [\\n        \\\"personality\\\",\\n        \\\"social memories\\\"\\n      ]\\n    }\\n  },\\n  {\\n    \\\"1\\\": {\\n      \\\"goal\\\": \\\"Introduce themselves and discuss the plan\\\",\\n      \\\"discussion\\\": \\\"Alex, Bob, and Alice introduce themselves and discuss what kind of food they would like to prepare together. They can share their preferences and ideas for the meal.\\\",\\n      \\\"switchCondition\\\": \\\"Once they have agreed on a general plan for the meal\\\",\\n      \\\"identity traits\\\": [\\n        \\\"personality\\\",\\n        \\\"preferences\\\"\\n      ]\\n    },\\n    \\\"2\\\": {\\n      \\\"goal\\\": \\\"Check the available ingredients\\\",\\n      \\\"discussion\\\": \\\"Alex and the others check the ingredients available on the table or in the apartment to see what they can use for the meal. They can discuss the options and consider any allergies or food intolerances they have.\\\",\\n      \\\"switchCondition\\\": \\\"Once they have assessed the available ingredients and decided on a recipe\\\",\\n      \\\"identity traits\\\": [\\n        \\\"food intolerances\\\",\\n        \\\"environment-state\\\"\\n      ]\\n    },\\n    \\\"3\\\": {\\n      \\\"goal\\\": \\\"Assign tasks and start the cooking process\\\",\\n      \\\"discussion\\\": \\\"Alex, Bob, and Alice assign tasks to each other based on their capabilities and preferences. They discuss the steps required to prepare the chosen recipe and begin the cooking process.\\\",\\n      \\\"switchCondition\\\": \\\"Once they have assigned tasks and started cooking\\\",\\n      \\\"identity traits\\\": [\\n        \\\"capabilities\\\"\\n      ]\\n    },\\n    \\\"4\\\": {\\n      \\\"goal\\\": \\\"Continuing the cooking process\\\",\\n      \\\"discussion\\\": \\\"Alex, Bob, and Alice continue cooking the dish, following the recipe and supporting each other with any questions or help needed.\\\",\\n      \\\"switchCondition\\\": \\\"Once they have completed the cooking process and the dish is ready\\\",\\n      \\\"identity traits\\\": []\\n    },\\n    \\\"5\\\": {\\n      \\\"goal\\\": \\\"Enjoy the meal and have a conversation\\\",\\n      \\\"discussion\\\": \\\"Alex, Bob, and Alice sit down to enjoy the meal they prepared together. They can engage in a casual conversation, sharing stories, and getting to know each other better.\\\",\\n      \\\"switchCondition\\\": \\\"Once they finish eating and decide it's time to wrap up the evening\\\",\\n      \\\"identity traits\\\": [\\n        \\\"social memories\\\"\\n      ]\\n    },\\n    \\\"6\\\": {\\n      \\\"goal\\\": \\\"Wrap up and say goodbye\\\",\\n      \\\"discussion\\\": \\\"Alex, Bob, and Alice clean up the kitchen, store any leftovers, and say goodbye to each other. They can discuss future plans or exchange contact information if desired.\\\",\\n      \\\"switchCondition\\\": \\\"Once they have finished cleaning and preparing to leave\\\",\\n      \\\"identity traits\\\": [\\n        \\\"personality\\\"\\n      ]\\n    }\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":329,\"location\":\"17100 -1130\",\"editorPosition\":[-16837,136,521,575],\"group\":207},\n{\"label\":\"select item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"onSelect\",\"name\":\"onSelect\",\"tooltip\":\"Event that triggers the firing of out\"},{\"portId\":\"index\",\"name\":\"index\",\"tooltip\":\"If connected, index of element \\nin array starting with 0\"},{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array from where to select an item\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"Selected element from the array\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"array\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\",\"valueChanged\":\"true\"},{\"name\":\"index\",\"value\":\"0\",\"unit\":\"\",\"valueChanged\":\"true\",\"tooltip\":\"Index of selected element from the array\\nif the index input is not connected\\notherwise the input has priority\"},{\"name\":\"isIndexRandom\",\"value\":\"false\",\"unit\":\"\",\"valueChanged\":\"true\",\"tooltip\":\"If true the index of the selected element\\nis defined randomly.\\nAlso if an input is connected\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  const indexInput = graphData.dfe.getInput( nodeData, 'index', -1 );\\n  const dblen = database.length;\\n  \\n  if( dblen > 0 ) {\\n    \\n    const isIndexRandom = graphData.dfe.getProperty( nodeData, 'isIndexRandom', false );\\n    let index = graphData.dfe.getProperty( nodeData, 'index', 0 );\\n    index = ( indexInput == -1 )? index: indexInput;\\n    \\n    if( isIndexRandom ) {\\n      index = Math.floor( Math.random()*dblen );\\n    }\\n    \\n    index = Math.min( dblen-1, Math.max( 0, index ) );\\n    const outValue = database[index];\\n    \\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\",\"fileTypeName\":\"GetFromArray\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":330,\"location\":\"17400 -1150\",\"group\":207},\n{\"label\":\"Current Master Plan\",\"category\":\"DataFlow_Data\",\"size\":\"220 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"1\\\": {\\n    \\\"goal\\\": \\\"Introductions and Setting the Mood\\\",\\n    \\\"discussion\\\": \\\"The agents introduce themselves and share their expectations and preferences for the evening. They discuss what type of food they would like to prepare and any dietary restrictions they may have. They also discuss the ambiance and atmosphere they want to create.\\\",\\n    \\\"switchCondition\\\": \\\"Once introductions have been made and the food preferences and dietary restrictions have been discussed.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"personality\\\",\\n      \\\"preferences\\\",\\n      \\\"food intolerances\\\"\\n    ]\\n  },\\n  \\\"2\\\": {\\n    \\\"goal\\\": \\\"Recipe Selection\\\",\\n    \\\"discussion\\\": \\\"The agents brainstorm and discuss different recipe ideas that meet everyone's preferences and dietary restrictions. They consider the available ingredients and resources in Alex's home. They may also discuss any previous cooking experiences or culinary interests.\\\",\\n    \\\"switchCondition\\\": \\\"Once a recipe has been chosen that satisfies everyone's preferences and dietary restrictions.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"social memories\\\",\\n      \\\"preferences\\\",\\n      \\\"food intolerances\\\",\\n      \\\"environment-state\\\"\\n    ]\\n  },\\n  \\\"3\\\": {\\n    \\\"goal\\\": \\\"Ingredient Check\\\",\\n    \\\"discussion\\\": \\\"The agents check the availability of the necessary ingredients for the chosen recipe. They verify if all ingredients are present, discuss substitutions if certain ingredients are missing, and ensure that any food intolerances are considered. They may also discuss different cooking techniques or variations to the recipe.\\\",\\n    \\\"switchCondition\\\": \\\"Once the availability of ingredients has been checked and any necessary substitutions or adjustments have been agreed upon.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"preferences\\\",\\n      \\\"food intolerances\\\",\\n      \\\"environment-state\\\"\\n    ]\\n  },\\n  \\\"4\\\": {\\n    \\\"goal\\\": \\\"Preparation and Cooking\\\",\\n    \\\"discussion\\\": \\\"The agents work together to prepare and cook the chosen recipe. They discuss the steps, assign tasks, and share cooking techniques or tips. They may also discuss personal cooking preferences and share stories or memories related to cooking or food.\\\",\\n    \\\"switchCondition\\\": \\\"Once the recipe is prepared and cooked, and the agents are ready to enjoy the meal.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"preferences\\\",\\n      \\\"capabilities\\\",\\n      \\\"environment-state\\\"\\n    ]\\n  },\\n  \\\"5\\\": {\\n    \\\"goal\\\": \\\"Enjoying the Meal\\\",\\n    \\\"discussion\\\": \\\"The agents sit down together to enjoy the meal they have prepared. They share their thoughts and opinions about the taste and presentation of the food. They may discuss the overall cooking experience and any challenges or successes they encountered.\\\",\\n    \\\"switchCondition\\\": \\\"Once the meal is finished and everyone is satisfied.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"preferences\\\"\\n    ]\\n  },\\n  \\\"6\\\": {\\n    \\\"goal\\\": \\\"Reflection and Farewell\\\",\\n    \\\"discussion\\\": \\\"The agents reflect on the evening and discuss their overall satisfaction with the experience. They may express gratitude and share any final thoughts or memories. They discuss future plans or potential follow-up activities.\\\",\\n    \\\"switchCondition\\\": \\\"Once the agents have shared their reflections and expressed their farewell.\\\",\\n    \\\"identity traits\\\": [\\n      \\\"personality\\\",\\n      \\\"social memories\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":331,\"location\":\"17740 -1150\",\"group\":207},\n{\"label\":\"push item in array\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"array\",\"name\":\"array\",\"tooltip\":\"JSON array where to push data\"},{\"portId\":\"item\",\"name\":\"item\",\"tooltip\":\"JSON item to be pushed in array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"JSON array containing pushed item\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"item\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'item' ) {\\n  const database = graphData.dfe.getInput( nodeData, 'array', [] );\\n  try {\\n    const newData = JSON.parse( value, null, 2 );\\n    database.push( newData );\\n    graphData.dfe.fireOutput( nodeData, 'out', database );\\n  } catch( e ) {\\n    console.warn( 'Not well formatted JSON' );\\n  } \\n}\",\"fileTypeName\":\"PushInArray\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":332,\"location\":\"16760 -1130\",\"group\":207},\n{\"label\":\"Stop\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\",\"tooltip\":\"this output is a string\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"STOP\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":333,\"location\":\"19820 -890\"},\n{\"label\":\"History\",\"category\":\"DataFlow_DataSend\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Restore\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I'm really excited to go to Alex's home and meet everyone!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I'm glad you're both excited to come over! Let's discuss what kind of food we want to prepare tonight.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I think we should make some chocolate desserts, like brownies or chocolate chip cookies. What do you all think?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"How about we also make a savory dish to complement the chocolate desserts? Any suggestions?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"How about we make a chocolate lava cake as the savory dish to complement the chocolate desserts?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"That sounds like a great idea! Let's make chocolate chip cookies and a chocolate lava cake to complement them.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Alice\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Since we're making chocolate chip cookies and a chocolate lava cake, maybe we can also prepare a simple salad with a tangy vinaigrette dressing as a savory dish to go along with them.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can check the availability of the ingredients needed for the chocolate chip cookies, chocolate lava cake, and the vinaigrette dressing. Do we have everything we need?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Sure, let me check the availability of the ingredients for the chocolate chip cookies, chocolate lava cake, and the vinaigrette dressing.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can help with drawing some cute decorations for the desserts and the salad. How about we also make a fruit salad to add some freshness to the meal?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I have already checked the availability of the ingredients for the chocolate chip cookies, chocolate lava cake, and vinaigrette dressing. We have everything we need.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"How about we also make a fruit salad to add some freshness to the meal?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can prepare the salad with a tangy vinaigrette dressing and help Alice with the cute decorations for the desserts and salad.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can help with drawing cute decorations for the desserts and the salad, and I'm also excited to make a fruit salad to add some freshness to the meal.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Do we have enough fruits for the fruit salad?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I think it would be great if we could also make some garlic bread to go with the savory dishes. What do you all think?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can help with drawing cute decorations for the desserts and the salad, and I'm also excited to make a fruit salad to add some freshness to the meal.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"That sounds like a great plan! Let's make chocolate chip cookies, a chocolate lava cake, a simple salad with a tangy vinaigrette dressing, and a fruit salad to add freshness to the meal.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Alice\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can start preparing the cute decorations for the desserts and the salad while Bob prepares the vinaigrette dressing. How about we divide the tasks like this?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Sounds like a great plan! Let's divide the tasks as discussed, I'll start preparing the vinaigrette dressing while Alice works on the decorations.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I can start preparing the fruit salad while Bob prepares the vinaigrette dressing.\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Since Alice and I have divided the tasks, I'll start preparing the vinaigrette dressing while she works on the decorations.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can start preparing the fruit salad while Bob prepares the vinaigrette dressing.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"How about I start preparing the garlic bread while you both work on the other tasks?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"How about I take care of cleaning up the kitchen while you all enjoy the food?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"How about I start preparing the garlic bread while you both work on the other tasks?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"How about we start cooking the chocolate chip cookies and chocolate lava cake now?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":334,\"location\":\"25360 -2240.1\",\"doCompute\":\"DataFlow_DataSend\"},\n{\"label\":\"\",\"category\":\"DataFlow_Concatenate\",\"color\":\"lightseagreen\",\"in_\":[{\"portId\":\"in0\",\"name\":\"in0\"},{\"portId\":\"in1\",\"name\":\"in1\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"}],\"doCompute\":\"DataFlow_Concatenate\",\"key\":335,\"location\":\"17580 -650\"},\n{\"label\":\"\",\"category\":\"DataFlow_Dispacher\",\"color\":\"lightseagreen\",\"props_\":[],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"key\":337},\n{\"label\":\"\",\"category\":\"DataFlow_Dispatch\",\"color\":\"Moccasin\",\"props_\":[],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"},{\"portId\":\"out4\",\"name\":\"out4\"},{\"portId\":\"out5\",\"name\":\"out5\"}],\"key\":344,\"location\":\"18590 -2250.2\",\"doCompute\":\"DataFlow_Dispatch\"},\n{\"label\":\"\",\"category\":\"DataFlow_Dispatch\",\"color\":\"Moccasin\",\"props_\":[],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"doCompute\":\"DataFlow_Dispatch\",\"key\":296,\"location\":\"24560 -2000\"},\n{\"label\":\"Async Call\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nsetTimeout( ()=> graphData.dfe.fireOutput( nodeData, 'out', value ), 1*1000 );\",\"fileTypeName\":\"AsyncCall\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":342,\"location\":\"23880 -2340\"},\n{\"label\":\"Gate\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"trigger\",\"name\":\"trigger\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPropagateOnTrigger\",\"value\":\"true\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst isPropagateOnTrigger = graphData.dfe.getProperty( nodeData, 'isPropagateOnTrigger', true );\\nif( name == 'in' ) {\\n  const isTriggerReceived = graphData.dfe.get( nodeData, 'isTriggerReceived', false );\\n  if( !isTriggerReceived && !isPropagateOnTrigger ) {\\n    graphData.dfe.fireOutput( nodeData, 'out', value );\\n  }\\n} else if( name == 'trigger' ) {\\n  graphData.dfe.set( nodeData, 'isTriggerReceived', true );\\n  const outValue = graphData.dfe.getInput( nodeData, 'in', null );\\n  if( isPropagateOnTrigger ) {\\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\",\"fileTypeName\":\"Gate\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":340,\"location\":\"23840 -2010\"},\n{\"label\":\"Gate\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"trigger\",\"name\":\"trigger\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPropagateOnTrigger\",\"value\":\"false\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst isPropagateOnTrigger = graphData.dfe.getProperty( nodeData, 'isPropagateOnTrigger', true );\\nif( name == 'in' ) {\\n  const isTriggerReceived = graphData.dfe.get( nodeData, 'isTriggerReceived', false );\\n  if( !isTriggerReceived && !isPropagateOnTrigger ) {\\n    graphData.dfe.fireOutput( nodeData, 'out', value );\\n  }\\n} else if( name == 'trigger' ) {\\n  graphData.dfe.set( nodeData, 'isTriggerReceived', true );\\n  const outValue = graphData.dfe.getInput( nodeData, 'in', null );\\n  if( isPropagateOnTrigger ) {\\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\",\"fileTypeName\":\"Gate\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":338,\"location\":\"24210 -2000\"},\n{\"label\":\"Watch Dog 1\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"start\",\"name\":\"start\"},{\"portId\":\"timeOutIn\",\"name\":\"timeOutIn\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"timeOut\",\"value\":\"5\",\"unit\":\"s\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'in' ) {\\n  const timer = graphData.dfe.get( nodeData, 'timer', null );\\n  if( timer ) {\\n    clearTimeout( timer );\\n    graphData.dfe.fireOutput( nodeData, 'out', value );\\n  }\\n} else if( name == 'start' ) {\\n  const timeOut = graphData.dfe.getProperty( nodeData, 'timeOut', 1 );\\n  const timer = setTimeout( ()=> {\\n                               const outValue = graphData.dfe.getInput( nodeData, 'timeOutIn', null );\\n                               graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n                               graphData.dfe.set( nodeData, 'timer', null );\\n                             }, \\n                             parseFloat( timeOut )*1000 );\\n  graphData.dfe.set( nodeData, 'timer', timer );\\n}\",\"fileTypeName\":\"WatchDog\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":339,\"location\":\"21740 -1990\",\"editorPosition\":[1537,1058,862,376]},\n{\"label\":\"Silence\",\"category\":\"DataFlow_Data\",\"size\":\"160 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Bob -> All] (silence)\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":343,\"location\":\"21340 -1970\"},\n{\"label\":\"Watch Dog 2\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"start\",\"name\":\"start\"},{\"portId\":\"timeOutIn\",\"name\":\"timeOutIn\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"timeOut\",\"value\":\"3\",\"unit\":\"s\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'in' ) {\\n  const timer = graphData.dfe.get( nodeData, 'timer', null );\\n  if( timer ) {\\n    clearTimeout( timer );\\n    graphData.dfe.fireOutput( nodeData, 'out', value );\\n  }\\n} else if( name == 'start' ) {\\n  const timeOut = graphData.dfe.getProperty( nodeData, 'timeOut', 1 );\\n  const timer = setTimeout( ()=> {\\n                               const outValue = graphData.dfe.getInput( nodeData, 'timeOutIn', null );\\n                               graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n                               graphData.dfe.set( nodeData, 'timer', null );\\n                             }, \\n                             parseFloat( timeOut )*1000 );\\n  graphData.dfe.set( nodeData, 'timer', timer );\\n}\",\"fileTypeName\":\"WatchDog\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":345,\"location\":\"21590 -950\",\"group\":311},\n{\"label\":\"Continue\",\"category\":\"DataFlow_Data\",\"size\":\"180 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"continue with current goal\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":346,\"location\":\"21160 -940\",\"group\":311},\n{\"label\":\"\",\"category\":\"DataFlow_Dispatch\",\"color\":\"Moccasin\",\"props_\":[],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"doCompute\":\"DataFlow_Dispatch\",\"key\":348,\"location\":\"20970 -1110\"},\n{\"label\":\"History\",\"category\":\"DataFlow_DataSend\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Restore\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"text\\\": \\\"Hey Bob and Alice, I'm excited to have you both over at my place to prepare food together and enjoy the evening. Let's get started with some cooking!\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Hey Alex, thanks for inviting us! I'm really looking forward to cooking together and getting to know each other. What are we going to prepare?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Hey Alice and Bob, I'm really excited to have you both over! Let's discuss different cuisines and decide on the type of food we want to prepare together.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can draw and help with the decorations for the evening, what can I do to help with the cooking?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"To start off, let's check the availability of ingredients. Bob and Alice, can you let me know what ingredients you have on hand?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I have some fruits and vegetables, so maybe I can help with chopping and preparing the ingredients.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I can help with checking the availability of ingredients by looking through my collection of rare cookbooks.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Great! You can help with chopping and preparing the ingredients while I find a recipe based on the ingredients we have.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Alice\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Since I enjoy baking and have some fruits, how about we make a fruit tart for dessert?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"That's a great idea, Alice! Let's make a fruit tart for dessert. Bob, could you find a recipe for a delicious fruit tart that we can make with the available ingredients?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Since we have fruits and vegetables, I can help with chopping and preparing the ingredients for the fruit tart.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Could you find a recipe for a fruit tart using the available ingredients?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Sure, I can find a recipe for a fruit tart using the available ingredients. I'll start searching through my collection of rare cookbooks.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Great! Alice, you can start chopping and preparing the ingredients for the fruit tart while Bob searches for a recipe. Let's get started!\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I'm done chopping and preparing the ingredients for the fruit tart. What's next?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Do we have any cream for the fruit tart?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Bob, could you please search for any cream we have for the fruit tart?\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Where would you like me to search for the cream?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I found some cream in the refrigerator, we can use that for the fruit tart.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Can I help with anything else in the kitchen?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Could you please check if we have any other ingredients besides the cream for the fruit tart?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Should I start preparing the dough for the fruit tart now?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Could you start preparing the dough for the fruit tart now?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"I have found a recipe for a delicious fruit tart using the available ingredients. Let's use the cream Bob found in the refrigerator and Alice can start preparing the dough for the fruit tart.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Can I help with anything else in the kitchen?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"\\\\\\\"Great progress! Alice, please start working on rolling out the dough for the fruit tart.\\\\\\\"\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Could you please start preheating the oven for the fruit tart?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":336,\"location\":\"25360 -2150\",\"doCompute\":\"DataFlow_DataSend\"},\n{\"label\":\"Clear Label of Message Nodes\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isLocal\",\"value\":\"true\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Test if clean only local group labels:\\n// - isLocal = true => clean only labels in the group we are in\\n// - isLocal = false => clean all labels that are in any group\\nconst isLocal = graphData.dfe.getProperty( nodeData, 'isLocal', false );\\n// Group test function\\nconst testGroup = (g)=> ( isLocal? g == nodeData.group: g != undefined );\\n\\n// Get all message nodes (except big plan)\\nconst dataList = graphData.dfe.me.getNodeListIf( graphData.dfe.me.modelId, \\n                                           (d)=> d.category.endsWith( 'Flow_Message' ) &&\\n                                           testGroup( d.group ) );\\nfor( const data of dataList ) {\\n  setNodeDataField( data.key, 'label', '' );\\n}\",\"fileTypeName\":\"ClearLabels\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":341,\"location\":\"18850 -2530\",\"editorPosition\":[564,1974,693,325]},\n{\"label\":\"- inject  in the chat the change of goal\\nv incorporate in the plan a transition condition\\n- summarize the dialog taking out the JSON\\n- reduce the dialog history to a limited fix number of message\\n- when we switch the goal, we could summarize the dialog in the previous section\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"900 190\",\"key\":349,\"location\":\"20380 -2660\"},\n{\"label\":\"ROS Bridge\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"doConnect\",\"name\":\"doConnect\"},{\"portId\":\"pubTopic\",\"name\":\"pubTopic\"}],\"out_\":[{\"portId\":\"status\",\"name\":\"status\"},{\"portId\":\"subEvent_Speech\",\"name\":\"subEvent_Speech\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"rosServerURL\",\"value\":\"ws://172.26.1.163:9090\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doConnect' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  if( !ros ) {\\n    const rosServerURL = graphData.dfe.getProperty( nodeData, 'rosServerURL', '' );\\n    if( rosServerURL ) {\\n      // Connect to the ROS Bridge WebSocket server\\n      const ros = new ROSLIB.Ros({\\n        url: rosServerURL, // The WebSocket connection URL to your ROS Bridge server\\n      });\\n      graphData.dfe.set( nodeData, 'ros', ros );\\n      \\n      // This function is called upon a successful connection to ROS\\n      ros.on('connection', function() {\\n        const msg = 'Connected to ROS websocket server.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n        \\n        setSubscribeTopics( nodeData, ros );\\n      });\\n      \\n      // This function is called if the connection to ROS is closed\\n      ros.on('close', function() {\\n        const msg = 'Connection to ROS websocket server closed.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n        graphData.dfe.set( nodeData, 'ros', null );\\n      });\\n      \\n      // This function is called if there's an error in the connection to ROS\\n      ros.on('error', function(error) {\\n        const msg = 'Error connecting to ROS websocket server: '+error;\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n    } else {\\n      graphData.dfe.fireOutput( nodeData, 'status', 'Error: rosServerURL not defined in properties' );\\n    }\\n  }\\n} else {\\n  if( name.startsWith( 'pub' ) ) {\\n    const topicName = '/'+name.substring( 3 ).toLowerCase();\\n    const ros = graphData.dfe.get( nodeData, 'ros', null );\\n    if( ros ) {\\n      // Define a ROS publisher.\\n      const topic = new ROSLIB.Topic({\\n        ros: ros,\\n        name: topicName,\\n        messageType: 'std_msgs/String',\\n      });\\n    \\n      const outValue = JSON.stringify( value );\\n      // Define a ROS message.\\n      const message = new ROSLIB.Message({\\n        data: outValue,\\n      });\\n    \\n      // Publish the message.\\n      topic.publish( message );\\n    }\\n    \\n  }\\n}\\nfunction setSubscribeTopics( nodeData, ros ) {\\n  const outputNameList = graphData.dfe.getOutputNameList( nodeData );\\n  for( const outputName of outputNameList ) {\\n    if( outputName.startsWith( 'sub' ) ) {\\n      const topicName = '/'+outputName.substring( 3 ).toLowerCase();\\n      \\n      // Create a new ROSLIB.Topic object to subscribe to a ROS topic\\n      const topic = new ROSLIB.Topic({\\n        ros: ros, // The ROSLIB.Ros connection handle\\n        name: topicName, // The name of the topic to subscribe to\\n        messageType: 'std_msgs/String', // The message type of the topic\\n      });\\n      \\n      // Define a callback function to handle received messages\\n      const onMessageReceived = ( message )=> {\\n        console.log('Received message on ' + topic.name + ': ' + message.data );\\n        const outValue = JSON.parse( message.data );\\n        graphData.dfe.fireOutput( nodeData, outputName, outValue );\\n      }\\n      \\n      // Subscribe to the topic with the callback\\n      topic.subscribe( onMessageReceived );\\n    }\\n  }\\n}\\n\",\"fileTypeName\":\"ROS Bridge\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":350,\"location\":\"28390 1530\",\"editorPosition\":[-3297,339,745,736]},\n{\"label\":\"ROSLib 1.3.0\",\"color\":\"orange\",\"size\":\"230 120\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"lib/ROSLib/1.3.0/roslib.min.js\",\"key\":352,\"location\":\"21710 -3900\",\"isIncludeScript\":true},\n{\"label\":\"\",\"category\":\"DataFlow_Dispatch\",\"color\":\"Moccasin\",\"props_\":[],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"}],\"doCompute\":\"DataFlow_Dispatch\",\"key\":351,\"location\":\"14790 -1250\"},\n{\"label\":\"\",\"category\":\"DataFlow_Dispatch\",\"color\":\"Moccasin\",\"props_\":[],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"}],\"doCompute\":\"DataFlow_Dispatch\",\"key\":353,\"location\":\"15610 -1580\",\"group\":201},\n{\"label\":\"\",\"category\":\"DataFlow_Dispatch\",\"color\":\"Moccasin\",\"props_\":[],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"}],\"doCompute\":\"DataFlow_Dispatch\",\"key\":354,\"location\":\"15600 -1850\",\"group\":203},\n{\"label\":\"\",\"category\":\"DataFlow_Dispatch\",\"color\":\"Moccasin\",\"props_\":[],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"}],\"doCompute\":\"DataFlow_Dispatch\",\"key\":355,\"location\":\"15600 -2150\",\"group\":210},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 190\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"agentName\",\"name\":\"agentName\"},{\"portId\":\"currentIdentity\",\"name\":\"currentIdentity\"},{\"portId\":\"other1\",\"name\":\"other1\"},{\"portId\":\"other2\",\"name\":\"other2\"},{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"currentStepInfo\",\"name\":\"currentStepInfo\"},{\"portId\":\"factList\",\"name\":\"factList\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"currentIdentity\",\"valueChanged\":\"true\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"This is the state of conversation until now\\nfrom the oldest to the earliest turns:\\n{factList}\\n\\nTake the role of an agent named {agentName}. \\nyour personality traits are defined in the \\nfollowing JSON:\\n{currentIdentity}\\n\\nYou are in the following situation:\\n{situation}\\n\\nYour goal is defined in the following JSON\\nby the fields \\\"goal\\\" and \\\"discussion\\\":\\n{currentStepInfo}\\n\\nGive the most probable reaction of {agentName} to the \\ncurrent conversation.\\nProduce a single answer with {agentName} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{agentName} -> All] <your sentence>\\nb) if you want to ask something to {other1}:\\n   [{agentName} -> {other1}] <your question to {other1}>\\nc) if you want to ask something to {other2}:\\n   [{agentName} -> {other2}] <your question to {other2}>\\nb) if you don't want to say anything (be silent): \\n   [{agentName} -> All] (silence)\\n   \\nTo produce the most probable answer to the discussion \\nyou must respect the following rules.\\n1) Stop procucing after your single answer and wait \\nfor the others to speak. \\n2) Be concise, use a single sentence.\\n3) Be casual and avoid formalities and do not repeat \\\"thanks\\\".\\n4) Do not repeat any information already present in \\nthe history of the discussion said by you or others.\\n5) Be concrete in the proposal you make.\\n6) If a question have been asked, answer it but do not repeat the question.\\n7) Formulate the actions you do so that the other participants can be informed.\\n8) Try to reach the goal as quick as possible.\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":347,\"location\":\"24330 -3090\",\"editorPosition\":[3264,48,528,576]},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"name\",\"name\":\"name\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"[{name} -> All] (silence)\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":357,\"location\":\"20220 -2220\"},\n{\"label\":\"Convert message to String\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet response = '';\\nif( Array.isArray( value ) ) {\\n  const responseList = [];\\n  value.forEach( (msg)=> {\\n    responseList.push( getMessageToString( msg ) );\\n  }); \\n  response = responseList.join( '\\\\n' );\\n} else {\\n  response = getMessageToString( value );\\n}\\ngraphData.dfe.fireOutput( nodeData, 'out', response );\\n\\nfunction getMessageToString( msg ) {\\n  return( `[${msg.sender} -> ${msg.receiver}] ${msg.text}` );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":356,\"location\":\"23380 -2130\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"330 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"clear\",\"name\":\"clear\"},{\"portId\":\"init\",\"name\":\"init\"},{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"dialog\",\"name\":\"dialog\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Frank, url: ~/user2.png }\\n- { name: Antonio, url: ~/user1.png }\\n- { name: Robo, url: ~/robot.png }\\n- { name: Michael, url: ~/user3.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"history\":[],\"key\":358,\"location\":\"29130 1580\",\"editorPosition\":[75,53,400,696]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":360,\"location\":\"28150 1540\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"780 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":359,\"location\":\"29120 1500\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"receiver\\\": \\\"All\\\",\\n  \\\"sender\\\": \\\"Frank\\\",\\n  \\\"text\\\": \\\" okay\\\"\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":362,\"location\":\"28830 1590\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"580 380\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":364,\"location\":\"28830 1850\"},\n{\"label\":\"/event_speech\",\"category\":\"DataFlow_Component\",\"size\":\"310 80\",\"color\":\"LightCyan\",\"in_\":[{\"portId\":\"rosServer\",\"name\":\"rosServer\"},{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"dataType\",\"value\":\"std_msgs/String\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'rosServer' ) {\\n  const ros = value;\\n  graphData.dfe.set( nodeData, 'ros', ros );\\n  setSubscribeTopics( nodeData, ros );\\n} else if( name == 'in' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  const topicName = nodeData.label.toLowerCase();\\n  if( ros ) {\\n    const dataType = graphData.dfe.getProperty( nodeData, 'dataType', 'std_msgs/String' );\\n    // Define a ROS publisher.\\n    const topic = new ROSLIB.Topic({\\n      ros: ros,\\n      name: topicName,\\n      messageType: dataType,\\n    });\\n  \\n    let outValue = value;\\n    try {\\n      outValue = JSON.stringify( value );\\n    } catch ( e ) {}\\n    // Define a ROS message.\\n    const message = new ROSLIB.Message({\\n      data: outValue,\\n    });\\n  \\n    // Publish the message.\\n    topic.publish( message );\\n  }\\n}\\nfunction setSubscribeTopics( nodeData, ros ) {\\n  if( graphData.dfe.isInput( nodeData, 'out' ) ) {\\n    const topicName = nodeData.label.toLowerCase();\\n    const dataType = graphData.dfe.getProperty( nodeData, 'dataType', 'std_msgs/String' );\\n    \\n    // Create a new ROSLIB.Topic object to subscribe to a ROS topic\\n    const topic = new ROSLIB.Topic({\\n      ros: ros, // The ROSLIB.Ros connection handle\\n      name: topicName, // The name of the topic to subscribe to\\n      messageType: dataType, // The message type of the topic\\n    });\\n    \\n    // Define a callback function to handle received messages\\n    const onMessageReceived = ( message )=> {\\n      console.log('Received message on ' + topic.name + ': ' + message.data );\\n      let outValue = message.data;\\n      try {\\n        outValue = JSON.parse( message.data );\\n      } catch( e ) {}\\n      graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n    }\\n    \\n    // Subscribe to the topic with the callback\\n    topic.subscribe( onMessageReceived );\\n  }\\n}\\n\",\"fileTypeName\":\"ROS Topic\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":361,\"location\":\"27258.717 676.9649999999999\",\"editorPosition\":[-2237,354,689,841],\"group\":373},\n{\"label\":\"ROS Bridge\",\"category\":\"DataFlow_Component\",\"size\":\"310 80\",\"color\":\"Aquamarine\",\"in_\":[{\"portId\":\"doConnect\",\"name\":\"doConnect\"}],\"out_\":[{\"portId\":\"status\",\"name\":\"status\"},{\"portId\":\"rosServer\",\"name\":\"rosServer\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"rosServerURL\",\"value\":\"ws://172.26.1.163:9090\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doConnect' ) {\\n  let isRosConnected = true;\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  if( !ros ) {\\n    const rosServerURL = graphData.dfe.getProperty( nodeData, 'rosServerURL', '' );\\n    if( rosServerURL ) {\\n      // Connect to the ROS Bridge WebSocket server\\n      const ros = new ROSLIB.Ros({\\n        url: rosServerURL, // The WebSocket connection URL to your ROS Bridge server\\n      });\\n      graphData.dfe.set( nodeData, 'ros', ros );\\n      \\n      // This function is called upon a successful connection to ROS\\n      ros.on('connection', function() {\\n        const msg = 'Connected to ROS websocket server.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n      \\n      // This function is called if the connection to ROS is closed\\n      ros.on('close', function() {\\n        const msg = 'Connection to ROS websocket server closed.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n        graphData.dfe.set( nodeData, 'ros', null );\\n      });\\n      \\n      // This function is called if there's an error in the connection to ROS\\n      ros.on('error', function(error) {\\n        isRosConnected = false;\\n        const msg = 'Error connecting to ROS websocket server: '+error;\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n    } else {\\n      isRosConnected = false;\\n      graphData.dfe.fireOutput( nodeData, 'status', 'Error: rosServerURL not defined in properties' );\\n    }\\n  }\\n  \\n  if( isRosConnected ) {\\n    graphData.dfe.fireOutput( nodeData, 'rosServer', ros );\\n  }\\n}\",\"fileTypeName\":\"ROS Server\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":363,\"location\":\"26528.717 191.342152501692\",\"group\":373},\n{\"label\":\"/service_name\",\"category\":\"DataFlow_Component\",\"size\":\"378 80\",\"color\":\"LightSteelBlue\",\"in_\":[{\"portId\":\"rosServer\",\"name\":\"rosServer\"},{\"portId\":\"arguments\",\"name\":\"arguments\"}],\"out_\":[{\"portId\":\"response\",\"name\":\"response\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"in1,in2\",\"valueChanged\":\"true\"},{\"name\":\"serviceType\",\"value\":\"your_package/YourServiceType\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'rosServer' ) {\\n  const ros = value;\\n  graphData.dfe.set( nodeData, 'ros', ros );\\n} else if( name == 'arguments' ) {\\n// } else if( name == 'doCompute' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  \\n  // Define the name of the ROS service you want to call\\n  const serviceName = nodeData.label.toLowerCase(); // Replace with your desired service name\\n  const serviceType = graphData.dfe.getProperty( nodeData, 'serviceType', '' );\\n  \\n  // Create a service client for the specified service\\n  const serviceClient = new ROSLIB.Service({\\n    ros,\\n    name: serviceName,\\n    serviceType,\\n  });\\n  \\n  // Define argumments\\n  const argList = graphData.dfe.getInput( nodeData, 'arguments', '' );\\n  // const argList = {};\\n  // const inputNameList = graphData.dfe.getInputNameList( nodeData );\\n  // for( const inputName of inputNameList ) {\\n  //   if( inputName != 'rosServer' ) {\\n  //     argList[inputName] = graphData.dfe.getInput( nodeData, inputName, '' );\\n  //   }\\n  // }\\n  // Define the service request\\n  const request = new ROSLIB.ServiceRequest( argList );\\n\\n  // Call the service with the request\\n  serviceClient.callService( request, (response) => {\\n    console.log(`Service response received: ${JSON.stringify(response)}`);\\n    \\n    // Process the response here\\n    // for( const outName in response ) {\\n      // if( graphData.dfe.isOutput( nodeData, outName ) ) {\\n      if( graphData.dfe.isOutput( nodeData, 'response' ) ) {\\n        // const outValue = response[outName];\\n        // graphData.dfe.fireOutput( nodeData, outName, outValue );\\n        graphData.dfe.fireOutput( nodeData, 'response', response );\\n      // } else {\\n      //   const ftn = nodeData.fileTypeName;\\n      //   const label = nodeData.label;\\n      //   console.warn( `Warning: in ${ftn}:${label} output field ${outName} is not represented in the output` );\\n      }\\n    // }\\n  });\\n}\\n\",\"fileTypeName\":\"ROS Service\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":366,\"location\":\"27208.717 816.9649999999999\",\"editorPosition\":[-2132,477,672,781],\"group\":373},\n{\"label\":\"/Action_name\",\"category\":\"DataFlow_Component\",\"size\":\"378 80\",\"color\":\"CadetBlue\",\"in_\":[{\"portId\":\"rosServer\",\"name\":\"rosServer\"},{\"portId\":\"goal\",\"name\":\"goal\"}],\"out_\":[{\"portId\":\"feedback\",\"name\":\"feedback\"},{\"portId\":\"result\",\"name\":\"result\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"},{\"name\":\"actionType\",\"value\":\"your_package/YourActionType\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'rosServer' ) {\\n  const ros = value;\\n  graphData.dfe.set( nodeData, 'ros', ros );\\n} else if( name == 'goal' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  \\n  // Define the name of the ROS action you want to call\\n  const serverName  = nodeData.label.toLowerCase();\\n  const actionName = graphData.dfe.getProperty( nodeData, 'actionType', '' );\\n  \\n  // Create an action client for the specified action\\n  const actionClient = new ROSLIB.ActionClient({\\n    ros,\\n    serverName,\\n    actionName,\\n  });\\n  \\n  // Create an action goal\\n  const actionGoal = new ROSLIB.Goal({\\n    actionClient: actionClient,\\n    goalMessage: value,\\n  });\\n  \\n  // Listen for action feedback\\n  actionGoal.on('feedback', (feedbackMessage) => {\\n    console.log(`Action feedback received: ${JSON.stringify(feedbackMessage)}`);\\n  \\n    if( graphData.dfe.isOutput( nodeData, 'feedback' ) ) {\\n      graphData.dfe.fireOutput( nodeData, 'feedback', feedbackMessage );\\n    }\\n    // Process the feedback here\\n    // The structure and content of feedbackMessage depend on the specific action type\\n  });\\n  \\n  // Send the action goal\\n  actionGoal.on( 'result', (resultMessage) => {\\n    console.log(`Action result received: ${JSON.stringify(resultMessage)}`);\\n    // Process the response here\\n    // for( const outName in resultMessage ) {\\n    //   if( graphData.dfe.isOutput( nodeData, outName ) ) {\\n    if( graphData.dfe.isOutput( nodeData, 'result' ) ) {\\n      // const outValue = resultMessage[outName];\\n      // graphData.dfe.fireOutput( nodeData, outName, outValue );\\n      graphData.dfe.fireOutput( nodeData, 'result', resultMessage );\\n    \\n      // } else {\\n      //   const ftn = nodeData.fileTypeName;\\n      //   const label = nodeData.label;\\n      //   console.warn( `Warning: in ${ftn}:${label} output field ${outName} is not represented in the output` );\\n    }\\n  // }\\n  });\\n  \\n  // Send the action goal and listen for feedback\\n  actionGoal.send();\\n}\\n\",\"fileTypeName\":\"ROS Action\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":367,\"location\":\"27198.717 996.9649999999999\",\"group\":373},\n{\"label\":\"History\",\"category\":\"DataFlow_DataSend\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Restore\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"text\\\": \\\"(silence)\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Since we're all here for a delightful evening, I'm keen to suggest we make a classic Italian pizza together, what do you think?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"A classic Italian pizza sounds marvelous, Bob; I'm in, and just a heads up, I'm not great with spicy toppings!\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'm thinking of making a Margherita pizza\\u2014how does that sound, keeping it simple and classic for us?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Margherita sounds perfect, and maybe we can add some chocolate dessert at the end?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"A touch of homemade basil from my garden would be a delightful addition to our Margherita pizza, and for dessert, how about we try making a batch of classic chocolate truffles?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Those chocolate truffles sound decadent, Bob, and I'm also curious\\u2014Alex, since you're our host, do you have any favorite dishes you'd like to share with us?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Alex, do you fancy a specific theme for tonight's setting, perhaps some Italian music to complement our meal preparation?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"The Margherita pizza and classic chocolate truffles sound delightful; I'll set the table with some tech-inspired decor and play Vivaldi to complement our Italian theme, shall we?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Vivaldi's melodies will pair wonderfully with our Italian night\\u2014shall we start with the pizza dough?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Before we begin, do we have flour, yeast, olive oil, tomatoes, mozzarella, and my fresh basil for the pizza and cream, dark chocolate, and cocoa powder for the truffles?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Got the flour, yeast, and olive oil; who can bring the tomatoes, mozzarella, and basil?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"(silence)\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I can swing by the market for the tomatoes, mozzarella, and basil\\u2014Alex, could you check if you've got cream and dark chocolate stashed somewhere for the truffles?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"No worries, Bob, I've got cream and dark chocolate in the pantry for our truffles.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Great, Alex, could you please set out the cream and dark chocolate on the counter so we can start with the truffles as the dough rises?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Cream and dark chocolate are ready on the counter, and I'll check for cocoa powder now; do we need anything else for the truffles?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Alex, do we have any cocoa powder or an alternative like instant espresso that could give our truffles a distinct flavor twist?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alex\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I found the cocoa powder for the truffles, and since we're avoiding spicy, perhaps we can use the instant espresso as a less intense but flavorful twist?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"With cocoa powder and instant espresso at hand, we've got all we need for unique truffles; shall we preheat the oven for the pizza dough next?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'll preheat the oven to 475\\u00b0F for the pizza dough while we begin assembling the truffles.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"While the oven heats up, let's start by mixing the truffle ingredients \\u2013 Alice, could you please combine the heavy cream and chopped dark chocolate and heat them gently?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'll start by gently heating the cream and adding the chopped chocolate to make a smooth mixture for our truffles.\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Alice, as you handle the chocolate and cream fusion, I'm setting up the dough station with our ingredients \\u2013 let's synchronize so that the dough can rest while we shape the truffles.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Bob, while you and Alex handle the truffle mixture, I'll start preparing the pizza dough on the side.\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Alex, could you grab some olive oil and salt for the dough, and Alice, once the truffle mixture is smooth, could you chill it in the fridge so we can start shaping them in a bit?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"The truffle mixture is now chilling; let's get the pizza dough started, can you guide me through the steps?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Absolutely, Alice, let's start with the pizza dough by mixing the flour, yeast, a pinch of salt, some olive oil, and warm water until it forms a soft, pliable ball.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alice\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Okay, I'll mix the dough ingredients in a large bowl until it's ready for kneading.\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Great work, Alice, once you've finished kneading the dough, could you let it rest covered for about half an hour while we shape the truffles?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alice\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"The dough is now resting, so let's start shaping the truffles; could you show me how to do it?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Sure Alice, to shape the truffles, we'll use a melon baller or a teaspoon to scoop chilled chocolate mixture, then quickly roll it into balls with our hands before dusting them with cocoa powder or dipping them in melted chocolate.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"Alice\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I've rolled the truffles in cocoa and they're set to chill; should we check on the dough's rise or prep the toppings next?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Great, let's check the dough's rise and if it's doubled in size, we can start prepping our toppings \\u2013 slicing the mozzarella and picking fresh basil leaves.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"The dough has definitely doubled, so I'll start slicing the mozzarella while you could pick the basil leaves, Bob.\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"Bob\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Alice, that's perfect; I'm picking the basil now, and then let's assemble our pizza toppings before we bake it.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"While I slice the mozzarella, who wants to spread the sauce on the dough?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'll spread the sauce on the dough and get it ready for the toppings, so we're all set to bake.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"As the sauce settles on the dough, I can't wait to taste our creation\\u2014shall we bake the pizza first, then enjoy the truffles after?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Let's bake the pizza, and once it's delightfully golden, we'll sit down and savor every bite before indulging in the truffles for a sweet finale.\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"The aroma is inviting, and everything looks delicious; let's dig in and enjoy our handmade feast!\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Tonight's culinary adventure was quite exquisite, how about we plan a future evening focused on plant-based delicacies inspired by the botanical garden visit I mentioned earlier?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"The evening was splendid; how about we gather for a vegan cooking night next time, perhaps experimenting with some recipes inspired by the botanical garden's plants?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Pondering our culinary exploration, a vegan cook-off next round\\u2014imagine the dishes we could craft with those incredible botanicals!\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Let's set a date for that vegan cook-off; I'm eager to experiment with what we can create from the inspiration at the botanical garden!\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":365,\"location\":\"25360 -2060\",\"doCompute\":\"DataFlow_DataSend\"},\n{\"label\":\"ROS Bridge\",\"category\":\"DataFlow_Component\",\"size\":\"310 80\",\"color\":\"Aquamarine\",\"in_\":[{\"portId\":\"doConnect\",\"name\":\"doConnect\"}],\"out_\":[{\"portId\":\"status\",\"name\":\"status\"},{\"portId\":\"rosServer\",\"name\":\"rosServer\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"rosServerURL\",\"value\":\"ws://172.26.1.108:9090\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doConnect' ) {\\n  let isRosConnected = true;\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  if( !ros ) {\\n    const rosServerURL = graphData.dfe.getProperty( nodeData, 'rosServerURL', '' );\\n    if( rosServerURL ) {\\n      // Connect to the ROS Bridge WebSocket server\\n      const ros = new ROSLIB.Ros({\\n        url: rosServerURL, // The WebSocket connection URL to your ROS Bridge server\\n      });\\n      graphData.dfe.set( nodeData, 'ros', ros );\\n      \\n      // This function is called upon a successful connection to ROS\\n      ros.on('connection', function() {\\n        const msg = 'Connected to ROS websocket server.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n      \\n      // This function is called if the connection to ROS is closed\\n      ros.on('close', function() {\\n        const msg = 'Connection to ROS websocket server closed.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n        graphData.dfe.set( nodeData, 'ros', null );\\n      });\\n      \\n      // This function is called if there's an error in the connection to ROS\\n      ros.on('error', function(error) {\\n        isRosConnected = false;\\n        const msg = 'Error connecting to ROS websocket server: '+error;\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n    } else {\\n      isRosConnected = false;\\n      graphData.dfe.fireOutput( nodeData, 'status', 'Error: rosServerURL not defined in properties' );\\n    }\\n  }\\n  \\n  if( isRosConnected ) {\\n    graphData.dfe.fireOutput( nodeData, 'rosServer', ros );\\n  }\\n}\",\"fileTypeName\":\"ROS Server\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":371,\"location\":\"25540 1610\"},\n{\"label\":\"/robot_speech_output\",\"category\":\"DataFlow_Component\",\"size\":\"310 80\",\"color\":\"LightCyan\",\"in_\":[{\"portId\":\"rosServer\",\"name\":\"rosServer\"},{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"dataType\",\"value\":\"std_msgs/String\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'rosServer' ) {\\n  const ros = value;\\n  graphData.dfe.set( nodeData, 'ros', ros );\\n  setSubscribeTopics( nodeData, ros );\\n} else if( name == 'in' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  const topicName = nodeData.label.toLowerCase();\\n  if( ros ) {\\n    const dataType = graphData.dfe.getProperty( nodeData, 'dataType', 'std_msgs/String' );\\n    // Define a ROS publisher.\\n    const topic = new ROSLIB.Topic({\\n      ros: ros,\\n      name: topicName,\\n      messageType: dataType,\\n    });\\n  \\n    let outValue = value;\\n    try {\\n      outValue = JSON.stringify( value );\\n    } catch ( e ) {}\\n    // Define a ROS message.\\n    const message = new ROSLIB.Message({\\n      data: outValue,\\n    });\\n  \\n    // Publish the message.\\n    topic.publish( message );\\n  }\\n}\\nfunction setSubscribeTopics( nodeData, ros ) {\\n  if( graphData.dfe.isInput( nodeData, 'out' ) ) {\\n    const topicName = nodeData.label.toLowerCase();\\n    const dataType = graphData.dfe.getProperty( nodeData, 'dataType', 'std_msgs/String' );\\n    \\n    // Create a new ROSLIB.Topic object to subscribe to a ROS topic\\n    const topic = new ROSLIB.Topic({\\n      ros: ros, // The ROSLIB.Ros connection handle\\n      name: topicName, // The name of the topic to subscribe to\\n      messageType: dataType, // The message type of the topic\\n    });\\n    \\n    // Define a callback function to handle received messages\\n    const onMessageReceived = ( message )=> {\\n      console.log('Received message on ' + topic.name + ': ' + message.data );\\n      let outValue = message.data;\\n      try {\\n        outValue = JSON.parse( message.data );\\n      } catch( e ) {}\\n      graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n    }\\n    \\n    // Subscribe to the topic with the callback\\n    topic.subscribe( onMessageReceived );\\n  }\\n}\\n\",\"fileTypeName\":\"ROS Topic\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":372,\"location\":\"26310 1840\",\"editorPosition\":[-2237,354,689,841]},\n{\"label\":\"Test Chao\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 100\",\"key\":375,\"location\":\"25190 1490\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":377,\"location\":\"25290 1610\"},\n{\"label\":\"Topic to send a TTS\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"440 30\",\"key\":379,\"location\":\"26250 1740\"},\n{\"label\":\"/robot_speech_output_end\",\"category\":\"DataFlow_Component\",\"size\":\"310 80\",\"color\":\"LightCyan\",\"in_\":[{\"portId\":\"rosServer\",\"name\":\"rosServer\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"dataType\",\"value\":\"std_msgs/String\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'rosServer' ) {\\n  const ros = value;\\n  graphData.dfe.set( nodeData, 'ros', ros );\\n  setSubscribeTopics( nodeData, ros );\\n} else if( name == 'in' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  const topicName = nodeData.label.toLowerCase();\\n  if( ros ) {\\n    const dataType = graphData.dfe.getProperty( nodeData, 'dataType', 'std_msgs/String' );\\n    // Define a ROS publisher.\\n    const topic = new ROSLIB.Topic({\\n      ros: ros,\\n      name: topicName,\\n      messageType: dataType,\\n    });\\n  \\n    let outValue = value;\\n    try {\\n      outValue = JSON.stringify( value );\\n    } catch ( e ) {}\\n    // Define a ROS message.\\n    const message = new ROSLIB.Message({\\n      data: outValue,\\n    });\\n  \\n    // Publish the message.\\n    topic.publish( message );\\n  }\\n}\\nfunction setSubscribeTopics( nodeData, ros ) {\\n  if( graphData.dfe.isInput( nodeData, 'out' ) ) {\\n    const topicName = nodeData.label.toLowerCase();\\n    const dataType = graphData.dfe.getProperty( nodeData, 'dataType', 'std_msgs/String' );\\n    \\n    // Create a new ROSLIB.Topic object to subscribe to a ROS topic\\n    const topic = new ROSLIB.Topic({\\n      ros: ros, // The ROSLIB.Ros connection handle\\n      name: topicName, // The name of the topic to subscribe to\\n      messageType: dataType, // The message type of the topic\\n    });\\n    \\n    // Define a callback function to handle received messages\\n    const onMessageReceived = ( message )=> {\\n      console.log('Received message on ' + topic.name + ': ' + message.data );\\n      let outValue = message.data;\\n      try {\\n        outValue = JSON.parse( message.data );\\n      } catch( e ) {}\\n      graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n    }\\n    \\n    // Subscribe to the topic with the callback\\n    topic.subscribe( onMessageReceived );\\n  }\\n}\\n\",\"fileTypeName\":\"ROS Topic\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":383,\"location\":\"26300 1990\",\"editorPosition\":[-2237,354,689,841]},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"370 230\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":385,\"location\":\"26730 1990\"},\n{\"label\":\"Speech\",\"category\":\"DataFlow_Data\",\"size\":\"190 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"speech\\\": \\\"Please work like we want!\\\"\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":387,\"location\":\"25830 1840\"},\n{\"label\":\"Speech\",\"category\":\"DataFlow_Data\",\"size\":\"190 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a string\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a string\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Please work like we want! for service\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":396,\"location\":\"25890 2720\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"370 260\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":397,\"location\":\"26790 2710\"},\n{\"label\":\"Service to send a TTS\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"480 30\",\"key\":399,\"location\":\"26250 2620\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":400,\"location\":\"25290 2490\"},\n{\"label\":\"Test Chao 2 (Direct to TTS)\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1860 120\",\"key\":401,\"location\":\"25190 2360\"},\n{\"label\":\"ROS Bridge\",\"category\":\"DataFlow_Component\",\"size\":\"310 80\",\"color\":\"Aquamarine\",\"in_\":[{\"portId\":\"doConnect\",\"name\":\"doConnect\"}],\"out_\":[{\"portId\":\"status\",\"name\":\"status\"},{\"portId\":\"rosServer\",\"name\":\"rosServer\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"rosServerURL\",\"value\":\"ws://172.26.1.108:9090\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doConnect' ) {\\n  let isRosConnected = true;\\n  let ros = graphData.dfe.get( nodeData, 'ros', null );\\n  if( !ros ) {\\n    const rosServerURL = graphData.dfe.getProperty( nodeData, 'rosServerURL', '' );\\n    if( rosServerURL ) {\\n      // Connect to the ROS Bridge WebSocket server\\n      ros = new ROSLIB.Ros({\\n        url: rosServerURL, // The WebSocket connection URL to your ROS Bridge server\\n      });\\n      graphData.dfe.set( nodeData, 'ros', ros );\\n      \\n      // This function is called upon a successful connection to ROS\\n      ros.on('connection', function() {\\n        const msg = 'Connected to ROS websocket server.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n      \\n      // This function is called if the connection to ROS is closed\\n      ros.on('close', function() {\\n        const msg = 'Connection to ROS websocket server closed.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n        graphData.dfe.set( nodeData, 'ros', null );\\n      });\\n      \\n      // This function is called if there's an error in the connection to ROS\\n      ros.on('error', function(error) {\\n        isRosConnected = false;\\n        const msg = 'Error connecting to ROS websocket server: '+error;\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n    } else {\\n      isRosConnected = false;\\n      graphData.dfe.fireOutput( nodeData, 'status', 'Error: rosServerURL not defined in properties' );\\n    }\\n  }\\n  \\n  if( isRosConnected ) {\\n    graphData.dfe.fireOutput( nodeData, 'rosServer', ros );\\n  }\\n}\",\"fileTypeName\":\"ROS Server\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":403,\"location\":\"25540 2490\",\"editorPosition\":[2661,367,740,704]},\n{\"label\":\"/speak\",\"category\":\"DataFlow_Component\",\"size\":\"378 80\",\"color\":\"LightSteelBlue\",\"in_\":[{\"portId\":\"rosServer\",\"name\":\"rosServer\"},{\"portId\":\"arguments\",\"name\":\"arguments\"}],\"out_\":[{\"portId\":\"response\",\"name\":\"response\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"arguments\",\"valueChanged\":\"true\"},{\"name\":\"serviceType\",\"value\":\"hri_tts_msgs.srv.Speak\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'rosServer' ) {\\n  const ros = value;\\n  graphData.dfe.set( nodeData, 'ros', ros );\\n} else if( name == 'arguments' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  \\n  // Define the name of the ROS service you want to call\\n  const serviceName = nodeData.label.toLowerCase(); // Replace with your desired service name\\n  const serviceType = graphData.dfe.getProperty( nodeData, 'serviceType', '' );\\n  \\n  // Create a service client for the specified service\\n  const serviceClient = new ROSLIB.Service({\\n    ros,\\n    name: serviceName,\\n    serviceType,\\n  });\\n  \\n  // Define argumments\\n  const argList = graphData.dfe.getInput( nodeData, 'arguments', '' );\\n  // const argList = {};\\n  // const inputNameList = graphData.dfe.getInputNameList( nodeData );\\n  // for( const inputName of inputNameList ) {\\n  //   if( inputName != 'rosServer' ) {\\n  //     argList[inputName] = graphData.dfe.getInput( nodeData, inputName, '' );\\n  //   }\\n  // }\\n  // Define the service request\\n  const request = new ROSLIB.ServiceRequest( argList );\\n\\n  // Call the service with the request\\n  serviceClient.callService( request, (response) => {\\n    console.log(`Service response received: ${JSON.stringify(response)}`);\\n    \\n    // Process the response here\\n    // for( const outName in response ) {\\n      // if( graphData.dfe.isOutput( nodeData, outName ) ) {\\n      if( graphData.dfe.isOutput( nodeData, 'response' ) ) {\\n        // const outValue = response[outName];\\n        // graphData.dfe.fireOutput( nodeData, outName, outValue );\\n        graphData.dfe.fireOutput( nodeData, 'response', response );\\n      // } else {\\n      //   const ftn = nodeData.fileTypeName;\\n      //   const label = nodeData.label;\\n      //   console.warn( `Warning: in ${ftn}:${label} output field ${outName} is not represented in the output` );\\n      }\\n    // }\\n  });\\n}\\n\",\"fileTypeName\":\"ROS Service\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":405,\"location\":\"26260 2710\",\"editorPosition\":[2624,33,695,766]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":407,\"location\":\"25560 1840\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":409,\"location\":\"25680 2720\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"960 60\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":411,\"location\":\"26000 2480\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"370 60\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":369,\"location\":\"26000 1600\"},\n{\"label\":\"ROS Bridge Template\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 100\",\"key\":370,\"location\":\"26498.717 -43.03500000000008\",\"group\":373},\n{\"label\":\"Group New\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":373,\"location\":\"26420.000203125 471.6604345703124\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"580 380\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":384,\"location\":\"28720 2740\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"receiver\\\": \\\"All\\\",\\n  \\\"sender\\\": \\\"Nobody\\\",\\n  \\\"text\\\": \\\" Okay how are you\\\"\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":386,\"location\":\"28720 2480\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"980 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":388,\"location\":\"29010 2390\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":389,\"location\":\"28040 2410\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"330 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"clear\",\"name\":\"clear\"},{\"portId\":\"init\",\"name\":\"init\"},{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"dialog\",\"name\":\"dialog\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Frank, url: ~/user2.png }\\n- { name: Antonio, url: ~/user1.png }\\n- { name: Robo, url: ~/robot.png }\\n- { name: Michael, url: ~/user3.png }\\n- { name: Nobody, url: ~/user3.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"history\":[],\"key\":390,\"location\":\"29020 2470\",\"editorPosition\":[75,53,400,696]},\n{\"label\":\"ROS Bridge\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"doConnect\",\"name\":\"doConnect\"},{\"portId\":\"pubTopic\",\"name\":\"pubTopic\"}],\"out_\":[{\"portId\":\"status\",\"name\":\"status\"},{\"portId\":\"subEvent_Speech\",\"name\":\"subEvent_Speech\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"rosServerURL\",\"value\":\"ws://172.26.1.108:9090\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doConnect' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  if( !ros ) {\\n    const rosServerURL = graphData.dfe.getProperty( nodeData, 'rosServerURL', '' );\\n    if( rosServerURL ) {\\n      // Connect to the ROS Bridge WebSocket server\\n      const ros = new ROSLIB.Ros({\\n        url: rosServerURL, // The WebSocket connection URL to your ROS Bridge server\\n      });\\n      graphData.dfe.set( nodeData, 'ros', ros );\\n      \\n      // This function is called upon a successful connection to ROS\\n      ros.on('connection', function() {\\n        const msg = 'Connected to ROS websocket server.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n        \\n        setSubscribeTopics( nodeData, ros );\\n      });\\n      \\n      // This function is called if the connection to ROS is closed\\n      ros.on('close', function() {\\n        const msg = 'Connection to ROS websocket server closed.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n        graphData.dfe.set( nodeData, 'ros', null );\\n      });\\n      \\n      // This function is called if there's an error in the connection to ROS\\n      ros.on('error', function(error) {\\n        const msg = 'Error connecting to ROS websocket server: '+error;\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n    } else {\\n      graphData.dfe.fireOutput( nodeData, 'status', 'Error: rosServerURL not defined in properties' );\\n    }\\n  }\\n} else {\\n  if( name.startsWith( 'pub' ) ) {\\n    const topicName = '/'+name.substring( 3 ).toLowerCase();\\n    const ros = graphData.dfe.get( nodeData, 'ros', null );\\n    if( ros ) {\\n      // Define a ROS publisher.\\n      const topic = new ROSLIB.Topic({\\n        ros: ros,\\n        name: topicName,\\n        messageType: 'std_msgs/String',\\n      });\\n    \\n      const outValue = JSON.stringify( value );\\n      // Define a ROS message.\\n      const message = new ROSLIB.Message({\\n        data: outValue,\\n      });\\n    \\n      // Publish the message.\\n      topic.publish( message );\\n    }\\n    \\n  }\\n}\\nfunction setSubscribeTopics( nodeData, ros ) {\\n  const outputNameList = graphData.dfe.getOutputNameList( nodeData );\\n  for( const outputName of outputNameList ) {\\n    if( outputName.startsWith( 'sub' ) ) {\\n      const topicName = '/'+outputName.substring( 3 ).toLowerCase();\\n      \\n      // Create a new ROSLIB.Topic object to subscribe to a ROS topic\\n      const topic = new ROSLIB.Topic({\\n        ros: ros, // The ROSLIB.Ros connection handle\\n        name: topicName, // The name of the topic to subscribe to\\n        messageType: 'std_msgs/String', // The message type of the topic\\n      });\\n      \\n      // Define a callback function to handle received messages\\n      const onMessageReceived = ( message )=> {\\n        console.log('Received message on ' + topic.name + ': ' + message.data );\\n        const outValue = JSON.parse( message.data );\\n        graphData.dfe.fireOutput( nodeData, outputName, outValue );\\n      }\\n      \\n      // Subscribe to the topic with the callback\\n      topic.subscribe( onMessageReceived );\\n    }\\n  }\\n}\\n\",\"fileTypeName\":\"ROS Bridge\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":391,\"location\":\"28280 2420\",\"editorPosition\":[-3297,339,745,736]},\n{\"label\":\"Hear from Michael System\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 100\",\"key\":393,\"location\":\"28100 1430\"},\n{\"label\":\"Hear from Frankonello System\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 100\",\"key\":395,\"location\":\"28030 2280\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"910 60\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":368,\"location\":\"28730 3090\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":374,\"location\":\"28020 3100\"},\n{\"label\":\"ROS Bridge\",\"category\":\"DataFlow_Component\",\"size\":\"310 80\",\"color\":\"Aquamarine\",\"in_\":[{\"portId\":\"doConnect\",\"name\":\"doConnect\"}],\"out_\":[{\"portId\":\"status\",\"name\":\"status\"},{\"portId\":\"rosServer\",\"name\":\"rosServer\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"rosServerURL\",\"value\":\"ws://172.26.1.108:9090\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doConnect' ) {\\n  let isRosConnected = true;\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  if( !ros ) {\\n    const rosServerURL = graphData.dfe.getProperty( nodeData, 'rosServerURL', '' );\\n    if( rosServerURL ) {\\n      // Connect to the ROS Bridge WebSocket server\\n      const ros = new ROSLIB.Ros({\\n        url: rosServerURL, // The WebSocket connection URL to your ROS Bridge server\\n      });\\n      graphData.dfe.set( nodeData, 'ros', ros );\\n      \\n      // This function is called upon a successful connection to ROS\\n      ros.on('connection', function() {\\n        const msg = 'Connected to ROS websocket server.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n      \\n      // This function is called if the connection to ROS is closed\\n      ros.on('close', function() {\\n        const msg = 'Connection to ROS websocket server closed.';\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n        graphData.dfe.set( nodeData, 'ros', null );\\n      });\\n      \\n      // This function is called if there's an error in the connection to ROS\\n      ros.on('error', function(error) {\\n        isRosConnected = false;\\n        const msg = 'Error connecting to ROS websocket server: '+error;\\n        console.log( msg );\\n        graphData.dfe.fireOutput( nodeData, 'status', msg );\\n      });\\n    } else {\\n      isRosConnected = false;\\n      graphData.dfe.fireOutput( nodeData, 'status', 'Error: rosServerURL not defined in properties' );\\n    }\\n  }\\n  \\n  if( isRosConnected ) {\\n    graphData.dfe.fireOutput( nodeData, 'rosServer', ros );\\n  }\\n}\",\"fileTypeName\":\"ROS Server\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":376,\"location\":\"28270 3100\"},\n{\"label\":\"/event_speech\",\"category\":\"DataFlow_Component\",\"size\":\"310 80\",\"color\":\"LightCyan\",\"in_\":[{\"portId\":\"rosServer\",\"name\":\"rosServer\"},{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"dataType\",\"value\":\"std_msgs/String\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'rosServer' ) {\\n  const ros = value;\\n  graphData.dfe.set( nodeData, 'ros', ros );\\n  setSubscribeTopics( nodeData, ros );\\n} else if( name == 'in' ) {\\n  const ros = graphData.dfe.get( nodeData, 'ros', null );\\n  const topicName = nodeData.label.toLowerCase();\\n  if( ros ) {\\n    const dataType = graphData.dfe.getProperty( nodeData, 'dataType', 'std_msgs/String' );\\n    // Define a ROS publisher.\\n    const topic = new ROSLIB.Topic({\\n      ros: ros,\\n      name: topicName,\\n      messageType: dataType,\\n    });\\n  \\n    let outValue = value;\\n    try {\\n      outValue = JSON.stringify( value );\\n    } catch ( e ) {}\\n    // Define a ROS message.\\n    const message = new ROSLIB.Message({\\n      data: outValue,\\n    });\\n  \\n    // Publish the message.\\n    topic.publish( message );\\n  }\\n}\\nfunction setSubscribeTopics( nodeData, ros ) {\\n  if( graphData.dfe.isInput( nodeData, 'out' ) ) {\\n    const topicName = nodeData.label.toLowerCase();\\n    const dataType = graphData.dfe.getProperty( nodeData, 'dataType', 'std_msgs/String' );\\n    \\n    // Create a new ROSLIB.Topic object to subscribe to a ROS topic\\n    const topic = new ROSLIB.Topic({\\n      ros: ros, // The ROSLIB.Ros connection handle\\n      name: topicName, // The name of the topic to subscribe to\\n      messageType: dataType, // The message type of the topic\\n    });\\n    \\n    // Define a callback function to handle received messages\\n    const onMessageReceived = ( message )=> {\\n      console.log('Received message on ' + topic.name + ': ' + message.data );\\n      let outValue = message.data;\\n      try {\\n        outValue = JSON.parse( message.data );\\n      } catch( e ) {}\\n      graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n    }\\n    \\n    // Subscribe to the topic with the callback\\n    topic.subscribe( onMessageReceived );\\n  }\\n}\\n\",\"fileTypeName\":\"ROS Topic\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":378,\"location\":\"28830 3230\",\"editorPosition\":[1887,387,719,840]},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"580 380\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":380,\"location\":\"29270 3560\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\",\"tooltip\":\"this input expects a JSON object or array\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\",\"tooltip\":\"this output is a JSON object or array\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"receiver\\\": \\\"All\\\",\\n  \\\"sender\\\": \\\"Nobody\\\",\\n  \\\"text\\\": \\\" And isn't that a little bit too nice and I think this.\\\"\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":381,\"location\":\"29260 3230\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"330 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"clear\",\"name\":\"clear\"},{\"portId\":\"init\",\"name\":\"init\"},{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"dialog\",\"name\":\"dialog\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Frank, url: ~/user2.png }\\n- { name: Antonio, url: ~/user1.png }\\n- { name: Robo, url: ~/robot.png }\\n- { name: Michael, url: ~/user3.png }\\n- { name: Nobody, url: ~/user3.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"history\":[],\"key\":382,\"location\":\"29560 3220\",\"editorPosition\":[2125,387,491,774]},\n{\"label\":\"Send Goal Message\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'in' ) {\\n  const lastGoal = graphData.dfe.get( nodeData, 'lastGoal', null );\\n  const goal = value.goal.toLowerCase();\\n  if( lastGoal != goal ) {\\n    graphData.dfe.set( nodeData, 'lastGoal', goal );\\n    const outValue = {\\n      sender: '_Goal',\\n      receiver: 'All',\\n      text: `Lets change our topic and discuss about ${goal}`,\\n    }\\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n    \\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":394,\"location\":\"20110 -1200.1999999999998\",\"group\":291},\n{\"label\":\"{\\n  \\\"sender\\\": \\\"_Goal\\\",\\n  \\\"receiver\\\": \\\"All\\\",\\n  \\\"text\\\": \\\"Lets change our topic and discuss about ingredient check\\\"\\n}\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1140 390\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":402,\"location\":\"20520 -585\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlex\",\"toPort\":\"factList\",\"from\":24,\"to\":73,\"points\":[41983.0205078125,-13180.300000000001,41993.0205078125,-13180.300000000001,42390,-13180,42390,-12290,35490,-12290,35490,-13530,35574.6484375,-13530,35584.6484375,-13530],\"key\":-2},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"clear\",\"from\":20,\"to\":2,\"points\":[36780.4619140625,-14240,36790.4619140625,-14240,37110,-14240,37580,-13190,37600.517578125,-13190.1,37610.517578125,-13190.1],\"key\":-13},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":12,\"to\":23,\"points\":[36414.0205078125,-13590,36424.0205078125,-13590,36538.103515625,-13590.1,36548.103515625,-13590.1],\"key\":-14},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":23,\"to\":127,\"points\":[36860.4619140625,-13590.1,36870.4619140625,-13590.1,37050,-13590,37050,-13190,37107.1455078125,-13180,37117.1455078125,-13180],\"key\":-15},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":28,\"to\":27,\"points\":[36424.0205078125,-13080,36434.0205078125,-13080,36548.103515625,-13069.045,36558.103515625,-13069.045],\"key\":-16},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":32,\"to\":33,\"points\":[36414.0205078125,-12537.891,36424.0205078125,-12537.891,36538.103515625,-12537.991,36548.103515625,-12537.991],\"key\":-21},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":27,\"to\":127,\"points\":[36870.4619140625,-13069.045,36880.4619140625,-13069.045,37050,-13070,37050,-13180,37107.1455078125,-13180,37117.1455078125,-13180],\"key\":-24},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":33,\"to\":127,\"points\":[36860.4619140625,-12537.991,36870.4619140625,-12537.991,37060,-12540,37060,-13170,37107.1455078125,-13180,37117.1455078125,-13180],\"key\":-25},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toBob\",\"toPort\":\"factList\",\"from\":24,\"to\":75,\"points\":[41983.0205078125,-13160.300000000001,41993.0205078125,-13160.300000000001,42380,-13160,42380,-12300,35500,-12300,35500,-13020,35574.6484375,-13020,35584.6484375,-13020],\"key\":-28},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlice\",\"toPort\":\"factList\",\"from\":24,\"to\":76,\"points\":[41983.0205078125,-13140.300000000001,41993.0205078125,-13140.300000000001,42370,-13140,42370,-12310,35510,-12310,35510,-12480,35574.6484375,-12477.991,35584.6484375,-12477.991],\"key\":-29},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":20,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34550,-14240,36458.103515625,-14240,36468.103515625,-14240],\"key\":-30},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":37,\"to\":39,\"points\":[22550.4619140625,-4110,22560.4619140625,-4110,22618.103515625,-4110,22628.103515625,-4110],\"key\":-31},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":38,\"to\":37,\"points\":[22110.999999971584,-4109.929029836505,22197.103515625,-4109.9,22198.103515625,-4110,22208.103515625,-4110],\"key\":-32},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":45,\"to\":43,\"points\":[34890.4619140625,-13690,34900.4619140625,-13690,34989.73828125,-13620,34999.73828125,-13620],\"key\":-35},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":43,\"points\":[34870.4619140625,-14140,34880.4619140625,-14140,34989.73828125,-13640,34999.73828125,-13640],\"key\":-36},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":49,\"to\":43,\"points\":[34890.4619140625,-13470,34900.4619140625,-13470,34989.73828125,-13580,34999.73828125,-13580],\"key\":-37},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":54,\"to\":43,\"points\":[34890.4619140625,-13590,34900.4619140625,-13590,34989.73828125,-13600,34999.73828125,-13600],\"key\":-39},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":43,\"to\":12,\"points\":[35370.4619140625,-13610,35380.4619140625,-13610,36014.662109375,-13610,36024.662109375,-13610],\"key\":-40},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":55,\"to\":58,\"points\":[34902.3579140625,-13056.836,34912.3579140625,-13056.836,35001.63428125,-13076.936,35011.63428125,-13076.936],\"key\":-38},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":56,\"to\":58,\"points\":[34902.3579140625,-12936.836,34912.3579140625,-12936.836,35001.63428125,-13056.936,35011.63428125,-13056.936],\"key\":-41},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":57,\"to\":58,\"points\":[34902.3579140625,-13156.836,34912.3579140625,-13156.836,35001.63428125,-13096.936,35011.63428125,-13096.936],\"key\":-42},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":59,\"to\":62,\"points\":[34872.3579140625,-12527.891,34882.3579140625,-12527.891,34971.63428125,-12547.991,34981.63428125,-12547.991],\"key\":-43},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":60,\"to\":62,\"points\":[34872.3579140625,-12407.891,34882.3579140625,-12407.891,34971.63428125,-12527.991,34981.63428125,-12527.991],\"key\":-44},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":61,\"to\":62,\"points\":[34872.3579140625,-12627.891,34882.3579140625,-12627.891,34971.63428125,-12567.991,34981.63428125,-12567.991],\"key\":-45},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":58,\"points\":[34870.4619140625,-14140,34880.4619140625,-14140,35001.63428125,-13116.936,35011.63428125,-13116.936],\"key\":-46},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":62,\"points\":[34870.4619140625,-14140,34880.4619140625,-14140,34971.63428125,-12587.991,34981.63428125,-12587.991],\"key\":-47},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":58,\"to\":28,\"points\":[35382.3579140625,-13086.936,35392.3579140625,-13086.936,36024.662109375,-13100,36034.662109375,-13100],\"key\":-48},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":62,\"to\":32,\"points\":[35352.3579140625,-12557.991,35362.3579140625,-12557.991,36014.662109375,-12557.891,36024.662109375,-12557.891],\"key\":-49},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":47,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34578.103515625,-14140,34588.103515625,-14140],\"key\":-50},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":45,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34598.103515625,-13690,34608.103515625,-13690],\"key\":-51},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":54,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34598.103515625,-13590,34608.103515625,-13590],\"key\":-52},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":49,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34598.103515625,-13470,34608.103515625,-13470],\"key\":-53},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":57,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34609.999515625,-13156.836,34619.999515625,-13156.836],\"key\":-54},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":55,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34609.999515625,-13056.836,34619.999515625,-13056.836],\"key\":-55},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":56,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34609.999515625,-12936.836,34619.999515625,-12936.836],\"key\":-56},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":61,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34579.999515625,-12627.891,34589.999515625,-12627.891],\"key\":-57},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":59,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34579.999515625,-12527.891,34589.999515625,-12527.891],\"key\":-58},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":60,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34579.999515625,-12407.891,34589.999515625,-12407.891],\"key\":-59},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":53,\"to\":63,\"points\":[38400.4619140625,-13650,38410.4619140625,-13650,38458.103515625,-13650,38468.103515625,-13650],\"key\":-61},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"reset\",\"from\":63,\"to\":42,\"points\":[38780.4619140625,-13650,38790.4619140625,-13650,39560,-13650,39900,-13130,39917.8759765625,-13130,39927.8759765625,-13130],\"key\":-60,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":2,\"to\":68,\"points\":[38210.3720703125,-13170.1,38220.3720703125,-13170.1,38240,-13150,39520.3935546875,-13140,39530.3935546875,-13140],\"key\":-70},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":68,\"to\":42,\"points\":[39910.4619140625,-13110,39920.4619140625,-13110,39917.8759765625,-13110,39927.8759765625,-13110],\"key\":-67,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":77,\"to\":81,\"points\":[33600.4619140625,-4070,33610.4619140625,-4070,33628.103515625,-4080,33638.103515625,-4080],\"key\":-76},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":73,\"to\":12,\"points\":[35930.4619140625,-13530,35940.4619140625,-13530,36014.662109375,-13590,36024.662109375,-13590],\"key\":-62},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":75,\"to\":28,\"points\":[35930.4619140625,-13020,35940.4619140625,-13020,36024.662109375,-13080,36034.662109375,-13080],\"key\":-63},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":76,\"to\":32,\"points\":[35930.4619140625,-12477.991,35940.4619140625,-12477.991,36014.662109375,-12537.891,36024.662109375,-12537.891],\"key\":-64},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"nextSpeaker\",\"from\":89,\"to\":68,\"points\":[38649.6064453125,-13070,38659.6064453125,-13070,38690,-13060,39490,-13060,39520.3935546875,-13080,39530.3935546875,-13080],\"key\":-79},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":2,\"to\":89,\"points\":[38210.3720703125,-13170.1,38220.3720703125,-13170.1,38268.103515625,-13080,38278.103515625,-13080],\"key\":-66},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":96,\"to\":95,\"points\":[35119.8540703125,-8540,35129.8540703125,-8540,35157.585515625,-8560.2,35167.585515625,-8560.2],\"key\":-65},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"in\",\"from\":95,\"to\":98,\"points\":[35539.0884453125,-8550.2,35549.0884453125,-8550.2,35577.585515625,-8559.9,35587.585515625,-8559.9],\"key\":-71},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"nextSpeaker\",\"from\":95,\"to\":105,\"points\":[35539.0884453125,-8550.2,35549.0884453125,-8550.2,35610.3935546875,-8435,35620.3935546875,-8435],\"key\":-72},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toBob\",\"toPort\":\"in\",\"from\":105,\"to\":108,\"points\":[36023.0205078125,-8445,36033.0205078125,-8445,36068.103515625,-8535,36078.103515625,-8535],\"key\":-74},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"history\",\"from\":95,\"to\":105,\"points\":[35539.0884453125,-8570.2,35549.0884453125,-8570.2,35610.3935546875,-8455,35620.3935546875,-8455],\"key\":-80},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"clear\",\"from\":121,\"to\":96,\"points\":[34480.4619140625,-8425,34490.4619140625,-8425,34509.999578125,-8540,34519.999578125,-8540],\"key\":-81},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlex\",\"toPort\":\"in\",\"from\":105,\"to\":123,\"points\":[36023.0205078125,-8465,36033.0205078125,-8465,36068.103515625,-8805,36078.103515625,-8805],\"key\":-73},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlice\",\"toPort\":\"in\",\"from\":105,\"to\":125,\"points\":[36023.0205078125,-8425,36033.0205078125,-8425,36068.103515625,-8255,36078.103515625,-8255],\"key\":-77},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":126,\"to\":125,\"points\":[36000.4619140625,-8365,36010.4619140625,-8365,36068.103515625,-8255,36078.103515625,-8255],\"key\":-82,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":126,\"to\":108,\"points\":[36000.4619140625,-8365,36010.4619140625,-8365,36068.103515625,-8535,36078.103515625,-8535],\"key\":-83,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":126,\"to\":123,\"points\":[36000.4619140625,-8365,36010.4619140625,-8365,36068.103515625,-8805,36078.103515625,-8805],\"key\":-84,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":121,\"to\":126,\"points\":[34480.4619140625,-8425,34490.4619140625,-8425,35678.103515625,-8365,35688.103515625,-8365],\"key\":-85},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":126,\"to\":98,\"points\":[36000.4619140625,-8365,36010.4619140625,-8365,36030,-8235,35550,-8235,35577.585515625,-8559.9,35587.585515625,-8559.9],\"key\":-86,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"messageIn\",\"from\":127,\"to\":2,\"points\":[37570.3720703125,-13170,37580.3720703125,-13170,37600.517578125,-13170.1,37610.517578125,-13170.1],\"key\":-87},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"nextSpeaker\",\"from\":89,\"to\":24,\"points\":[38649.6064453125,-13070,38659.6064453125,-13070,38690,-13050,41490,-13050,41570.3935546875,-13150.300000000001,41580.3935546875,-13150.300000000001],\"key\":-89},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"onSpeechStop\",\"from\":107,\"to\":127,\"points\":[37050.4619140625,-13440,37060.4619140625,-13440,37107.1455078125,-13160,37117.1455078125,-13160],\"key\":-90},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"onStop\",\"from\":107,\"to\":68,\"points\":[37050.4619140625,-13440,37060.4619140625,-13440,39380,-13440,39520.3935546875,-13100,39530.3935546875,-13100],\"key\":-91},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"newMessage\",\"from\":109,\"to\":110,\"points\":[40600.4619140625,-13120,40610.4619140625,-13120,40616.5107421875,-13120,40626.5107421875,-13120],\"key\":-92},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":111,\"to\":106,\"points\":[34900.4619140625,-14330,34910.4619140625,-14330,40290,-14300,41074.662109375,-13240,41084.662109375,-13240],\"key\":-94},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":42,\"to\":109,\"points\":[40260.4619140625,-13120,40270.4619140625,-13120,40278.103515625,-13120,40288.103515625,-13120],\"key\":-95},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":111,\"points\":[34480.4619140625,-14141.200000000004,34490.4619140625,-14141.200000000004,34578.103515625,-14330,34588.103515625,-14330],\"key\":-96},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":106,\"to\":131,\"points\":[41474.0205078125,-13220,41484.0205078125,-13220,42488.103515625,-13240,42498.103515625,-13240],\"key\":-99},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":133,\"to\":132,\"points\":[35330.4619140625,-10290.1,35340.4619140625,-10290.1,35433.09432359999,-10247.077350743282,35443.09432359999,-10247.077350743282],\"key\":-100},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":135,\"to\":133,\"points\":[34980.4619140625,-10290,34990.4619140625,-10290,35008.103515625,-10290.1,35018.103515625,-10290.1],\"key\":-101},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":146,\"to\":142,\"points\":[34390.4619140625,-10210,34400.4619140625,-10210,34438.103515625,-10210,34448.103515625,-10210],\"key\":-103},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":148,\"to\":144,\"points\":[34390.4619140625,-9990,34400.4619140625,-9990,34438.103515625,-9990,34448.103515625,-9990],\"key\":-104},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":147,\"to\":143,\"points\":[34390.4619140625,-10100,34400.4619140625,-10100,34438.103515625,-10100,34448.103515625,-10100],\"key\":-105},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":143,\"to\":163,\"points\":[34660.4619140625,-10100,34670.4619140625,-10100,34768.103515625,-10100,34778.103515625,-10100],\"key\":-106},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":144,\"to\":163,\"points\":[34660.4619140625,-9990,34670.4619140625,-9990,34768.103515625,-10100,34778.103515625,-10100],\"key\":-107},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":132,\"to\":151,\"points\":[35832.45272203749,-10247.077350743282,35842.45272203749,-10247.077350743282,35888.103515625,-10330,35898.103515625,-10330],\"key\":-108},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":132,\"to\":154,\"points\":[35832.45272203749,-10227.077350743282,35842.45272203749,-10227.077350743282,35888.103515625,-9715,35898.103515625,-9715],\"key\":-109},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"newMessage\",\"from\":163,\"to\":157,\"points\":[34990.4619140625,-10100,35000.4619140625,-10100,35016.5107421875,-10100,35026.5107421875,-10100],\"key\":-102},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":142,\"to\":163,\"points\":[34660.4619140625,-10210,34670.4619140625,-10210,34768.103515625,-10100,34778.103515625,-10100],\"key\":-110},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"summary\",\"from\":132,\"to\":157,\"points\":[35832.45272203749,-10227.077350743282,35842.45272203749,-10227.077350743282,35840,-10180,35020,-10180,35016.5107421875,-10120,35026.5107421875,-10120],\"key\":-111},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":157,\"to\":132,\"points\":[35410.4619140625,-10110,35420.4619140625,-10110,35433.09432359999,-10227.077350743282,35443.09432359999,-10227.077350743282],\"key\":-112},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":110,\"to\":106,\"points\":[41010.4619140625,-13130,41020.4619140625,-13130,41074.662109375,-13220,41084.662109375,-13220],\"key\":-113},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":106,\"to\":130,\"points\":[41474.0205078125,-13220,41484.0205078125,-13220,41470,-13180,40370,-13180,40368.103515625,-13240.1,40378.103515625,-13240.1],\"key\":-114},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"history\",\"from\":106,\"to\":24,\"points\":[41474.0205078125,-13220,41484.0205078125,-13220,41570.3935546875,-13170.300000000001,41580.3935546875,-13170.300000000001],\"key\":-93},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":81,\"to\":85,\"points\":[33977.6962890625,-4070,33987.6962890625,-4070,34088.103515625,-2470,34098.103515625,-2470],\"key\":-115,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"shaKey\",\"toPort\":\"in\",\"from\":81,\"to\":128,\"points\":[33977.6962890625,-4090,33987.6962890625,-4090,34098.103515625,-4170,34108.103515625,-4170],\"key\":-116},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":89,\"to\":124,\"points\":[38649.6064453125,-13090,38659.6064453125,-13090,38828.103515625,-13210.1,38838.103515625,-13210.1],\"key\":-97,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"onStart\",\"toPort\":\"onStart\",\"from\":124,\"to\":68,\"points\":[39196.1376953125,-13220.1,39206.1376953125,-13220.1,39520.3935546875,-13120,39530.3935546875,-13120],\"key\":-98},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"onStop\",\"toPort\":\"onStop\",\"from\":124,\"to\":68,\"points\":[39196.1376953125,-13200.1,39206.1376953125,-13200.1,39520.3935546875,-13100,39530.3935546875,-13100],\"key\":-117},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"onStop\",\"toPort\":\"onSpeechStop\",\"from\":124,\"to\":127,\"points\":[39196.1376953125,-13200.1,39206.1376953125,-13200.1,39210,-13290,37100,-13290,37107.1455078125,-13160,37117.1455078125,-13160],\"key\":-118},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"factList\",\"from\":130,\"to\":110,\"points\":[40590.4619140625,-13240.1,40600.4619140625,-13240.1,40616.5107421875,-13140,40626.5107421875,-13140],\"key\":-119},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":20,\"to\":130,\"points\":[36780.4619140625,-14240,36790.4619140625,-14240,37630,-14240,39870,-14240,40368.103515625,-13240.1,40378.103515625,-13240.1],\"key\":-120},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":2,\"to\":122,\"points\":[38210.3720703125,-13190.1,38220.3720703125,-13190.1,38380,-11580,38428.103515625,-11570,38438.103515625,-11570],\"key\":-121},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":156,\"to\":158,\"points\":[10961.5,-2231.12829957204,11161.000055824163,-2234.1097012622167],\"key\":-126},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":156,\"to\":159,\"points\":[10961.5,-2209.587643366619,11164.617348384812,-2154.6723618612223],\"key\":-127},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":158,\"to\":136,\"points\":[11204.258499907213,-2214.971914227391,10942.977272727272,-2050.7380000000003],\"key\":-128},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":159,\"to\":136,\"points\":[11177.693693693695,-2115.075837837838,10962,-2041.1237142857146],\"key\":-129},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":136,\"to\":160,\"points\":[10886.5,-2050.7380000000003,10886.5,-2114.7380000000003],\"key\":-123},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":160,\"to\":156,\"points\":[10886.391834316286,-2155.7379930401075,10886.187311369536,-2194.5],\"key\":-124},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":155,\"to\":136,\"points\":[11361.000000008265,-2015.3242727272743,10962,-2015.2517272727273],\"key\":-125},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":158,\"to\":134,\"points\":[11312,-2235.2380000000003,11361,-2235.2380000000003],\"key\":-130},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":134,\"to\":161,\"points\":[11512,-2235.30823255814,11581.000000216332,-2235.3724186048526],\"key\":-131},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":158,\"to\":164,\"points\":[11236.441348811659,-2255.7379979536345,11236.101566702144,-2374.5],\"key\":-133},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":164,\"to\":166,\"points\":[11311.5,-2411.9724139650875,11361.000170537547,-2413.265590490153],\"key\":-134},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":166,\"to\":134,\"points\":[11436.5,-2384.7380000000003,11436.5,-2270.7380000000003],\"key\":-150},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":162,\"to\":174,\"points\":[12112,-1735.238,12201,-1735.238,12196.961247153424,-1914.738126514466],\"key\":-141},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":209,\"to\":214,\"points\":[10691.876953125,-2622.3575685153482,11161,-2607.611251426515],\"key\":-152},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":211,\"to\":214,\"points\":[10600.802734375,-2733.508181681953,11161,-2620.4722934926203],\"key\":-153},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":176,\"to\":214,\"points\":[11236.5,-2724.7380000000003,11236.5,-2640.7380000000003],\"key\":-155},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":214,\"to\":164,\"points\":[11236.409085321506,-2569.7380000000003,11236.090914678494,-2445.5000000000005],\"key\":-135},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":174,\"to\":175,\"points\":[12272,-1935.238,12381,-1935.238,12381.440833333334,-2199.7380000000003],\"key\":-136},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":175,\"to\":176,\"points\":[12381.463775510205,-2270.7380000000003,12381,-2745.2380000000003,11311.999923674623,-2743.918647904332],\"key\":-137},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":215,\"to\":176,\"points\":[11236.5,-2839.7380000000003,11236.5,-2765.7380000000003],\"key\":-138},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":216,\"to\":217,\"points\":[12022,-2235.2380000000003,12091,-2235.2380000000003],\"key\":-156},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":217,\"to\":175,\"points\":[12242,-2235.2380000000003,12311,-2235.2380000000003],\"key\":-159},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":174,\"to\":173,\"points\":[12196.5,-1955.738,12196.5,-1989.738],\"key\":-160},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":173,\"to\":155,\"points\":[12121,-2024.2545131578947,11511.999957584172,-2016.3214862895832],\"key\":-161},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":155,\"to\":134,\"points\":[11436.5,-2035.838,11436.5,-2199.7380000000003],\"key\":-162},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":246,\"to\":187,\"points\":[12052,-470.173732647815,12171,-525.238,12166.670833188666,-1044.7380173602069],\"key\":-177},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":246,\"to\":244,\"points\":[12052,-435.23800000000006,12121,-435.23800000000006],\"key\":-178},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":248,\"to\":247,\"points\":[11601.5,-1000.738,11601.5,-1354.738],\"key\":-179},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":249,\"to\":246,\"points\":[11976.5,-754.738,11976.5,-470.73800000000006],\"key\":-180},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":245,\"to\":250,\"points\":[11976.5,-1144.738,11976.5,-1100.738],\"key\":-181},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":243,\"to\":250,\"points\":[11852,-1065.238,11901,-1065.238],\"key\":-182},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":252,\"to\":249,\"points\":[11976.5,-829.738,11976.5,-795.738],\"key\":-184},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":253,\"to\":252,\"points\":[11976.5,-944.738,11976.5,-900.738],\"key\":-185},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":250,\"to\":253,\"points\":[11976.5,-1029.738,11976.5,-985.738],\"key\":-186},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":253,\"to\":248,\"points\":[11901,-965.238,11672,-965.238],\"key\":-187},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":256,\"to\":254,\"points\":[12502,-435.23800000000006,12531,-435.23800000000006],\"key\":-189},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":244,\"to\":256,\"points\":[12262,-435.23800000000006,12361,-435.23800000000006],\"key\":-190},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":288,\"to\":262,\"points\":[12431.486513157965,-545.7379998917937,12431,-1285.238,12052,-1285.321388338834],\"key\":-197},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":263,\"to\":262,\"points\":[12225.58894840031,-1355.3164264412123,12052,-1306.54878125],\"key\":-199},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":263,\"to\":264,\"points\":[12296.676723977776,-1354.738018578037,12306.193965517243,-250.73800000000006],\"key\":-200},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":269,\"to\":268,\"points\":[11132,-615.3656923076924,11181.000000262984,-615.3154358971663],\"key\":-203},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":247,\"to\":162,\"points\":[11601.469852941973,-1395.7379994593434,11601,-1715.238,11961,-1731.770721010333],\"key\":-207},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":271,\"to\":248,\"points\":[11601.5,-455.9380000000001,11601.5,-929.738],\"key\":-208},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":274,\"to\":269,\"points\":[11061.5,-455.73800000000006,11061.5,-579.9380000000001],\"key\":-210},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":275,\"to\":274,\"points\":[10914,-433.0512959641256,10991.000054936932,-434.1928304108588],\"key\":-211},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":275,\"to\":273,\"points\":[10914,-410.0603406940063,11085.98063082855,-360.23912526735825],\"key\":-212},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":238,\"to\":275,\"points\":[10844.092279401424,-350.4988251505872,10840.937899776322,-396.432],\"key\":-213},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":274,\"to\":277,\"points\":[11041.174095437924,-414.8842042863729,10873.951353747772,-247.43200000000002],\"key\":-216},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":273,\"to\":277,\"points\":[11105.570129206297,-319.91258145145923,10914,-242.45781703470033],\"key\":-217},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":277,\"to\":238,\"points\":[10840.604719314293,-247.43200000000002,10844.284650668855,-309.50087645291615],\"key\":-218},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":278,\"to\":277,\"points\":[11331.000008620205,-214.82401603640926,10914,-212.37534458259324],\"key\":-219},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":264,\"to\":278,\"points\":[12231,-215.23800000000006,11472,-215.23800000000006],\"key\":-220},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":279,\"to\":269,\"points\":[10995.716796875,-830.1916180496216,11061,-825.238,11061.415395614871,-650.9380000000001],\"key\":-227},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":274,\"to\":287,\"points\":[11132,-435.23800000000006,11331,-435.23800000000006],\"key\":-228},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":287,\"to\":271,\"points\":[11472,-435.3085000000001,11531.000000249998,-435.36750000025006],\"key\":-229},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":268,\"to\":287,\"points\":[11280.980331435603,-584.8486230454585,11372.902777777777,-470.73800000000006],\"key\":-230},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":278,\"to\":287,\"points\":[11401.5,-235.73800000000006,11401.5,-399.73800000000006],\"key\":-231},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":161,\"to\":216,\"points\":[11721.99999988509,-2235.3902033899085,11871,-2235.2891864406783],\"key\":-232},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":161,\"to\":162,\"points\":[11651.479508196971,-2214.9380002498,11651,-1735.2380000000003,11961,-1735.2380000000003],\"key\":-233},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":254,\"to\":175,\"points\":[12606.66513875821,-455.73798377779576,12621,-2235.2380000000003,12452,-2235.2380000000003],\"key\":-188},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":162,\"to\":263,\"points\":[12112,-1720.9657882797733,12301,-1685.238,12296.797579880578,-1395.7379473288233],\"key\":-191},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":256,\"to\":288,\"points\":[12431.5,-470.73800000000006,12431.5,-504.73800000000006],\"key\":-192},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":245,\"to\":287,\"points\":[11901,-1165.238,11401,-1165.238,11401.475684931505,-470.73800000000006],\"key\":-183},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":271,\"to\":246,\"points\":[11671.999999928888,-435.400400000038,11901,-435.27826666666675],\"key\":-194},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":262,\"to\":245,\"points\":[11976.5,-1249.8380000000002,11976.5,-1185.7380000000003],\"key\":-193},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":187,\"to\":250,\"points\":[12091,-1065.238,12052,-1065.238],\"key\":-195},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":182,\"to\":180,\"points\":[9711,-1459.0220526200305,10193.860210796325,-1580.6775802741602],\"key\":-174},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":182,\"to\":179,\"points\":[9711,-1448.2704703415498,10192.002973167235,-1500.9608123783287],\"key\":-175},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":182,\"to\":181,\"points\":[9711,-1436.404761904762,10190.000565931137,-1413.5952111461363],\"key\":-176},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":182,\"to\":178,\"points\":[9711,-1420.794204518765,10194.097358673956,-1297.9032234827791],\"key\":-196},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":184,\"to\":182,\"points\":[9512.999996228571,-1439.52420319913,9560,-1439.7067538174715],\"key\":-198},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":182,\"to\":183,\"points\":[9711,-1473.3574956580053,10221.775462862612,-1699.02889015675],\"key\":-205},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":188,\"to\":189,\"points\":[10131,-510,10180,-510],\"key\":-173},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":189,\"to\":190,\"points\":[10331,-511.2952071894442,10352,-511.655463493793,10352,-621.6554634937925,10400.00003571356,-621.0817284264674],\"key\":-201},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":189,\"to\":191,\"points\":[10331,-511.2952071894442,10352,-511.655463493793,10350,-420,10400,-420],\"key\":-202},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":177,\"to\":279,\"points\":[10365,-1799.1182758860346,10400.5,-1800,10869.422148952337,-862.05440625],\"key\":-204},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":177,\"to\":211,\"points\":[10365,-1799.1182758860346,10400.5,-1800,10546.818867936243,-2720.5],\"key\":-206},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":177,\"to\":209,\"points\":[10365,-1798.8901555324542,10410.5,-1800,10643.752093248251,-2600.5],\"key\":-209},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":190,\"to\":164,\"points\":[10580.998527242751,-626.9614251725193,10620.5,-630,10680.5,-2410,11160.5,-2410],\"key\":-214},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":191,\"to\":156,\"points\":[10580.995613950341,-432.06608186004553,10640.5,-440,10730.5,-2230,10810.5,-2230],\"key\":-215},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":190,\"to\":269,\"points\":[10580.999984042768,-619.2769510907126,10991,-616.0012591943959],\"key\":-221},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":191,\"to\":275,\"points\":[10580.999706353186,-423.10299567875353,10763,-429.34330459770115],\"key\":-222},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":193,\"to\":197,\"points\":[16464.0205078125,-1470,16474.0205078125,-1470,16488.103515625,-1475.05,16498.103515625,-1475.05],\"key\":-224},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":200,\"to\":193,\"points\":[16030.4619140625,-1469.95,16040.4619140625,-1469.95,16064.662109375,-1470,16074.662109375,-1470],\"key\":-226},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"in\",\"from\":353,\"to\":200,\"points\":[15698.248046875,-1560,15708.248046875,-1560,15708.103515625,-1469.95,15718.103515625,-1469.95],\"key\":-234},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":208,\"to\":206,\"points\":[16454.0205078125,-1789.9,16464.0205078125,-1789.9,16478.10373552912,-1798.2719664998924,16488.10373552912,-1798.2719664998924],\"key\":-238},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":204,\"to\":208,\"points\":[16030.4619140625,-1789.9,16040.4619140625,-1789.9,16054.662109375,-1789.9,16064.662109375,-1789.9],\"key\":-239},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"in\",\"from\":355,\"to\":212,\"points\":[15688.248046875,-2130,15698.248046875,-2130,15718.103515625,-2060,15728.103515625,-2060],\"key\":-240},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":220,\"to\":218,\"points\":[16474.0205078125,-2060,16484.0205078125,-2060,16508.10373552912,-2064.9999664998927,16518.10373552912,-2064.9999664998927],\"key\":-243},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":212,\"to\":220,\"points\":[16040.4619140625,-2060,16050.4619140625,-2060,16074.662109375,-2060,16084.662109375,-2060],\"key\":-244},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":355,\"to\":221,\"points\":[15688.248046875,-2150,15698.248046875,-2150,15738.103515625,-2330,15748.103515625,-2330],\"key\":-223},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":353,\"to\":221,\"points\":[15698.248046875,-1580,15708.248046875,-1580,15738.103515625,-2330,15748.103515625,-2330],\"key\":-236},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":221,\"to\":220,\"points\":[16060.4619140625,-2330,16070.4619140625,-2330,16074.662109375,-2080,16084.662109375,-2080],\"key\":-237},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":221,\"to\":208,\"points\":[16060.4619140625,-2330,16070.4619140625,-2330,16054.662109375,-1809.9,16064.662109375,-1809.9],\"key\":-241},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":221,\"to\":193,\"points\":[16060.4619140625,-2330,16070.4619140625,-2330,16064.662109375,-1490,16074.662109375,-1490],\"key\":-242},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":351,\"to\":195,\"points\":[14878.248046875,-1240,14888.248046875,-1240,14978.103515625,-1075.025,14988.103515625,-1075.025],\"key\":-245},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":196,\"to\":198,\"points\":[16144.0205078125,-1114.875,16154.0205078125,-1114.875,16168.103515625,-1115.1750000000002,16178.103515625,-1115.1750000000002],\"key\":-247},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":351,\"to\":202,\"points\":[14878.248046875,-1240,14888.248046875,-1240,15398.103515625,-1214.9750000000001,15408.103515625,-1214.9750000000001],\"key\":-248},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":202,\"to\":196,\"points\":[15720.4619140625,-1214.9750000000001,15730.4619140625,-1214.9750000000001,15744.662109375,-1134.875,15754.662109375,-1134.875],\"key\":-249},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":230,\"to\":228,\"points\":[34790.4619140625,-7249,34800.4619140625,-7249,34808.103515625,-7249.1,34818.103515625,-7249.1],\"key\":-250},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":225,\"to\":227,\"points\":[17260.4619140625,-2070,17270.4619140625,-2070,17288.103515625,-2070.1,17298.103515625,-2070.1],\"key\":-254,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"array\",\"from\":227,\"to\":225,\"points\":[17518.248046875,-2080.1,17528.248046875,-2080.1,17530,-2120,16910,-2120,16917.103515625,-2080,16927.103515625,-2080],\"key\":-255},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"item\",\"from\":218,\"to\":225,\"points\":[16900.46213396662,-2064.9999664998927,16910.46213396662,-2064.9999664998927,16917.103515625,-2060,16927.103515625,-2060],\"key\":-256},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"array\",\"from\":227,\"to\":223,\"points\":[17518.248046875,-2060.1,17528.248046875,-2060.1,17544.517578125,-2070.1,17554.517578125,-2070.1],\"key\":-263},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"item\",\"from\":197,\"to\":229,\"points\":[16890.4619140625,-1475.05,16900.4619140625,-1475.05,16907.103515625,-1480.05,16917.103515625,-1480.05],\"key\":-257},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":229,\"to\":237,\"points\":[17250.4619140625,-1490.05,17260.4619140625,-1490.05,17268.103515625,-1490.2499999999998,17278.103515625,-1490.2499999999998],\"key\":-258,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"array\",\"from\":237,\"to\":229,\"points\":[17498.248046875,-1500.2499999999998,17508.248046875,-1500.2499999999998,17499.251331624575,-1536.8398149999132,16899.55425175392,-1540.9440632937442,16900.205295945478,-1501.8804819414736,16907.103515625,-1500.05,16917.103515625,-1500.05],\"key\":-259},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"item\",\"from\":206,\"to\":224,\"points\":[16880.46213396662,-1798.2719664998924,16890.46213396662,-1798.2719664998924,16897.103515625,-1800,16907.103515625,-1800],\"key\":-260},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":224,\"to\":233,\"points\":[17240.4619140625,-1810,17250.4619140625,-1810,17278.103515625,-1810.1999999999998,17288.103515625,-1810.1999999999998],\"key\":-261,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"array\",\"from\":233,\"to\":224,\"points\":[17508.248046875,-1820.1999999999998,17518.248046875,-1820.1999999999998,17520,-1860,16887.601047651646,-1857.3605530477867,16891.507455856194,-1820.2501042701913,16897.103515625,-1820,16907.103515625,-1820],\"key\":-262},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"item\",\"from\":228,\"to\":232,\"points\":[35030.4619140625,-7249.1,35040.4619140625,-7249.1,35087.103515625,-7250.1,35097.103515625,-7250.1],\"key\":-251},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":232,\"to\":226,\"points\":[35430.4619140625,-7260.1,35440.4619140625,-7260.1,35478.103515625,-7259.1,35488.103515625,-7259.1],\"key\":-252,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"array\",\"from\":226,\"to\":232,\"points\":[35700.4619140625,-7259.1,35710.4619140625,-7259.1,35710.16583723131,-7310.407918632831,35067.7556998172,-7308.5127244945015,35067.07667590986,-7270.486453163108,35087.103515625,-7270.1,35097.103515625,-7270.1],\"key\":-253},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":192,\"to\":269,\"points\":[11376.559396974088,-1689.5202149397878,11071.913177349936,-650.9380000000001],\"key\":-264},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":251,\"to\":240,\"points\":[17900.4619140625,-1829.9,17910.4619140625,-1829.9,17918.103515625,-1830.1,17928.103515625,-1830.1],\"key\":-267,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":257,\"to\":255,\"points\":[17890.4619140625,-1509.95,17900.4619140625,-1509.95,17908.103515625,-1510.05,17918.103515625,-1510.05],\"key\":-268,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":259,\"to\":261,\"points\":[19710.4619140625,-2080,19720.4619140625,-2080,19728.103515625,-2100,19738.103515625,-2100],\"key\":-275,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":223,\"to\":235,\"points\":[17910.4619140625,-2090.1,17920.4619140625,-2090.1,17928.103515625,-2090.2,17938.103515625,-2090.2],\"key\":-265,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"Bob\",\"from\":235,\"to\":259,\"points\":[18210.4619140625,-2090.2,18220.4619140625,-2090.2,19331.296875,-2090,19341.296875,-2090],\"key\":-273},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"Alice\",\"from\":240,\"to\":259,\"points\":[18210.4619140625,-1830.1,18220.4619140625,-1830.1,18250,-2070,19331.296875,-2070,19341.296875,-2070],\"key\":-274},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"identity\",\"from\":261,\"to\":266,\"points\":[20010.4619140625,-2100,20020.4619140625,-2100,20033.2763671875,-2100,20043.2763671875,-2100],\"key\":-276},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"currentStepInfo\",\"from\":265,\"to\":266,\"points\":[20028.248046875,-1220,20038.248046875,-1220,20033.2763671875,-2080,20043.2763671875,-2080],\"key\":-277},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":266,\"to\":267,\"points\":[20440.4619140625,-2090,20450.4619140625,-2090,20448.103515625,-2090,20458.103515625,-2090],\"key\":-278,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":269,\"to\":222,\"points\":[11132,-602.7599480922805,13240.007893803693,-223.67578497843766],\"key\":-279},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":222,\"to\":287,\"points\":[13240.003423539734,-218.9804327226287,11472,-426.9452993730408],\"key\":-280},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":192,\"to\":164,\"points\":[11378.894123326498,-1750.4886615700134,11243.691666666668,-2374.5],\"key\":-281},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":331,\"to\":258,\"points\":[18000.4619140625,-1150,18010.4619140625,-1150,18979.999515625,-1120,18989.999515625,-1120],\"key\":-282},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"masterPlan\",\"from\":258,\"to\":236,\"points\":[19262.3579140625,-1120,19272.3579140625,-1120,19289.3100625,-1110.1,19299.3100625,-1110.1],\"key\":-284},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"switchState\",\"from\":282,\"to\":236,\"points\":[19262.3579140625,-1030,19272.3579140625,-1030,19289.3100625,-1090.1,19299.3100625,-1090.1],\"key\":-285},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"dialog\",\"from\":276,\"to\":260,\"points\":[24138.248046875,-2120,24148.248046875,-2120,24500,-2120,24500,-1020,20400,-1030,20400,-1090,20513.2763671875,-1090.1999999999998,20523.2763671875,-1090.1999999999998],\"key\":-286},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"user\",\"from\":348,\"to\":270,\"points\":[21058.248046875,-1100,21068.248046875,-1100,21074.662109375,-1280,21084.662109375,-1280],\"key\":-287},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":272,\"to\":270,\"points\":[20920.4619140625,-1300,20930.4619140625,-1300,21074.662109375,-1300,21084.662109375,-1300],\"key\":-288},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"switchState\",\"from\":281,\"to\":236,\"points\":[22208.248046875,-950,22218.248046875,-950,22240,-950,22240,-1010,19280,-1010,19289.3100625,-1090.1,19299.3100625,-1090.1],\"key\":-296},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":356,\"to\":276,\"points\":[23660.4619140625,-2130,23670.4619140625,-2130,23808.103515625,-2130,23818.103515625,-2130],\"key\":-298},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":281,\"to\":290,\"points\":[22208.248046875,-970,22218.248046875,-970,22278.103515625,-970,22288.103515625,-970],\"key\":-299},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":300,\"to\":307,\"points\":[37490.4619140625,-6550,37500.4619140625,-6550,37568.103515625,-6550,37578.103515625,-6550],\"key\":-301},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":308,\"to\":303,\"points\":[35150.4619140625,-6460.1,35160.4619140625,-6460.1,36378.103515625,-6600,36388.103515625,-6600],\"key\":-302},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":298,\"to\":302,\"points\":[35910.3720703125,-6440,35920.3720703125,-6440,35968.103515625,-6440,35978.103515625,-6440],\"key\":-303},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":308,\"to\":299,\"points\":[35150.4619140625,-6460.1,35160.4619140625,-6460.1,35178.103515625,-6670,35188.103515625,-6670],\"key\":-304},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"switchState\",\"from\":300,\"to\":306,\"points\":[37490.4619140625,-6550,37500.4619140625,-6550,37495.749672964135,-6667.234178873214,35561.00801775276,-6670.392043150925,35557.4140625,-6750,35567.4140625,-6750],\"key\":-305},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":304,\"to\":300,\"points\":[37154.0205078125,-6550,37164.0205078125,-6550,37178.103515625,-6550,37188.103515625,-6550],\"key\":-306},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextStepInfo\",\"toPort\":\"nextStepInfo\",\"from\":306,\"to\":301,\"points\":[36016.7236328125,-6760,36026.7236328125,-6760,36313.2763671875,-6480,36323.2763671875,-6480],\"key\":-307},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"currentStepInfo\",\"toPort\":\"currentStepInfo\",\"from\":306,\"to\":301,\"points\":[36016.7236328125,-6780,36026.7236328125,-6780,36313.2763671875,-6500,36323.2763671875,-6500],\"key\":-308},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":303,\"to\":304,\"points\":[36700.4619140625,-6600,36710.4619140625,-6600,36754.662109375,-6570,36764.662109375,-6570],\"key\":-309},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":301,\"to\":304,\"points\":[36720.4619140625,-6480,36730.4619140625,-6480,36754.662109375,-6550,36764.662109375,-6550],\"key\":-310},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"dialog\",\"from\":302,\"to\":301,\"points\":[36290.4619140625,-6440,36300.4619140625,-6440,36313.2763671875,-6460,36323.2763671875,-6460],\"key\":-311},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"switchState\",\"from\":299,\"to\":306,\"points\":[35490.4619140625,-6670,35500.4619140625,-6670,35557.4140625,-6750,35567.4140625,-6750],\"key\":-312},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":305,\"to\":306,\"points\":[35530.4619140625,-6770,35540.4619140625,-6770,35557.4140625,-6770,35567.4140625,-6770],\"key\":-313},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":308,\"to\":305,\"points\":[35150.4619140625,-6460.1,35160.4619140625,-6460.1,35258.103515625,-6770,35268.103515625,-6770],\"key\":-314},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"currentIdentity\",\"from\":267,\"to\":322,\"points\":[20730.4619140625,-2090,20740.4619140625,-2090,20853.2763671875,-2140,20863.2763671875,-2140],\"key\":-317},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"currentStepInfo\",\"toPort\":\"in\",\"from\":236,\"to\":265,\"points\":[19748.6196328125,-1130.1,19758.6196328125,-1130.1,19768.103515625,-1200,19778.103515625,-1200],\"key\":-290},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextStepInfo\",\"toPort\":\"in\",\"from\":236,\"to\":314,\"points\":[19748.6196328125,-1110.1,19758.6196328125,-1110.1,19769.999515625,-1110,19779.999515625,-1110],\"key\":-293},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"nextStepInfo\",\"from\":314,\"to\":260,\"points\":[20022.3579140625,-1110,20032.3579140625,-1110,20513.2763671875,-1110.1999999999998,20523.2763671875,-1110.1999999999998],\"key\":-294},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"currentStepInfo\",\"from\":293,\"to\":260,\"points\":[20368.248046875,-1590,20378.248046875,-1590,20400,-1590,20400,-1130,20513.2763671875,-1130.1999999999998,20523.2763671875,-1130.1999999999998],\"key\":-318},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"currentStepInfo\",\"from\":293,\"to\":322,\"points\":[20368.248046875,-1610,20378.248046875,-1610,20400,-1610,20400,-1800,20500,-1800,20853.2763671875,-2060,20863.2763671875,-2060],\"key\":-319},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"factList\",\"from\":276,\"to\":322,\"points\":[24138.248046875,-2140,24148.248046875,-2140,24510,-2140,24510,-1900,20850,-1900,20853.2763671875,-2040,20863.2763671875,-2040],\"key\":-320},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":317,\"to\":319,\"points\":[22338.248046875,-2000,22348.248046875,-2000,22358.103515625,-2390,22368.103515625,-2390],\"key\":-321},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":321,\"to\":328,\"points\":[15318.248046875,-975.0250000000001,15328.248046875,-975.0250000000001,16060,-980,18250,-980,18280,-1900,20248.103515625,-1900.1,20258.103515625,-1900.1],\"key\":-322},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":344,\"to\":227,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,18750,-2330,18750,-2380,17270,-2380,17288.103515625,-2070.1,17298.103515625,-2070.1],\"key\":-327},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":344,\"to\":237,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,18770,-2310,18770,-2400,17250,-2400,17268.103515625,-1490.2499999999998,17278.103515625,-1490.2499999999998],\"key\":-328},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":344,\"to\":233,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,18760,-2320,18760,-2390,17260,-2390,17278.103515625,-1810.1999999999998,17288.103515625,-1810.1999999999998],\"key\":-329},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":344,\"to\":328,\"points\":[18678.248046875,-2270.2,18688.248046875,-2270.2,18920,-1910,20230,-1910,20248.103515625,-1900.1,20258.103515625,-1900.1],\"key\":-292},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"in\",\"from\":344,\"to\":258,\"points\":[18678.248046875,-2250.2,18688.248046875,-2250.2,18910,-1910,18910,-1130,18979.999515625,-1120,18989.999515625,-1120],\"key\":-324},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out4\",\"toPort\":\"in\",\"from\":344,\"to\":282,\"points\":[18678.248046875,-2230.2,18688.248046875,-2230.2,18900,-1910,18900,-1030,18979.999515625,-1030,18989.999515625,-1030],\"key\":-331},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"array\",\"from\":233,\"to\":251,\"points\":[17508.248046875,-1800.1999999999998,17518.248046875,-1800.1999999999998,17534.517578125,-1809.9,17544.517578125,-1809.9],\"key\":-283},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"array\",\"from\":237,\"to\":257,\"points\":[17498.248046875,-1480.2499999999998,17508.248046875,-1480.2499999999998,17524.517578125,-1489.95,17534.517578125,-1489.95],\"key\":-289},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":344,\"to\":272,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,18940,-1890,18940,-1300,20598.103515625,-1300,20608.103515625,-1300],\"key\":-297},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":317,\"to\":320,\"points\":[22338.248046875,-1980,22348.248046875,-1980,22388.103515625,-1980,22398.103515625,-1980],\"key\":-332},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":320,\"to\":283,\"points\":[22710.4619140625,-1980,22720.4619140625,-1980,22760.517578125,-2100.1,22770.517578125,-2100.1],\"key\":-333},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":283,\"to\":280,\"points\":[23290.3720703125,-2140.1,23300.3720703125,-2140.1,23338.103515625,-2220,23348.103515625,-2220],\"key\":-335},\n{\"category\":\"CodeFlow_Feature\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":286,\"to\":134,\"points\":[11685.57681900675,-2489.74265660161,11471.242889158924,-2270.7380000000003],\"key\":-336},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":283,\"to\":289,\"points\":[23290.3720703125,-2100.1,23300.3720703125,-2100.1,23338.103515625,-2040.2999999999997,23348.103515625,-2040.2999999999997],\"key\":-323},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"Alex\",\"from\":255,\"to\":259,\"points\":[18210.4619140625,-1510.05,18220.4619140625,-1510.05,18260,-2050,19331.296875,-2050,19341.296875,-2050],\"key\":-337},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":296,\"to\":284,\"points\":[24648.248046875,-1990,24658.248046875,-1990,24780,-2340,24450,-2500,19050,-2500,19050,-2180,19058.103515625,-2170.1,19068.103515625,-2170.1],\"key\":-338},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"clear\",\"from\":344,\"to\":283,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,22730,-2290,22730,-2140,22760.517578125,-2140.1,22770.517578125,-2140.1],\"key\":-340},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":322,\"to\":312,\"points\":[21260.4619140625,-2100,21270.4619140625,-2100,21298.103515625,-2100.2999999999997,21308.103515625,-2100.2999999999997],\"key\":-341},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"other1\",\"toPort\":\"other1\",\"from\":297,\"to\":322,\"points\":[20630.6962890625,-2000,20640.6962890625,-2000,20853.2763671875,-2120,20863.2763671875,-2120],\"key\":-316},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"other2\",\"toPort\":\"other2\",\"from\":297,\"to\":322,\"points\":[20630.6962890625,-1980,20640.6962890625,-1980,20853.2763671875,-2100,20863.2763671875,-2100],\"key\":-342},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"name\",\"from\":284,\"to\":297,\"points\":[19298.248046875,-2170.1,19308.248046875,-2170.1,19350,-1990,20223.9794921875,-1990,20233.9794921875,-1990],\"key\":-343},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"user\",\"from\":312,\"to\":310,\"points\":[21598.248046875,-2090.2999999999997,21608.248046875,-2090.2999999999997,21620,-2090,21620,-2230,21624.662109375,-2230,21634.662109375,-2230],\"key\":-315},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out5\",\"toPort\":\"in\",\"from\":344,\"to\":313,\"points\":[18678.248046875,-2210.2,18688.248046875,-2210.2,18808.103515625,-2170,18818.103515625,-2170],\"key\":-330},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":265,\"to\":293,\"points\":[20028.248046875,-1200,20038.248046875,-1200,20080,-1240,20078.103515625,-1610,20088.103515625,-1610],\"key\":-345},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":293,\"to\":292,\"points\":[20368.248046875,-1630,20378.248046875,-1630,20508.103515625,-1630,20518.103515625,-1630],\"key\":-346},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"agentName\",\"from\":284,\"to\":322,\"points\":[19298.248046875,-2190.1,19308.248046875,-2190.1,20853.2763671875,-2160,20863.2763671875,-2160],\"key\":-344},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":328,\"to\":322,\"points\":[20570.4619140625,-1900.1,20580.4619140625,-1900.1,20853.2763671875,-2080,20863.2763671875,-2080],\"key\":-325},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"init\",\"from\":280,\"to\":283,\"points\":[23660.4619140625,-2220,23670.4619140625,-2220,23670,-2290,22750,-2290,22750,-2120,22760.517578125,-2120.1,22770.517578125,-2120.1],\"key\":-334},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"reset\",\"from\":344,\"to\":236,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,18710,-2290,18950,-1890,18950,-1310,19270,-1310,19270,-1130,19289.3100625,-1130.1,19299.3100625,-1130.1],\"key\":-347},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":313,\"to\":284,\"points\":[19040.4619140625,-2170,19050.4619140625,-2170,19058.103515625,-2170.1,19068.103515625,-2170.1],\"key\":-348},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":296,\"to\":316,\"points\":[24648.248046875,-2010,24658.248046875,-2010,24678.103515625,-2170,24688.103515625,-2170],\"key\":-349},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"inputName\",\"from\":284,\"to\":259,\"points\":[19298.248046875,-2150.1,19308.248046875,-2150.1,19331.296875,-2110,19341.296875,-2110],\"key\":-350},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"specs\",\"from\":195,\"to\":318,\"points\":[15300.4619140625,-1075.025,15310.4619140625,-1075.025,15346.85546875,-1125.025,15356.85546875,-1125.025],\"key\":-351},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"situation\",\"from\":321,\"to\":318,\"points\":[15318.248046875,-995.0250000000001,15328.248046875,-995.0250000000001,15346.85546875,-1105.025,15356.85546875,-1105.025],\"key\":-352},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":318,\"to\":196,\"points\":[15710.4619140625,-1115.025,15720.4619140625,-1115.025,15744.662109375,-1114.875,15754.662109375,-1114.875],\"key\":-353},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":351,\"to\":321,\"points\":[14878.248046875,-1240,14888.248046875,-1240,14988.103515625,-985.0250000000001,14998.103515625,-985.0250000000001],\"key\":-354},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"doStop\",\"toPort\":\"in\",\"from\":236,\"to\":333,\"points\":[19748.6196328125,-1090.1,19758.6196328125,-1090.1,19778.103515625,-890,19788.103515625,-890],\"key\":-355},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"init\",\"from\":323,\"to\":326,\"points\":[25640.4619140625,-2330,25650.4619140625,-2330,25680.517578125,-2310,25690.517578125,-2310],\"key\":-356},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"array\",\"from\":329,\"to\":330,\"points\":[17288.248046875,-1120,17298.248046875,-1120,17314.517578125,-1130,17324.517578125,-1130],\"key\":-326},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":330,\"to\":331,\"points\":[17680.4619140625,-1150,17690.4619140625,-1150,17698.103515625,-1150,17708.103515625,-1150],\"key\":-358,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"item\",\"from\":198,\"to\":332,\"points\":[16490.4619140625,-1115.1750000000002,16500.4619140625,-1115.1750000000002,16697.103515625,-1120,16707.103515625,-1120],\"key\":-359},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":332,\"to\":329,\"points\":[17040.4619140625,-1130,17050.4619140625,-1130,17058.103515625,-1130,17068.103515625,-1130],\"key\":-360,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"array\",\"from\":329,\"to\":332,\"points\":[17288.248046875,-1140,17298.248046875,-1140,17297.719975936507,-1208.9323022348294,16669.507570060232,-1208.8997871585616,16669.507570060232,-1143.00163887903,16697.103515625,-1140,16707.103515625,-1140],\"key\":-361},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":344,\"to\":329,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,18738.09435260722,-2331.5200117220866,18738.06183753095,-2372.3333380631316,17279.10748492365,-2369.2683079105955,17058.103515625,-1130,17068.103515625,-1130],\"key\":-362},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":333,\"to\":315,\"points\":[20008.248046875,-900,20018.248046875,-900,20038.103515625,-910,20048.103515625,-910],\"key\":-363},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"init\",\"from\":334,\"to\":326,\"points\":[25640.4619140625,-2240.1,25650.4619140625,-2240.1,25680.517578125,-2310,25690.517578125,-2310],\"key\":-364},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":324,\"to\":344,\"points\":[18317.112871606423,-2656.0129683620025,18327.112871606423,-2656.0129683620025,18548.103515625,-2250.2,18558.103515625,-2250.2],\"key\":-357},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":296,\"to\":294,\"points\":[24648.248046875,-1990,24658.248046875,-1990,24678.103515625,-2000,24688.103515625,-2000],\"key\":-365},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":340,\"to\":338,\"points\":[24120.4619140625,-2009.9999999999998,24130.4619140625,-2009.9999999999998,24139.3173828125,-2010,24149.3173828125,-2010],\"key\":-367},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"in\",\"from\":289,\"to\":340,\"points\":[23719.6064453125,-2030.2999999999997,23729.6064453125,-2030.2999999999997,23769.3173828125,-2019.9999999999998,23779.3173828125,-2019.9999999999998],\"key\":-368},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"trigger\",\"from\":281,\"to\":340,\"points\":[22208.248046875,-930,22218.248046875,-930,23770,-930,23769.3173828125,-1999.9999999999998,23779.3173828125,-1999.9999999999998],\"key\":-339},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"trigger\",\"from\":333,\"to\":338,\"points\":[20008.248046875,-880,20018.248046875,-880,24140,-880,24139.3173828125,-1990,24149.3173828125,-1990],\"key\":-369},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":338,\"to\":296,\"points\":[24490.4619140625,-2000,24500.4619140625,-2000,24518.103515625,-2000,24528.103515625,-2000],\"key\":-366,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":310,\"to\":339,\"points\":[22024.0205078125,-2230,22034.0205078125,-2230,22030,-2050,21650,-2050,21648.310546875,-2010,21658.310546875,-2010],\"key\":-371},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"start\",\"from\":312,\"to\":339,\"points\":[21598.248046875,-2110.2999999999997,21608.248046875,-2110.2999999999997,21630,-2110,21630,-1990,21648.310546875,-1990,21658.310546875,-1990],\"key\":-370},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"timeOutIn\",\"from\":343,\"to\":339,\"points\":[21540.4619140625,-1970,21550.4619140625,-1970,21648.310546875,-1970,21658.310546875,-1970],\"key\":-372},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":339,\"to\":317,\"points\":[22020.4619140625,-1990,22030.4619140625,-1990,22028.103515625,-1990,22038.103515625,-1990],\"key\":-373,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":357,\"to\":343,\"points\":[20500.4619140625,-2220,20510.4619140625,-2220,21280,-2220,21280,-1970,21298.103515625,-1970,21308.103515625,-1970],\"key\":-374},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"timeOutIn\",\"from\":346,\"to\":345,\"points\":[21380.4619140625,-940,21390.4619140625,-940,21498.310546875,-930,21508.310546875,-930],\"key\":-375},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"start\",\"from\":348,\"to\":345,\"points\":[21058.248046875,-1120,21068.248046875,-1120,21450,-1120,21450,-950,21498.310546875,-950,21508.310546875,-950],\"key\":-376},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":270,\"to\":345,\"points\":[21474.0205078125,-1280,21484.0205078125,-1280,21490,-1280,21490,-970,21498.310546875,-970,21508.310546875,-970],\"key\":-377},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":345,\"to\":281,\"points\":[21870.4619140625,-950,21880.4619140625,-950,21888.103515625,-950,21898.103515625,-950],\"key\":-378,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":260,\"to\":348,\"points\":[20920.4619140625,-1110.1999999999998,20930.4619140625,-1110.1999999999998,20928.103515625,-1110,20938.103515625,-1110],\"key\":-379,\"color\":\"Moccasin\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"init\",\"from\":336,\"to\":326,\"points\":[25640.4619140625,-2150,25650.4619140625,-2150,25680.517578125,-2310,25690.517578125,-2310],\"key\":-380},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":344,\"to\":341,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,18808.103515625,-2530,18818.103515625,-2530],\"key\":-381},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":194,\"to\":351,\"points\":[14730.4619140625,-1250,14740.4619140625,-1250,14748.103515625,-1250,14758.103515625,-1250],\"key\":-382},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":351,\"to\":329,\"points\":[14878.248046875,-1260,14888.248046875,-1260,17030,-1260,17058.103515625,-1130,17068.103515625,-1130],\"key\":-383},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":353,\"to\":237,\"points\":[15698.248046875,-1600,15708.248046875,-1600,17230,-1600,17268.103515625,-1490.2499999999998,17278.103515625,-1490.2499999999998],\"key\":-384},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":199,\"to\":353,\"points\":[15530.4619140625,-1580,15540.4619140625,-1580,15568.103515625,-1580,15578.103515625,-1580],\"key\":-385},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":354,\"to\":233,\"points\":[15688.248046875,-1870,15698.248046875,-1870,17239.991258492646,-1881.6306723016842,17278.103515625,-1810.1999999999998,17288.103515625,-1810.1999999999998],\"key\":-386},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":354,\"to\":221,\"points\":[15688.248046875,-1850,15698.248046875,-1850,15738.103515625,-2330,15748.103515625,-2330],\"key\":-387},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"in\",\"from\":354,\"to\":204,\"points\":[15688.248046875,-1830,15698.248046875,-1830,15708.103515625,-1789.9,15718.103515625,-1789.9],\"key\":-388},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":205,\"to\":354,\"points\":[15540.4619140625,-1850.1,15550.4619140625,-1850.1,15558.103515625,-1850,15568.103515625,-1850],\"key\":-389},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":355,\"to\":227,\"points\":[15688.248046875,-2170,15698.248046875,-2170,17227.59127277054,-2175.5033088648984,17288.103515625,-2070.1,17298.103515625,-2070.1],\"key\":-390},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":213,\"to\":355,\"points\":[15540.4619140625,-2150,15550.4619140625,-2150,15558.103515625,-2150,15568.103515625,-2150],\"key\":-391},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"name\",\"from\":284,\"to\":357,\"points\":[19298.248046875,-2190.1,19308.248046875,-2190.1,20153.9794921875,-2220,20163.9794921875,-2220],\"key\":-392},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"dialog\",\"toPort\":\"in\",\"from\":283,\"to\":356,\"points\":[23290.3720703125,-2120.1,23300.3720703125,-2120.1,23338.103515625,-2130,23348.103515625,-2130],\"key\":-393},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":362,\"to\":358,\"points\":[29010.4619140625,1590,29020.4619140625,1590,29030.517578125,1600,29040.517578125,1600],\"key\":-394},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"doConnect\",\"from\":360,\"to\":350,\"points\":[28270.4619140625,1540,28280.4619140625,1540,28291.283203125,1520,28301.283203125,1520],\"key\":-395},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"status\",\"toPort\":\"in\",\"from\":350,\"to\":359,\"points\":[28764.640625,1520,28774.640625,1520,29078.103515625,1500,29088.103515625,1500],\"key\":-396},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"subEvent_Speech\",\"toPort\":\"in\",\"from\":350,\"to\":362,\"points\":[28764.640625,1540,28774.640625,1540,28788.103515625,1590,28798.103515625,1590],\"key\":-397},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"subEvent_Speech\",\"toPort\":\"in\",\"from\":350,\"to\":364,\"points\":[28764.640625,1540,28774.640625,1540,28788.103515625,1850,28798.103515625,1850],\"key\":-398},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rosServer\",\"toPort\":\"rosServer\",\"from\":363,\"to\":361,\"points\":[26920.3996171875,201.342152501692,26930.3996171875,201.342152501692,27167.0343828125,666.9649999999999,27177.0343828125,666.9649999999999],\"key\":-399},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rosServer\",\"toPort\":\"rosServer\",\"from\":363,\"to\":366,\"points\":[26920.3996171875,201.342152501692,26930.3996171875,201.342152501692,27111.57246875,806.9649999999999,27121.57246875,806.9649999999999],\"key\":-400},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"init\",\"from\":365,\"to\":326,\"points\":[25640.4619140625,-2060,25650.4619140625,-2060,25680.517578125,-2310,25690.517578125,-2310],\"key\":-401},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":344,\"to\":346,\"points\":[18678.248046875,-2290.2,18688.248046875,-2290.2,18730,-2280,18960,-1890,18960,-950,21118.103515625,-940,21128.103515625,-940],\"key\":-402},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rosServer\",\"toPort\":\"rosServer\",\"from\":371,\"to\":372,\"points\":[25931.6826171875,1620,25941.6826171875,1620,26218.3173828125,1830,26228.3173828125,1830],\"key\":-403},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"doConnect\",\"from\":377,\"to\":371,\"points\":[25410.4619140625,1610,25420.4619140625,1610,25441.283203125,1610,25451.283203125,1610],\"key\":-405},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rosServer\",\"toPort\":\"rosServer\",\"from\":371,\"to\":383,\"points\":[25931.6826171875,1620,25941.6826171875,1620,26208.3173828125,1990,26218.3173828125,1990],\"key\":-406},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":383,\"to\":385,\"points\":[26650.4619140625,1990,26660.4619140625,1990,26688.103515625,1990,26698.103515625,1990],\"key\":-407,\"color\":\"LightCyan\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":387,\"to\":372,\"points\":[26060.4619140625,1840,26070.4619140625,1840,26218.3173828125,1850,26228.3173828125,1850],\"key\":-408},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"doConnect\",\"from\":400,\"to\":403,\"points\":[25410.4619140625,2490,25420.4619140625,2490,25441.283203125,2490,25451.283203125,2490],\"key\":-411},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"arguments\",\"from\":396,\"to\":405,\"points\":[26120.4619140625,2720,26130.4619140625,2720,26162.85546875,2720,26172.85546875,2720],\"key\":-404},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"response\",\"toPort\":\"in\",\"from\":405,\"to\":397,\"points\":[26716.5927734375,2710,26726.5927734375,2710,26748.103515625,2710,26758.103515625,2710],\"key\":-409},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rosServer\",\"toPort\":\"rosServer\",\"from\":403,\"to\":405,\"points\":[25931.6826171875,2500,25941.6826171875,2500,26162.85546875,2700,26172.85546875,2700],\"key\":-410},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":407,\"to\":387,\"points\":[25680.4619140625,1840,25690.4619140625,1840,25788.103515625,1840,25798.103515625,1840],\"key\":-412},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":409,\"to\":396,\"points\":[25800.4619140625,2720,25810.4619140625,2720,25848.103515625,2720,25858.103515625,2720],\"key\":-413},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"status\",\"toPort\":\"in\",\"from\":403,\"to\":411,\"points\":[25931.6826171875,2480,25941.6826171875,2480,25958.103515625,2480,25968.103515625,2480],\"key\":-414},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"status\",\"toPort\":\"in\",\"from\":371,\"to\":369,\"points\":[25931.6826171875,1600,25941.6826171875,1600,25958.103515625,1600,25968.103515625,1600],\"key\":-415},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"subEvent_Speech\",\"toPort\":\"in\",\"from\":391,\"to\":384,\"points\":[28654.640625,2430,28664.640625,2430,28678.103515625,2740,28688.103515625,2740],\"key\":-416},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"subEvent_Speech\",\"toPort\":\"in\",\"from\":391,\"to\":386,\"points\":[28654.640625,2430,28664.640625,2430,28678.103515625,2480,28688.103515625,2480],\"key\":-417},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"status\",\"toPort\":\"in\",\"from\":391,\"to\":388,\"points\":[28654.640625,2410,28664.640625,2410,28968.103515625,2390,28978.103515625,2390],\"key\":-418},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"doConnect\",\"from\":389,\"to\":391,\"points\":[28160.4619140625,2410,28170.4619140625,2410,28181.283203125,2410,28191.283203125,2410],\"key\":-419},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":386,\"to\":390,\"points\":[28900.4619140625,2480,28910.4619140625,2480,28920.517578125,2490,28930.517578125,2490],\"key\":-420},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"status\",\"toPort\":\"in\",\"from\":376,\"to\":368,\"points\":[28661.6826171875,3090,28671.6826171875,3090,28688.103515625,3090,28698.103515625,3090],\"key\":-421},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"doConnect\",\"from\":374,\"to\":376,\"points\":[28140.4619140625,3100,28150.4619140625,3100,28171.283203125,3100,28181.283203125,3100],\"key\":-422},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rosServer\",\"toPort\":\"rosServer\",\"from\":376,\"to\":378,\"points\":[28661.6826171875,3110,28671.6826171875,3110,28738.3173828125,3220,28748.3173828125,3220],\"key\":-423},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":378,\"to\":380,\"points\":[29180.4619140625,3230,29190.4619140625,3230,29228.103515625,3560,29238.103515625,3560],\"key\":-424,\"color\":\"LightCyan\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":381,\"to\":382,\"points\":[29440.4619140625,3230,29450.4619140625,3230,29460.517578125,3240,29470.517578125,3240],\"key\":-425},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":378,\"to\":381,\"points\":[29180.4619140625,3230,29190.4619140625,3230,29218.103515625,3230,29228.103515625,3230],\"key\":-426,\"color\":\"LightCyan\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"in\",\"from\":265,\"to\":394,\"points\":[20028.248046875,-1180,20038.248046875,-1180,20068.103515625,-1200.1999999999998,20078.103515625,-1200.1999999999998],\"key\":-427},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":394,\"to\":402,\"points\":[20390.4619140625,-1200.1999999999998,20400.4619140625,-1200.1999999999998,20478.103515625,-585,20488.103515625,-585],\"key\":-428,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":394,\"to\":283,\"points\":[20390.4619140625,-1200.1999999999998,20400.4619140625,-1200.1999999999998,22750,-1200,22760.517578125,-2100.1,22770.517578125,-2100.1],\"key\":-429}\n]}"
}