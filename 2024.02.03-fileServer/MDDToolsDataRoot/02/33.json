{
  "dslNameList": [
    "HierarchyDSL",
    "TextLabelsDSL",
    "DataFlowDSL"
  ],
  "view": {
    "scale": 0.8232947093081595,
    "position": [
      -1919.0579883734863,
      -2750.121936655651
    ],
    "isGridOn": true
  },
  "graphFileServer": [],
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"props_\":[{\"name\":\"Name\",\"value\":\"label@2\",\"valueChanged\":true},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"12/12/2023\"},{\"name\":\"Path\",\"value\":\"/fileServer/02/33.json\"},{\"name\":\"Authors\",\"value\":\"- Frank\\n- Antonello\",\"valueChanged\":true}],\"key\":0,\"location\":\"680 -5010\"},\n{\"label\":\"ChatGPT Streaming Test\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1864 240\",\"key\":2,\"location\":\"930 -4930\"},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":4,\"location\":\"300 -5050\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":6,\"location\":\"310 -4930\"},\n{\"label\":\"New Engine Instance \\n         onLoad\",\"color\":\"orange\",\"size\":\"240 80\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"DataFlowEngine.getInstance();\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":5,\"location\":\"-341.8345290877769 -4441.981339517615\",\"isIncludeScript\":true},\n{\"label\":\"Engine Control\",\"color\":\"lightsalmon\",\"size\":\"260 110\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<div style=\\\"display:grid\\\">\\n  <button type=\\\"Button\\\" onclick=\\\"graphData.dfe.loadModel();\\\" style=\\\"font-size: 24px;\\\">Load Model</button>\\n  <button type=\\\"Button\\\" onclick=\\\"graphData.dfe.clearInstanceData();\\\" style=\\\"font-size: 24px;\\\">Clear Instance Data</button>\\n  <button type=\\\"Button\\\" onclick=\\\"graphData.dfe.doPause();\\\" style=\\\"font-size: 24px;\\\">Pause</button>\\n  <button type=\\\"Button\\\" onclick=\\\"graphData.dfe.doContinue();\\\" style=\\\"font-size: 24px;\\\">Continue</button>\\n  <button type=\\\"Button\\\" onclick=\\\"graphData.dfe.setLogOn();\\\" style=\\\"font-size: 24px;\\\">Set Log On</button>\\n  <button type=\\\"Button\\\" onclick=\\\"graphData.dfe.setLogOff();\\\" style=\\\"font-size: 24px;\\\">Set Log Off</button>\\n</div>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":7,\"location\":\"-11.8345290877769 -4441.981339517615\",\"isLocalDiv\":true,\"editorPosition\":[549,1277,350,241]},\n{\"label\":\"ChatGPT Streaming\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"1in\",\"name\":\"in\"},{\"portId\":\"2in\",\"name\":\"doStop\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"},{\"portId\":\"2out\",\"name\":\"status\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet chatGPTController = null; // Store the AbortchatGPTController instance\\n\\nconst chatGPTGenerate = (prompt, callback) => {\\n  const API_URL = \\\"https://api.openai.com/v1/chat/completions\\\";\\n  // Create a new AbortController instance\\n  chatGPTController = new AbortController();\\n  const signal = chatGPTController.signal;\\n\\n  // Callback-based fetch wrapper\\n  const fetchCallback = (url, options, cb) => {\\n    fetch(url, options).then(response => {\\n      cb(null, response);\\n    }).catch(err => {\\n      cb(err, null);\\n    });\\n  };\\n\\n  // Call the fetchCallback\\n  fetchCallback(API_URL, {\\n    method: \\\"POST\\\",\\n    headers: {\\n      \\\"Content-Type\\\": \\\"application/json\\\",\\n      \\\"Authorization\\\": \\\"Bearer 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\\\",\\n    },\\n    body: JSON.stringify({\\n      model: \\\"gpt-3.5-turbo\\\",\\n      messages: [{ role: \\\"user\\\", content: prompt }],\\n      max_tokens: 100,\\n      stream: true,\\n    }),\\n    signal,\\n  }, (err, response) => {\\n    if (err) {\\n      // Handle fetch request errors\\n      if (signal.aborted) {\\n        graphData.dfe.fireOutput(nodeData, 'status', \\\"Request aborted.\\\");\\n      } else {\\n        console.error(\\\"Error:\\\", err);\\n        graphData.dfe.fireOutput(nodeData, 'status', \\\"Error occurred while generating.\\\");\\n      }\\n      chatGPTController = null; // Reset the AbortController instance\\n      return;\\n    }\\n\\n    // Process the response\\n    const reader = response.body.getReader();\\n    const decoder = new TextDecoder(\\\"utf-8\\\");\\n\\n    const readChunk = () => {\\n      reader.read().then(({ done, value }) => {\\n        if (done) {\\n          chatGPTController = null; // Reset the AbortController instance\\n          callback(); // Callback without error\\n          return;\\n        }\\n      \\n        // Massage and parse the chunk of data\\n        const chunk = decoder.decode(value);\\n        const lines = chunk.split(\\\"\\\\n\\\");\\n        const parsedLines = lines.map(line => line.replace(/^data: /, \\\"\\\").trim());\\n        const parsedLines2 = parsedLines.filter(line => line !== \\\"\\\" && line !== \\\"[DONE]\\\");\\n        const parsedLines3 = parsedLines2.map(line => JSON.parse(line));\\n\\n        for (const parsedLine of parsedLines3 ) {\\n          const { choices } = parsedLine;\\n          const { delta } = choices[0];\\n          const { content } = delta;\\n          // Update the UI with the new content\\n          if (content) {\\n            graphData.dfe.fireOutput(nodeData, 'out', content);\\n          }\\n        }\\n\\n        // Read the next chunk\\n        readChunk();\\n      }).catch(error => {\\n        console.error(\\\"Error:\\\", error);\\n        graphData.dfe.fireOutput( nodeData, 'status', \\\"Error occurred while reading the stream.\\\" );\\n        chatGPTController = null; // Reset the AbortController instance\\n      });\\n    };\\n\\n    // Start reading chunks\\n    readChunk();\\n  });\\n};\\n\\n\\nif( name == 'in' ) {\\n  chatGPTGenerate( value, chatGPTDone );  \\n} else if( name == 'doStop' ) {\\n  chatGPTStop();\\n}\\n\\nfunction chatGPTDone() {\\n  graphData.dfe.fireOutput( nodeData, 'status', 'Streaming Done' );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":33,\"location\":\"-420 -2168.6\",\"editorPosition\":[2242,31,691,1173]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"}],\"key\":34,\"location\":\"-780 -2078.6\"},\n{\"label\":\"Set Output\",\"category\":\"DataFlow_SetOut\",\"size\":\"240 80\",\"color\":\"LimeGreen\",\"in_\":[{\"portId\":\"1in\",\"name\":\"doSet\",\"tooltip\":\"This input event triggers the setting of the output.\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\",\"tooltip\":\"This output returns the data defined\\nin the properties when doSet event occurs.\"}],\"props_\":[{\"name\":\"setValue\",\"value\":\"''\",\"tooltip\":\"Defines in yaml the value to return\\nin the out when the event doClear arrives.\"}],\"fileTypeName\":\"Set Out\",\"fileType\":\"text/javascript\",\"doCompute\":\"DataFlow_SetOut\",\"key\":35,\"location\":\"-950 -2278.6\"},\n{\"label\":\"Streaming Done\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"400 86\",\"in_\":[{\"portId\":\"1in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"}],\"doCompute\":\"DataFlow_Message\",\"key\":36,\"location\":\"-60 -2018.5\"},\n{\"label\":\"The sky turned dark as thunder rumbled and rain poured down, creating a symphony of nature's power.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"370 1050\",\"in_\":[{\"portId\":\"1in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"}],\"doCompute\":\"DataFlow_Message\",\"key\":37,\"location\":\"1020 -1700\"},\n{\"label\":\"String Append\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"1in\",\"name\":\"buffer\"},{\"portId\":\"2in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'in' ) {\\n  const buffer = graphData.dfe.getInput( nodeData, 'buffer', '' );\\n  const outValue = buffer+value;\\n  graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":38,\"location\":\"610 -2170\"},\n{\"label\":\".\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"370 86\",\"in_\":[{\"portId\":\"1in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"}],\"doCompute\":\"DataFlow_Message\",\"key\":39,\"location\":\"-50 -2168.6\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"}],\"key\":40,\"location\":\"-1530 -2178.5\"},\n{\"label\":\"Generate a 20 words sentence\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 60\",\"in_\":[{\"portId\":\"1in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"}],\"doCompute\":\"DataFlow_Message\",\"key\":41,\"location\":\"-1330 -2178.5\"},\n{\"label\":\"TTS\",\"category\":\"DataFlow_BrowserTTS\",\"size\":\"240 80\",\"color\":\"SkyBlue\",\"in_\":[{\"portId\":\"1in\",\"name\":\"in\",\"tooltip\":\"this input expect a JSON object like\\n{\\n  \\\"sender\\\": \\\"<voiceName>\\\",\\n  \\\"text\\\": \\\"<text to speak\\\"\\n}\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"onStart\",\"tooltip\":\"this output generate an event\\nwhen the TTS start to speak\"},{\"portId\":\"2out\",\"name\":\"onStop\",\"tooltip\":\"this output generate an event\\nwhen the TTS stop to speak\"}],\"props_\":[{\"name\":\"voiceMap\",\"value\":\"- {name: Alex, id: 0}\",\"tooltip\":\"this property defines the mapping\\nbetween voice name and browser voice id.\"}],\"doCompute\":\"DataFlow_BrowserTTS\",\"fileTypeName\":\"Browser TTS\",\"fileType\":\"text/javascript\",\"key\":43,\"location\":\"1020 -2380\"},\n{\"label\":\"\",\"category\":\"DataFlow_Dispatch\",\"color\":\"Moccasin\",\"props_\":[],\"in_\":[{\"portId\":\"1in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out1\"},{\"portId\":\"2out\",\"name\":\"out2\"}],\"doCompute\":\"DataFlow_Dispatch\",\"key\":45,\"location\":\"410 -2170\"},\n{\"label\":\"AI component\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"1in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"1out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'in' ) {\\n  const outValue = { sender: 'Alex', text: value };\\n  graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":47,\"location\":\"560 -2395.6228474983077\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"2in\",\"from\":34,\"to\":33,\"points\":[-659.5380859375,-2078.6,-649.5380859375,-2078.6,-495.3720703125,-2158.6,-485.3720703125,-2158.6],\"key\":-11},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"2out\",\"toPort\":\"1in\",\"from\":33,\"to\":36,\"points\":[-121.6484375,-2158.6,-111.6484375,-2158.6,-101.896484375,-2018.5,-91.896484375,-2018.5],\"key\":-12},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":38,\"to\":37,\"points\":[890.4619140625,-2170,900.4619140625,-2170,978.103515625,-1700,988.103515625,-1700],\"key\":-13},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":37,\"to\":38,\"points\":[1430.4619140625,-1700,1440.4619140625,-1700,1420,-2260,530,-2250,520,-2180,543.453125,-2180,553.453125,-2180],\"key\":-14},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":33,\"to\":39,\"points\":[-121.6484375,-2178.6,-111.6484375,-2178.6,-91.896484375,-2168.6,-81.896484375,-2168.6],\"key\":-15},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":39,\"to\":45,\"points\":[360.4619140625,-2168.6,370.4619140625,-2168.6,368.103515625,-2170,378.103515625,-2170],\"key\":-16},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":40,\"to\":35,\"points\":[-1409.5380859375,-2178.5,-1399.5380859375,-2178.5,-1017.5859375,-2278.6,-1007.5859375,-2278.6],\"key\":-17},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":41,\"to\":33,\"points\":[-539.5380859375,-2178.5,-529.5380859375,-2178.5,-495.3720703125,-2178.6,-485.3720703125,-2178.6],\"key\":-18},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":40,\"to\":41,\"points\":[-1409.5380859375,-2178.5,-1399.5380859375,-2178.5,-1371.896484375,-2178.5,-1361.896484375,-2178.5],\"key\":-19},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":45,\"to\":47,\"points\":[498.248046875,-2180,508.248046875,-2180,518.103515625,-2395.6228474983077,528.103515625,-2395.6228474983077],\"key\":-20},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"2out\",\"toPort\":\"2in\",\"from\":45,\"to\":38,\"points\":[498.248046875,-2160,508.248046875,-2160,543.453125,-2160,553.453125,-2160],\"key\":-21},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":47,\"to\":43,\"points\":[840.4619140625,-2395.6228474983077,850.4619140625,-2395.6228474983077,978.103515625,-2380,988.103515625,-2380],\"key\":-22},\n{\"category\":\"DataFlow_Standard\",\"fromPort\":\"1out\",\"toPort\":\"1in\",\"from\":35,\"to\":37,\"points\":[-669.5380859375,-2278.6,-659.5380859375,-2278.6,978.103515625,-1700,988.103515625,-1700],\"key\":-23}\n]}"
}