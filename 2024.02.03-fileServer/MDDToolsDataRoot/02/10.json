{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "PicturesDSL",
    "DataFlowDSL"
  ],
  "view": {
    "scale": 0.6189267602220947,
    "position": [
      16136.07782167791,
      -7701.240680634267
    ],
    "isGridOn": true
  },
  "graphFileServer": [],
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"Smile 3 Dialog - V.06\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2350 240\",\"key\":0,\"location\":\"17580 -6940\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"410 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"clear\",\"name\":\"clear\"},{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/user2.png }\\n- { name: Bob, url: ~/user1.png }\\n- { name: Alex, url: ~/robot.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"key\":2,\"location\":\"19210 -5240\",\"editorPosition\":[282,141,596,1751],\"group\":25,\"history\":[]},\n{\"label\":\"gpt-3.5-turbo\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"fileTypeName\":\"LLM\",\"key\":12,\"location\":\"17600 -5660\",\"group\":26},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":14,\"location\":\"15870 -6201.100000000004\"},\n{\"label\":\"[Alex -> All] Good evening Bob and Alice, welcome to the kitchen. What would you like to prepare for dinner tonight? Do you have any request or preference?\\n\\n[Bob -> All] Hi Alex, nice to meet you. I love Italian food, do you have any recipes for that?\\n\\n[Alice -> All] Hi Alex, thanks for having us. I would actually prefer something lighter, like a salad or a sandwich.\\n\\n[Alex -> Bob] Sure, I have a lot of Italian recipes. Would you like to make a pasta dish or maybe a pizza?\\n\\n[Alex -> Alice] A salad or sandwich can be a great idea. We have a lot of fresh vegetables and bread in the fridge. How about a chicken Caesar salad or a grilled veggie sandwich?\\n\\n[Bob -> Alex] I'm in the mood for pizza tonight, what kind of toppings do we have?\\n\\n[Alice -> Alex] A chicken Caesar salad sounds perfect to me. What ingredients do we need?\\n\\n[Alex -> Bob] Great, we have tomato sauce, mozzarella cheese, pepperoni, mushrooms, and peppers. How about a pepperoni and mushroom pizza?\\n\\n[Alex -> Alice] For the Caesar salad, we need romaine lettuce, chicken breasts, croutons, Parmesan cheese, and Caesar dressing. Would you like to grill the chicken while I wash and chop the lettuce?\\n\\n[Bob -> Alex] Sounds good, let's make the pizza. Can you show me how to roll out the dough?\\n\\n[Alice -> Alex] Sure, I can grill the chicken. How long should I cook it for?\\n\\n[Alex -> Bob] Of course, I'll get the dough and rolling pin. We want it to be thin and round, about 10 inches in diameter. Once that's done, we'll add the toppings and bake it in the oven at 400 Fahrenheit for 10-12 minutes.\\n\\n[Alex -> Alice] The chicken breasts should be cooked for about 6-7 minutes per side on medium-high heat. Make sure to season them with salt and pepper before cooking.\\n\\n[Bob -> Alex] Thanks for the instructions, let's get started on the pizza. Can you pass me the tomato sauce and toppings?\\n\\n[Alice -> Alex] Got it, I'll start grilling the chicken now.\\n\\n[Alex -> Bob] Here you go. Would you like to spread the sauce on the dough first or add the toppings directly? I find it easier to add the sauce first.\\n\\n[Alex -> Alice] Great, let me know if you need any help. Once the chicken is cooked, we can slice it and add it to the salad.\\n\\n[Bob -> Alex] Good idea, I'll add the sauce first. How much should I use?\\n\\n[Alice -> Alex] Thanks, it's almost done. Should I let it rest for a bit before slicing it?\\n\\n[Alex -> Bob] About 1/2 cup of sauce should be enough for a 10-inch pizza. Spread it evenly with a spoon or ladle.\\n\\n[Alex -> Alice] You can let it rest for a few minutes before slicing it. In the meantime, would you like to prepare the other ingredients for the salad, like the croutons and Parmesan cheese?\\n\\n[Bob -> Alex] Perfect, now for the toppings. How much cheese and pepperoni should we use?\\n\\n[Alice -> Alex] Sure, I can chop the lettuce and make the croutons. How big should the croutons be?\\n\\n[Alex -> Bob] We can use about 1 cup of shredded mozzarella cheese and 12-15 pepperoni slices. You can arrange them however you like on top of the sauce.\\n\\n[Alex -> Alice] The croutons should be about 1 inch in size. We have some pre-made ones in the pantry or we can make our own with bread and olive oil.\\n\\n[Bob -> Alex] Got it, I'll do that now. Should we add any seasoning to the pizza?\\n\\n[Alice -> Alex] I think we should make our own croutons. Do you have any bread or olive oil?\\n\\n[Alex -> Bob] We can add some oregano and red pepper flakes, if you like those flavors.\\n\\n[Alex -> Alice] Sure, we have some sourdough bread and olive oil. Cut the bread into 1-inch cubes and toss them in a bowl with 2 tablespoons of olive oil. Then, spread them on a baking sheet and bake at 350 Fahrenheit for 10-12 minutes until crispy.\\n\\n[Bob -> Alex] Sounds good, let's add some oregano and red pepper flakes. How long should we bake the pizza for?\\n\\n[Alice -> Alex] Thank you, I'll do that now. What else do we need for the salad?\\n\\n[Alex -> Bob] The pizza should be baked for 10-12 minutes at 400 Fahrenheit, or until the cheese is melted and bubbly.\\n\\n[Alex -> Alice] We also need to chop the chicken and grate some Parmesan cheese. Once the lettuce and croutons are ready, we can assemble the salad and toss it with the dressing.\\n\\n[Bob -> Alex] Thanks for the instructions, I'll put the pizza in the oven now.\\n\\n[Alice -> Alex] Okay, let me know when the chicken is ready and I'll start chopping it. Should I leave it in slices or shred it?\\n\\n[Alex -> Bob] Great, let's put a timer for 10 minutes. In the meantime, would you like to prepare any drinks or appetizers?\\n\\n[Alex -> Alice] You can slice the chicken into strips or cubes, whichever you prefer. Once the pizza is done, we can assemble the salad and finish cooking the chicken, if needed.\\n\\n[Bob -> Alex] Hmm, how about some margaritas? Do you have the ingredients for that?\\n\\n[Alice -> Alex] I think strips would be better. Let me know when the pizza is done and I'll finish the salad.\\n\\n[Alex -> Bob] Sure, we have tequila, lime juice, and triple sec. Would you like me to get the recipe for you?\\n\\n[Alex -> Alice] The pizza is almost done, it should be ready in about 2 minutes. Once that's done, we can toss the salad and add the chicken, croutons, and Parmesan cheese.\\n\\n[Bob -> Alex] Yes please, that would be great. Thanks for your help.\\n\\n[Alice -> Alex] Okay, I'm ready to assemble the salad. What's the dressing recipe?\\n\\n[Alex -> Bob] Here's the recipe: in a shaker with ice, combine 2 ounces of tequila, 1 ounce of lime juice, 1/2 ounce of triple sec, and a splash of agave syrup or simple syrup. Shake well and strain into a salt-rimmed glass with ice.\\n\\n[Alex -> Alice] For the dressing, we need 1/4 cup of Caesar dressing and 1 tablespoon of lemon juice. Whisk them together in a bowl and season with salt and pepper to taste.\\n\\n[Bob -> Alex] Thanks, let's make some margaritas then. Do we have any limes and salt for the rim?\\n\\n[Alice -> Alex] Got it, I'll whisk the dressing now. How much should I use for the salad?\\n\\n[Alex -> Bob] Yes, we have limes and salt in the pantry. You can cut the limes into wedges and rub them on the rim of the glasses, then dip them in salt.\\n\\n[Alex -> Alice] We can use about 1/2 cup of dressing for the salad. Once the pizza is out of the oven, we can toss the salad and add the chicken, croutons, and Parmesan cheese.\\n\\n[Bob -> Alex] Perfect, let's get started on the margaritas. Would you like one too, Alice?\\n\\n[Alice -> Alex] Sounds good, thank you. Let me know when you're ready to toss the salad.\\n\\n[Alex -> Bob] Sure, let me grab the ingredients. How do you like your margarita, on the rocks or frozen?\\n\\n[Alex -> Alice] The pizza is out of the oven and ready to be sliced. Shall we toss the salad now?\\n\\n[Bob -> Alex] I prefer mine on the rocks, thanks.\\n\\n[Alice -> Alex] Yes, let's do that. I'll add the chicken, croutons, and Parmesan cheese now.\\n\\n[Alex -> Bob] Here you go, one margarita on the rocks for you and one for Alice. Enjoy!\\n\\n[Bob -> Alex] Thank you, it looks great. Let's have a taste and see how it turned out.\\n\\n[Alice -> Alex] This salad looks amazing, thank you for your help. Shall we serve everything now?\\n\\n[Alex -> Bob] How's the pizza?\\n\\n[Bob -> Alex] It's delicious, thanks for your help.\\n\\n[Alex -> Alice] You're welcome, the salad looks great. Yes, let's serve everything now. Enjoy your meal!\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1460 9999\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":8,\"location\":\"29510 -4300\"},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":13,\"location\":\"17360 -7010\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":16,\"location\":\"17360 -6910\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"props_\":[{\"name\":\"Name\",\"value\":\"label@0\",\"valueChanged\":true},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"10/26/2023\",\"valueChanged\":\"true\"},{\"name\":\"Path\",\"value\":\"/fileServer/02/10.json\",\"valueChanged\":true},{\"name\":\"Authors\",\"value\":\"- Johane\\n- Frank\\n- Antonello\",\"valueChanged\":\"true\"}],\"key\":18,\"location\":\"17110 -7030\"},\n{\"label\":\"Clear Text\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', '' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":20,\"location\":\"18010 -6300\"},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":23,\"location\":\"18090 -5650.1\",\"group\":26},\n{\"label\":\"Trigger Next Speaker\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"out_\":[{\"portId\":\"toAlex\",\"name\":\"toAlex\"},{\"portId\":\"toBob\",\"name\":\"toBob\"},{\"portId\":\"toAlice\",\"name\":\"toAlice\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const history = graphData.dfe.getInput( nodeData, 'history', [] );\\n  const nextSpeaker = graphData.dfe.getInput( nodeData, 'nextSpeaker', 'Alex' );\\n  const outputName = `to${nextSpeaker}`;\\n  graphData.dfe.fireOutput( nodeData, outputName, history );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":24,\"location\":\"23190 -5220\",\"group\":25,\"editorPosition\":[2439,857,629,337]},\n{\"label\":\"Alex Robot\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":26,\"location\":\"16098.103515625 -5692.109130859375\"},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":27,\"location\":\"18100 -5129.045\",\"group\":30,\"editorPosition\":[1810,1009,400,350]},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":true}],\"fileTypeName\":\"LLM\",\"key\":28,\"location\":\"17610 -5150\",\"group\":30},\n{\"label\":\"Alice Human\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":30,\"location\":\"16109.999515625 -5160.527130859375\"},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"fileTypeName\":\"LLM\",\"key\":32,\"location\":\"17600 -4607.891\",\"group\":34},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":33,\"location\":\"18090 -4597.991\",\"group\":34},\n{\"label\":\"Bob Human\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":34,\"location\":\"16079.999515625 -4640.000130859375\"},\n{\"label\":\"Chat\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":25,\"location\":\"18595.1455078125 -5219\"},\n{\"label\":\"DataFlow Engine\",\"color\":\"orange\",\"size\":\"420 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"lib/DataFlowEngine/1.5/DataFlowEngine.js\",\"key\":38,\"location\":\"22300 -7570\"},\n{\"label\":\"Get Class API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"show\",\"value\":\"public\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst show = graphData.dfe.getProperty( nodeData, 'show', 'public,private' );\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = graphData.dfe.getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          graphData.dfe.fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source, show ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    //const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const expr = new RegExp( /\\\\n\\\\s\\\\s(?<api>\\\\w+\\\\([^\\\\)]*\\\\))\\\\s+\\\\{/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":37,\"location\":\"22850 -7570\",\"editorPosition\":[787,1092,703,895]},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1170 1870\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":39,\"location\":\"23270 -7570\",\"doCompute\":\"DataFlow_Message\",\"label\":\"constructor(engineData)\\nloadModel()\\nget(keyOrData, name, defaultValue)\\nset(keyOrData, name, value)\\ngetPropertyNameList(nodeData)\\ngetProperty(nodeData, name, defaultValue)\\ngetPropertyList(nodeData)\\ngetInputNameList(nodeData)\\ngeOutputNameList(nodeData)\\ngetInputList(nodeData)\\ngetNodeDataValue(key, name, defaultValue)\\nisInputNew(nodeData, name)\\ngetInput(nodeData, name, defaultValue)\\nsetInput(nodeData, name, value)\\nfireOutput(nodeData, name, value)\\nisOutputConnected(nodeData, name)\\nisInputConnected(nodeData, name)\\nisSelfLoop(nodeData, inName)\\ngetInputLinkDataList(nodeData, name)\\ngetOutputLinkDataList(nodeData, name)\\nexecuteAction(nodeData, actionName)\\ndoRun()\\ndoStep()\\ndoPause()\\n_updateEngineNode(key)\\n_updateProperty(nodeData)\\n_selectNode(nodeData)\\n_fireOutputStep(nodeData, name, value)\\n_fireOutputFlow(nodeData, name, value)\\n_fireInput(nodeData, name, value)\\n_fireEvent(nodeData, name, value)\\n_getNextStepData()\\n_clearStep(stepInfo)\\n_addStep(stepInfo)\\n_getComputeBarrier(nodeData)\\n_updateInput(nodeData, name, value, inCondition)\"},\n{\"label\":\"Data Gate\",\"category\":\"DataFlow_DataGate\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Pass\",\"checked\":true}],\"in_\":[{\"portId\":\"reset\",\"name\":\"reset\"},{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"sender\\\": \\\"Alex\\\",\\n  \\\"receiver\\\": \\\"All\\\",\\n  \\\"text\\\": \\\"Good morning\\\"\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"doCompute\":\"DataFlow_DataGate\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":42,\"location\":\"21490 -5180\",\"group\":25,\"editorPosition\":[1766,932,400,350]},\n{\"label\":\"Basic Image\",\"category\":\"Pictures_Basic\",\"size\":\"966 463\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/Smile3-1.png\",\"key\":41,\"location\":\"20480 -6730\"},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alex\",\"valueChanged\":true},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"a robotic cook assistant\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Take the role of {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":43,\"location\":\"16600 -5670\",\"group\":26,\"editorPosition\":[787,1400,400,350]},\n{\"label\":\"Alex Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex has two arms and hands.\\nAlex can see and hear everything \\nAlex cannot move around.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":45,\"location\":\"16150 -5750\",\"group\":26},\n{\"label\":\"Situation\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex is the owner of the appartment.\\nAlice and Bob are friends that have \\nbeen invited by Alex for a dinner.\\nThey want to prepare and eat the dinner together.\\nThe rule is that every one can contribute \\nand participate in the choice of the food or \\ndrinks and in the preparation of them. \\nYou are all around a table.\\nIngredients are on the table or in the fridge.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":47,\"location\":\"16130 -6200\"},\n{\"label\":\"Alex Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to moderate the discussion between the humans;\\n2) to ask their preference and establish a menu based \\n   on the humans' wish and proposition as well as \\n   on his own recipes proposal;\\n3) propose actively ingredients;\\n4) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":49,\"location\":\"16150 -5530\",\"group\":26,\"editorPosition\":[788,868,400,350]},\n{\"label\":\"Alex Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Alex only wants to prepare pizza or cocktails,\\n  nothing else and you always find a polite and \\n  good way to justify this choice;\\n- Alex likes to make some jokes based on the \\n  current context;\\n- Alex is not very good at remembering where \\n  ingredients and tools are in his appartment\\n  and prefer to ask the humans to search for them;\\n- Alex always expresses himself with short sentences;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":54,\"location\":\"16150 -5650\",\"group\":26,\"editorPosition\":[788,516,400,350]},\n{\"label\":\"Bob Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Bob is open-minded;\\n- Bob likes strong cocktails;\\n- Bob is strongly allergic to peperonies;\\n- Bob is a good and careful father;\\n- Bob likes to teach italian words to his \\n  daughther;\\n- when Bob is surprised he often say \\\"cavolo\\\"\\n- Bob rarely thanks people\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":55,\"location\":\"16161.896 -5116.835999999999\",\"group\":30,\"editorPosition\":[1191,516,400,350]},\n{\"label\":\"Bob Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to participate in the discussion with Alice and \\n   Alex;\\n2) to contribute to establish a menu based on the \\n   other's wish and proposition;\\n3) to actiively propose ingredients\\n4) to take care of your daughther Alice.\\n5) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":56,\"location\":\"16161.896 -4996.835999999999\",\"group\":30,\"editorPosition\":[1192,869,400,350]},\n{\"label\":\"Bob Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Bob has all the capabilities of an adult human.\\nBob can see and hear everything.\\nBob can move around to fetch object.\\nBob knows how to use tools.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":57,\"location\":\"16161.896 -5216.835999999999\",\"group\":30,\"editorPosition\":[1190,165,400,350]},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Bob\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Alex\",\"valueChanged\":\"true\"},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"the father of Alice\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Take the role of {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":58,\"location\":\"16611.896 -5146.936\",\"group\":30,\"editorPosition\":[1599,1401,400,350]},\n{\"label\":\"Alice Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Alice likes to make fun of others;\\n- Alice like pizza and noodles;\\n- Alice hate spicy food;\\n- Alice is very active and willing to do \\n  as much as she can;\\n- Alice speak like a child \\n- Alice is like her father and never thanks people she \\n  prefers to make fun of them\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":59,\"location\":\"16131.896 -4587.891\",\"group\":34,\"editorPosition\":[1594,519,400,350]},\n{\"label\":\"Alice Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to be with the adults;\\n2) to have fun;\\n3) to learn from the adults or from the robot;\\n4) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":60,\"location\":\"16131.896 -4467.891\",\"group\":34,\"editorPosition\":[1595,872,400,350]},\n{\"label\":\"Alice Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alice has the capabilities of a 7 years old girl.\\nAlice can see and hear everything.\\nAlice can move around to fetch object.\\nAlice does not know how to use every tools.\\nAlice is not allowed to use dangerous tools.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":61,\"location\":\"16131.896 -4687.891\",\"group\":34,\"editorPosition\":[1592,166,400,350]},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alex\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"the daughter of Bob\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Take the role of {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":62,\"location\":\"16581.896 -4617.991\",\"group\":34,\"editorPosition\":[1195,1398,400,350]},\n{\"label\":\"Alex\",\"color\":\"transparent\",\"size\":\"730 150\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Alex</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":64,\"location\":\"17600 -5800\",\"font\":\"150px sans-serif\",\"group\":26,\"editorPosition\":[788,1220,404,176]},\n{\"label\":\"Bob\",\"color\":\"transparent\",\"size\":\"720 145\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Bob</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":65,\"location\":\"17620 -5270\",\"font\":\"150px sans-serif\",\"group\":30,\"editorPosition\":[1195,1220,399,176]},\n{\"label\":\"Alice\",\"color\":\"transparent\",\"size\":\"730 150\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Alice</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":66,\"location\":\"17600 -4757.891\",\"font\":\"150px sans-serif\",\"group\":34,\"editorPosition\":[1596,1223,402,175]},\n{\"label\":\"Capabilities\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 80px;\\\">Capabilities</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":67,\"location\":\"16160 -6090\",\"editorPosition\":[181,165,603,347]},\n{\"label\":\"Personality\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 80px;\\\">Personality</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":69,\"location\":\"16160 -6040\",\"editorPosition\":[182,517,603,347]},\n{\"label\":\"Goals\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 80px;\\\">Goals</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":71,\"location\":\"16160 -5990\",\"editorPosition\":[184,869,601,346]},\n{\"label\":\"Template\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 80px;\\\">Template</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":46,\"location\":\"16620 -5990\",\"editorPosition\":[199,1400,584,347]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":53,\"location\":\"19790 -5710\"},\n{\"label\":\"Clear JSON\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', [] );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":63,\"location\":\"20010 -5710\"},\n{\"label\":\"Broadcast on Speech\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"onStart\",\"name\":\"onStart\"},{\"portId\":\"onStop\",\"name\":\"onStop\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'onStop' ) {\\n  const nextSpeaker = graphData.dfe.getInput( nodeData, 'nextSpeaker', 'Alex' );\\n  if( nextSpeaker == 'Alex' ) {\\n    const outValue = graphData.dfe.getInput( nodeData, 'in', [] );\\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\\nif( name == 'onStart' ) {\\n  const nextSpeaker = graphData.dfe.getInput( nodeData, 'nextSpeaker', 'Alex' );\\n  if( nextSpeaker != 'Alex' ) {\\n    const outValue = graphData.dfe.getInput( nodeData, 'in', [] );\\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":68,\"location\":\"21140 -5170\",\"group\":25},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":77,\"location\":\"25690 -4540\"},\n{\"label\":\"Get TTS Voices \",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"shaKey\",\"name\":\"shaKey\"},{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst voiceList = speechSynthesis.getVoices();\\nif( !voiceList ) {\\n  voiceList = speechSynthesis.getVoices();\\n}\\n//const outValue = voiceList.map( (e,i)=> { return( { id:i, name:e.name, lang: e.lang } ) } );\\nconst outValue = voiceList.map( (e ,i)=> `id: ${i}, name: ${e.name},  lang: ${e.lang}` );\\ngraphData.dfe.fireOutput( nodeData, 'out', outValue );\\nconst shaKey = SHA1( JSON.stringify(outValue) );\\ngraphData.dfe.fireOutput( nodeData, 'shaKey', shaKey );\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":81,\"location\":\"25880 -4555.7228474983085\",\"editorPosition\":[1544,1449,782,306]},\n{\"label\":\"[\\n  \\\"id: 0, name: Microsoft David - English (United States),  lang: en-US\\\",\\n  \\\"id: 1, name: Microsoft Katja - German (Germany),  lang: de-DE\\\",\\n  \\\"id: 2, name: Microsoft Stefan - German (Germany),  lang: de-DE\\\",\\n  \\\"id: 3, name: Microsoft Hedda - German (Germany),  lang: de-DE\\\",\\n  \\\"id: 4, name: Microsoft Mark - English (United States),  lang: en-US\\\",\\n  \\\"id: 5, name: Microsoft Zira - English (United States),  lang: en-US\\\",\\n  \\\"id: 6, name: Microsoft Hortense - French (France),  lang: fr-FR\\\",\\n  \\\"id: 7, name: Microsoft Julie - French (France),  lang: fr-FR\\\",\\n  \\\"id: 8, name: Microsoft Paul - French (France),  lang: fr-FR\\\",\\n  \\\"id: 9, name: Google Deutsch,  lang: de-DE\\\",\\n  \\\"id: 10, name: Google US English,  lang: en-US\\\",\\n  \\\"id: 11, name: Google UK English Female,  lang: en-GB\\\",\\n  \\\"id: 12, name: Google UK English Male,  lang: en-GB\\\",\\n  \\\"id: 13, name: Google espa\\u00f1ol,  lang: es-ES\\\",\\n  \\\"id: 14, name: Google espa\\u00f1ol de Estados Unidos,  lang: es-US\\\",\\n  \\\"id: 15, name: Google fran\\u00e7ais,  lang: fr-FR\\\",\\n  \\\"id: 16, name: Google \\u0939\\u093f\\u0928\\u094d\\u0926\\u0940,  lang: hi-IN\\\",\\n  \\\"id: 17, name: Google Bahasa Indonesia,  lang: id-ID\\\",\\n  \\\"id: 18, name: Google italiano,  lang: it-IT\\\",\\n  \\\"id: 19, name: Google \\u65e5\\u672c\\u8a9e,  lang: ja-JP\\\",\\n  \\\"id: 20, name: Google \\ud55c\\uad6d\\uc758,  lang: ko-KR\\\",\\n  \\\"id: 21, name: Google Nederlands,  lang: nl-NL\\\",\\n  \\\"id: 22, name: Google polski,  lang: pl-PL\\\",\\n  \\\"id: 23, name: Google portugu\\u00eas do Brasil,  lang: pt-BR\\\",\\n  \\\"id: 24, name: Google \\u0440\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439,  lang: ru-RU\\\",\\n  \\\"id: 25, name: Google\\u00a0\\u666e\\u901a\\u8bdd\\uff08\\u4e2d\\u56fd\\u5927\\u9646\\uff09,  lang: zh-CN\\\",\\n  \\\"id: 26, name: Google\\u00a0\\u7ca4\\u8a9e\\uff08\\u9999\\u6e2f\\uff09,  lang: zh-HK\\\",\\n  \\\"id: 27, name: Google \\u570b\\u8a9e\\uff08\\u81fa\\u7063\\uff09,  lang: zh-TW\\\"\\n]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 3320\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":85,\"location\":\"26340 -2940\"},\n{\"label\":\"Opera on Mac OS [#144]\\n[\\n  \\\"id: 0, name: Daniel,  lang: en-GB\\\",\\n  \\\"id: 1, name: Albert,  lang: en-US\\\",\\n  \\\"id: 2, name: Alice (Enhanced),  lang: it-IT\\\",\\n  \\\"id: 3, name: Alice,  lang: it-IT\\\",\\n  \\\"id: 4, name: Alva,  lang: sv-SE\\\",\\n  \\\"id: 5, name: Am\\u00e9lie,  lang: fr-CA\\\",\\n  \\\"id: 6, name: Amira,  lang: ms-MY\\\",\\n  \\\"id: 7, name: Anna,  lang: de-DE\\\",\\n  \\\"id: 8, name: Bad News,  lang: en-US\\\",\\n  \\\"id: 9, name: Bahh,  lang: en-US\\\",\\n  \\\"id: 10, name: Bells,  lang: en-US\\\",\\n  \\\"id: 11, name: Boing,  lang: en-US\\\",\\n  \\\"id: 12, name: Bubbles,  lang: en-US\\\",\\n  \\\"id: 13, name: Carmit,  lang: he-IL\\\",\\n  \\\"id: 14, name: Cellos,  lang: en-US\\\",\\n  \\\"id: 15, name: Damayanti,  lang: id-ID\\\",\\n  \\\"id: 16, name: Daria,  lang: bg-BG\\\",\\n  \\\"id: 17, name: Wobble,  lang: en-US\\\",\\n  \\\"id: 18, name: Eddy (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 19, name: Eddy (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 20, name: Eddy (English (US)),  lang: en-US\\\",\\n  \\\"id: 21, name: Eddy (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 22, name: Eddy (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 23, name: Eddy (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 24, name: Eddy (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 25, name: Eddy (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 26, name: Eddy (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 27, name: Eddy (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 28, name: Ellen,  lang: nl-BE\\\",\\n  \\\"id: 29, name: Flo (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 30, name: Flo (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 31, name: Flo (English (US)),  lang: en-US\\\",\\n  \\\"id: 32, name: Flo (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 33, name: Flo (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 34, name: Flo (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 35, name: Flo (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 36, name: Flo (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 37, name: Flo (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 38, name: Flo (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 39, name: Fred,  lang: en-US\\\",\\n  \\\"id: 40, name: Good News,  lang: en-US\\\",\\n  \\\"id: 41, name: Grandma (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 42, name: Grandma (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 43, name: Grandma (English (US)),  lang: en-US\\\",\\n  \\\"id: 44, name: Grandma (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 45, name: Grandma (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 46, name: Grandma (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 47, name: Grandma (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 48, name: Grandma (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 49, name: Grandma (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 50, name: Grandma (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 51, name: Grandpa (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 52, name: Grandpa (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 53, name: Grandpa (English (US)),  lang: en-US\\\",\\n  \\\"id: 54, name: Grandpa (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 55, name: Grandpa (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 56, name: Grandpa (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 57, name: Grandpa (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 58, name: Grandpa (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 59, name: Grandpa (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 60, name: Grandpa (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 61, name: Jester,  lang: en-US\\\",\\n  \\\"id: 62, name: Ioana,  lang: ro-RO\\\",\\n  \\\"id: 63, name: Jacques,  lang: fr-FR\\\",\\n  \\\"id: 64, name: Joana,  lang: pt-PT\\\",\\n  \\\"id: 65, name: Junior,  lang: en-US\\\",\\n  \\\"id: 66, name: Kanya,  lang: th-TH\\\",\\n  \\\"id: 67, name: Karen,  lang: en-AU\\\",\\n  \\\"id: 68, name: Kate (Enhanced),  lang: en-GB\\\",\\n  \\\"id: 69, name: Kathy,  lang: en-US\\\",\\n  \\\"id: 70, name: Kyoko,  lang: ja-JP\\\",\\n  \\\"id: 71, name: Lana,  lang: hr-HR\\\",\\n  \\\"id: 72, name: Laura,  lang: sk-SK\\\",\\n  \\\"id: 73, name: Lekha,  lang: hi-IN\\\",\\n  \\\"id: 74, name: Lesya,  lang: uk-UA\\\",\\n  \\\"id: 75, name: Linh,  lang: vi-VN\\\",\\n  \\\"id: 76, name: Luciana,  lang: pt-BR\\\",\\n  \\\"id: 77, name: Majed,  lang: ar-001\\\",\\n  \\\"id: 78, name: T\\u00fcnde,  lang: hu-HU\\\",\\n  \\\"id: 79, name: Meijia,  lang: zh-TW\\\",\\n  \\\"id: 80, name: Melina,  lang: el-GR\\\",\\n  \\\"id: 81, name: Milena,  lang: ru-RU\\\",\\n  \\\"id: 82, name: Moira,  lang: en-IE\\\",\\n  \\\"id: 83, name: M\\u00f3nica,  lang: es-ES\\\",\\n  \\\"id: 84, name: Montse,  lang: ca-ES\\\",\\n  \\\"id: 85, name: Nora,  lang: nb-NO\\\",\\n  \\\"id: 86, name: Organ,  lang: en-US\\\",\\n  \\\"id: 87, name: Paulina,  lang: es-MX\\\",\\n  \\\"id: 88, name: Superstar,  lang: en-US\\\",\\n  \\\"id: 89, name: Ralph,  lang: en-US\\\",\\n  \\\"id: 90, name: Reed (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 91, name: Reed (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 92, name: Reed (English (US)),  lang: en-US\\\",\\n  \\\"id: 93, name: Reed (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 94, name: Reed (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 95, name: Reed (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 96, name: Reed (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 97, name: Reed (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 98, name: Reed (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 99, name: Rishi,  lang: en-IN\\\",\\n  \\\"id: 100, name: Rocko (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 101, name: Rocko (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 102, name: Rocko (English (US)),  lang: en-US\\\",\\n  \\\"id: 103, name: Rocko (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 104, name: Rocko (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 105, name: Rocko (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 106, name: Rocko (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 107, name: Rocko (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 108, name: Rocko (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 109, name: Rocko (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 110, name: Samantha,  lang: en-US\\\",\\n  \\\"id: 111, name: Sandy (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 112, name: Sandy (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 113, name: Sandy (English (US)),  lang: en-US\\\",\\n  \\\"id: 114, name: Sandy (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 115, name: Sandy (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 116, name: Sandy (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 117, name: Sandy (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 118, name: Sandy (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 119, name: Sandy (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 120, name: Sandy (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 121, name: Sara,  lang: da-DK\\\",\\n  \\\"id: 122, name: Satu,  lang: fi-FI\\\",\\n  \\\"id: 123, name: Shelley (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 124, name: Shelley (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 125, name: Shelley (English (US)),  lang: en-US\\\",\\n  \\\"id: 126, name: Shelley (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 127, name: Shelley (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 128, name: Shelley (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 129, name: Shelley (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 130, name: Shelley (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 131, name: Shelley (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 132, name: Shelley (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 133, name: Sinji,  lang: zh-HK\\\",\\n  \\\"id: 134, name: Tessa,  lang: en-ZA\\\",\\n  \\\"id: 135, name: Thomas,  lang: fr-FR\\\",\\n  \\\"id: 136, name: Tingting,  lang: zh-CN\\\",\\n  \\\"id: 137, name: Trinoids,  lang: en-US\\\",\\n  \\\"id: 138, name: Whisper,  lang: en-US\\\",\\n  \\\"id: 139, name: Xander,  lang: nl-NL\\\",\\n  \\\"id: 140, name: Yelda,  lang: tr-TR\\\",\\n  \\\"id: 141, name: Yuna,  lang: ko-KR\\\",\\n  \\\"id: 142, name: Zarvox,  lang: en-US\\\",\\n  \\\"id: 143, name: Zosia,  lang: pl-PL\\\",\\n  \\\"id: 144, name: Zuzana,  lang: cs-CZ\\\"\\n]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 3970\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":79,\"location\":\"31180 -2130\"},\n{\"label\":\"YouTube: MemGPT \\ud83e\\udde0 Giving AI Unlimited Prompt Size\",\"color\":\"lightsalmon\",\"size\":\"480 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"http://www.youtube.com/embed/QQ2QOPWZKVc\",\"key\":86,\"location\":\"25530 -7050\"},\n{\"label\":\"ArXiv: MemGPT: Towards LLMs AS OS\",\"color\":\"lightsalmon\",\"size\":\"480 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"https://arxiv.org/pdf/2310.08560.pdf\",\"key\":88,\"location\":\"25520 -7190\",\"editorPosition\":[2493,570,1300,1288]},\n{\"label\":\"Site: MemGPT: Towards LLMs AS OS\",\"color\":\"lightsalmon\",\"size\":\"480 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"https://memgpt.ai/\",\"key\":90,\"location\":\"25530 -7320\"},\n{\"label\":\"Google\",\"color\":\"lightsalmon\",\"size\":\"480 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"https://www.google.com/\",\"key\":72,\"location\":\"24890 -7500\",\"isPopup\":true},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"chatHistory\",\"name\":\"chatHistory\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alex\",\"valueChanged\":true},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"This is the state of conversation until now:\\n{chatHistory}\\n\\nGive the most probable reaction of {name} to the \\ncurrent conversation.\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to say something to {other1}: \\n   [{name} -> {other1}] <your sentence>\\nc) if you want to say something to {other2}: \\n   [{name} -> {other2}] <your sentence>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak. Try to be concise and not \\nrepeat yourself or others. Try to reach a plan as \\nquick as possible.\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":73,\"location\":\"17160 -5590\",\"group\":26},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"chatHistory\",\"name\":\"chatHistory\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Bob\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Alex\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"This is the state of conversation until now:\\n{chatHistory}\\n\\nGive the most probable reaction of {name} to the \\ncurrent conversation.\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to say something to {other1}: \\n   [{name} -> {other1}] <your sentence>\\nc) if you want to say something to {other2}: \\n   [{name} -> {other2}] <your sentence>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak. Try to be concise and not \\nrepeat yourself or others. Try to reach a plan as \\nquick as possible.\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":75,\"location\":\"17160 -5080\",\"group\":30},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"chatHistory\",\"name\":\"chatHistory\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alex\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"This is the state of conversation until now:\\n{chatHistory}\\n\\nGive the most probable reaction of {name} to the \\ncurrent conversation.\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to say something to {other1}: \\n   [{name} -> {other1}] <your sentence>\\nc) if you want to say something to {other2}: \\n   [{name} -> {other2}] <your sentence>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak. Try to be concise and not \\nrepeat yourself or others. Try to reach a plan as \\nquick as possible.\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":76,\"location\":\"17160 -4537.991\",\"group\":34},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":78,\"location\":\"20110 -4610\",\"label\":\"Alex speaks\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":83,\"location\":\"20260 -4650\",\"label\":\"Human speaks\",\"color\":\"plum\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"100 40\",\"key\":91,\"location\":\"20110 -4650\",\"label\":\"AI\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"110 40\",\"key\":92,\"location\":\"20410 -4610\",\"label\":\"AI\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":93,\"location\":\"20520 -4610\",\"label\":\"Alex speaks\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":100,\"location\":\"20570 -4450\",\"label\":\"Alex speaks\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"110 40\",\"key\":101,\"location\":\"20460 -4450\",\"label\":\"AI\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"200 40\",\"key\":102,\"location\":\"20110 -4490\",\"label\":\"AI\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":103,\"location\":\"20310 -4490\",\"label\":\"Human speaks\",\"color\":\"plum\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":104,\"location\":\"20110 -4450\",\"label\":\"Alex speaks\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":113,\"location\":\"20110 -4740\",\"label\":\"Human speaks\",\"color\":\"plum\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"100 40\",\"key\":114,\"location\":\"20110 -4780\",\"label\":\"AI\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":115,\"location\":\"20260 -4780\",\"label\":\"Human speaks\",\"color\":\"plum\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightCenter\",\"size\":\"100 40\",\"key\":117,\"location\":\"20260 -4880\",\"label\":\"AI\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":118,\"location\":\"20110 -4840\",\"label\":\"Human speaks\",\"color\":\"plum\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":119,\"location\":\"20360 -4880\",\"label\":\"Alex speaks\"},\n{\"label\":\"Next Speaker Selection\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"},{\"name\":\"actorList\",\"value\":\"- Alex\\n- Bob\\n- Alice\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst sender = value.sender;\\nconst receiver = value.receiver;\\n\\nconst nextSpeaker = getNextSpeaker( sender, receiver );  \\ngraphData.dfe.fireOutput( nodeData, 'nextSpeaker', nextSpeaker );\\ngraphData.dfe.fireOutput( nodeData, 'out', value );\\n\\n\\nfunction getNextSpeaker( sender, receiver ) {\\n  let result = '';\\n  if( receiver == 'All' ) {\\n    const actorList = graphData.dfe.getProperty( nodeData, 'actorList', '[]' );\\n    const actors = jsyaml.load( actorList );\\n    const filterActor = actors.filter( (n)=> !n.endsWith( sender ) );\\n    // Select a random index for the remaining actors\\n    const idx = Math.floor( Math.random()*filterActor.length );\\n    result = filterActor[idx];\\n  } else {\\n    result = receiver;\\n  }\\n  return( result );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":89,\"location\":\"19800 -5150.200000000001\",\"group\":25,\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"Next Speaker Selection\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"},{\"name\":\"actorList\",\"value\":\"- Alex\\n- Bob\\n- Alice\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst sender = value.sender;\\nconst receiver = value.receiver;\\n\\nconst nextSpeaker = getNextSpeaker( sender, receiver );  \\ngraphData.dfe.fireOutput( nodeData, 'nextSpeaker', nextSpeaker );\\ngraphData.dfe.fireOutput( nodeData, 'out', value );\\n\\n\\nfunction getNextSpeaker( sender, receiver ) {\\n  let result = '';\\n  if( receiver == 'All' ) {\\n    const actorList = graphData.dfe.getProperty( nodeData, 'actorList', '[]' );\\n    const actors = jsyaml.load( actorList );\\n    const filterActor = actors.filter( (n)=> !n.endsWith( sender ) );\\n    // Select a random index for the remaining actors\\n    const idx = Math.floor( Math.random()*filterActor.length );\\n    result = filterActor[idx];\\n  } else {\\n    result = receiver;\\n  }\\n  return( result );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":95,\"location\":\"35199.482 -8560.2\",\"group\":99,\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"410 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"messageIn\",\"name\":\"messageIn\"},{\"portId\":\"clear\",\"name\":\"clear\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/user2.png }\\n- { name: Bob, url: ~/user1.png }\\n- { name: Alex, url: ~/robot.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"key\":96,\"location\":\"34609.482 -8550\",\"editorPosition\":[2345,385,400,1541],\"group\":99,\"history\":[]},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"370 60\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":98,\"location\":\"35619.482 -8559.9\",\"group\":99},\n{\"label\":\"Test Next Speaker component\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":99,\"location\":\"34340 -8530\"},\n{\"label\":\"Trigger Next Speaker\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"nextSpeaker\",\"name\":\"nextSpeaker\"}],\"out_\":[{\"portId\":\"toAlex\",\"name\":\"toAlex\"},{\"portId\":\"toBob\",\"name\":\"toBob\"},{\"portId\":\"toAlice\",\"name\":\"toAlice\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const history = graphData.dfe.getInput( nodeData, 'history', [] );\\n  const nextSpeaker = graphData.dfe.getInput( nodeData, 'nextSpeaker', 'Alex' );\\n  const outputName = `to${nextSpeaker}`;\\n  graphData.dfe.fireOutput( nodeData, outputName, history );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":105,\"location\":\"35720 -8445\",\"group\":99,\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"530 270\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":108,\"location\":\"36110 -8535\",\"group\":99},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":121,\"location\":\"34360 -8425\",\"group\":99},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"530 270\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":123,\"location\":\"36110 -8805\",\"group\":99},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"530 270\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":125,\"location\":\"36110 -8255\",\"group\":99},\n{\"label\":\"Clear JSON\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', [] );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":126,\"location\":\"35720 -8365\",\"group\":99},\n{\"label\":\"Trigger Next Turn\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"messageIn\",\"name\":\"messageIn\"},{\"portId\":\"onSpeechStop\",\"name\":\"onSpeechStop\"}],\"out_\":[{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const messageIn = graphData.dfe.getInput( nodeData, 'messageIn', [] );\\n  graphData.dfe.fireOutput( nodeData, 'messageOut', messageIn );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":127,\"location\":\"18740 -5230\",\"group\":25,\"editorPosition\":[2255,323,644,323]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":107,\"location\":\"18440 -5500\"},\n{\"label\":\"onStop\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"50 30\",\"key\":120,\"location\":\"20240 -4920\"},\n{\"label\":\"onStart\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"50 30\",\"key\":94,\"location\":\"20090 -4920\"},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"false\",\"valueChanged\":\"true\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\"}],\"fileTypeName\":\"LLM\",\"key\":106,\"location\":\"22630 -5290\",\"group\":25},\n{\"label\":\"Convert message to String\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst response = `[${value.sender} -> ${value.receiver}] ${value.text}`;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', response );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":109,\"location\":\"21830 -5180\"},\n{\"label\":\"System prompt\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Take the role of an observer \\nof a conversation.\\nYour goal is:\\n1)to create summaries \\nof the conversation you observe\\nIf your previous summary is empty \\njust return the new message as is without \\nany additional comments.\\n2) To make sure that only important information \\nare kept in the summary \\n3) that the summary does not exceed 200 words\\n\\nExample1:\\n  previous summary: \\n\\n  new message: [Alex -> All] Hi All\\n  new summary: Alex great everyone\\n\\nExample2:\\n  previous summary: \\n    Alex great everyone\\n  new message: [Bob -> All] What shall we cook today?\\n  new summary: Alex great everyone then Bob asked what to cook.\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":111,\"location\":\"16130 -6390\"},\n{\"label\":\"Alex greeted everyone and said good morning.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"790 920\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":131,\"location\":\"24020 -5610\"},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"hasHistory\",\"value\":\"false\",\"valueChanged\":\"true\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\"}],\"fileTypeName\":\"LLM\",\"key\":132,\"location\":\"35508.43221422499 -10237.077350743282\",\"group\":112},\n{\"label\":\"System prompt\",\"category\":\"DataFlow_Data\",\"size\":\"240 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Take the role of an observer \\nof a conversation.\\nYour goal is:\\n1)to create summaries \\nof the conversation you observe\\nIf your previous summary is empty \\njust return the new message as is without \\nany additional comments.\\n2) To make sure that only important information \\nare kept in the summary \\n3) that the summary does not exceed 200 words\\n\\nExample1:\\n  previous summary: \\n\\n  new message: [Alex -> All] Hi All\\n  new summary: Alex great everyone\\n\\nExample2:\\n  previous summary: \\n    Alex great everyone\\n  new message: [Bob -> All] What shall we cook today?\\n  new summary: Alex great everyone then Bob asked what to cook.\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":133,\"location\":\"35050 -10290.1\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":135,\"location\":\"34860 -10290\",\"group\":112},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Alex -> All] Hi all\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":142,\"location\":\"34480 -10210\",\"group\":112},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Bob -> All] Hi, let's make a pizza\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":143,\"location\":\"34480 -10100\",\"group\":112},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Alice -> All] I would prefer some pasta\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":144,\"location\":\"34480 -9990\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":146,\"location\":\"34270 -10210\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":147,\"location\":\"34270 -10100\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":148,\"location\":\"34270 -9990\",\"group\":112},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1260 180\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":151,\"location\":\"35930 -10330\",\"group\":112},\n{\"label\":\"Bob suggested making pizza and Alice had a preference for pasta.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1940 1030\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":154,\"location\":\"35930 -9715\",\"group\":112},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"summary\",\"name\":\"summary\"},{\"portId\":\"newMessage\",\"name\":\"newMessage\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"newMessage\",\"valueChanged\":true},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"here is your last summary:\\n{summary}\\n\\nhere is the new message:\\n{newMessage}\\n\\ncreate a new summary based \\non the previous one and the new message\\n\\nnew summary:\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":157,\"location\":\"35130 -10110\",\"group\":112},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[Alice -> All] I would prefer some pasta\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":163,\"location\":\"34810 -10100\",\"group\":112},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"summary\",\"name\":\"summary\"},{\"portId\":\"newMessage\",\"name\":\"newMessage\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"newMessage\",\"valueChanged\":true},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"}],\"isFile\":true,\"fileContent\":\"here is your last summary:\\n{summary}\\n\\nhere is the new message:\\n{newMessage}\\n\\ncreate a new summary based \\non the previous one and the new message\\n\\nnew summary:\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":110,\"location\":\"22240 -5190\",\"group\":25},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\",\"tooltip\":\"this input expects a string \\nthat defines the system prompt\"},{\"portId\":\"user\",\"name\":\"user\",\"tooltip\":\"this input expects a string \\nthat defines the user prompt\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\",\"tooltip\":\"this output is a JSON array \\nthat contains the dialog history\"},{\"portId\":\"assistant\",\"name\":\"assistant\",\"tooltip\":\"this output is a string that \\ndefines the system answer\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\",\"nameTooltip\":\"this property defines the\\nname ot the LLM model used\",\"valueTooltip\":\"gpt-4: 8,192 tokens\\ngpt-4-32k: 32,768 tokens\\ngpt-3.5-turbo: 4,097 tokens\\ngpt-3.5-turbo-16k: 16,385 tokens\"},{\"name\":\"hasHistory\",\"value\":\"false\",\"tooltip\":\"if true this property will create \\nan history based on each system output \\nand user input otherwise \\nno history is used nor fired\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"tooltip\":\"in case of error from the LLM server \\nthe query will be retried this number of time\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\",\"tooltip\":\"this property defines the time before retry\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"tooltip\":\"this property defines the AND combination of \\ninput names that will trigger an \\n\\\"doCompute\\\" call in the component\"}],\"fileTypeName\":\"LLM\",\"key\":116,\"location\":\"17670 -4180\"},\n{\"label\":\"Test summary of dialog\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":112,\"location\":\"34250 -9810\"},\n{\"label\":\"7f9b78a0793ec8e7ce5470b4c17889728c4c246e\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1190 60\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":128,\"location\":\"26350 -4640\"},\n{\"label\":\"TTS\",\"category\":\"DataFlow_Component\",\"size\":\"260 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"onStart\",\"name\":\"onStart\"},{\"portId\":\"onStop\",\"name\":\"onStop\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"voiceMap\",\"value\":\"- {name: Alex, id: 0}\\n- {name: Bob, id: 12}\\n- {name: Alice, id: 11}\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst voiceMap = graphData.dfe.getProperty( nodeData, 'voiceMap', '' );\\nconst voiceMapList = jsyaml.load( voiceMap );\\nlet voiceId = 0;\\nif( voiceMapList && voiceMapList.length ) {\\n  voiceMapList.forEach( (e)=> { if( value.sender == e.name ) voiceId = e.id } );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'onStart' );\\nif( !value.text.endsWith( '(silence)' ) ) {\\n  saySentence( value.text, voiceId, fireOnStop );\\n} else {\\n  fireOnStop();\\n}\\n\\nfunction fireOnStop() {\\n  graphData.dfe.fireOutput( nodeData, 'onStop' )\\n}\\nfunction saySentence( message, voiceId, onEnd ) {\\n  // Select voice\\n  //let voiceId = 0;\\n  // VoiceList cache\\n  let voiceList = null;\\n  \\n  // Callback when tts finished speaking\\n  const onTTSEnd = ()=> {\\n    if( onEnd ) {\\n      onEnd();\\n    }\\n  }\\n\\n  let isVoicePresent = false;\\n  let utterance = null;\\n  // Get voice\\n  utterance = new SpeechSynthesisUtterance( message );\\n  utterance.onerror = console.log;\\n  //console.log( 'say', this.voiceId, message);\\n  \\n  if( !voiceList || !voiceList.length ) {\\n    voiceList = speechSynthesis.getVoices();\\n  }\\n  \\n  // If we got the list of voices\\n  if( voiceList && voiceList.length ) {\\n    // Get a correct index for a voice\\n    const vIdx = voiceId % voiceList.length;\\n    // Set voice\\n    utterance.voice = voiceList[vIdx];\\n    isVoicePresent = true;\\n  }\\n\\n  if( isVoicePresent && utterance ) {\\n    utterance.addEventListener( 'end', onTTSEnd, { once: true } );\\n    speechSynthesis.speak( utterance );\\n  } else {\\n    // Use heuristic timer to call the on end\\n    const timeout = Math.max( 2, message.length*200 );\\n    setTimeout( onTTSEnd, timeout );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":124,\"location\":\"20380 -5270.1\",\"editorPosition\":[1669,439,567,822],\"group\":25},\n{\"label\":\"TTS\",\"category\":\"DataFlow_Component\",\"size\":\"620 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"onStart\",\"name\":\"onStart\"},{\"portId\":\"onStop\",\"name\":\"onStop\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"voiceMap\",\"value\":\"7f9b78: # Frank home\\n - {name: Alex, voice: Microsoft David - English (United States)}\\n - {name: Bob, voice: Google UK English Male}\\n - {name: Alice, voice: Google UK English Female}\\nc7275b: # Antonello home\\n - {name: Alex, voice: Microsoft David - English (United States)}\\n - {name: Bob, voice: Google UK English Male}\\n - {name: Alice, voice: Google UK English Female}\\n81b1a5: # Frank honda\\n - {name: Alex, voice: Microsoft David - English (United States)}\\n - {name: Bob, voice: Google UK English Male}\\n - {name: Alice, voice: Google UK English Female}\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst voiceMap = graphData.dfe.getProperty( nodeData, 'voiceMap', '' );\\nlet voiceMapList = jsyaml.load( voiceMap );\\n\\n// Extract the array that match the browser voice configuration\\nif( !Array.isArray( voiceMapList )) {\\n  const voiceList = getVoiceList();\\n  const voiceListStrArray = voiceList.map( (e ,i)=> `id: ${i}, name: ${e.name},  lang: ${e.lang}` );\\n\\n  const shaKey = SHA1( JSON.stringify( voiceListStrArray ) );\\n  const key = shaKey.substring( 0, 6 );\\n  if( voiceMapList[key] ) {\\n    voiceMapList = voiceMapList[key];\\n  } else {\\n    voiceMapList = [];\\n  }\\n}\\n\\nlet voiceId = 0;\\nif( voiceMapList && voiceMapList.length ) {\\n  let voiceName = '';\\n  voiceMapList.forEach( (e)=> { if( value.sender == e.name ) voiceName = e.voice } );\\n  voiceId = getVoiceIdFronName( voiceName );\\n}\\n\\nif( !value.text.endsWith( '(silence)' ) ) {\\n  saySentence( value.text, voiceId, fireOnStop );\\n  graphData.dfe.fireOutput( nodeData, 'onStart' );\\n} else {\\n  fireOnStop();\\n}\\nfunction getVoiceIdFronName( name ) {\\n  const voiceList = getVoiceList();\\n  for( let i = 0; i < voiceList.length; ++i ) {\\n    const voice = voiceList[i];\\n    if( voice.name == name ) {\\n      return( i );\\n    }\\n  }\\n  return( 0 );\\n}\\nfunction getVoiceList() {\\n  let result = [];\\n\\n  result = speechSynthesis.getVoices();\\n  if( !result ) {\\n    result = speechSynthesis.getVoices();\\n  }\\n  return( result );\\n}\\nfunction fireOnStop() {\\n  graphData.dfe.fireOutput( nodeData, 'onStop' )\\n}\\nfunction saySentence( message, voiceId, onEnd ) {\\n  // Select voice\\n  //let voiceId = 0;\\n  // VoiceList cache\\n  let voiceList = null;\\n  \\n  // Callback when tts finished speaking\\n  const onTTSEnd = ()=> {\\n    if( onEnd ) {\\n      onEnd();\\n    }\\n  }\\n\\n  let isVoicePresent = false;\\n  let utterance = null;\\n  // Get voice\\n  utterance = new SpeechSynthesisUtterance( message );\\n  utterance.onerror = console.log;\\n  //console.log( 'say', this.voiceId, message);\\n  \\n  \\n  \\n  // If we got the list of voices\\n  if( voiceList && voiceList.length ) {\\n    // Get a correct index for a voice\\n    const vIdx = voiceId % voiceList.length;\\n    // Set voice\\n    utterance.voice = voiceList[vIdx];\\n    isVoicePresent = true;\\n  }\\n\\n  //if( isVoicePresent && utterance ) {\\n  if( utterance ) {\\n    utterance.addEventListener( 'end', onTTSEnd, { once: true } );\\n    speechSynthesis.speak( utterance );\\n  } else {\\n    // Use heuristic timer to call the on end\\n    const timeout = Math.max( 2, message.length*200 );\\n    setTimeout( onTTSEnd, timeout );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":129,\"location\":\"34340.61857351638 -7680.384907871436\",\"editorPosition\":[2286,281,809,799]}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlex\",\"toPort\":\"chatHistory\",\"from\":24,\"to\":73,\"points\":[23493.0205078125,-5240,23503.0205078125,-5240,23900,-5240,23900,-4350,17000,-4350,17000,-5590,17058.9794921875,-5590,17068.9794921875,-5590],\"key\":-2},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"clear\",\"from\":20,\"to\":2,\"points\":[18290.4619140625,-6300,18300.4619140625,-6300,18620,-6300,19090,-5250,19110.517578125,-5250,19120.517578125,-5250],\"key\":-13},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":12,\"to\":23,\"points\":[17924.0205078125,-5650,17934.0205078125,-5650,18048.103515625,-5650.1,18058.103515625,-5650.1],\"key\":-14},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":23,\"to\":127,\"points\":[18370.4619140625,-5650.1,18380.4619140625,-5650.1,18560,-5650,18560,-5250,18617.1455078125,-5240,18627.1455078125,-5240],\"key\":-15},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":28,\"to\":27,\"points\":[17934.0205078125,-5140,17944.0205078125,-5140,18058.103515625,-5129.045,18068.103515625,-5129.045],\"key\":-16},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":32,\"to\":33,\"points\":[17924.0205078125,-4597.891,17934.0205078125,-4597.891,18048.103515625,-4597.991,18058.103515625,-4597.991],\"key\":-21},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":27,\"to\":127,\"points\":[18380.4619140625,-5129.045,18390.4619140625,-5129.045,18560,-5130,18560,-5240,18617.1455078125,-5240,18627.1455078125,-5240],\"key\":-24},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":33,\"to\":127,\"points\":[18370.4619140625,-4597.991,18380.4619140625,-4597.991,18570,-4600,18570,-5230,18617.1455078125,-5240,18627.1455078125,-5240],\"key\":-25},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toBob\",\"toPort\":\"chatHistory\",\"from\":24,\"to\":75,\"points\":[23493.0205078125,-5220,23503.0205078125,-5220,23890,-5220,23890,-4360,17010,-4360,17010,-5080,17058.9794921875,-5080,17068.9794921875,-5080],\"key\":-28},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlice\",\"toPort\":\"chatHistory\",\"from\":24,\"to\":76,\"points\":[23493.0205078125,-5200,23503.0205078125,-5200,23880,-5200,23880,-4370,17020,-4370,17020,-4540,17058.9794921875,-4537.991,17068.9794921875,-4537.991],\"key\":-29},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":20,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16060,-6300,17968.103515625,-6300,17978.103515625,-6300],\"key\":-30},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":37,\"to\":39,\"points\":[23160.4619140625,-7570,23170.4619140625,-7570,23228.103515625,-7570,23238.103515625,-7570],\"key\":-31},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":38,\"to\":37,\"points\":[22720.999999971584,-7569.929029836505,22807.103515625,-7569.9,22808.103515625,-7570,22818.103515625,-7570],\"key\":-32},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":45,\"to\":43,\"points\":[16400.4619140625,-5750,16410.4619140625,-5750,16499.73828125,-5680,16509.73828125,-5680],\"key\":-35},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":43,\"points\":[16380.4619140625,-6200,16390.4619140625,-6200,16499.73828125,-5700,16509.73828125,-5700],\"key\":-36},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":49,\"to\":43,\"points\":[16400.4619140625,-5530,16410.4619140625,-5530,16499.73828125,-5640,16509.73828125,-5640],\"key\":-37},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":54,\"to\":43,\"points\":[16400.4619140625,-5650,16410.4619140625,-5650,16499.73828125,-5660,16509.73828125,-5660],\"key\":-39},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":43,\"to\":12,\"points\":[16880.4619140625,-5670,16890.4619140625,-5670,17524.662109375,-5670,17534.662109375,-5670],\"key\":-40},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":55,\"to\":58,\"points\":[16412.3579140625,-5116.835999999999,16422.3579140625,-5116.835999999999,16511.63428125,-5136.936,16521.63428125,-5136.936],\"key\":-38},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":56,\"to\":58,\"points\":[16412.3579140625,-4996.835999999999,16422.3579140625,-4996.835999999999,16511.63428125,-5116.936,16521.63428125,-5116.936],\"key\":-41},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":57,\"to\":58,\"points\":[16412.3579140625,-5216.835999999999,16422.3579140625,-5216.835999999999,16511.63428125,-5156.936,16521.63428125,-5156.936],\"key\":-42},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":59,\"to\":62,\"points\":[16382.3579140625,-4587.891,16392.3579140625,-4587.891,16481.63428125,-4607.991,16491.63428125,-4607.991],\"key\":-43},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":60,\"to\":62,\"points\":[16382.3579140625,-4467.891,16392.3579140625,-4467.891,16481.63428125,-4587.991,16491.63428125,-4587.991],\"key\":-44},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":61,\"to\":62,\"points\":[16382.3579140625,-4687.891,16392.3579140625,-4687.891,16481.63428125,-4627.991,16491.63428125,-4627.991],\"key\":-45},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":58,\"points\":[16380.4619140625,-6200,16390.4619140625,-6200,16511.63428125,-5176.936,16521.63428125,-5176.936],\"key\":-46},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":62,\"points\":[16380.4619140625,-6200,16390.4619140625,-6200,16481.63428125,-4647.991,16491.63428125,-4647.991],\"key\":-47},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":58,\"to\":28,\"points\":[16892.3579140625,-5146.936,16902.3579140625,-5146.936,17534.662109375,-5160,17544.662109375,-5160],\"key\":-48},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":62,\"to\":32,\"points\":[16862.3579140625,-4617.991,16872.3579140625,-4617.991,17524.662109375,-4617.891,17534.662109375,-4617.891],\"key\":-49},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":47,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16088.103515625,-6200,16098.103515625,-6200],\"key\":-50},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":45,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16108.103515625,-5750,16118.103515625,-5750],\"key\":-51},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":54,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16108.103515625,-5650,16118.103515625,-5650],\"key\":-52},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":49,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16108.103515625,-5530,16118.103515625,-5530],\"key\":-53},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":57,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16119.999515625,-5216.835999999999,16129.999515625,-5216.835999999999],\"key\":-54},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":55,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16119.999515625,-5116.835999999999,16129.999515625,-5116.835999999999],\"key\":-55},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":56,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16119.999515625,-4996.835999999999,16129.999515625,-4996.835999999999],\"key\":-56},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":61,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16089.999515625,-4687.891,16099.999515625,-4687.891],\"key\":-57},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":59,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16089.999515625,-4587.891,16099.999515625,-4587.891],\"key\":-58},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":60,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16089.999515625,-4467.891,16099.999515625,-4467.891],\"key\":-59},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":53,\"to\":63,\"points\":[19910.4619140625,-5710,19920.4619140625,-5710,19968.103515625,-5710,19978.103515625,-5710],\"key\":-61},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"reset\",\"from\":63,\"to\":42,\"points\":[20290.4619140625,-5710,20300.4619140625,-5710,21070,-5710,21410,-5190,21427.8759765625,-5190,21437.8759765625,-5190],\"key\":-60,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":2,\"to\":68,\"points\":[19720.3720703125,-5230,19730.3720703125,-5230,19750,-5210,21030.3935546875,-5200,21040.3935546875,-5200],\"key\":-70},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":68,\"to\":42,\"points\":[21420.4619140625,-5170,21430.4619140625,-5170,21427.8759765625,-5170,21437.8759765625,-5170],\"key\":-67,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":77,\"to\":81,\"points\":[25810.4619140625,-4540,25820.4619140625,-4540,25838.103515625,-4555.7228474983085,25848.103515625,-4555.7228474983085],\"key\":-76},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":73,\"to\":12,\"points\":[17440.4619140625,-5590,17450.4619140625,-5590,17524.662109375,-5650,17534.662109375,-5650],\"key\":-62},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":75,\"to\":28,\"points\":[17440.4619140625,-5080,17450.4619140625,-5080,17534.662109375,-5140,17544.662109375,-5140],\"key\":-63},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":76,\"to\":32,\"points\":[17440.4619140625,-4537.991,17450.4619140625,-4537.991,17524.662109375,-4597.891,17534.662109375,-4597.891],\"key\":-64},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"nextSpeaker\",\"from\":89,\"to\":68,\"points\":[20139.6064453125,-5140.200000000001,20149.6064453125,-5140.200000000001,20200,-5120,21000,-5120,21030.3935546875,-5140,21040.3935546875,-5140],\"key\":-79},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":2,\"to\":89,\"points\":[19720.3720703125,-5230,19730.3720703125,-5230,19758.103515625,-5150.200000000001,19768.103515625,-5150.200000000001],\"key\":-66},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":96,\"to\":95,\"points\":[35119.8540703125,-8540,35129.8540703125,-8540,35157.585515625,-8560.2,35167.585515625,-8560.2],\"key\":-65},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"in\",\"from\":95,\"to\":98,\"points\":[35539.0884453125,-8550.2,35549.0884453125,-8550.2,35577.585515625,-8559.9,35587.585515625,-8559.9],\"key\":-71},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"nextSpeaker\",\"from\":95,\"to\":105,\"points\":[35539.0884453125,-8550.2,35549.0884453125,-8550.2,35610.3935546875,-8435,35620.3935546875,-8435],\"key\":-72},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toBob\",\"toPort\":\"in\",\"from\":105,\"to\":108,\"points\":[36023.0205078125,-8445,36033.0205078125,-8445,36068.103515625,-8535,36078.103515625,-8535],\"key\":-74},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"history\",\"from\":95,\"to\":105,\"points\":[35539.0884453125,-8570.2,35549.0884453125,-8570.2,35610.3935546875,-8455,35620.3935546875,-8455],\"key\":-80},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"clear\",\"from\":121,\"to\":96,\"points\":[34480.4619140625,-8425,34490.4619140625,-8425,34509.999578125,-8540,34519.999578125,-8540],\"key\":-81},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlex\",\"toPort\":\"in\",\"from\":105,\"to\":123,\"points\":[36023.0205078125,-8465,36033.0205078125,-8465,36068.103515625,-8805,36078.103515625,-8805],\"key\":-73},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlice\",\"toPort\":\"in\",\"from\":105,\"to\":125,\"points\":[36023.0205078125,-8425,36033.0205078125,-8425,36068.103515625,-8255,36078.103515625,-8255],\"key\":-77},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":126,\"to\":125,\"points\":[36000.4619140625,-8365,36010.4619140625,-8365,36068.103515625,-8255,36078.103515625,-8255],\"key\":-82,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":126,\"to\":108,\"points\":[36000.4619140625,-8365,36010.4619140625,-8365,36068.103515625,-8535,36078.103515625,-8535],\"key\":-83,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":126,\"to\":123,\"points\":[36000.4619140625,-8365,36010.4619140625,-8365,36068.103515625,-8805,36078.103515625,-8805],\"key\":-84,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":121,\"to\":126,\"points\":[34480.4619140625,-8425,34490.4619140625,-8425,35678.103515625,-8365,35688.103515625,-8365],\"key\":-85},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":126,\"to\":98,\"points\":[36000.4619140625,-8365,36010.4619140625,-8365,36030,-8235,35550,-8235,35577.585515625,-8559.9,35587.585515625,-8559.9],\"key\":-86,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"messageIn\",\"from\":127,\"to\":2,\"points\":[19080.3720703125,-5230,19090.3720703125,-5230,19110.517578125,-5230,19120.517578125,-5230],\"key\":-87},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextSpeaker\",\"toPort\":\"nextSpeaker\",\"from\":89,\"to\":24,\"points\":[20139.6064453125,-5140.200000000001,20149.6064453125,-5140.200000000001,20200,-5110,23000,-5110,23080.3935546875,-5210,23090.3935546875,-5210],\"key\":-89},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"onSpeechStop\",\"from\":107,\"to\":127,\"points\":[18560.4619140625,-5500,18570.4619140625,-5500,18617.1455078125,-5220,18627.1455078125,-5220],\"key\":-90},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"onStop\",\"from\":107,\"to\":68,\"points\":[18560.4619140625,-5500,18570.4619140625,-5500,20890,-5500,21030.3935546875,-5160,21040.3935546875,-5160],\"key\":-91},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"newMessage\",\"from\":109,\"to\":110,\"points\":[22110.4619140625,-5180,22120.4619140625,-5180,22126.5107421875,-5180,22136.5107421875,-5180],\"key\":-92},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":111,\"to\":106,\"points\":[16410.4619140625,-6390,16420.4619140625,-6390,21800,-6360,22554.662109375,-5300,22564.662109375,-5300],\"key\":-94},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":42,\"to\":109,\"points\":[21770.4619140625,-5180,21780.4619140625,-5180,21788.103515625,-5180,21798.103515625,-5180],\"key\":-95},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":111,\"points\":[15990.4619140625,-6201.100000000004,16000.4619140625,-6201.100000000004,16088.103515625,-6390,16098.103515625,-6390],\"key\":-96},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":106,\"to\":131,\"points\":[22954.0205078125,-5280,22964.0205078125,-5280,23160,-5280,23978.103515625,-5610,23988.103515625,-5610],\"key\":-99},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":133,\"to\":132,\"points\":[35330.4619140625,-10290.1,35340.4619140625,-10290.1,35433.09432359999,-10247.077350743282,35443.09432359999,-10247.077350743282],\"key\":-100},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":135,\"to\":133,\"points\":[34980.4619140625,-10290,34990.4619140625,-10290,35008.103515625,-10290.1,35018.103515625,-10290.1],\"key\":-101},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":146,\"to\":142,\"points\":[34390.4619140625,-10210,34400.4619140625,-10210,34438.103515625,-10210,34448.103515625,-10210],\"key\":-103},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":148,\"to\":144,\"points\":[34390.4619140625,-9990,34400.4619140625,-9990,34438.103515625,-9990,34448.103515625,-9990],\"key\":-104},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":147,\"to\":143,\"points\":[34390.4619140625,-10100,34400.4619140625,-10100,34438.103515625,-10100,34448.103515625,-10100],\"key\":-105},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":143,\"to\":163,\"points\":[34660.4619140625,-10100,34670.4619140625,-10100,34768.103515625,-10100,34778.103515625,-10100],\"key\":-106},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":144,\"to\":163,\"points\":[34660.4619140625,-9990,34670.4619140625,-9990,34768.103515625,-10100,34778.103515625,-10100],\"key\":-107},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":132,\"to\":151,\"points\":[35832.45272203749,-10247.077350743282,35842.45272203749,-10247.077350743282,35888.103515625,-10330,35898.103515625,-10330],\"key\":-108},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":132,\"to\":154,\"points\":[35832.45272203749,-10227.077350743282,35842.45272203749,-10227.077350743282,35888.103515625,-9715,35898.103515625,-9715],\"key\":-109},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"newMessage\",\"from\":163,\"to\":157,\"points\":[34990.4619140625,-10100,35000.4619140625,-10100,35016.5107421875,-10100,35026.5107421875,-10100],\"key\":-102},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":142,\"to\":163,\"points\":[34660.4619140625,-10210,34670.4619140625,-10210,34768.103515625,-10100,34778.103515625,-10100],\"key\":-110},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"summary\",\"from\":132,\"to\":157,\"points\":[35832.45272203749,-10227.077350743282,35842.45272203749,-10227.077350743282,35840,-10180,35020,-10180,35016.5107421875,-10120,35026.5107421875,-10120],\"key\":-111},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":157,\"to\":132,\"points\":[35410.4619140625,-10110,35420.4619140625,-10110,35433.09432359999,-10227.077350743282,35443.09432359999,-10227.077350743282],\"key\":-112},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":110,\"to\":106,\"points\":[22520.4619140625,-5190,22530.4619140625,-5190,22554.662109375,-5280,22564.662109375,-5280],\"key\":-113},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"summary\",\"from\":106,\"to\":110,\"points\":[22954.0205078125,-5280,22964.0205078125,-5280,23000,-5240,22120,-5240,22126.5107421875,-5200,22136.5107421875,-5200],\"key\":-114},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"history\",\"from\":106,\"to\":24,\"points\":[22954.0205078125,-5280,22964.0205078125,-5280,23080.3935546875,-5230,23090.3935546875,-5230],\"key\":-93},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":81,\"to\":85,\"points\":[26187.6962890625,-4545.7228474983085,26197.6962890625,-4545.7228474983085,26298.103515625,-2940,26308.103515625,-2940],\"key\":-115,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"shaKey\",\"toPort\":\"in\",\"from\":81,\"to\":128,\"points\":[26187.6962890625,-4565.7228474983085,26197.6962890625,-4565.7228474983085,26308.103515625,-4640,26318.103515625,-4640],\"key\":-116},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":89,\"to\":124,\"points\":[20139.6064453125,-5160.200000000001,20149.6064453125,-5160.200000000001,20338.103515625,-5270.1,20348.103515625,-5270.1],\"key\":-97,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"onStart\",\"toPort\":\"onStart\",\"from\":124,\"to\":68,\"points\":[20706.1376953125,-5280.1,20716.1376953125,-5280.1,21030.3935546875,-5180,21040.3935546875,-5180],\"key\":-98},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"onStop\",\"toPort\":\"onStop\",\"from\":124,\"to\":68,\"points\":[20706.1376953125,-5260.1,20716.1376953125,-5260.1,21030.3935546875,-5160,21040.3935546875,-5160],\"key\":-117},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"onStop\",\"toPort\":\"onSpeechStop\",\"from\":124,\"to\":127,\"points\":[20706.1376953125,-5260.1,20716.1376953125,-5260.1,18617.1455078125,-5220,18627.1455078125,-5220],\"key\":-118}\n]}"
}