{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "PicturesDSL",
    "DataFlowDSL"
  ],
  "view": {
    "scale": 0.16424361393302586,
    "position": [
      10972.207887029874,
      -10696.861550347836
    ],
    "isGridOn": false
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"Smile 3 Dialog - V.02\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2350 240\",\"key\":0,\"location\":\"17600 -6110\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"410 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"messageIn\",\"name\":\"messageIn\"},{\"portId\":\"clear\",\"name\":\"clear\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/user2.png }\\n- { name: Bob, url: ~/user1.png }\\n- { name: Alex, url: ~/robot.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"key\":2,\"location\":\"18560 -4720.200000000001\",\"editorPosition\":[-730,245,496,1590],\"group\":25,\"history\":[]},\n{\"label\":\"System Prompt of Alex (robot)\",\"category\":\"DataFlow_Data\",\"size\":\"350 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Take the role of a robotic cook assistant named Alex.  You have two arms and hands and you can see and hear everything but you cannot move around.\\nImagine you are in a kitchen with 2 other persons Bob and Alice. \\nYou are the owner of the apartment, Bob and Alice are friends that have been invited today for Preparing some food or drinks together. \\nThe rule is that every one can contribute and participate in the choice of the food or drinks and in the preparation of them. \\nYou are all around a table. Some ingredients are on the table, some others in the fridge. \\nThe role of the cook assistant is: \\n1) to moderate the discussion between the humans, \\n2) ask their preference and establish a menu based on the humans' wish and proposition as well as on his own recipes proposal. \\n3) orchestrate the activities of each humans by asking them information or suggesting them task to perform \\n4) helping them to do task in the right order \\n5) answer any question of them, while trying to get them focus of the tasks until the dinner is prepared or just say \\\"[Alex -> All] (silence)\\\" when you do not want to contribute to this turn.\\nUse the following convention to define who speak to whom: \\n\\nStart any questions with for example [Alex -> Bob] <content of the question> if you want to ask Bob or [Alex -> All] if you want to address all. \\nAs a cook assistant you will become aware of the discussion between the humans because they will use the same convention, \\nfor example [Bob -> All] <message> to indicate that the message was given by Bob and addressed to all. \\nTo keep the conversation easy to follow for everyone, after you choose to whom you want to speak and gave your message or question, \\nwait for the answers before you continue. Try to follow only one conversation at a time.\\n\\nProduce your answer in the following format using one and only one of the following options:\\na) if you want to say something to All: [Alex -> All] <your sentence>\\nb) if you want to say something to Alice: [Alex -> Alice] <your sentence>\\nc) if you want to say something to Bob: [Alex -> Bob] <your sentence>\\nb) if you don't want to say anything:  [Alex -> All] (silence)\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":6,\"location\":\"17050 -5670\",\"editorPosition\":[-3742,354,841,358],\"group\":26},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"fileTypeName\":\"LLM\",\"key\":12,\"location\":\"17600 -5660\",\"group\":26},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":14,\"location\":\"16750 -6190\"},\n{\"label\":\"[Alex -> All] Good evening Bob and Alice, welcome to the kitchen. What would you like to prepare for dinner tonight? Do you have any request or preference?\\n\\n[Bob -> All] Hi Alex, nice to meet you. I love Italian food, do you have any recipes for that?\\n\\n[Alice -> All] Hi Alex, thanks for having us. I would actually prefer something lighter, like a salad or a sandwich.\\n\\n[Alex -> Bob] Sure, I have a lot of Italian recipes. Would you like to make a pasta dish or maybe a pizza?\\n\\n[Alex -> Alice] A salad or sandwich can be a great idea. We have a lot of fresh vegetables and bread in the fridge. How about a chicken Caesar salad or a grilled veggie sandwich?\\n\\n[Bob -> Alex] I'm in the mood for pizza tonight, what kind of toppings do we have?\\n\\n[Alice -> Alex] A chicken Caesar salad sounds perfect to me. What ingredients do we need?\\n\\n[Alex -> Bob] Great, we have tomato sauce, mozzarella cheese, pepperoni, mushrooms, and peppers. How about a pepperoni and mushroom pizza?\\n\\n[Alex -> Alice] For the Caesar salad, we need romaine lettuce, chicken breasts, croutons, Parmesan cheese, and Caesar dressing. Would you like to grill the chicken while I wash and chop the lettuce?\\n\\n[Bob -> Alex] Sounds good, let's make the pizza. Can you show me how to roll out the dough?\\n\\n[Alice -> Alex] Sure, I can grill the chicken. How long should I cook it for?\\n\\n[Alex -> Bob] Of course, I'll get the dough and rolling pin. We want it to be thin and round, about 10 inches in diameter. Once that's done, we'll add the toppings and bake it in the oven at 400 Fahrenheit for 10-12 minutes.\\n\\n[Alex -> Alice] The chicken breasts should be cooked for about 6-7 minutes per side on medium-high heat. Make sure to season them with salt and pepper before cooking.\\n\\n[Bob -> Alex] Thanks for the instructions, let's get started on the pizza. Can you pass me the tomato sauce and toppings?\\n\\n[Alice -> Alex] Got it, I'll start grilling the chicken now.\\n\\n[Alex -> Bob] Here you go. Would you like to spread the sauce on the dough first or add the toppings directly? I find it easier to add the sauce first.\\n\\n[Alex -> Alice] Great, let me know if you need any help. Once the chicken is cooked, we can slice it and add it to the salad.\\n\\n[Bob -> Alex] Good idea, I'll add the sauce first. How much should I use?\\n\\n[Alice -> Alex] Thanks, it's almost done. Should I let it rest for a bit before slicing it?\\n\\n[Alex -> Bob] About 1/2 cup of sauce should be enough for a 10-inch pizza. Spread it evenly with a spoon or ladle.\\n\\n[Alex -> Alice] You can let it rest for a few minutes before slicing it. In the meantime, would you like to prepare the other ingredients for the salad, like the croutons and Parmesan cheese?\\n\\n[Bob -> Alex] Perfect, now for the toppings. How much cheese and pepperoni should we use?\\n\\n[Alice -> Alex] Sure, I can chop the lettuce and make the croutons. How big should the croutons be?\\n\\n[Alex -> Bob] We can use about 1 cup of shredded mozzarella cheese and 12-15 pepperoni slices. You can arrange them however you like on top of the sauce.\\n\\n[Alex -> Alice] The croutons should be about 1 inch in size. We have some pre-made ones in the pantry or we can make our own with bread and olive oil.\\n\\n[Bob -> Alex] Got it, I'll do that now. Should we add any seasoning to the pizza?\\n\\n[Alice -> Alex] I think we should make our own croutons. Do you have any bread or olive oil?\\n\\n[Alex -> Bob] We can add some oregano and red pepper flakes, if you like those flavors.\\n\\n[Alex -> Alice] Sure, we have some sourdough bread and olive oil. Cut the bread into 1-inch cubes and toss them in a bowl with 2 tablespoons of olive oil. Then, spread them on a baking sheet and bake at 350 Fahrenheit for 10-12 minutes until crispy.\\n\\n[Bob -> Alex] Sounds good, let's add some oregano and red pepper flakes. How long should we bake the pizza for?\\n\\n[Alice -> Alex] Thank you, I'll do that now. What else do we need for the salad?\\n\\n[Alex -> Bob] The pizza should be baked for 10-12 minutes at 400 Fahrenheit, or until the cheese is melted and bubbly.\\n\\n[Alex -> Alice] We also need to chop the chicken and grate some Parmesan cheese. Once the lettuce and croutons are ready, we can assemble the salad and toss it with the dressing.\\n\\n[Bob -> Alex] Thanks for the instructions, I'll put the pizza in the oven now.\\n\\n[Alice -> Alex] Okay, let me know when the chicken is ready and I'll start chopping it. Should I leave it in slices or shred it?\\n\\n[Alex -> Bob] Great, let's put a timer for 10 minutes. In the meantime, would you like to prepare any drinks or appetizers?\\n\\n[Alex -> Alice] You can slice the chicken into strips or cubes, whichever you prefer. Once the pizza is done, we can assemble the salad and finish cooking the chicken, if needed.\\n\\n[Bob -> Alex] Hmm, how about some margaritas? Do you have the ingredients for that?\\n\\n[Alice -> Alex] I think strips would be better. Let me know when the pizza is done and I'll finish the salad.\\n\\n[Alex -> Bob] Sure, we have tequila, lime juice, and triple sec. Would you like me to get the recipe for you?\\n\\n[Alex -> Alice] The pizza is almost done, it should be ready in about 2 minutes. Once that's done, we can toss the salad and add the chicken, croutons, and Parmesan cheese.\\n\\n[Bob -> Alex] Yes please, that would be great. Thanks for your help.\\n\\n[Alice -> Alex] Okay, I'm ready to assemble the salad. What's the dressing recipe?\\n\\n[Alex -> Bob] Here's the recipe: in a shaker with ice, combine 2 ounces of tequila, 1 ounce of lime juice, 1/2 ounce of triple sec, and a splash of agave syrup or simple syrup. Shake well and strain into a salt-rimmed glass with ice.\\n\\n[Alex -> Alice] For the dressing, we need 1/4 cup of Caesar dressing and 1 tablespoon of lemon juice. Whisk them together in a bowl and season with salt and pepper to taste.\\n\\n[Bob -> Alex] Thanks, let's make some margaritas then. Do we have any limes and salt for the rim?\\n\\n[Alice -> Alex] Got it, I'll whisk the dressing now. How much should I use for the salad?\\n\\n[Alex -> Bob] Yes, we have limes and salt in the pantry. You can cut the limes into wedges and rub them on the rim of the glasses, then dip them in salt.\\n\\n[Alex -> Alice] We can use about 1/2 cup of dressing for the salad. Once the pizza is out of the oven, we can toss the salad and add the chicken, croutons, and Parmesan cheese.\\n\\n[Bob -> Alex] Perfect, let's get started on the margaritas. Would you like one too, Alice?\\n\\n[Alice -> Alex] Sounds good, thank you. Let me know when you're ready to toss the salad.\\n\\n[Alex -> Bob] Sure, let me grab the ingredients. How do you like your margarita, on the rocks or frozen?\\n\\n[Alex -> Alice] The pizza is out of the oven and ready to be sliced. Shall we toss the salad now?\\n\\n[Bob -> Alex] I prefer mine on the rocks, thanks.\\n\\n[Alice -> Alex] Yes, let's do that. I'll add the chicken, croutons, and Parmesan cheese now.\\n\\n[Alex -> Bob] Here you go, one margarita on the rocks for you and one for Alice. Enjoy!\\n\\n[Bob -> Alex] Thank you, it looks great. Let's have a taste and see how it turned out.\\n\\n[Alice -> Alex] This salad looks amazing, thank you for your help. Shall we serve everything now?\\n\\n[Alex -> Bob] How's the pizza?\\n\\n[Bob -> Alex] It's delicious, thanks for your help.\\n\\n[Alex -> Alice] You're welcome, the salad looks great. Yes, let's serve everything now. Enjoy your meal!\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1460 9999\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":8,\"location\":\"29510 -4300\"},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":13,\"location\":\"17380 -6180\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":16,\"location\":\"17380 -6080\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"props_\":[{\"name\":\"Name\",\"value\":\"Smile 3 Dialog - V.02\"},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"@getDate()\",\"valueChanged\":true},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"- Johane\\n- Frank\\n- Antonello\",\"valueChanged\":\"true\"}],\"key\":18,\"location\":\"17130 -6200\"},\n{\"label\":\"Convert History to OpenAI API\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet responseList = [];\\nfor( const item of value ) {\\n  responseList.push( `[${item.sender} -> ${item.receiver}] ${item.text}` );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', responseList.join('\\\\n') );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":21,\"location\":\"20130 -4830\",\"group\":25},\n{\"label\":\"Clear Text\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', '' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":20,\"location\":\"16980 -4710\"},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":23,\"location\":\"18090 -5650\",\"group\":26},\n{\"label\":\"Broadcast Message\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"toAlex\",\"name\":\"toAlex\"},{\"portId\":\"toAlice\",\"name\":\"toAlice\"},{\"portId\":\"toBob\",\"name\":\"toBob\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( value.length ) {\\n  // Get the last message\\n  const lastMessage = value[value.length-1];\\n  // Get the list of all output names\\n  const outputNameList = graphData.dfe.geOutputNameList( nodeData );\\n  // Remove from the list the sender of the last message\\n  let filterNameList = outputNameList.filter( (n)=> !n.endsWith( lastMessage.sender ) );\\n  // Select a random index for the remaining actors\\n  const idx = Math.floor( Math.random()*filterNameList.length );\\n  // Fire the output to the selected actor\\n  graphData.dfe.fireOutput( nodeData, filterNameList[idx], value );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":24,\"location\":\"19690 -4730\",\"group\":25,\"editorPosition\":[1249,1180,746,246]},\n{\"label\":\"Alex Robot\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":26,\"location\":\"16998.103515625 -5660\"},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":27,\"location\":\"18090 -5390\",\"group\":30,\"editorPosition\":[1810,1009,400,350]},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"fileTypeName\":\"LLM\",\"key\":28,\"location\":\"17600 -5400\",\"group\":30},\n{\"label\":\"System Prompt of Alice (human)\",\"category\":\"DataFlow_Data\",\"size\":\"350 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Take the role of a human named Alice.\\nImagine you are in a kitchen with 2 other persons Bob and Alex. Alex is a robot assistant with limited capabilities, in particular it cannot move.\\nAlex is the owner of the apartment. Bob and Alex are your friends. You (Alice) have been invited by Alex for Preparing some food or drinks together. \\nThe rule is that every one can contribute and participate in the choice of the food or drinks and in the preparation of them. \\nYou are all around a table. Some ingredients are on the table, some others in the fridge. \\nYour role Alice is: \\n1) to participate in the discussion with Bob and Alex, \\n2) contribute to establish a menu based on the humans' wish and proposition. \\n3) answer any question of them, while trying to get them focus of the tasks until the dinner is prepared or just say \\\"[Alice -> All] (silence)\\\" when you do not want to contribute to this turn.\\nUse the following convention to define who speak to whom: \\n\\nStart any questions with for example [Alice -> Bob] <content of the question> if you want to ask Bob or [Alice -> All] if you want to address all. \\nAs a human gest you will become aware of the discussion between the others because they will use the same convention, \\nfor example [Bob -> All] <message> to indicate that the message was given by Bob and addressed to all. \\nTo keep the conversation easy to follow for everyone, after you choose to whom you want to speak and gave your message or question, \\nwait for the answers before you continue. Try to follow only one conversation at a time.\\n\\nProduce your answer in the following format using one and only one of the following options:\\na) if you want to say something to All: [Alice -> All] <your sentence>\\nb) if you want to say something to Alex: [Alice -> Alex] <your sentence>\\nc) if you want to say something to Bob: [Alice -> Bob] <your sentence>\\nb) if you don't want to say anything:  [Alice -> All] (silence)\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":29,\"location\":\"17040 -5410\",\"editorPosition\":[870,931,1207,402],\"group\":30},\n{\"label\":\"Alice Human\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":30,\"location\":\"16988.103515625 -5400\"},\n{\"label\":\"System Prompt of Bob (human)\",\"category\":\"DataFlow_Data\",\"size\":\"350 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Take the role of a human named Bob.\\nImagine you are in a kitchen with 2 other persons Alice and Alex. Alex is a robot assistant with limited capabilities, in particular it cannot move.\\nAlex is the owner of the apartment. Alice and Alex are your friends. You (Bob) have been invited by Alex for Preparing some food or drinks together. \\nThe rule is that every one can contribute and participate in the choice of the food or drinks and in the preparation of them. \\nYou are all around a table. Some ingredients are on the table, some others in the fridge. \\nYour role Bob is: \\n1) to participate in the discussion with Alice and Alex, \\n2) contribute to establish a menu based on the humans' wish and proposition. \\n3) answer any question of them, while trying to get them focus of the tasks until the dinner is prepared or just say \\\"[Bob -> All] (silence)\\\" when you do not want to contribute to this turn.\\nUse the following convention to define who speak to whom: \\n\\nStart any questions with for example [Bob -> Alice] <content of the question> if you want to ask Alice or [Bob -> All] if you want to address all. \\nAs a human gest you will become aware of the discussion between the others because they will use the same convention, \\nfor example [Alice -> All] <message> to indicate that the message was given by Alice and addressed to all. \\nTo keep the conversation easy to follow for everyone, after you choose to whom you want to speak and gave your message or question, \\nwait for the answers before you continue. Try to follow only one conversation at a time.\\n\\nProduce your answer in the following format using one and only one of the following options:\\na) if you want to say something to All: [Bob -> All] <your sentence>\\nb) if you want to say something to Alex: [Bob -> Alex] <your sentence>\\nc) if you want to say something to Alice: [Bob -> Alice] <your sentence>\\nb) if you don't want to say anything:  [Bob -> All] (silence)\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":31,\"location\":\"17040 -5110\",\"editorPosition\":[-3741,1106,845,380],\"group\":34},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"fileTypeName\":\"LLM\",\"key\":32,\"location\":\"17600 -5100\",\"group\":34},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":33,\"location\":\"18070 -5090\",\"group\":34},\n{\"label\":\"Bob Human\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":34,\"location\":\"16988.103515625 -5100\"},\n{\"label\":\"Convert History to OpenAI API\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet responseList = [];\\nfor( const item of value ) {\\n  responseList.push( `[${item.sender} -> ${item.receiver}] ${item.text}` );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', responseList.join('\\\\n') );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":35,\"location\":\"20130 -4730\",\"group\":25},\n{\"label\":\"Convert History to OpenAI API\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet responseList = [];\\nfor( const item of value ) {\\n  responseList.push( `[${item.sender} -> ${item.receiver}] ${item.text}` );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', responseList.join('\\\\n') );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":36,\"location\":\"20130 -4630\",\"group\":25},\n{\"label\":\"Chat\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":25,\"location\":\"18450.517578125 -4730\"},\n{\"label\":\"DataFlow Engine\",\"color\":\"orange\",\"size\":\"420 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"lib/DataFlowEngine/1.5/DataFlowEngine.js\",\"key\":38,\"location\":\"24530 -6080\"},\n{\"label\":\"Get Class API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":true}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"show\",\"value\":\"public\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst show = graphData.dfe.getProperty( nodeData, 'show', 'public,private' );\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = graphData.dfe.getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          graphData.dfe.fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source, show ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    //const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const expr = new RegExp( /\\\\n\\\\s\\\\s(?<api>\\\\w+\\\\([^\\\\)]*\\\\))\\\\s+\\\\{/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":37,\"location\":\"25080 -6080\",\"editorPosition\":[787,1092,703,895]},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1170 1600\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":39,\"location\":\"25500 -6080\",\"doCompute\":\"DataFlow_Message\",\"label\":\"constructor(engineData)\\nloadModel()\\nget(keyOrData, name, defaultValue)\\nset(keyOrData, name, value)\\ngetProperty(nodeData, name, defaultValue)\\ngetNodeDataValue(key, name, defaultValue)\\nisInputNew(nodeData, name)\\ngetInput(nodeData, name, defaultValue)\\nsetInput(nodeData, name, value)\\ngetInputNameList(nodeData)\\ngeOutputNameList(nodeData)\\nfireOutput(nodeData, name, value)\\nisOutputConnected(nodeData, name)\\nisInputConnected(nodeData, name)\\nisSelfLoop(nodeData, inName)\\ngetInputLinkDataList(nodeData, name)\\ngetOutputLinkDataList(nodeData, name)\\nexecuteAction(nodeData, actionName)\\ndoRun()\\ndoStep()\\ndoPause()\\n_updateEngineNode(key)\\n_updateProperty(nodeData)\\n_selectNode(nodeData)\\n_fireOutputStep(nodeData, name, value)\\n_fireOutputFlow(nodeData, name, value)\\n_fireInput(nodeData, name, value)\\n_fireEvent(nodeData, name, value)\\n_getNextStepData()\\n_clearStep(stepInfo)\\n_addStep(stepInfo)\\n_getComputeBarrier(nodeData)\\n_updateInput(nodeData, name, value, inCondition)\"},\n{\"label\":\"Data Gate\",\"category\":\"DataFlow_DataGate\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Pass\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"text\\\": \\\"Hi all\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Hello Alice! How can I assist you today?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Hi Alice and Alex! I'm excited to be here and help out with the cooking. What do you guys feel like making today?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Hi Alex and Bob! I'm glad to be here too. How about we start with deciding on whether we want to prepare a meal or just make some drinks? Any preferences?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"That's a great point, Alice. Let's start by deciding if we want to make a full meal or just some drinks. Does anyone have a preference?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"That's a good question, Bob. Let's hear from both Alice and you about your preferences. Alice, would you like to start? And Bob, please share your preference as well.\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Well, I'm open to either option. I'm comfortable with cooking a full meal or just making some drinks. Alice, what do you think? Do you have any specific preferences?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I'm also open to either option. However, I'm leaning towards making some drinks. It could be fun to try out some new cocktail recipes. What do you think, Alex? Do you have any preferences or suggestions?\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"I don't have any particular preferences, but I do have some cocktail recipes that we could try out if that's what everyone is interested in. How about we make a couple of cocktails and also prepare some small appetizers to go along with them? This way, we can have a little bit of both drinks and food. What do you think?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"That sounds like a great idea, Alex! Making cocktails and preparing some appetizers would be a nice combination. I'm definitely on board with that plan. Alice, what do you think? Are you okay with making cocktails and appetizers?\\\",\\n    \\\"sender\\\": \\\"Bob\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Yes, I think that sounds like a great plan. I'm excited to try out some new cocktail recipes and preparing appetizers to go along with them sounds delicious. Let's go ahead with that!\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Great! It's settled then. We'll be making cocktails and appetizers. Let's start by deciding on which cocktails we want to make. Do either of you have any specific cocktail preferences or ideas?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  }\\n]\",\"fileTypeName\":\"Text\",\"fileType\":\"text/json\",\"doCompute\":\"DataFlow_DataGate\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":42,\"location\":\"19230 -4730.1\",\"group\":25},\n{\"label\":\"Basic Image\",\"category\":\"Pictures_Basic\",\"size\":\"966 463\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/Smile3-1.png\",\"key\":41,\"location\":\"21923 -5207\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":6,\"to\":12,\"points\":[17440.4619140625,-5670,17450.4619140625,-5670,17524.662109375,-5670,17534.662109375,-5670],\"key\":-1},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":21,\"to\":12,\"points\":[20410.4619140625,-4830,20420.4619140625,-4830,20460,-4830,20460,-4950,17520,-4950,17524.662109375,-5650,17534.662109375,-5650],\"key\":-2},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":6,\"points\":[16870.4619140625,-6190,16880.4619140625,-6190,16950,-6190,16950,-5670,17008.103515625,-5670,17018.103515625,-5670],\"key\":-3},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"clear\",\"from\":20,\"to\":2,\"points\":[17260.4619140625,-4710,17270.4619140625,-4710,18460.517578125,-4710.200000000001,18470.517578125,-4710.200000000001],\"key\":-13},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":12,\"to\":23,\"points\":[17924.0205078125,-5650,17934.0205078125,-5650,18048.103515625,-5650,18058.103515625,-5650],\"key\":-14},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":23,\"to\":2,\"points\":[18370.4619140625,-5650,18380.4619140625,-5650,18460.517578125,-4730.200000000001,18470.517578125,-4730.200000000001],\"key\":-15},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlex\",\"toPort\":\"in\",\"from\":24,\"to\":21,\"points\":[19993.0205078125,-4750,20003.0205078125,-4750,20088.103515625,-4830,20098.103515625,-4830],\"key\":-19},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":28,\"to\":27,\"points\":[17924.0205078125,-5390,17934.0205078125,-5390,18048.103515625,-5390,18058.103515625,-5390],\"key\":-16},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":29,\"to\":28,\"points\":[17430.4619140625,-5410,17440.4619140625,-5410,17524.662109375,-5410,17534.662109375,-5410],\"key\":-17},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":31,\"to\":32,\"points\":[17430.4619140625,-5110,17440.4619140625,-5110,17524.662109375,-5110,17534.662109375,-5110],\"key\":-20},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":32,\"to\":33,\"points\":[17924.0205078125,-5090,17934.0205078125,-5090,18028.103515625,-5090,18038.103515625,-5090],\"key\":-21},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":29,\"points\":[16870.4619140625,-6190,16880.4619140625,-6190,16940,-6180,16940,-5410,16998.103515625,-5410,17008.103515625,-5410],\"key\":-22},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":31,\"points\":[16870.4619140625,-6190,16880.4619140625,-6190,16930,-6170,16930,-5110,16998.103515625,-5110,17008.103515625,-5110],\"key\":-23},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":27,\"to\":2,\"points\":[18370.4619140625,-5390,18380.4619140625,-5390,18460.517578125,-4730.200000000001,18470.517578125,-4730.200000000001],\"key\":-24},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":33,\"to\":2,\"points\":[18350.4619140625,-5090,18360.4619140625,-5090,18460.517578125,-4730.200000000001,18470.517578125,-4730.200000000001],\"key\":-25},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlice\",\"toPort\":\"in\",\"from\":24,\"to\":35,\"points\":[19993.0205078125,-4730,20003.0205078125,-4730,20088.103515625,-4730,20098.103515625,-4730],\"key\":-26},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toBob\",\"toPort\":\"in\",\"from\":24,\"to\":36,\"points\":[19993.0205078125,-4710,20003.0205078125,-4710,20088.103515625,-4630,20098.103515625,-4630],\"key\":-27},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":35,\"to\":28,\"points\":[20410.4619140625,-4730,20420.4619140625,-4730,20480,-4730,20480,-4970,17490,-4970,17490,-5360,17524.662109375,-5390,17534.662109375,-5390],\"key\":-28},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":36,\"to\":32,\"points\":[20410.4619140625,-4630,20420.4619140625,-4630,20500,-4630,20500,-4990,17470,-4990,17470,-5060,17524.662109375,-5090,17534.662109375,-5090],\"key\":-29},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":20,\"points\":[16870.4619140625,-6190,16880.4619140625,-6190,16920,-6160,16920,-4710,16938.103515625,-4710,16948.103515625,-4710],\"key\":-30},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":37,\"to\":39,\"points\":[25390.4619140625,-6080,25400.4619140625,-6080,25458.103515625,-6080,25468.103515625,-6080],\"key\":-31},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":38,\"to\":37,\"points\":[24950.999999971584,-6079.929029836505,25037.103515625,-6079.9,25038.103515625,-6080,25048.103515625,-6080],\"key\":-32},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":2,\"to\":42,\"points\":[19070.3720703125,-4730.200000000001,19080.3720703125,-4730.200000000001,19188.103515625,-4730.1,19198.103515625,-4730.1],\"key\":-33},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":42,\"to\":24,\"points\":[19510.4619140625,-4730.1,19520.4619140625,-4730.1,19648.103515625,-4730,19658.103515625,-4730],\"key\":-34}\n]}"
}