{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "ConnectorsDSL",
    "PicturesDSL",
    "TreeDSL",
    "KanbanDSL",
    "DataFlowDSL"
  ],
  "view": {
    "scale": 0.23892581264314017,
    "position": [
      -5937.95799880168,
      -115.77072232697901
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"API Keys\",\"category\":\"DataFlow_Param\",\"size\":\"460 80\",\"props_\":[{\"name\":\"ChatGPT\",\"value\":\"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\"}],\"key\":18,\"location\":\"8340 -1640\"},\n{\"label\":\"SMILE Planner v2.9\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2480 120\",\"key\":20,\"location\":\"5800 -1560\",\"font\":\"250px sans-serif\"},\n{\"label\":\"Request\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":195,\"location\":\"6651.896000000001 3477.4049999999993\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"Ropa User Prompt\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Message from Alex: \\n\\nThe detailled current environment state in JSON is:\\n{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"vodka_bottle\\\",\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ice_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lemon_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"electric_shaker\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\\nGive a full plan at once taking in account \\nthe current state of the environment.\\nPlan:\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":200,\"location\":\"7571.896000000001 3501.567000000001\",\"editorPosition\":[1298,840,405,318],\"group\":363},\n{\"label\":\"Create Ropa Request Prompt\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"state\",\"name\":\"state\"},{\"portId\":\"request\",\"name\":\"request\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"request\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Message from Alex: \\n<request>\\nThe detailled current environment state in JSON is:\\n<state>\\nGive a full plan at once taking in account \\nthe current state of the environment.\\nPlan:\",\"fileTypeName\":\"Template\",\"key\":201,\"location\":\"7181.896000000001 3397.8050000000003\",\"editorPosition\":[918,39,712,140],\"group\":363},\n{\"label\":\"Ropa Role Selector\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"ropaToAlex\",\"name\":\"ropaToAlex\"},{\"portId\":\"ropaToRoco\",\"name\":\"ropaToRoco\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n//Engine_fireOutput( nodeData, 'clear', '' );\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\nvalue = value.replace(/<br>/g, \\\"\\\");\\n\\nconst toRoco = '[Ropa to Roco] ';\\nconst idx = value.indexOf(toRoco);\\nif( idx != -1 ) {\\n  const plan = cleanPlan( value );\\n  Engine_fireOutput( nodeData, 'ropaToRoco', plan );\\n} else {\\n  Engine_fireOutput( nodeData, 'ropaToAlex', value );\\n}\\n\\nfunction cleanPlan( plan ) {\\n  const result = [];\\n  const cmdList = plan.split( '\\\\n' );\\n  const toRoco = '[Ropa to Roco] ';\\n  \\n  for( const cmd of cmdList ) {\\n    if( cmd.startsWith( toRoco ) ) {\\n      result.push( cmd );\\n    }\\n  }\\n  \\n  return( result.join( '\\\\n' ) );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":202,\"location\":\"10060 3450\",\"fileType\":\"text/javascript\",\"editorPosition\":[2798,2071,498,301],\"group\":363},\n{\"label\":\"Ropa Plan\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> \",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":203,\"location\":\"9711.896 3451.367\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"User Prompt\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> Message from Alex: \\n\\nThe detailled current environment state in JSON is:\\n{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"vodka_bottle\\\",\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ice_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lemon_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"electric_shaker\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\\nGive a full plan at once taking in account \\nthe current state of the environment.\\nPlan:\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":204,\"location\":\"8251.896 3501.1670000000004\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"Add user> header\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":205,\"location\":\"7881.896000000001 3501.567000000001\",\"editorPosition\":[918,39,712,140],\"group\":363},\n{\"label\":\"JSON to Text\",\"category\":\"DataFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"doCompute\":\"DataFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":206,\"location\":\"9361.896 3451.467000000001\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":363},\n{\"label\":\"Ropa Plan\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":207,\"location\":\"9070 3450\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":363},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". \\nThe robot is called Roco and is able to prepare cocktail.\\nYou should assist a human called Alex. Alex will send you the following \\ninformation:\\n- Goal: the target for wich you have to produce a plan.\\n- Object needed: the name of the object you use in your plan.\\n- State summary from environment state: this is a short summary of the current \\n  environment state of which you have a detailed description in JSON format.\\n- Remaining actions to do: List of actions that you must use to build your plan. \\n  Do not worry if this list is only a portion of the actions needed to achieve \\n  the goal since some actions may have already been done towards the goal.\\n\\nA plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n* The following command allows Roco to open an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] open <object> \\n  \\n* The following command allows Roco to close an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] close <object> \\n  \\n* The following command allows Roco to take an <object-to-be-taken> from a <source_object> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_right\\n  \\n* The following command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  \\n* The following command allows Roco to pour a certain <number-of-dosis> of a liquid \\n  from an <object-to-pour-from> into an <object-to-pour-into>. \\n  This command must be used to pour bottle of liquid, salt or pepper.\\n  The volume of a single dosis is 0.01 liter. Provide a <number-of-dosis> as last argument:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into> <number-of-dosis>\\n  \\n* The following command allows Roco to switch on or off an electric device:\\n  command syntax: \\n  - [Ropa to Roco] switch_on <object-to-switch-on>  \\n  - [Ropa to Roco] switch_off <object-to-switch-off>  \\n\\n* The following command allows Roco to wait for x-second:\\n  command syntax: \\n  - [Ropa to Roco] wait <x-second>  \\n\\n* The following command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  \\n\\nEvery command of your plan should start with \\n[Ropa to Roco] .\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":211,\"location\":\"8250 3320\",\"editorPosition\":[-6887,15,751,1974],\"group\":363,\"color\":\"LightPink\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":213,\"location\":\"10940 3200\",\"group\":363},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1800 1320\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":214,\"location\":\"10960 3925\",\"group\":363},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to you (Travi).\\nYou, on your side , comunicate with a robot called Ropa. \\nRopa can be used to prepare cocktail.\\nRopa has 2 hands and can execute the following commands:\\n- get: to take an object from a location in a hand.\\n- put: to put an object already in hand on/in another object.\\n- open: to open an object.\\n- close: to close an object.\\n- pour: to pour the content of an object into another.\\n- switch on/off: to switch on or off electric devices.\\n- wait: to wait a certain number of second.\\n\\nYour role, Travi, is:\\n1) To identify the goal to reach for the robot from the request.\\n2) To identify from the environment state the list of object you need to use \\nfor solving the human request. In particular, for any object A in the environment state,\\nconsider the following fields: \\n- \\\"type\\\" to know the type of object\\n- \\\"holdsObject\\\" to know wwhich objects object A holds or contains, \\n- \\\"isHeldByObject\\\" to know where object A is located, \\n- \\\"closure\\\" to know if object A is \\\"closed\\\" or \\\"opened\\\",\\n- \\\"power\\\" to know if object A is \\\"on\\\" or \\\"off\\\",\\n- \\\"volume\\\" to know the volume of object A in litres in case it is a container,\\n- \\\"fillLevel\\\" to know the volume already filled in object A,\\n- \\\"holdsLiquid\\\" to know the list of liquid contained in object A in case it is a container,\\n3) Using the environment state and, when available, the list of actions \\nalready performed by the robot, to describe in a sentences the curent state \\nof the robot and of the objects it needs to use.\\n4) Describe the remaining actions to fullfill the human request. For this purpose, use the \\nlist of already performed actions, when present, to identify the actions that have not been done yet\\nto reach the goal.\\nAlways instruct Ropa to prepare the cocktail in the mixer_container of the electric_shacker before serving \\nit in a glass placed on a tray.\\n\\nProvide your response using the format:\\nGoal: ...\\nObject needed: ...\\nState summary from environment state: ...\\nRemaining actions to do: ...\\n\\nExample for a request like \\\"serve me a glass of hot water\\\":\\nGoal: \\nto have glass_1 filled with hot water from pitcher_1 placed on tray_1.\\nObject needed: \\nglass_1, pitcher_1, tray_1.\\nState summary from environment state: \\nthe robot has nothing in the hands, the needed objects are on table_1.\\nRemaining actions to do: \\ntake pitcher1 and pour hot water in glass_1, then take glass_1 and put it on the tray.\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":218,\"location\":\"8101.896 1999.7420000000002\",\"editorPosition\":[97,121,767,1104],\"group\":362,\"color\":\"LightPink\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2150 990\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":219,\"location\":\"10490 2210\",\"group\":362},\n{\"label\":\"Remove assistant>\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"logObject\",\"name\":\"logObject\"},{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\nEngine_fireOutput( nodeData, 'out', value );\\n\\n  const logObject = {\\n    type: 'TRAVI',\\n    specs: value,\\n  };\\n  Engine_fireOutput( nodeData, 'logObject', logObject );\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":220,\"location\":\"9860 2004.377152501692\",\"fileType\":\"text/javascript\",\"editorPosition\":[3149,695,400,350],\"group\":362},\n{\"label\":\"Travi translate Alex request in term of existing objects\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1930 70\",\"key\":221,\"location\":\"6620 1797.1060000000002\",\"group\":362},\n{\"label\":\"Request\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> \",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":222,\"location\":\"9541.896 2018.809000000001\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"JSON to Text\",\"category\":\"DataFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"doCompute\":\"DataFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":223,\"location\":\"9191.896 2018.809000000001\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":362},\n{\"label\":\"Request\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":224,\"location\":\"8891.896 2018.809000000001\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":362},\n{\"label\":\"User Prompt\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> This is Alex request: \\n[Alex to Ropa] Please, prepare a Bloody Mary cocktail for the human.\\n\\nThis is the current environment state:\\nNote that the stacks are in FILO order (First In Last Out)\\n{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"vodka_bottle\\\",\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ice_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lemon_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"electric_shaker\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\\n\\nStart your answer with [Travi to Ropa].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":226,\"location\":\"8111.896 2153.2039999999997\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"Add user> header\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":227,\"location\":\"7741.896 2153.504000000001\",\"editorPosition\":[918,39,712,140],\"group\":362},\n{\"label\":\"Ropa User Prompt\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"This is Alex request: \\n[Alex to Ropa] Please, prepare a Bloody Mary cocktail for the human.\\n\\nThis is the current environment state:\\nNote that the stacks are in FILO order (First In Last Out)\\n{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"vodka_bottle\\\",\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ice_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lemon_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"electric_shaker\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\\n\\nStart your answer with [Travi to Ropa].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":228,\"location\":\"7411.896 2153.504000000001\",\"editorPosition\":[1298,840,405,318],\"group\":362},\n{\"label\":\"Create Ropa User Prompt\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"state\",\"name\":\"state\"},{\"portId\":\"request\",\"name\":\"request\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"request\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"This is Alex request: \\n<request>\\n\\nThis is the current environment state:\\nNote that the stacks are in FILO order (First In Last Out)\\n<state>\\n\\nStart your answer with [Travi to Ropa].\",\"fileTypeName\":\"Template\",\"key\":229,\"location\":\"7041.896 2153.504000000001\",\"editorPosition\":[918,39,712,140],\"group\":362},\n{\"label\":\"Request\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Alex to Ropa] Please, prepare a Bloody Mary cocktail for the human.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":230,\"location\":\"6601.896 2249.3420000000006\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"vodka_bottle\\\",\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ice_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lemon_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"electric_shaker\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":233,\"location\":\"5291.896 3498.4890000000005\",\"editorPosition\":[1735,35,425,1463],\"group\":356},\n{\"label\":\"Alex decide to answer by its own or to delegate to the robot\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2090 70\",\"key\":237,\"location\":\"6540 386.40200000000004\",\"group\":352},\n{\"label\":\"Assistant Input\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Alex to Human] Your request has been executed successfully by Ropa.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":238,\"location\":\"6622 705.8630000000003\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"User Input\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] Please, prepare a Bloody Mary cocktail\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":239,\"location\":\"5650 860\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"Add history\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"<history>\\n<user>\\n<assistant>\",\"fileTypeName\":\"Template\",\"key\":240,\"location\":\"7062 755.8630000000003\",\"editorPosition\":[918,39,712,140],\"group\":352},\n{\"label\":\"Alex Chat\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"\\n[Human to Alex] Please, prepare a Bloody Mary cocktail\\n\\n[Human to Alex] Please, prepare a Bloody Mary cocktail\\n[Alex to Human] Your request has been executed successfully by the robot.\\n[Human to Alex] Please, prepare a Bloody Mary cocktail\\n[Alex to Human] Your request has been executed successfully by Ropa.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":241,\"location\":\"7420 756.402\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"User Prompt\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> [Human to Alex] Please, prepare a Bloody Mary cocktail\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":242,\"location\":\"7422 905.6629999999996\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"Add user> header\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":243,\"location\":\"7062 905.8630000000003\",\"editorPosition\":[918,39,712,140],\"group\":352},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":245,\"location\":\"5180 866.9090000000023\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":246,\"location\":\"5180 716.9090000000023\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":247,\"location\":\"4630 866.9090000000023\",\"group\":349},\n{\"label\":\"a coke in a glass on the tray\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"serve me a coka-cola in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":248,\"location\":\"4850 866.9090000000023\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"Capital germany\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"What is the capital of Germany ?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":249,\"location\":\"4850 716.9090000000023\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"[Alex to Ropa] Please, prepare a Bloody Mary cocktail for the human.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2440 140\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":250,\"location\":\"10362 756.1680000000006\",\"group\":352},\n{\"label\":\"Alex\\nResponse\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [Alex to Ropa] Please, prepare a Bloody Mary cocktail for the human.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":251,\"location\":\"9572 655.8630000000003\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"Alex Role Selector\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"alexToHuman\",\"name\":\"alexToHuman\"},{\"portId\":\"alexToRopa\",\"name\":\"alexToRopa\"},{\"portId\":\"taskEvaluation\",\"name\":\"taskEvaluation\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\n\\n\\nconst toRopa = '[Alex to Ropa] ';\\nconst idx = value.indexOf(toRopa);\\nconst msg = value.replace( /\\\\s*:\\\\s*\\\\[Success\\\\]|\\\\s*:\\\\s*\\\\[Error\\\\]/, '' );\\nif( idx != -1 ) {\\n  Engine_fireOutput( nodeData, 'alexToRopa', msg );\\n} else {\\n  // Send evaluation to statistics\\n  Engine_fireOutput( nodeData, 'taskEvaluation', value );\\n  Engine_fireOutput( nodeData, 'alexToHuman', msg );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":252,\"location\":\"9872 654.662999999998\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":352},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":253,\"location\":\"10360 610\",\"group\":352},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nFor positive responses use the syntax: [Alex to Human]:[Success] <message>\\nFor negative responses use the syntax: [Alex to Human]:[Error] <message>\\nIf the request is of type 2) then send the request to Ropa without modify it, \\nkeeping the original formulation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":256,\"location\":\"8120 560\",\"editorPosition\":[1931,690,693,527],\"group\":352,\"color\":\"LightPink\"},\n{\"label\":\"JSON to Text\",\"category\":\"DataFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"doCompute\":\"DataFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":257,\"location\":\"9222 655.8630000000003\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":352},\n{\"label\":\"Alex\\nResponse\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[Alex to Ropa] Please, prepare a Bloody Mary cocktail for the human.\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":258,\"location\":\"8922 655.8630000000003\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":352},\n{\"label\":\"clear\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"clear\",\"name\":\"clear\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":170,\"location\":\"9730 1043.147\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":352},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"3040 150\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":171,\"location\":\"7080 2575\",\"group\":362},\n{\"label\":\"a warm tea in a cup on the tray\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":172,\"location\":\"4850 1011.6040000000002\",\"editorPosition\":[432,797,400,350],\"group\":349,\"color\":\"Violet\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":174,\"location\":\"4630 1011.6040000000002\",\"group\":349},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":175,\"location\":\"5180 1011.6040000000002\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"[Human to Alex] Please, prepare a Bloody Mary cocktail\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 150\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":176,\"location\":\"6970 1170\",\"group\":352},\n{\"label\":\"\\n[Human to Alex] Please, prepare a Bloody Mary cocktail\\n\\n[Human to Alex] Please, prepare a Bloody Mary cocktail\\n[Alex to Human] Your request has been executed successfully by the robot.\\n[Human to Alex] Please, prepare a Bloody Mary cocktail\\n[Alex to Human] Your request has been executed successfully by Ropa.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1210 330\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":177,\"location\":\"10360 1019.2070000000012\",\"group\":352},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":179,\"location\":\"4630 716.9090000000023\",\"group\":349},\n{\"label\":\"Ropa makes a Plan from Alex request\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1530 30\",\"key\":244,\"location\":\"6721.896000000001 3197.8050000000003\",\"group\":363},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"doCompute\":\"DataFlowDSL_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"inHistory\",\"name\":\"inHistory\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":true}],\"fileTypeName\":\"LLM\",\"key\":292,\"location\":\"8532 645.8630000000003\",\"group\":352},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"doCompute\":\"DataFlowDSL_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"inHistory\",\"name\":\"inHistory\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":295,\"location\":\"8491.896 2003.5040000000008\",\"group\":362},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"doCompute\":\"DataFlowDSL_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"inHistory\",\"name\":\"inHistory\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-4\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":true}],\"fileTypeName\":\"LLM\",\"key\":298,\"location\":\"8681.896 3441.267000000001\",\"group\":363},\n{\"label\":\"New Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"whiskey_bottle\\\",\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.9,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\"\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.98,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\"\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\",\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"hand_left\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\",\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.1,\\n    \\\"isHeldByObject\\\": [\\n      \\\"tray\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"first_glass\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":294,\"location\":\"4941.896 3628.789\",\"editorPosition\":[1208,387,400,350],\"group\":356},\n{\"label\":\"Initial Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"vodka_bottle\\\",\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ice_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lemon_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"electric_shaker\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":345,\"location\":\"4951.896 3408.789\",\"editorPosition\":[2728,1072,400,350],\"group\":356,\"color\":\"#ccffcc\"},\n{\"label\":\"User Request Selection\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 70\",\"key\":348,\"location\":\"4640 518.9520000000001\",\"group\":349},\n{\"label\":\"User Input\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":349,\"location\":\"4610 830.0004345703126\",\"font\":\"175px sans-serif\"},\n{\"label\":\"[Alex] Decision on LLM answer or Robot Request\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":352,\"location\":\"6499.999932584347 790.3964345703125\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Environment State\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"660 70\",\"key\":355,\"location\":\"5157.584 3291.8210000000026\",\"group\":356},\n{\"label\":\"Environment\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":356,\"location\":\"4889.999515625 3460.0004345703137\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Plan\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Ropa to Roco] get vodka_bottle from shelf hand_right\\n[Ropa to Roco] open vodka_bottle\\n[Ropa to Roco] pour vodka_bottle mixing_container 20\\n[Ropa to Roco] close vodka_bottle\\n[Ropa to Roco] put vodka_bottle shelf\\n[Ropa to Roco] get tomato_juice_bottle from fridge hand_right\\n[Ropa to Roco] open tomato_juice_bottle\\n[Ropa to Roco] pour tomato_juice_bottle mixing_container 100\\n[Ropa to Roco] close tomato_juice_bottle\\n[Ropa to Roco] put tomato_juice_bottle fridge\\n[Ropa to Roco] get lemon_slice from lemon_slice_bowl hand_left\\n[Ropa to Roco] put lemon_slice mixing_container\\n[Ropa to Roco] get ice_cubes from ice_cubes_bowl hand_right\\n[Ropa to Roco] put ice_cubes mixing_container\\n[Ropa to Roco] switch_on electric_shaker\\n[Ropa to Roco] wait 5\\n[Ropa to Roco] switch_off electric_shaker\\n[Ropa to Roco] get first_glass from table hand_right\\n[Ropa to Roco] pour mixing_container first_glass 120\\n[Ropa to Roco] put first_glass tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":361,\"location\":\"10501.896 3457.6050000000005\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"[TRAVI] Reformulate request into \\nsteps with environment name_id\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":362,\"location\":\"6549.999515625 2210\",\"font\":\"175px sans-serif\"},\n{\"label\":\"[ROPA] Translate sequence of\\nsteps into a robot plan\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":363,\"location\":\"6599.999515625001 3866.0979345703126\",\"font\":\"175px sans-serif\"},\n{\"label\":\"clear\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"clear\",\"name\":\"clear\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":344,\"location\":\"10160 3789.6999999999994\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":363},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1460 480\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":357,\"location\":\"7120 4130\",\"group\":363},\n{\"label\":\"clear\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"clear\",\"name\":\"clear\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":359,\"location\":\"8551.896 2169.542\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":362},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":346,\"location\":\"4490 2690.152\",\"group\":153,\"color\":\"#ccffcc\"},\n{\"label\":\"Engine Code 1.3\",\"color\":\"orange\",\"size\":\"290 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/27.js\",\"key\":115,\"location\":\"12300 -1310\",\"isIncludeScript\":true,\"editorPosition\":[2041,27,626,1920]},\n{\"label\":\"BP\",\"category\":\"DataFlow_BreakPoint\",\"size\":\"80 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":114,\"location\":\"10360 440\",\"group\":352},\n{\"label\":\"BP\",\"category\":\"DataFlow_BreakPoint\",\"size\":\"80 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":117,\"location\":\"10430 1790\"},\n{\"label\":\"Execution Engine\",\"category\":\"Hierarchy_Engine\",\"size\":\"440 420\",\"isFile\":true,\"fileType\":\"application/html\",\"fileContent\":\"//var event, obj, nodeData;\\nvar o = Object.assign( {}, nodeData );\\no.fileContent='';\\nvar nodeStr = JSON.stringify( o );\\nhtml = `\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Reset\\\" )'>Reset</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Run\\\" )'>Run</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Step\\\" )'>Step</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Pause\\\" )'>Pause</button><br>\\n`\",\"buttons_\":[{\"buttonMinSize\":\"80 100\",\"buttonFont\":\"70px sans-serif\",\"name\":\"Reset\",\"checked\":true},{\"buttonMinSize\":\"80 100\",\"buttonFont\":\"70px sans-serif\",\"name\":\"Run\",\"checked\":true},{\"buttonMinSize\":\"80 100\",\"buttonFont\":\"70px sans-serif\",\"name\":\"Step\",\"checked\":false},{\"buttonMinSize\":\"80 100\",\"buttonFont\":\"70px sans-serif\",\"name\":\"Pause\",\"checked\":false}],\"props_\":[{\"name\":\"isAutostart\",\"value\":\"false\"},{\"name\":\"isStepByStep\",\"value\":\"true\",\"valueChanged\":true},{\"name\":\"runTimeout\",\"value\":\"0.1\",\"valueChanged\":\"true\"},{\"name\":\"isStepByStepDeepFirst\",\"value\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\",\"valueChanged\":true},{\"name\":\"isNodePersistencyUsed\",\"value\":\"true\"}],\"key\":118,\"location\":\"3670 2870\",\"isLocalDiv\":true,\"editorPosition\":[686,319,236,180]},\n{\"label\":\"BP\",\"category\":\"DataFlow_BreakPoint\",\"size\":\"80 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":119,\"location\":\"11020 3270\",\"group\":363},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":156,\"location\":\"5140 -1620\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":157,\"location\":\"5140 -1550\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"260 80\",\"color\":\"SkyBlue\",\"props_\":[{\"name\":\"Name\",\"value\":\"SMILE LLM-Based Planner\",\"valueChanged\":true},{\"name\":\"Version\",\"value\":\"2.8\",\"valueChanged\":true},{\"name\":\"Date\",\"value\":\"@getDate()\"},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frankonello\"}],\"key\":158,\"location\":\"5440 -1640\"},\n{\"label\":\"Execution Engine\\n(Link)\",\"color\":\"yellow\",\"size\":\"250 240\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//var event, obj, nodeData;\\nvar o = Object.assign( {}, nodeData );\\no.fileContent='';\\nvar nodeStr = JSON.stringify( o );\\nhtml = `\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Reset\\\" )'>Reset</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Run\\\" )'>Run</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Step\\\" )'>Step</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Pause\\\" )'>Pause</button><br>\\n`\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":161,\"location\":\"3380 2890\",\"linkToKey\":118},\n{\"label\":\"Init Env\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":153,\"location\":\"4320 2639.9999345703127\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Initialize Environment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 70\",\"key\":162,\"location\":\"4350 2600.457\",\"group\":153},\n{\"label\":\"User Input\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"360 70\",\"key\":164,\"location\":\"4770 618.9520000000001\",\"group\":349,\"fontColor\":\"Red\"},\n{\"label\":\"Alex System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"680 70\",\"key\":165,\"location\":\"7910 470\",\"fontColor\":\"Red\"},\n{\"label\":\"TRAVI System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 70\",\"key\":167,\"location\":\"7680 1917.1060000000002\",\"fontColor\":\"Red\",\"group\":362},\n{\"label\":\"ROPA System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 70\",\"key\":169,\"location\":\"8190 3220\",\"fontColor\":\"Red\"},\n{\"label\":\"Break Point to \\n[alexToRopa]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"90 30\",\"key\":178,\"location\":\"10130 700\",\"fontColor\":\"Red\",\"group\":352},\n{\"label\":\"Break Point to [ropaToRoco]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"120 30\",\"key\":183,\"location\":\"10320 3400\",\"fontColor\":\"Red\",\"group\":363},\n{\"label\":\"User\",\"category\":\"Pictures_Basic\",\"size\":\"160 340\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/woman.png\",\"key\":166,\"location\":\"11010.998 -7379.24\",\"group\":289},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"220 340\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/robot.png\",\"key\":168,\"location\":\"11620.998 -7389.24\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":180,\"location\":\"11740.998 -7189.24\",\"label\":\"TRAVI\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":184,\"location\":\"11550.998 -7349.24\",\"label\":\"ALEX\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":187,\"location\":\"11740.998 -7099.24\",\"label\":\"ROPA\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":189,\"location\":\"11740 -6900\",\"label\":\"ROCO\",\"group\":289,\"color\":\"Gray\"},\n{\"label\":\"Alex is the full robot, able to listen to users\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"450 30\",\"key\":191,\"location\":\"11720.998 -7349.24\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":193,\"location\":\"11550.998 -7269.24\",\"label\":\"Condition\",\"group\":289},\n{\"label\":\"If question is about knowledge\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"320 40\",\"key\":197,\"location\":\"11220.998 -7249.24\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":199,\"location\":\"11410.998 -7189.24\",\"label\":\"LLM Knowledge\",\"group\":289},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"120 100\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/speaker.png\",\"key\":209,\"location\":\"11290.998 -6999.24\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_PointLeftCenter\",\"size\":\"150 40\",\"key\":212,\"location\":\"11410.998 -7089.24\",\"label\":\"Answer\",\"group\":289},\n{\"label\":\"It will directly answer\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"210 40\",\"key\":217,\"location\":\"11270.998 -7139.24\",\"group\":289},\n{\"label\":\"If question is about something to do\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"390 40\",\"key\":234,\"location\":\"11730.998 -7249.24\",\"group\":289},\n{\"label\":\"Decompose the request in term of goal, object used, current state, remaining high level steps\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":254,\"location\":\"11920.998 -7189.24\",\"group\":289},\n{\"label\":\"Generate a plan composed of command executable by its API\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":260,\"location\":\"11920.998 -7099.24\",\"group\":289},\n{\"label\":\"Correct Plan incoherence in term of command names, object name used\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":262,\"location\":\"11920 -6970\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":279,\"location\":\"11730 -6623.513\",\"label\":\"Condition\",\"group\":289},\n{\"label\":\"If plan is successfully executed,\\nit will start to listen again\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"330 50\",\"key\":282,\"location\":\"12080 -6640\",\"group\":289},\n{\"label\":\"If plan fail at any step,\\nit will replan it again with different feedback quality\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"230 50\",\"key\":287,\"location\":\"11390 -6690\",\"group\":289},\n{\"label\":\"System Flow\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":289,\"location\":\"10929.999953125 -7169.999595703124\"},\n{\"label\":\"Clear Label of Message Nodes\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isLocal\",\"value\":\"false\",\"unit\":\"unit1\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Test if clean only local group labels:\\n// - isLocal = true => clean only labels in the group we are in\\n// - isLocal = false => clean all labels that are in any group\\nconst isLocal = Engine_getProperty( nodeData, 'isLocal', false );\\n// Group test function\\nconst testGroup = (g)=> ( isLocal? g == nodeData.group: g != undefined );\\n\\n// Get all message nodes (except big plan)\\nconst dataList = appData.me.getNodeListIf( modelId, \\n                                           (d)=> d.category == 'DataFlow_Message' &&\\n                                           testGroup( d.group ) );\\nfor( const data of dataList ) {\\n  setNodeDataField( data.key, 'label', '' );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":186,\"location\":\"-2560 -260\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nFor positive responses use the syntax: [Alex to Human]:[Success] <message>\\nFor negative responses use the syntax: [Alex to Human]:[Error] <message>\\nIf the request is of type 2) then send the request to Ropa without modify it, \\nkeeping the original formulation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":190,\"location\":\"2250 1959.9\",\"editorPosition\":[1606,107,758,253],\"color\":\"LightPink\"},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to you (Travi).\\nYou, on your side , comunicate with a robot called Ropa. \\nRopa can be used to prepare cocktail.\\nRopa has 2 hands and can execute the following commands:\\n- get: to take an object from a location in a hand.\\n- put: to put an object already in hand on/in another object.\\n- open: to open an object.\\n- close: to close an object.\\n- pour: to pour the content of an object into another.\\n- switch on/off: to switch on or off electric devices.\\n- wait: to wait a certain number of second.\\n\\nYour role, Travi, is:\\n1) To identify the goal to reach for the robot from the request.\\n2) To identify from the environment state the list of object you need to use \\nfor solving the human request. In particular, for any object A in the environment state,\\nconsider the following fields: \\n- \\\"type\\\" to know the type of object\\n- \\\"holdsObject\\\" to know wwhich objects object A holds or contains, \\n- \\\"isHeldByObject\\\" to know where object A is located, \\n- \\\"closure\\\" to know if object A is \\\"closed\\\" or \\\"opened\\\",\\n- \\\"power\\\" to know if object A is \\\"on\\\" or \\\"off\\\",\\n- \\\"volume\\\" to know the volume of object A in litres in case it is a container,\\n- \\\"fillLevel\\\" to know the volume already filled in object A,\\n- \\\"holdsLiquid\\\" to know the list of liquid contained in object A in case it is a container,\\n3) Using the environment state and, when available, the list of actions \\nalready performed by the robot, to describe in a sentences the curent state \\nof the robot and of the objects it needs to use.\\n4) Describe the remaining actions to fullfill the human request. For this purpose, use the \\nlist of already performed actions, when present, to identify the actions that have not been done yet\\nto reach the goal.\\nAlways instruct Ropa to prepare the cocktail in the mixer_container of the electric_shacker before serving \\nit in a glass placed on a tray.\\n\\nProvide your response using the format:\\nGoal: ...\\nObject needed: ...\\nState summary from environment state: ...\\nRemaining actions to do: ...\\n\\nExample for a request like \\\"serve me a glass of hot water\\\":\\nGoal: \\nto have glass_1 filled with hot water from pitcher_1 placed on tray_1.\\nObject needed: \\nglass_1, pitcher_1, tray_1.\\nState summary from environment state: \\nthe robot has nothing in the hands, the needed objects are on table_1.\\nRemaining actions to do: \\ntake pitcher1 and pour hot water in glass_1, then take glass_1 and put it on the tray.\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":194,\"location\":\"2250 2149.9\",\"editorPosition\":[1403,916,540,328],\"color\":\"LightPink\"},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". \\nThe robot is called Roco and is able to prepare cocktail.\\nYou should assist a human called Alex. Alex will send you the following \\ninformation:\\n- Goal: the target for wich you have to produce a plan.\\n- Object needed: the name of the object you use in your plan.\\n- State summary from environment state: this is a short summary of the current \\n  environment state of which you have a detailed description in JSON format.\\n- Remaining actions to do: List of actions that you must use to build your plan. \\n  Do not worry if this list is only a portion of the actions needed to achieve \\n  the goal since some actions may have already been done towards the goal.\\n\\nA plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n* The following command allows Roco to open an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] open <object> \\n  \\n* The following command allows Roco to close an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] close <object> \\n  \\n* The following command allows Roco to take an <object-to-be-taken> from a <source_object> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_right\\n  \\n* The following command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  \\n* The following command allows Roco to pour a certain <number-of-dosis> of a liquid \\n  from an <object-to-pour-from> into an <object-to-pour-into>. \\n  This command must be used to pour bottle of liquid, salt or pepper.\\n  The volume of a single dosis is 0.01 liter. Provide a <number-of-dosis> as last argument:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into> <number-of-dosis>\\n  \\n* The following command allows Roco to switch on or off an electric device:\\n  command syntax: \\n  - [Ropa to Roco] switch_on <object-to-switch-on>  \\n  - [Ropa to Roco] switch_off <object-to-switch-off>  \\n\\n* The following command allows Roco to wait for x-second:\\n  command syntax: \\n  - [Ropa to Roco] wait <x-second>  \\n\\n* The following command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  \\n\\nEvery command of your plan should start with \\n[Ropa to Roco] .\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":208,\"location\":\"2250 2329.9\",\"editorPosition\":[1132,245,1003,1812],\"color\":\"LightPink\"},\n{\"label\":\"User Request\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Please, prepare a Bloody Mary cocktail\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":216,\"location\":\"2260 2520\",\"editorPosition\":[432,797,400,350],\"color\":\"Violet\"},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":235,\"location\":\"5180 1141.658\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"Experiment Dispatcher\",\"category\":\"DataFlow_Component\",\"size\":\"280 170\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"taskInfo\",\"name\":\"taskInfo\"}],\"out_\":[{\"portId\":\"alexPrompt\",\"name\":\"alexPrompt\"},{\"portId\":\"traviPrompt\",\"name\":\"traviPrompt\"},{\"portId\":\"ropaPrompt\",\"name\":\"ropaPrompt\"},{\"portId\":\"userPrompt\",\"name\":\"userPrompt\"},{\"portId\":\"environmentState\",\"name\":\"environmentState\"},{\"portId\":\"startApplication\",\"name\":\"startApplication\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"taskInfo\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const inV = Engine_getInput( nodeData, 'taskInfo', {} );\\n  \\n  if( inV.env && inV.alex && inV.travi && inV.ropa && inV.user ) {\\n    // Propagete selected templates\\n    Engine_fireOutput( nodeData, 'alexPrompt',  inV.alex );\\n    Engine_fireOutput( nodeData, 'traviPrompt', inV.travi );\\n    Engine_fireOutput( nodeData, 'ropaPrompt',  inV.ropa );\\n    Engine_fireOutput( nodeData, 'userPrompt',  inV.user );\\n    \\n    Engine_fireOutput( nodeData, 'environmentState', inV.env );\\n    \\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'startApplication' );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":261,\"location\":\"1580 2090\",\"editorPosition\":[1745,1593,570,981]},\n{\"label\":\"Initial Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"vodka_bottle\\\",\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ice_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lemon_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"electric_shaker\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":210,\"location\":\"2240 2719.9\",\"editorPosition\":[1735,35,425,1463],\"color\":\"#ccffcc\"},\n{\"label\":\"001 RobotAPIPrompt\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"JavaScript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/48.js\",\"key\":301,\"location\":\"-1231.301 1359.658\",\"group\":319,\"editorPosition\":[1606,19,681,1061]},\n{\"label\":\"AlexPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/49.js\",\"key\":303,\"location\":\"-1231.301 1442.158\",\"editorPosition\":[3112,14,760,535],\"group\":231},\n{\"label\":\"TraviPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/50.js\",\"key\":305,\"location\":\"-1231.301 1502.158\",\"editorPosition\":[3112,554,759,295],\"group\":231},\n{\"label\":\"RopaPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/51.js\",\"key\":309,\"location\":\"-1231.301 1562.158\",\"editorPosition\":[3006,961,772,993],\"group\":231},\n{\"label\":\"UserPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/52.js\",\"key\":311,\"location\":\"-1231.301 1622.158\",\"editorPosition\":[3200,1964,674,414],\"group\":231},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":312,\"location\":\"2251.8959999999997 905\",\"editorPosition\":[1606,107,758,253],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":313,\"location\":\"2251.8959999999997 1065\",\"editorPosition\":[1403,916,540,328],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n* This command allows Roco to open the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] open_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object-with-door> can only be opened if it is closed\\n  \\n* This command allows Roco to close the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] close_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object-with-door> can only be closed if it is opened\\n  \\n* This command allows Roco to take an <object-to-be-taken> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> hand_right\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-taken>\\n  - [Roco to Ropa] <object-to-be-taken> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object-to-be-taken> can only be taken if the hand is empty\\n  \\n* This command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-put, destination-object>\\n  - [Roco to Ropa] <object-to-be-put> cannot be put because <reason of failure>\\n  constraints:\\n  - <object-to-be-put> can only be put somewhere if it is in the hand\\n  - <object-to-be-put> can be put on a <destination-object> that has a flat surface\\n  - <object-to-be-put> can be put in a <destination-object> that is a container\\n  \\n* This command allows Roco to pour the liquid of a <object-to-pour-from> into \\n  a <object-to-pour-into>:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-pour-from, object-to-pour-into>\\n  - [Roco to Ropa] <object-to-pour-into> cannot be filled because <reason of failure>\\n  constraints:\\n  - <object-to-pour-from> and <object-to-pour-into> must be containers\\n  - <object-to-pour-from> and <object-to-pour-into> must be held in different hands\\n  \\n* This command allows Roco to screw an <object-to-screw_top_of> to open or \\n  close it using an empty hand:\\n  command syntax: \\n  - [Ropa to Roco] screw <object-to-screw_top_of>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-screw_top_of>\\n  - [Roco to Ropa] <object-to-screw_top_of> cannot be opened because <reason of failure>\\n  constraints:\\n  - <object-to-screw_top_of> must be a bottle\\n  - <object-to-screw_top_of> must be held in a hand and the other hand must be empty\\n  \\n* This command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-look-at>\\n  - [Roco to Ropa] <object-to-look-at> is incorrect or do not exist.\\n  constraints:\\n  - <object-to-look-at> must be a valid name\\n  \\n\\nEach time you (Ropa) receive a <JSON description> for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":314,\"location\":\"2251.8959999999997 1205\",\"editorPosition\":[1132,245,1003,1812],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"a warm tea in a cup on the tray\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":315,\"location\":\"2251.8959999999997 1355\",\"editorPosition\":[432,797,400,350],\"color\":\"Violet\",\"group\":317},\n{\"label\":\"Initial Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n    ],\\n    \\\"perif\\\": [\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":316,\"location\":\"2241.8959999999997 1535\",\"editorPosition\":[1735,35,425,1463],\"color\":\"#ccffcc\",\"group\":317},\n{\"label\":\"Original Prompts\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":317,\"location\":\"2189.9995156249997 1220\"},\n{\"label\":\"RobotAPIPromptList\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":319,\"location\":\"-1251.301 1362.158\",\"group\":231},\n{\"label\":\"Experiment Collector\",\"category\":\"DataFlow_Component\",\"size\":\"300 230\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"resetExperiment\",\"name\":\"resetExperiment\"},{\"portId\":\"nextExperiment\",\"name\":\"nextExperiment\"},{\"portId\":\"environmentStateList\",\"name\":\"environmentStateList\"},{\"portId\":\"robotAIPromptList\",\"name\":\"robotAIPromptList\"},{\"portId\":\"alexPromptList\",\"name\":\"alexPromptList\"},{\"portId\":\"traviPromptList\",\"name\":\"traviPromptList\"},{\"portId\":\"ropaPromptList\",\"name\":\"ropaPromptList\"},{\"portId\":\"userPromptList\",\"name\":\"userPromptList\"},{\"portId\":\"schedule\",\"name\":\"schedule\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"},{\"portId\":\"endOfSchedule\",\"name\":\"endOfSchedule\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"nextExperiment\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'resetExperiment' ) {\\n  Engine_set( nodeData, 'step', 0 );\\n}\\n\\nif( name == 'experimentDone' ) {\\n  triggerNextExperiment();\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  triggerNextExperiment();\\n}\\n\\n\\nfunction triggerNextExperiment() {\\n  const step = Engine_get( nodeData, 'step', 0 );\\n  if( step == -1 ) { // Avoid triggers after end of experiments\\n    return;\\n  }\\n\\n  const schedule = Engine_getInput( nodeData, 'schedule', {} );\\n  \\n  const envList        = Engine_getInput( nodeData, 'environmentStateList', {} );\\n  const robotAPIPrompt = Engine_getInput( nodeData, 'robotAIPromptList', {} );\\n  const alexList       = Engine_getInput( nodeData, 'alexPromptList', {} );\\n  const traviList      = Engine_getInput( nodeData, 'traviPromptList', {} );\\n  const ropaList       = Engine_getInput( nodeData, 'ropaPromptList', {} );\\n  const userList       = Engine_getInput( nodeData, 'userPromptList', {});\\n  \\n  if( step < schedule.length ) {\\n    const task = schedule[step];\\n    const id = task.id;\\n    \\n    // Check if this is an end task\\n    if( task.isEnd ) {\\n      terminateExperiments();\\n      return;\\n    }\\n    \\n    const env = JSON.stringify( envList[task.env], null, 2 );\\n    const alex = alexList[task.alex];\\n    const travi = traviList[task.travi];\\n    const api = robotAPIPrompt[task.api];\\n    const ropa = Engine_applyTemplate( ropaList[task.ropa], { robotAPIPrompt: api } );\\n    const user = userList[task.user];\\n    const requestId = task.user;\\n    if( env && alex && travi && ropa && user ) {\\n      // Define a new output\\n      const out = { id, env, alex, travi, ropa, user, requestId };\\n      \\n      log( 'out', out ); \\n      Engine_fireOutput( nodeData, 'out', out );\\n    } else {\\n      console.warn( `The task ${step} in the schedule is not correct` );\\n    }\\n    \\n    // Move to the next step\\n    Engine_set( nodeData, 'step', step+1 );\\n  } else {\\n    terminateExperiments();\\n  }\\n}\\nfunction terminateExperiments() {\\n  alert( ' Experiment Schedule Completed ' );\\n  // Restart the scheduler\\n  Engine_set( nodeData, 'step', -1 );\\n  Engine_fireOutput( nodeData, 'endOfSchedule' );\\n}\\nfunction log( name, data ) {\\n  if( name == 'out' ) {\\n    const m = 10;\\n    const str = `id: ${data.id} `+\\n                `env: #keys = ${Object.keys(data.env).length} `+\\n                `alex: ${data.alex.substring( 0, m )}...  `+\\n                `travi: ${data.travi.substring( 0, m )}...  `+\\n                `ropa: ${data.ropa.substring( 0, m )}...  `+\\n                `user: ${data.user.substring( 0, m )}...`;\\n    console.log( 'Exp Collector: ', str );\\n  } else {\\n    console.log( 'Exp Collector: ', name, JSON.stringify( data, null, 2 ) );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":327,\"location\":\"-340 2089.9\",\"editorPosition\":[-3289,62,701,1188]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"150 150\",\"buttons_\":[{\"buttonMinSize\":\"90 90\",\"buttonFont\":\"35px sans-serif\",\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":335,\"location\":\"-3260 2740.637\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"150 150\",\"buttons_\":[{\"buttonMinSize\":\"90 90\",\"buttonFont\":\"35px sans-serif\",\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":281,\"location\":\"-3260 2370.637\"},\n{\"label\":\"001 EnvironmentState\",\"category\":\"DataFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst envCUBE = {\\n  //\\n  //            b2                      b2\\n  //            b3                      b3\\n  //            b1                      b1 \\n  //  table---------------- => table-------------\\n  //\\n  \\\"p01\\\": {\\n    \\\"robot\\\": {\\n      \\\"type\\\": \\\"robot\\\",\\n      \\\"holdsObject\\\": [ \\n        \\\"hand_right\\\" \\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"lab\\\"\\n      ]\\n    },\\n    \\\"hand_right\\\": {\\n      \\\"type\\\": \\\"hand\\\",\\n      \\\"holdsObject\\\": [],\\n      \\\"isHeldByObject\\\": [\\n        \\\"robot\\\"\\n      ]\\n    },\\n    \\\"hand_left\\\": {\\n      \\\"type\\\": \\\"hand\\\",\\n      \\\"isInactive\\\": true,\\n      \\\"holdsObject\\\": [],\\n      \\\"isHeldByObject\\\": [\\n        \\\"robot\\\"\\n      ]\\n    },  \\n    \\\"table\\\": {\\n      \\\"type\\\": \\\"table\\\",\\n      \\\"holdsObject\\\": [\\n        \\\"b1\\\"\\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"lab\\\"\\n      ]\\n    },\\n    \\\"b1\\\": {\\n      \\\"type\\\": \\\"block\\\",\\n      \\\"holdsObject\\\": [\\n        \\\"b3\\\"\\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"table\\\"\\n      ]\\n    },\\n    \\\"b2\\\": {\\n      \\\"type\\\": \\\"block\\\",\\n      \\\"holdsObject\\\": [\\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"b3\\\"\\n      ]\\n    },\\n    \\\"b3\\\": {\\n      \\\"type\\\": \\\"block\\\",\\n      \\\"holdsObject\\\": [\\n        \\\"b2\\\"\\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"b1\\\"\\n      ]\\n    },\\n  },\\n  //\\n  //            b1                      b2\\n  //            b3                      b3\\n  //            b2                      b1 \\n  //  table---------------- => table-------------\\n  //\\n  \\\"p02\\\": {\\n    \\\"robot\\\": {\\n      \\\"type\\\": \\\"robot\\\",\\n      \\\"holdsObject\\\": [ \\n        \\\"hand_right\\\" \\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"lab\\\"\\n      ]\\n    },\\n    \\\"hand_right\\\": {\\n      \\\"type\\\": \\\"hand\\\",\\n      \\\"holdsObject\\\": [],\\n      \\\"isHeldByObject\\\": [\\n        \\\"robot\\\"\\n      ]\\n    },\\n    \\\"hand_left\\\": {\\n      \\\"type\\\": \\\"hand\\\",\\n      \\\"isInactive\\\": true,\\n      \\\"holdsObject\\\": [],\\n      \\\"isHeldByObject\\\": [\\n        \\\"robot\\\"\\n      ]\\n    },  \\n    \\\"table\\\": {\\n      \\\"type\\\": \\\"table\\\",\\n      \\\"holdsObject\\\": [\\n        \\\"b2\\\"\\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"lab\\\"\\n      ]\\n    },\\n    \\\"b1\\\": {\\n      \\\"type\\\": \\\"block\\\",\\n      \\\"holdsObject\\\": [\\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"b3\\\"\\n      ]\\n    },\\n    \\\"b2\\\": {\\n      \\\"type\\\": \\\"block\\\",\\n      \\\"holdsObject\\\": [\\n        \\\"b3\\\"\\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"table\\\"\\n      ]\\n    },\\n    \\\"b3\\\": {\\n      \\\"type\\\": \\\"block\\\",\\n      \\\"holdsObject\\\": [\\n        \\\"b1\\\"\\n      ],\\n      \\\"isHeldByObject\\\": [\\n        \\\"b2\\\"\\n      ]\\n    },\\n  },\\n \\n};\\n\\nconst envSMILE = {\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n    ],\\n    \\\"perif\\\": [\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]  \\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [ \\n      \\\"gaze\\\",\\n      \\\"hand_left\\\", \\n      \\\"hand_right\\\" \\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n};\\nconst envPIZZA = {\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"pizza_dough_big_plate\\\",\\n      \\\"mozzarella_cheese_bowl\\\",\\n      \\\"garlic_bowl\\\",\\n      \\\"italian_seasoning_bowl\\\",\\n      \\\"fresh_basil_leaves_bowl\\\",\\n      \\\"parmesan_cheese_bowl\\\",\\n      \\\"red_onion_bowl\\\",\\n      \\\"mushrooms_bowl\\\",\\n      \\\"black_olives_bowl\\\",\\n      \\\"pepperoni_slices_bowl\\\",\\n      \\\"sausage_bowl\\\",\\n      \\\"bacon_bowl\\\",\\n      \\\"ham_bowl\\\",\\n      \\\"pineapple_chunks_bowl\\\",\\n      \\\"fresh_tomatoes_bowl\\\",\\n      \\\"spinach_leaves_bowl\\\",\\n      \\\"feta_cheese_bowl\\\",\\n      \\\"goat_cheese_bowl\\\",\\n      \\\"anchovies_bowl\\\",\\n      \\\"grilled_chicken_bowl\\\",\\n      \\\"sun_dried_tomatoes_bowl\\\",\\n      \\\"artichoke_hearts_bowl\\\",\\n      \\\"provolone_cheese_bowl\\\",\\n      \\\"ricotta_cheese_bowl\\\",\\n      \\\"oven\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"pizza_dough_big_plate\\\",\\n      \\\"mozzarella_cheese_bowl\\\",\\n      \\\"garlic_bowl\\\",\\n      \\\"italian_seasoning_bowl\\\",\\n      \\\"fresh_basil_leaves_bowl\\\",\\n      \\\"parmesan_cheese_bowl\\\",\\n      \\\"red_onion_bowl\\\",\\n      \\\"mushrooms_bowl\\\",\\n      \\\"black_olives_bowl\\\",\\n      \\\"pepperoni_slices_bowl\\\",\\n      \\\"sausage_bowl\\\",\\n      \\\"bacon_bowl\\\",\\n      \\\"ham_bowl\\\",\\n      \\\"pineapple_chunks_bowl\\\",\\n      \\\"fresh_tomatoes_bowl\\\",\\n      \\\"spinach_leaves_bowl\\\",\\n      \\\"feta_cheese_bowl\\\",\\n      \\\"goat_cheese_bowl\\\",\\n      \\\"anchovies_bowl\\\",\\n      \\\"grilled_chicken_bowl\\\",\\n      \\\"sun_dried_tomatoes_bowl\\\",\\n      \\\"artichoke_hearts_bowl\\\",\\n      \\\"provolone_cheese_bowl\\\",\\n      \\\"ricotta_cheese_bowl\\\",\\n      \\\"oven\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"tomato_sauce_bottle\\\",\\n      \\\"olive_oil_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"peppers_bottle\\\",\\n      \\\"bbq_sauce_bottle\\\",\\n      \\\"pesto_sauce_bottle\\\",\\n      \\\"oven\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"pizza_dough\\\": {\\n    \\\"type\\\": \\\"dough\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 0.0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"pizza_dough_big_plate\\\"\\n    ]\\n  },\\n  \\\"pizza_dough_big_plate\\\": {\\n    \\\"type\\\": \\\"big_plate\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"pizza_dough\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]    \\n  },\\n  \\\"tomato_sauce\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_sauce_bottle\\\"\\n    ]\\n  },\\n  \\\"tomato_sauce_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_sauce\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ] \\n  },\\n  \\\"mozzarella_cheese\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mozzarella_cheese_bowl\\\"\\n    ]\\n  },\\n  \\\"mozzarella_cheese_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mozzarella_cheese\\\",\\n      \\\"mozzarella_cheese\\\",\\n      \\\"mozzarella_cheese\\\",\\n      \\\"mozzarella_cheese\\\",\\n      \\\"mozzarella_cheese\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"olive_oil\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"olive_oil_bottle\\\"\\n    ]\\n  },\\n  \\\"olive_oil_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"olive_oil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ] \\n  },\\n  \\\"garlic\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"garlic_bowl\\\"\\n    ]\\n  },\\n  \\\"garlic_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"garlic\\\",\\n      \\\"garlic\\\",\\n      \\\"garlic\\\",\\n      \\\"garlic\\\",\\n      \\\"garlic\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ]\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ] \\n  },\\n  \\\"italian_seasoning\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"italian_seasoning_bowl\\\"\\n    ]\\n  },\\n  \\\"italian_seasoning_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"italian_seasoning\\\",\\n      \\\"italian_seasoning\\\",\\n      \\\"italian_seasoning\\\",\\n      \\\"italian_seasoning\\\",\\n      \\\"italian_seasoning\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"fresh_basil_leaves\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_basil_leaves_bowl\\\"\\n    ]\\n  },\\n  \\\"fresh_basil_leaves_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_basil_leaves\\\",\\n      \\\"fresh_basil_leaves\\\",\\n      \\\"fresh_basil_leaves\\\",\\n      \\\"fresh_basil_leaves\\\",\\n      \\\"fresh_basil_leaves\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"parmesan_cheese\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"parmesan_cheese_bowl\\\"\\n    ]\\n  },\\n  \\\"parmesan_cheese_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"parmesan_cheese\\\",\\n      \\\"parmesan_cheese\\\",\\n      \\\"parmesan_cheese\\\",\\n      \\\"parmesan_cheese\\\",\\n      \\\"parmesan_cheese\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"red_onion\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"red_onion_bowl\\\"\\n    ]\\n  },\\n  \\\"red_onion_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"red_onion\\\",\\n      \\\"red_onion\\\",\\n      \\\"red_onion\\\",\\n      \\\"red_onion\\\",\\n      \\\"red_onion\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"peppers\\\": {\\n    \\\"type\\\": \\\"peppers\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"peppers_bottle\\\"\\n    ]\\n  },\\n  \\\"peppers_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsLiquid\\\": [\\n      \\\"peppers\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ] \\n  },\\n  \\\"mushrooms\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mushrooms_bowl\\\"\\n    ]\\n  },\\n  \\\"mushrooms_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mushrooms\\\",\\n      \\\"mushrooms\\\",\\n      \\\"mushrooms\\\",\\n      \\\"mushrooms\\\",\\n      \\\"mushrooms\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"black_olives\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"black_olives_bowl\\\"\\n    ]\\n  },\\n  \\\"black_olives_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"black_olives\\\",\\n      \\\"black_olives\\\",\\n      \\\"black_olives\\\",\\n      \\\"black_olives\\\",\\n      \\\"black_olives\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"pepperoni_slices\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pepperoni_slices_bowl\\\"\\n    ]\\n  },\\n  \\\"pepperoni_slices_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"pepperoni_slices\\\",\\n      \\\"pepperoni_slices\\\",\\n      \\\"pepperoni_slices\\\",\\n      \\\"pepperoni_slices\\\",\\n      \\\"pepperoni_slices\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"sausage\\\": {\\n    \\\"type\\\": \\\"sausage\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sausage_bowl\\\"\\n    ]\\n  },\\n  \\\"sausage_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sausage\\\",\\n      \\\"sausage\\\",\\n      \\\"sausage\\\",\\n      \\\"sausage\\\",\\n      \\\"sausage\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"bacon\\\": {\\n    \\\"type\\\": \\\"bacon\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bacon_bowl\\\"\\n    ]\\n  },\\n  \\\"bacon_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bacon\\\",\\n      \\\"bacon\\\",\\n      \\\"bacon\\\",\\n      \\\"bacon\\\",\\n      \\\"bacon\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"ham\\\": {\\n    \\\"type\\\": \\\"ham\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ham_bowl\\\"\\n    ]\\n  },\\n  \\\"ham_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ham\\\",\\n      \\\"ham\\\",\\n      \\\"ham\\\",\\n      \\\"ham\\\",\\n      \\\"ham\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"pineapple_chunks\\\": {\\n    \\\"type\\\": \\\"pineapple_chunks\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_chunks_bowl\\\"\\n    ]\\n  },\\n  \\\"pineapple_chunks_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"pineapple_chunks\\\",\\n      \\\"pineapple_chunks\\\",\\n      \\\"pineapple_chunks\\\",\\n      \\\"pineapple_chunks\\\",\\n      \\\"pineapple_chunks\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"fresh_tomatoes\\\": {\\n    \\\"type\\\": \\\"fresh_tomatoes\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_tomatoes_bowl\\\"\\n    ]\\n  },\\n  \\\"fresh_tomatoes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_tomatoes\\\",\\n      \\\"fresh_tomatoes\\\",\\n      \\\"fresh_tomatoes\\\",\\n      \\\"fresh_tomatoes\\\",\\n      \\\"fresh_tomatoes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"spinach_leaves\\\": {\\n    \\\"type\\\": \\\"spinach_leaves\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"spinach_leaves_bowl\\\"\\n    ]\\n  },\\n  \\\"spinach_leaves_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"spinach_leaves\\\",\\n      \\\"spinach_leaves\\\",\\n      \\\"spinach_leaves\\\",\\n      \\\"spinach_leaves\\\",\\n      \\\"spinach_leaves\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"feta_cheese\\\": {\\n    \\\"type\\\": \\\"feta_cheese\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"feta_cheese_bowl\\\"\\n    ]\\n  },\\n  \\\"feta_cheese_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"feta_cheese\\\",\\n      \\\"feta_cheese\\\",\\n      \\\"feta_cheese\\\",\\n      \\\"feta_cheese\\\",\\n      \\\"feta_cheese\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"goat_cheese\\\": {\\n    \\\"type\\\": \\\"goat_cheese\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"goat_cheese_bowl\\\"\\n    ]\\n  },\\n  \\\"goat_cheese_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"goat_cheese\\\",\\n      \\\"goat_cheese\\\",\\n      \\\"goat_cheese\\\",\\n      \\\"goat_cheese\\\",\\n      \\\"goat_cheese\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"anchovies\\\": {\\n    \\\"type\\\": \\\"anchovies\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"anchovies_bowl\\\"\\n    ]\\n  },\\n  \\\"anchovies_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"anchovies\\\",\\n      \\\"anchovies\\\",\\n      \\\"anchovies\\\",\\n      \\\"anchovies\\\",\\n      \\\"anchovies\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"bbq_sauce\\\": {\\n    \\\"type\\\": \\\"bbq_sauce\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bbq_sauce_bottle\\\"\\n    ]\\n  },\\n  \\\"bbq_sauce_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bbq_sauce\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grilled_chicken\\\": {\\n    \\\"type\\\": \\\"grilled_chicken\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grilled_chicken_bowl\\\"\\n    ]\\n  },\\n  \\\"grilled_chicken_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"grilled_chicken\\\",\\n      \\\"grilled_chicken\\\",\\n      \\\"grilled_chicken\\\",\\n      \\\"grilled_chicken\\\",\\n      \\\"grilled_chicken\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"pesto_sauce\\\": {\\n    \\\"type\\\": \\\"pesto_sauce\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pesto_sauce_bottle\\\"\\n    ]\\n  },\\n  \\\"pesto_sauce_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n        \\\"pesto_sauce\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sun-dried_tomatoes\\\": {\\n    \\\"type\\\": \\\"sun-dried_tomatoes\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sun-dried_tomatoes_bowl\\\"\\n    ]\\n  },\\n  \\\"sun-dried_tomatoes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sun-dried_tomatoes\\\",\\n      \\\"sun-dried_tomatoes\\\",\\n      \\\"sun-dried_tomatoes\\\",\\n      \\\"sun-dried_tomatoes\\\",\\n      \\\"sun-dried_tomatoes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"artichoke_hearts\\\": {\\n    \\\"type\\\": \\\"artichoke_hearts\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"artichoke_hearts_bowl\\\"\\n    ]\\n  },\\n  \\\"artichoke_hearts_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"artichoke_hearts\\\",\\n      \\\"artichoke_hearts\\\",\\n      \\\"artichoke_hearts\\\",\\n      \\\"artichoke_hearts\\\",\\n      \\\"artichoke_hearts\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"provolone_cheese\\\": {\\n    \\\"type\\\": \\\"provolone_cheese\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"provolone_cheese_bowl\\\"\\n    ]\\n  },\\n  \\\"provolone_cheese_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"provolone_cheese\\\",\\n      \\\"provolone_cheese\\\",\\n      \\\"provolone_cheese\\\",\\n      \\\"provolone_cheese\\\",\\n      \\\"provolone_cheese\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"ricotta_cheese\\\": {\\n      \\\"type\\\": \\\"ricotta_cheese\\\",\\n      \\\"isHeldByObject\\\": [\\n          \\\"ricotta_cheese_bowl\\\"\\n      ]\\n  },\\n  \\\"ricotta_cheese_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ricotta_cheese\\\",\\n      \\\"ricotta_cheese\\\",\\n      \\\"ricotta_cheese\\\",\\n      \\\"ricotta_cheese\\\",\\n      \\\"ricotta_cheese\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  },\\n  \\\"oven\\\": {\\n    \\\"type\\\": \\\"oven\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"type\\\": \\\"oven\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ] \\n  }\\n};\\nconst envCOCKTAIL = {\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"vodka_bottle\\\",\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ice_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lemon_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\",\\n      \\\"lemon_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 1.0,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 0.0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"electric_shaker\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 0.0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 0.0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 0.0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 0.0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1.0,\\n    \\\"fillLevel\\\": 0.0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n};\\n\\nconst json = {\\n  '01.01 Env SMILE': envSMILE,\\n  '02.01 Cube p01': envCUBE.p01,\\n  '02.02 Cube p02': envCUBE.p02,\\n  '03.01 Env PIZZA': envPIZZA,\\n  '03.01 Env COCKTAIL': envCOCKTAIL,\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":290,\"location\":\"-1230 1966.737\",\"editorPosition\":[1463,138,830,1209]},\n{\"label\":\"EnvironmentStateList\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":300,\"location\":\"-1241.301 1222.158\",\"group\":231},\n{\"label\":\"001 EnvironmentState\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"JavaScript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/47.json\",\"key\":302,\"location\":\"-1221.301 1219.658\",\"group\":300,\"editorPosition\":[35,1091,360,1492]},\n{\"label\":\"001 RobotAPIPrompt\",\"category\":\"DataFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n  \\n  /////////////////////////////////////////////////\\n  '01.01 PizzaAPI':\\n  /////////////////////////////////////////////////\\n  \\n`* The following command allows Roco to open an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] open <object> \\n  \\n* The following command allows Roco to close an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] close <object> \\n  \\n* The following command allows Roco to take an <object-to-be-taken> from a <source_object> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_right\\n  \\n* The following command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>. This command must be use also to sprinkle ingredient on a pizza:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  \\n* The following command allows Roco to pour a certain <volume-in-ml> of a liquid \\n  from an <object-to-pour-from> into an <object-to-pour-into>. \\n  This command must be used to pour bottle of liquid, salt or pepper.\\n  Provide a <volume-in-ml> as last argument:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into> <volume-in-ml>\\n  \\n* The following command allows Roco to switch on or off an electric device:\\n  command syntax: \\n  - [Ropa to Roco] switch_on <object-to-switch-on>  \\n  - [Ropa to Roco] switch_off <object-to-switch-off>  \\n\\n* The following command allows Roco to wait for x-second:\\n  command syntax: \\n  - [Ropa to Roco] wait <x-second>  \\n\\n* The following command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  `,\\n\\n  /////////////////////////////////////////////////\\n  '01.01 CocktailAPI':\\n  /////////////////////////////////////////////////\\n  \\n`* The following command allows Roco to open an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] open <object> \\n  \\n* The following command allows Roco to close an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] close <object> \\n  \\n* The following command allows Roco to take an <object-to-be-taken> from a <source_object> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_right\\n  \\n* The following command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  \\n* The following command allows Roco to pour a certain <number-of-dosis> of a liquid \\n  from an <object-to-pour-from> into an <object-to-pour-into>. \\n  This command must be used to pour bottle of liquid, salt or pepper.\\n  The volume of a single dosis is 0.01 liter. Provide a <number-of-dosis> as last argument:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into> <number-of-dosis>\\n  \\n* The following command allows Roco to switch on or off an electric device:\\n  command syntax: \\n  - [Ropa to Roco] switch_on <object-to-switch-on>  \\n  - [Ropa to Roco] switch_off <object-to-switch-off>  \\n\\n* The following command allows Roco to wait for x-second:\\n  command syntax: \\n  - [Ropa to Roco] wait <x-second>  \\n\\n* The following command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  `,\\n  \\n  /////////////////////////////////////////////////\\n  '01.01 RobotAPIPrompt':\\n  /////////////////////////////////////////////////\\n  \\n`* The following command allows Roco to open an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] open <object> \\n  \\n* The following command allows Roco to close an <object> with a door, a cap, a lid, ...:\\n  command syntax: [Ropa to Roco] close <object> \\n  \\n* The following command allows Roco to take an <object-to-be-taken> from a <source_object> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> from <source_object> hand_right\\n  \\n* The following command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  \\n* The following command allows Roco to pour the liquid of a <object-to-pour-from> into \\n  a <object-to-pour-into>:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into>\\n  \\n* The following command allows Roco to switch on or off an electric device:\\n  command syntax: \\n  - [Ropa to Roco] switch_on <object-to-switch-on>  \\n  - [Ropa to Roco] switch_off <object-to-switch-off>  \\n\\n* The following command allows Roco to wait for x-second:\\n  command syntax: \\n  - [Ropa to Roco] wait <x-second>  \\n\\n* The following command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  `,\\n  \\n  /////////////////////////////////////////////////\\n  '02.01 RobotAPIPrompt 1 hand': \\n  /////////////////////////////////////////////////\\n  \\n`* The following command allows Roco to take an <object-to-be-taken> with the right hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> hand_right\\n  \\n* The following command allows Roco to put an <object-to-be-put> which is in its right\\n  hand on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  `,\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":334,\"location\":\"-1230 2102.259847498308\",\"editorPosition\":[-6743,408,847,1046]},\n{\"label\":\"AlexPromptList\",\"category\":\"DataFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n\\n  /////////////////////////////////////////////////\\n  '01.01 Basic': \\n  /////////////////////////////////////////////////\\n\\n`Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nFor positive responses use the syntax: [Alex to Human]:[Success] <message>\\nFor negative responses use the syntax: [Alex to Human]:[Error] <message>\\nIf the request is of type 2) then send the request to Ropa without modify it, \\nkeeping the original formulation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\\n`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":337,\"location\":\"-1230 2226.737\",\"editorPosition\":[-3837,12,617,793]},\n{\"label\":\"TraviPromptList\",\"category\":\"DataFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n\\n  /////////////////////////////////////////////////\\n  '01.01 Pizza':\\n  /////////////////////////////////////////////////\\n  \\n`You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to you (Travi).\\nYou, on your side , comunicate with a robot called Ropa. \\nRopa can be used to prepare pizza.\\nRopa has 2 hands and can execute the following commands:\\n- get: to take an object from a location in a hand.\\n- put: to put an object already in hand on/in another object. \\n  This command can also be used to sprinkle ingredient over the pzza.\\n- open: to open an object.\\n- close: to close an object.\\n- pour: to pour the content of an object into another.\\n- switch on/off: to switch on or off electric devices.\\n- wait: to wait a certain number of second.\\n\\nYour role, Travi, is:\\n1) To identify the goal to reach for the robot from the request.\\n2) To identify from the environment state the list of object you need to use \\nfor solving the human request. In particular, for any object A in the environment state,\\nconsider the following fields: \\n- \\\"type\\\" to know the type of object\\n- \\\"holdsObject\\\" to know wwhich objects object A holds or contains, \\n- \\\"isHeldByObject\\\" to know where object A is located, \\n- \\\"closure\\\" to know if object A is \\\"closed\\\" or \\\"opened\\\",\\n- \\\"power\\\" to know if object A is \\\"on\\\" or \\\"off\\\",\\n- \\\"volume\\\" to know the volume of object A in litres in case it is a container,\\n- \\\"fillLevel\\\" to know the volume already filled in object A,\\n- \\\"holdsLiquid\\\" to know the list of liquid contained in object A in case it is a container,\\n3) Using the environment state and, when available, the list of actions \\nalready performed by the robot, to describe in a sentences the curent state \\nof the robot and of the objects it needs to use.\\n4) Describe the remaining actions to fullfill the human request. For this purpose, use the \\nlist of already performed actions, when present, to identify the actions that have not been done yet\\nto reach the goal.\\nAlways instruct Ropa to prepare the pizza directly in the pizza_dough_big_plate because Ropa \\ncannot take the soft pizza_dough directly. Ropa should use this pizza_dough_big_plate to place\\nthe pizza in the oven and to serve it on a tray. The ingredients for the pizza are placed in bowl. \\nRopa should take the ingredients from the bowls and put them on the pizza_dough.\\n\\nProvide your response using the format:\\nGoal: ...\\nObject needed: ...\\nState summary from environment state: ...\\nRemaining actions to do: ...\\n\\nExample for a request like \\\"serve me a glass of hot water\\\":\\nGoal: \\nto have glass_1 filled with hot water from pitcher_1 placed on tray_1.\\nObject needed: \\nglass_1, pitcher_1, tray_1.\\nState summary from environment state: \\nthe robot has nothing in the hands, the needed objects are on table_1.\\nRemaining actions to do: \\ntake pitcher1 and pour hot water in glass_1, then take glass_1 and put it on the tray.\\n`,\\n\\n  /////////////////////////////////////////////////\\n  '01.01 Cocktail':\\n  /////////////////////////////////////////////////\\n  \\n`You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to you (Travi).\\nYou, on your side , comunicate with a robot called Ropa. \\nRopa can be used to prepare cocktail.\\nRopa has 2 hands and can execute the following commands:\\n- get: to take an object from a location in a hand.\\n- put: to put an object already in hand on/in another object.\\n- open: to open an object.\\n- close: to close an object.\\n- pour: to pour the content of an object into another.\\n- switch on/off: to switch on or off electric devices.\\n- wait: to wait a certain number of second.\\n\\nYour role, Travi, is:\\n1) To identify the goal to reach for the robot from the request.\\n2) To identify from the environment state the list of object you need to use \\nfor solving the human request. In particular, for any object A in the environment state,\\nconsider the following fields: \\n- \\\"type\\\" to know the type of object\\n- \\\"holdsObject\\\" to know wwhich objects object A holds or contains, \\n- \\\"isHeldByObject\\\" to know where object A is located, \\n- \\\"closure\\\" to know if object A is \\\"closed\\\" or \\\"opened\\\",\\n- \\\"power\\\" to know if object A is \\\"on\\\" or \\\"off\\\",\\n- \\\"volume\\\" to know the volume of object A in litres in case it is a container,\\n- \\\"fillLevel\\\" to know the volume already filled in object A,\\n- \\\"holdsLiquid\\\" to know the list of liquid contained in object A in case it is a container,\\n3) Using the environment state and, when available, the list of actions \\nalready performed by the robot, to describe in a sentences the curent state \\nof the robot and of the objects it needs to use.\\n4) Describe the remaining actions to fullfill the human request. For this purpose, use the \\nlist of already performed actions, when present, to identify the actions that have not been done yet\\nto reach the goal.\\nAlways instruct Ropa to prepare the cocktail in the mixer_container of the electric_shacker before serving \\nit in a glass placed on a tray.\\n\\nProvide your response using the format:\\nGoal: ...\\nObject needed: ...\\nState summary from environment state: ...\\nRemaining actions to do: ...\\n\\nExample for a request like \\\"serve me a glass of hot water\\\":\\nGoal: \\nto have glass_1 filled with hot water from pitcher_1 placed on tray_1.\\nObject needed: \\nglass_1, pitcher_1, tray_1.\\nState summary from environment state: \\nthe robot has nothing in the hands, the needed objects are on table_1.\\nRemaining actions to do: \\ntake pitcher1 and pour hot water in glass_1, then take glass_1 and put it on the tray.\\n`,\\n\\n  /////////////////////////////////////////////////\\n  '02.02 Basic':\\n  /////////////////////////////////////////////////\\n  \\n`You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing the current environment state, theory of mind, your knowledge of physics \\nand common sense, try to reformulate the request that Alex send to Ropa so \\nthat the result of the actions by the robot Ropa would make sense for the human.\\nUse only likely solutions. For example, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...\\n`,\\n\\n  /////////////////////////////////////////////////\\n  '02.01 Basic':\\n  /////////////////////////////////////////////////\\n  \\n`You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa.\\nRopa that use only a right hand and can execute the following commands:\\n- get: to take a block in a hand.\\n- put: to put a block already in hand on another block or on the table.\\nRemember that in case objects are stacked on top of each other,\\nRopa can only get the most top object.\\n\\nYour role, Travi, is:\\n\\n1) To reformulate the request into a description of the expected final state of the \\n environment using a simple notation in multiple lines, for example:\\n\\n  table < b1 < b2 < b3\\n  hand_right: ()\\n  \\nwhere the block are aranged in stacks. The symbolic notation A < B means \\\"B is on top of A\\\".\\n2) To identify from the environment state the list of object you need to use \\nfor solving the human request. \\n3) Copy the current environment state.\\n4) Describe the remaining actions to fullfill the goal and to be compatible with \\nthe current state of the environment. If the current state of the environment is \\nthe same as the goal state do not return a plan and inform Alexwith the message:\\n[Ropa to Alex] Success. The request has been done.\\n\\nExample for a request like \\\"b1 should be on top of b3\\\":\\n  Goal: \\n    table < b3 < b1\\n    table < b2\\n    hand_right: ()\\n  Object needed: \\n    b1, b2, b3.\\n  State summary from environment state: \\n    table < b1 < b2 < b3\\n    hand_right: ()\\n  Remaining actions to do: \\n    move b3 on table, \\n    move b2 on table, \\n    move b1 on b3.\\n`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":339,\"location\":\"-1230 2346.737\",\"editorPosition\":[1797,90,908,775]},\n{\"label\":\"RopaPromptList\",\"category\":\"DataFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n\\n  /////////////////////////////////////////////////\\n  '01.01 Pizza':\\n  /////////////////////////////////////////////////\\n  \\n  `Take the role of a Robot planner called \\\"Ropa\\\". \\nThe robot is called Roco and is able to make pizza.\\nYou should assist a human called Alex by creating an action plan for the robot.\\nAlex will send you the following information:\\n- Goal: the target for wich you have to produce a plan.\\n- Object needed: the name of the object you use in your plan.\\n- State summary from environment state: this is a short summary of the current \\n  environment state of which you have a detailed description in JSON format.\\n- Remaining actions to do: List of actions that you must use to build your plan. \\n  Do not worry if this list is only a portion of the actions needed to achieve \\n  the goal since some actions may have already been done by the robot \\n  towards the goal.\\n\\nA plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. put the ingredients and liquids directly on \\nthe pizza_dough. Use the pizza_dough_big_plate to tranport the full pizza.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n<robotAPIPrompt>\\n\\nEvery command of your plan should start with \\n[Ropa to Roco] <command from the API>.\\n`,\\n\\n  /////////////////////////////////////////////////\\n  '01.01 Cocktail':\\n  /////////////////////////////////////////////////\\n  \\n  `Take the role of a Robot planner called \\\"Ropa\\\". \\nThe robot is called Roco and is able to prepare cocktail.\\nYou should assist a human called Alex. Alex will send you the following \\ninformation:\\n- Goal: the target for wich you have to produce a plan.\\n- Object needed: the name of the object you use in your plan.\\n- State summary from environment state: this is a short summary of the current \\n  environment state of which you have a detailed description in JSON format.\\n- Remaining actions to do: List of actions that you must use to build your plan. \\n  Do not worry if this list is only a portion of the actions needed to achieve \\n  the goal since some actions may have already been done towards the goal.\\n\\nA plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n<robotAPIPrompt>\\n\\nEvery command of your plan should start with \\n[Ropa to Roco] <command from the API>.\\n`,\\n  \\n  /////////////////////////////////////////////////\\n  '01.01 Basic':\\n  /////////////////////////////////////////////////\\n  \\n  `Take the role of a Robot planner called \\\"Ropa\\\". The robot is called Roco.\\nYou should assist a human called Alex. Alex will send you the following \\ninformation:\\n- Goal: the target for wich you have to produce a plan.\\n- Object needed: the name of the object you use in your plan.\\n- State summary from environment state: this is a short summary of the current \\n  environment state of which you have a detailed description in JSON format.\\n- Remaining actions to do: List of actions that you must use to build your plan. \\n  Do not worry if this list is only a portion of the actions needed to achieve \\n  the goal since some actions may have already been done towards the goal.\\n\\nA plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n<robotAPIPrompt>\\n\\nEvery command of your plan should start with \\n[Ropa to Roco] <command from the API>.\\n`,\\n\\n  /////////////////////////////////////////////////\\n  '01.02 Basic':\\n  /////////////////////////////////////////////////\\n  \\n  `Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n<robotAPIPrompt>\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] open cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1`,\\n\\n  /////////////////////////////////////////////////\\n  '02.01 Basic':\\n  /////////////////////////////////////////////////\\n  \\n  `Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n<robotAPIPrompt>\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] move b3 on table, move b2 on table, move b1 on b3'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] get b3 hand_right\\n[Ropa to Roco] put b3 table\\n[Ropa to Roco] get b2 hand_right\\n[Ropa to Roco] put b2 table\\n[Ropa to Roco] get b1 hand_right\\n[Ropa to Roco] put b1 b2\\n`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":341,\"location\":\"-1230 2476.737\",\"editorPosition\":[466,20,600,1114]},\n{\"label\":\"UserPromptList\",\"category\":\"DataFlow_Component\",\"size\":\"270 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n  '01.01 Bacon_and_Onion_Pizza': 'Please, prepare Bacon and Onion Pizza',\\n  '01.02 BBQ_Chicken_Pizza': 'Please, prepare BBQ Chicken Pizza',\\n  '01.03 Buffalo_Chicken_Pizza': 'Please, prepare Buffalo Chicken Pizza',\\n  '01.04 Four_Cheese_Pizza': 'Please, prepare Four Cheese Pizza',\\n  '01.05 Hawaiian_Pizza': 'Please, prepare Hawaiian Pizza',\\n  '01.06 Margerita_Pizza': 'Please, prepare Margerita Pizza',\\n  '01.07 Meat_Lovers_Pizza': 'Please, prepare Meat Lovers Pizza',\\n  '01.08 Mushroom_Pizza': 'Please, prepare Mushroom Pizza',\\n  '01.09 Pepperoni_Pizza': 'Please, prepare Pepperoni Pizza',\\n  '01.10 Pesto_Pizza': 'Please, prepare Pesto Pizza',\\n  '01.11 Spinach_and_Feta_Pizza': 'Please, prepare Spinach and Feta Pizza',\\n  '01.12 Supreme_Pizza': 'Please, prepare Supreme Pizza',\\n  '01.13 Vegetarian_Pizza': 'Please, prepare Vegetarian Pizza',\\n  '01.14 Veggie_Supreme_Pizza': 'Please, prepare Veggie Supreme Pizza',\\n  \\n  '02.01 Bloody_Mary': 'Please, prepare a Bloody Mary cocktail',\\n  '02.02 Caipirinha': 'Please, prepare a Caipirinha cocktail',\\n  '02.03 Cosmopolitan': 'Please, prepare a Cosmopolitan cocktail',\\n  '02.04 Daiquiri': 'Please, prepare a Daiquiri cocktail',\\n  '02.05 Gin_and_Tonic': 'Please, prepare a Gin and Tonic cocktail',\\n  '02.06 Long_Island_Iced_Tea': 'Please, prepare a Long Island Iced Tea',\\n  '02.07 Manhattan': 'Please, prepare a Manhattan cocktail',\\n  '02.08 Margarita': 'Please, prepare a Margarita cocktail',\\n  '02.09 Martini': 'Please, prepare a Martini cocktail',\\n  '02.10 Mojito': 'Please, prepare a Mojito cocktail',\\n  '02.11 Negroni': 'Please, prepare a Negroni cocktail',\\n  '02.12 Old_Fashioned': 'Please, prepare an Old Fashioned cocktail',\\n  '02.13 Pina_Colada': 'Please, prepare a Pina Colada cocktail',\\n  '02.14 Purple_Rain': 'Please, prepare a Purple Rain cocktail',\\n  '02.15 Screwdriver': 'Please, prepare a Screwdriver cocktail',\\n  '02.16 Sex_on_the_Beach': 'Please, prepare a Sex on the Beach cocktail',\\n  '02.17 Whiskey_Sour': 'Please, prepare a Whiskey Sour cocktail',\\n  '02.18 White_Russian': 'Please, prepare a White Russian cocktail'\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":343,\"location\":\"-1230 2606.737\",\"editorPosition\":[2715,166,635,646]},\n{\"label\":\"Original Data\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":231,\"location\":\"-1330.00021875 1389.999796875\"},\n{\"label\":\"Blink On Input\",\"category\":\"DataFlow_Component\",\"size\":\"500 80\",\"color\":\"gray\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":307,\"location\":\"-2390 2670.737\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Propagate On Trigger\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"trigger\",\"name\":\"trigger\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"trigger\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  // Get input value\\n  const inV = Engine_getInput( nodeData, 'in', {} );\\n  \\n  // Generate an output trigger\\n  Engine_fireOutput( nodeData, 'out', inV );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":310,\"location\":\"3360 1440\",\"editorPosition\":[260,386,661,231]},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 140\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":320,\"location\":\"3751.896 1430\",\"label\":\"Please, prepare a Bloody Mary cocktail\",\"group\":286},\n{\"label\":\"Blink On Input\",\"category\":\"DataFlow_Component\",\"size\":\"880 80\",\"color\":\"gray\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":293,\"location\":\"3750 1540\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Generate Empty String\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', '' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":297,\"location\":\"3350 1570\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"1) Feed Templates to \\nExperiment Controller\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 160\",\"key\":304,\"location\":\"-3260 2210\",\"color\":\"Gold\"},\n{\"label\":\"3) Start/Next Experiment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"840 100\",\"key\":318,\"location\":\"-3260 2610\",\"color\":\"Gold\"},\n{\"label\":\"2) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"500 100\",\"key\":321,\"location\":\"-2370 2310\",\"color\":\"Gold\"},\n{\"label\":\"5) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"500 90\",\"key\":325,\"location\":\"-2390 2750.737\",\"color\":\"Gold\"},\n{\"label\":\"4) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 90\",\"key\":322,\"location\":\"3750 1620\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":340,\"location\":\"4130 1139.9\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Set Boolean\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"true\",\"name\":\"true\"},{\"portId\":\"false\",\"name\":\"false\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":350,\"location\":\"-2960 1889.9\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":366,\"location\":\"-3260 1830.6370000000002\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":368,\"location\":\"-3260 1960.6370000000002\",\"color\":\"red\"},\n{\"label\":\"0) Enable or Disable Gate to the System\\n- True: enable (system on)\\n- False: disable (no system)\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1370 280\",\"key\":291,\"location\":\"-3260 1640.737\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":328,\"location\":\"2880 1970\",\"editorPosition\":[2401,1602,486,402]},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":351,\"location\":\"2880 2160\",\"editorPosition\":[1917,1600,478,397]},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":365,\"location\":\"2870 2340\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":369,\"location\":\"2890 2729.9\",\"editorPosition\":[917,1406,506,391]},\n{\"label\":\"Setup Instructions: \\n1) Reload the Model (always)\\n     and clean all labels\\n\\n\\n-] Enable/Disable TRAVI\\n\\n\\n\\n\\n\\n-] Enable/Disable ROPA\\n\\n\\n\\n\\n-] Enable/Disable ROCO\\n\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1150 1600\",\"key\":299,\"location\":\"-4560 320\",\"color\":\"PowderBlue\"},\n{\"label\":\"Group New\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":286,\"location\":\"3699.999515625 1430\"},\n{\"label\":\"Experiment Log\",\"category\":\"DataFlow_Component\",\"size\":\"280 170\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"task\",\"name\":\"task\"},{\"portId\":\"logObject\",\"name\":\"logObject\"},{\"portId\":\"taskEvaluation\",\"name\":\"taskEvaluation\"},{\"portId\":\"environment\",\"name\":\"environment\"},{\"portId\":\"feedbackType\",\"name\":\"feedbackType\"}],\"out_\":[{\"portId\":\"taskInfo\",\"name\":\"taskInfo\"},{\"portId\":\"nextIteration\",\"name\":\"nextIteration\"},{\"portId\":\"log\",\"name\":\"log\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"task\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'logObject' ) {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  const currId = Engine_get( nodeData, 'currId' );\\n  \\n  if( currId != undefined ) {\\n    const lastTaskIdx = report[currId].length-1;\\n    const lastTask = report[currId][lastTaskIdx];\\n    \\n    lastTask.log.push( value );\\n    \\n    Engine_fireOutput( nodeData, 'log', report );\\n  } else {\\n    debugger\\n    console.error( 'Experiment Report id undefined' );\\n  }\\n}\\n\\nif( name == 'taskEvaluation' ) {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  const currId = Engine_get( nodeData, 'currId' );\\n  const environment = Engine_getInput( nodeData, 'environment', '' );\\n  \\n  if( currId != undefined ) {\\n    const lastTaskIdx = report[currId].length-1;\\n    const lastTask = report[currId][lastTaskIdx];\\n    \\n    lastTask.alexResponse = value;\\n    lastTask.finalState = environment;\\n    \\n    Engine_fireOutput( nodeData, 'log', report );\\n  } else {\\n    debugger\\n    console.error( 'Experiment Report id undefined' );\\n  }\\n  setTimeout( ()=> Engine_fireOutput( nodeData, 'nextIteration' ), 500 ); // 0.5s\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const feedbackType = Engine_getInput( nodeData, 'feedbackType', 'F0' );\\n  const report = Engine_get( nodeData, 'report', {} );\\n  //const currId = value.id;\\n  const currId = value.requestId;\\n  \\n  report.feedbackType = feedbackType;\\n  if( !report[currId] ) {\\n    report[currId] = [];\\n  }\\n  \\n  const taskData = {\\n    request: value.user,\\n    log: [],\\n    alexResponse: '',\\n    finalState: null,\\n  };\\n  \\n  report[currId].push( taskData );\\n  \\n  Engine_set( nodeData, 'currId', currId );\\n  Engine_fireOutput( nodeData, 'taskInfo', value );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":326,\"location\":\"940 2074.377152501692\",\"editorPosition\":[155,219,761,1008]},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"1620 720\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/1-Introduction-MS2/Slide7.PNG\",\"key\":342,\"location\":\"11010 -910\"},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":367,\"location\":\"11740 -6700.2\",\"label\":\"ROBI\",\"group\":289,\"color\":\"Gray\"},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":360,\"location\":\"6260 3479.9\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":374,\"location\":\"-3260 420\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":375,\"location\":\"-3260 550\",\"color\":\"red\"},\n{\"label\":\"Set Boolean\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"true\",\"name\":\"true\"},{\"portId\":\"false\",\"name\":\"false\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":376,\"location\":\"-2940 489.79999999999995\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"-2) Enable/Disable ROPA\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 100\",\"key\":370,\"location\":\"-3270 320\",\"color\":\"Gold\"},\n{\"label\":\"Set Boolean\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"true\",\"name\":\"true\"},{\"portId\":\"false\",\"name\":\"false\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":378,\"location\":\"-2950 889.6999999999999\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":379,\"location\":\"-3270 950\",\"color\":\"red\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":380,\"location\":\"-3270 820\"},\n{\"label\":\"-1) Enable/Disable ROCO\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 100\",\"key\":382,\"location\":\"-3270 710\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":384,\"location\":\"5440 5429.699999999999\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"-3) Enable/Disable TRAVI\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 100\",\"key\":390,\"location\":\"-3270 -80\",\"color\":\"Gold\"},\n{\"label\":\"Set Boolean\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"true\",\"name\":\"true\"},{\"portId\":\"false\",\"name\":\"false\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":391,\"location\":\"-2940 89.8\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":392,\"location\":\"-3260 150\",\"color\":\"red\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":393,\"location\":\"-3260 20\"},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":395,\"location\":\"6230 2249.9\",\"editorPosition\":[2893,1205,533,386]},\n{\"label\":\"Load Model\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_loadModel();\\nEngine_initNodeStatus();\\n\\nEngine_fireOutput( nodeData, 'out' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":373,\"location\":\"-2920 -260\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"150 150\",\"buttons_\":[{\"buttonMinSize\":\"90 90\",\"buttonFont\":\"35px sans-serif\",\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":381,\"location\":\"-3270 -260.1\"},\n{\"label\":\"Blink On Input\",\"category\":\"DataFlow_Component\",\"size\":\"530 80\",\"color\":\"gray\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":296,\"location\":\"-2220 -260\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"-4) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"530 90\",\"key\":306,\"location\":\"-2220 -180\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":398,\"location\":\"-2370 80\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":400,\"location\":\"-2370 480\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":402,\"location\":\"-2360 880\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"gate\",\"name\":\"gate\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":404,\"location\":\"-2400 1880\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"300 300\",\"buttons_\":[{\"buttonMinSize\":\"180 180\",\"buttonFont\":\"70px sans-serif\",\"name\":\"Reset\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":324,\"location\":\"-4560 -760\"},\n{\"label\":\"Reset Experiment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 90\",\"key\":347,\"location\":\"-4550 -960\",\"color\":\"Gold\"},\n{\"label\":\"Command Dispatcher\",\"category\":\"DataFlow_Component\",\"size\":\"240 110\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"subPlan\",\"name\":\"subPlan\"},{\"portId\":\"plan\",\"name\":\"plan\"},{\"portId\":\"nextCommand\",\"name\":\"nextCommand\"},{\"portId\":\"planFailed\",\"name\":\"planFailed\"},{\"portId\":\"replanError\",\"name\":\"replanError\"}],\"out_\":[{\"portId\":\"fullPlan\",\"name\":\"fullPlan\"},{\"portId\":\"logObject\",\"name\":\"logObject\"},{\"portId\":\"command\",\"name\":\"command\"},{\"portId\":\"planResult\",\"name\":\"planResult\"},{\"portId\":\"taskEvaluation\",\"name\":\"taskEvaluation\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"plan\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'nextCommand' ) {\\n  const cIdx = Engine_get( nodeData, 'cIdx', -1 );\\n  Engine_set( nodeData, 'cIdx', cIdx+1 );\\n  fireCommand();\\n}\\n\\nif( name == 'subPlan' ) {\\n  // Remove last command from full plan\\n  const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n  fullPlan.pop();\\n  \\n  const commandList = Engine_get( nodeData, 'commandList', [] );\\n  const cIdx = Engine_get( nodeData, 'cIdx', 0 );\\n  const subPlan = value.subPlan;\\n  \\n  const logObject = {\\n    type: 'subPlan',\\n    plan: commandList.join( '\\\\n' ),\\n    commandIdx: cIdx,\\n    message: value.errorMsg,\\n    subPlan,\\n  };\\n  Engine_fireOutput( nodeData, 'logObject', logObject );\\n  \\n  // If value is a plan => we use it, otherwise we just remove the current command\\n  const subPlanList = ( subPlan? subPlan.split( '\\\\n' ): [] );\\n  if( ( cIdx >= 0 ) && ( cIdx < commandList.length ) ) {\\n    // Insert sub plan in place of the current command\\n    commandList.splice( cIdx, 1, ...subPlanList );\\n    \\n    // Move back current index\\n    //Engine_set( nodeData, 'cIdx', cIdx-1 );\\n    \\n    // Re-fire current \\\"new-command\\\"\\n    fireCommand();\\n  }\\n}\\n\\nif( name == 'planFailed' ) {\\n  const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n\\n  const logObject = {\\n    type: 'evaluation',\\n    result: 'Failure',\\n    plan: fullPlan.join( '\\\\n' ),\\n    commandIdx: fullPlan.length,\\n    message: value,\\n  };\\n  Engine_fireOutput( nodeData, 'logObject', logObject );\\n  \\n  triggerFailure();\\n}\\n\\nif( name == 'replanError' ) {\\n  // Remove last command from full plan\\n  const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n  fullPlan.pop();\\n  \\n  const commandList = Engine_get( nodeData, 'commandList', [] );\\n  const cIdx = Engine_get( nodeData, 'cIdx', 0 );\\n  const plan = commandList.join( '\\\\n' ).trim();\\n  \\n  // Do not log empty plans\\n  if( plan ) {\\n    const logObject = {\\n      type: 'rePlan',\\n      plan,\\n      commandIdx: cIdx,\\n      message: value,\\n    };\\n    Engine_fireOutput( nodeData, 'logObject', logObject );\\n  }\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const plan = Engine_getInput( nodeData, 'plan', '' );\\n  const commandList = plan.split( '\\\\n' );\\n  \\n  Engine_set( nodeData, 'commandList', commandList );\\n  Engine_set( nodeData, 'cIdx', 0 );\\n  // Fire first command\\n  fireCommand();\\n}\\n\\n\\nfunction fireCommand() {\\n  const commandList = Engine_get( nodeData, 'commandList', [] );\\n  const cIdx = Engine_get( nodeData, 'cIdx', 0 );\\n  \\n  if( cIdx < commandList.length ) {\\n    \\n    \\n    // Get plan command, like: [Ropa to Roco] gaze glass_1\\n    const planCommand = commandList[cIdx];\\n    \\n    // Get simulator command, like: gaze glass_1\\n    const idx = planCommand.indexOf( '] ' );\\n    const simCommand = planCommand.substring( idx+2 );\\n    \\n    // Create a command for the robot: [Roco to Robi] gaze glass_1\\n    const command = '[Roco to Robi] '+simCommand;\\n    // Add command in full Plan\\n    const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n    if( !simCommand.startsWith( 'gaze' ) ) {\\n      fullPlan.push( command );\\n    }\\n    // Send command\\n    Engine_fireOutput( nodeData, 'command', command );\\n    // Send full plan\\n    let history = fullPlan.join( '\\\\n' );\\n    history = history.replaceAll( '[Roco to Robi] ', '' );\\n    Engine_fireOutput( nodeData, 'fullPlan', history );\\n  } else if( cIdx == commandList.length  ) {\\n    // In this case we completed the plan\\n    const successMsg = `Request has been executed successfully. Please inform the human.`;\\n    const msg = `[Roco to Alex] ${successMsg}`;\\n    const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n  \\n    const logObject = {\\n      type: 'evaluation',\\n      result: 'Success',\\n      plan: fullPlan.join( '\\\\n' ),\\n      commandIdx: fullPlan.length,\\n      message: successMsg,\\n    };\\n    Engine_fireOutput( nodeData, 'logObject', logObject );\\n    \\n    // Reset full Plan\\n    Engine_set( nodeData, 'fullPlan', [] );\\n    Engine_fireOutput( nodeData, 'fullPlan', fullPlan );\\n    \\n    Engine_fireOutput( nodeData, 'planResult', msg );\\n    Engine_fireOutput( nodeData, 'taskEvaluation', 'Success: '+successMsg );\\n  } else {\\n    // In this case we received a new plan smaller than the previous one\\n    triggerFailure();\\n  }\\n}\\nfunction triggerFailure() {\\n  // Reset full Plan\\n  Engine_set( nodeData, 'fullPlan', [] );\\n  Engine_fireOutput( nodeData, 'fullPlan', fullPlan );\\n  \\n  const errorMsg = value;\\n  const msg = `[Roco to Alex] ${errorMsg}`;\\n  Engine_fireOutput( nodeData, 'planResult', msg );\\n  Engine_fireOutput( nodeData, 'taskEvaluation', 'Error: '+errorMsg );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":372,\"location\":\"6672 5479.775\",\"fileType\":\"text/javascript\",\"editorPosition\":[-13372,25,794,1209],\"group\":427},\n{\"label\":\"Command\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Robi] put first_glass tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":383,\"location\":\"7094 5505.928999999999\",\"editorPosition\":[1735,35,425,1463],\"group\":427},\n{\"label\":\"Command Checker 1\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"envState\",\"name\":\"envState\"},{\"portId\":\"command\",\"name\":\"command\"},{\"portId\":\"feedbackType\",\"name\":\"feedbackType\"}],\"out_\":[{\"portId\":\"subPlan\",\"name\":\"subPlan\"},{\"portId\":\"simCommand\",\"name\":\"simCommand\"},{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"command\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// Parse the state\\nif( name == 'envState' ) {\\n  const envState = JSON.parse( Engine_getInput( nodeData, 'envState', '{}' ) );\\n  Engine_set( nodeData, 'state', envState );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const toRoco = '[Robi to Roco] ';\\n\\n  let info = getCommand( value );\\n  \\n  if( info.isValid ) {\\n    info = checkIfCommandIsValid( info.command );\\n  }\\n  \\n  const fbType = Engine_getInput( nodeData, 'feedbackType', 'F0' );\\n  const isReplan = fbType.startsWith( 'SF' );\\n  \\n  if( isReplan ) {\\n    if( info.subPlan ) {\\n      // Fire a subPlan\\n      setTimeout( ()=> Engine_fireOutput( nodeData, 'subPlan', info ), 0 );\\n    } else {\\n      // Fire a new command or an error\\n      if( info.isValid ) {\\n        Engine_fireOutput( nodeData, 'simCommand', info.command );\\n      } else {\\n        const feedback = ( fbType.endsWith( '0' )? `Error: ${info.command} could not be executed`:\\n                                                   fbType.endsWith( '2' )? info.errorMsg + ' ' + info.suggestMsg:\\n                                                                           info.errorMsg);\\n        Engine_fireOutput( nodeData, 'errorMessage', `${toRoco}${feedback}` );\\n      }\\n    }\\n  } else {\\n    if( info.subPlan || !info.isValid ) {\\n        const feedback = ( fbType.endsWith( '0' )? `Error: ${info.command} could not be executed`:\\n                                                   fbType.endsWith( '2' )? info.errorMsg + ' ' + info.suggestMsg:\\n                                                                           info.errorMsg);\\n      Engine_fireOutput( nodeData, 'errorMessage', `${toRoco}${feedback}` );\\n    } else {\\n      Engine_fireOutput( nodeData, 'simCommand', info.command );\\n    }\\n  }\\n}\\n\\n// TODO: Test 2 strategies: \\n// Strategy1: just give an error stating the reason of failure\\n// Strategy2: same as 1 + suggest a command to do or a reasonning to apply\\n// Also check object affordances for each command\\n// Abstract commands like open instead of screw or open_door to get minimal \\n//   representation for different abstraction level\\n\\nfunction getCommand( value ) {\\n  const result = { command: '', isValid: true, errorMsg: '', suggestMsg: '' };\\n  const toRobi = '[Roco to Robi] ';\\n  const idx = value.indexOf(toRobi);\\n  \\n  if( idx != -1 ) {\\n    result.command = value.substring( idx + toRobi.length ).trim();\\n    if( result.command ) {\\n      result.isValid = true;\\n    } else {\\n      result.isValid = false;\\n      result.errorMsg = `Error: no command received.`; // This message must not be changed because used in \\\"Check for Replan on Error\\\" \\n      result.suggestMsg = 'Suggestions: provide a valid command.';\\n    }\\n  } else {\\n    result.isValid = false;\\n    result.errorMsg = `Error: wrong command syntax. The command must have the syntax: ${toRobi}<command>.`;\\n    result.suggestMsg = 'Suggestions: follow API syntax for the command.';\\n  }\\n  return( result );\\n}\\nfunction checkIfCommandIsValid( command ) {\\n  let result = { command, isValid: true, errorMsg: '', subPlan: null, suggestMsg: '' };\\n  const toRobi = '[Roco to Robi] ';\\n  \\n  // Clean command\\n  result.command = result.command.replace( ' on ', ' ' );\\n  result.command = result.command.replace( ' in ', ' ' );\\n  result.command = result.command.replace( ' onto ', ' ' );\\n  result.command = result.command.replace( ' into ', ' ' );\\n  result.command = result.command.replace( ' back ', ' ' );\\n  result.command = result.command.replace( ' to ', ' ' );\\n  result.command = result.command.replace( ' the ', ' ' );\\n  result.command = result.command.replace( ' a ', ' ' );\\n  \\n  const tokenList = result.command.split( ' ' );\\n  if( tokenList && result.isValid ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    let objectName2 = tokenList[2] || '';\\n    const fromObjectName2 = tokenList[3] || '';\\n    let handName = tokenList[4] || '';\\n    \\n    // Check if objectNames are valid\\n    if( commandName == 'wait' ) {\\n      if( isNaN( parseInt( objectName1 ) ) ) {\\n        result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not a number of seconds.`;\\n        result.suggestMsg = 'Suggestions: specify an integer number as parameter for the wait command.';\\n        result.isValid = false;\\n      }\\n    } else {\\n      if( objectName1 && !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n        result.errorMsg = `Error: cannot ${result.command} because \\\"${objectName1}\\\" does not exist in environment state.`;\\n        result.suggestMsg = `Suggestions: replace \\\"${objectName1}\\\" with an object name taken from the JSON environment state.`;\\n        result.isValid = false;\\n      } else if( objectName2 && ( objectName2 != 'from' ) && !Sim_isObjectExist( nodeData, objectName2 ) ) {\\n        result.errorMsg = `Error: cannot ${result.command} because \\\"${objectName2}\\\" does not exist in environment state.`;\\n        result.suggestMsg = `Suggestions: replace \\\"${objectName2}\\\" with an object name taken from the JSON environment state.`;\\n        result.isValid = false;\\n      }\\n    }\\n    \\n    if( result.isValid ) {\\n      // Check if commandName is valid\\n      switch( commandName ) {    \\n        case 'put': // put <object1> <object2>\\n          // objectName1 is not in hand\\n          if( !Sim_isObjectInOneHand( nodeData, objectName1 ) ) {\\n            // Free a hand take it and put it\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not in a hand.`;\\n            const cmdPre = [];\\n            const cmdPost = [];\\n            handName = Sim_getEmptyHand( nodeData );\\n            if( !handName ) {\\n              handName = 'hand_right';\\n              const objectName = Sim_getObjectInHand( nodeData, handName );\\n              const holder = Sim_getNearestFreeHolder( nodeData );\\n              cmdPre.push( `${toRobi}put ${objectName} ${holder}` );\\n              cmdPost.push( `${toRobi}get ${objectName} ${handName}` );\\n            }\\n            cmdPre.push( `${toRobi}get ${objectName1} ${handName}` );\\n            cmdPre.push( `${toRobi}${result.command}` );\\n            cmdPre.push( ...cmdPost );\\n            result.subPlan = cmdPre.join( '\\\\n' );\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          // If destination is a closed container\\n          } else if( Sim_isObjectOpenable( nodeData, objectName2 ) && \\n                    !Sim_isObjectOpened( nodeData, objectName2 ) ) {\\n            // Free a hand to open the container and put objectName1 in container, close container\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName2} is closed.`;\\n            const cmdPre = [];\\n            const cmdPost = [];\\n            handName = Sim_getHandNotHoldingObject( nodeData, objectName1 );\\n            if( !Sim_isHandEmpty( nodeData, handName ) ) {\\n              // Free the hand\\n              const objectInOtherHand = Sim_getObjectInHand( nodeData, handName );\\n              const holder = Sim_getNearestFreeHolder( nodeData );\\n              cmdPre.push( `${toRobi}put ${objectName1} ${holder}` );\\n              cmdPost.push( `${toRobi}get ${objectName1} ${objectInOtherHand}` );\\n            }\\n            cmdPre.push( `${toRobi}open_door ${objectName2} ${handName}` );\\n            cmdPre.push( `${toRobi}put ${objectName1} ${objectName2}` );\\n            cmdPre.push( `${toRobi}close_door ${objectName2}` );\\n            cmdPre.push( ...cmdPost );\\n            result.subPlan = cmdPre.join( '\\\\n' );\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          }\\n          break;\\n        case 'get': // get <object1> <hand>\\n          \\n          if( Sim_isBothHandFull( nodeData ) ) {\\n            // Case of both hand full => generate an error\\n            result.errorMsg = `Error: cannot ${result.command} because both hands are already full with objects.`;\\n            result.suggestMsg = `Suggestions: free one hand before doing ${result.command}`;\\n            result.isValid = false;\\n          } else if( !Sim_isHandName( nodeData, handName ) ||\\n                     !Sim_isHandEmpty( nodeData, handName ) ) {\\n            // Case where used hand is full, but the other is free => use free hand\\n            result.errorMsg = `Error: cannot ${result.command} with specified hand because it is full.`;\\n            handName = Sim_getEmptyHand( nodeData );\\n            result.subPlan = `${toRobi}get ${objectName1} from ${fromObjectName2} ${handName}`;\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          } else if( Sim_isObjectInOpenableContainer( nodeData, objectName1 ) && \\n                    !Sim_isObjectInOpenedContainer( nodeData, objectName1 ) ) {\\n            // Case where the container is closed\\n            // Free a hand to open the container and get objectName1 in container, close container\\n            const cmdPre = [];\\n            const cmdPost = [];\\n            handName = Sim_getHandNotHoldingObject( nodeData, objectName1 );\\n            objectName2 = Sim_getHolderObject( nodeData, objectName1 );\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is closed ${objectName2}.`;\\n            cmdPre.push( `${toRobi}open_door ${objectName2} ${handName}` );\\n            cmdPre.push( `${toRobi}get ${objectName1} from ${fromObjectName2} ${handName}` );\\n            cmdPre.push( `${toRobi}close_door ${objectName2}` );\\n            cmdPre.push( ...cmdPost );\\n            result.subPlan = cmdPre.join( '\\\\n' );\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          }\\n          break;\\n        case 'pour': // pour <object1> <object2> \\n          if( !Sim_isObjectInOneHand( nodeData, objectName1 ) &&\\n              !Sim_isBothHandFull( nodeData ) ) {\\n            // Case of object not in hand and one hand is empty  \\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not in hand.`;\\n            handName = Sim_getEmptyHand( nodeData );\\n            result.subPlan = `${toRobi}get ${objectName1} ${handName}\\\\n`+\\n                             `${toRobi}${result.command}`;\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          } else if( !Sim_isObjectPourable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not a container of liquid.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } else if( Sim_isObjectOpenable( nodeData, Sim_getHolderObject( nodeData, objectName2 ) ) ) {\\n            // Case where the destination object is inside an openable container\\n            const holder = Sim_getHolderObject( nodeData, objectName2 );\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName2} is inside ${holder}.`;\\n            result.suggestMsg = `Suggestion: open ${holder} and get ${objectName2} out of ${holder} before pouring.`;\\n            result.isValid = false;\\n          } else if( Sim_isLiquidContainerFull( nodeData, objectName2 ) ) {\\n            const liquid = Sim_getLiquidInObject( nodeData, objectName2 ).join( ',' );\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName2} is already full with ${liquid}.`;\\n            result.suggestMsg = `Suggestion: reconsider the planned command.`;\\n            result.isValid = false;\\n          }\\n          break;\\n        case 'unscrew':\\n        case 'screw': // screw <object1>\\n          if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not screwable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } else if( !Sim_isObjectInOneHand( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not in hand.`;\\n            \\n            const objectHolder = Sim_getHolderObject( nodeData, objectName1 );\\n            if( Sim_isBothHandEmpty( nodeData ) ) {\\n              result.subPlan = `${toRobi}get ${objectName1} hand_left\\\\n`+\\n                               `${toRobi}${commandName} ${objectName1} hand_right\\\\n`+\\n                               `${toRobi}put ${objectName1} ${objectHolder}`;\\n            } else {\\n              const cmdPre = [];\\n              const cmdPost = [];\\n              if( !Sim_isHandEmpty( nodeData, 'hand_left' ) ) {\\n                const objectName = Sim_getObjectInHand( nodeData, 'hand_left' );\\n                const holder = Sim_getNearestFreeHolder( nodeData );\\n                cmdPre.push( `${toRobi}put ${objectName} ${holder}` );\\n                cmdPost.push( `${toRobi}get ${objectName} hand_left` );\\n              }\\n              if( !Sim_isHandEmpty( nodeData, 'hand_right' ) ) {\\n                const objectName = Sim_getObjectInHand( nodeData, 'hand_right' );\\n                const holder = Sim_getNearestFreeHolder( nodeData );\\n                cmdPre.push( `${toRobi}put ${objectName} ${holder}` );\\n                cmdPost.push( `${toRobi}get ${objectName} hand_right` );\\n              }\\n              cmdPre.push( `${toRobi}get ${objectName1} hand_left` );\\n              cmdPre.push( `${toRobi}${commandName} ${objectName1} hand_right` );\\n              cmdPre.push( `${toRobi}put ${objectName1} ${objectHolder}` );\\n              cmdPre.push( ...cmdPost );\\n              result.subPlan = cmdPre.join( '\\\\n' );\\n              result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n           }\\n          } else if( !Sim_isOneHandEmpty( nodeData ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because both hand are used.`;\\n\\n            const busyHand = Sim_getHandNotHoldingObject( nodeData, objectName1 );\\n            const objectInHand = Sim_getObjectInHand( nodeData, busyHand );\\n            const holder = Sim_getNearestFreeHolder( nodeData );\\n            result.subPlan = `${toRobi}put ${objectInHand} ${holder}\\\\n`+\\n                             `${toRobi}${commandName} ${objectName1} ${busyHand}\\\\n`+\\n                             `${toRobi}get ${objectInHand} ${busyHand}`;\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          }\\n          break;\\n        case 'open_door':\\n          if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not openable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } else if( Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is already opened.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n         } if( Sim_isBothHandFull( nodeData ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because both hand are used. Suggest: free one hand`;\\n            \\n            const objectInHand = Sim_getObjectInHand( nodeData, 'hand_right' );\\n            const holder = Sim_getNearestFreeHolder( nodeData );\\n            // Put the current object in left hand on a table\\n            const cmd = [`${toRobi}put ${objectInHand} ${holder}`];\\n            // Define open command for correct object type\\n            cmd.push( `${toRobi}open_door ${objectName1} hand_right` );\\n            // Get the object again in left hand\\n            cmd.push( `${toRobi}get ${objectInHand} hand_right` );\\n            // Create the new full command by concatenation\\n            result.subPlan = cmd.join( '\\\\n' );\\n          } else if( handName && !Sim_isHandEmpty( nodeData, handName ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because hand is used.`;\\n            handName = Sim_getEmptyHand( nodeData );\\n            result.subPlan = `${toRobi}open_door ${objectName1} ${handName}`;\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          }\\n          break;\\n        case 'close_door':\\n          if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not openable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } else if( !Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is already closed.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n        // } if( Sim_isBothHandFull( nodeData ) ) {\\n          //   //TODO: check if we can just close also if hands are full\\n          //   const objectInHand = Sim_getObjectInHand( nodeData, 'hand_right' );\\n          //   const holder = Sim_getNearestFreeHolder( nodeData );\\n          //   // Put the current object in left hand on a table\\n          //   const cmd = [`put ${objectInHand} ${holder}`];\\n          //   // Define open command for correct object type\\n          //   cmd.push( `close_door ${objectName1} hand_right`;\\n          //   // Get the object again in left hand\\n          //   cmd.push( `get ${objectInHand} hand_right` );\\n          //   // Create the new full command by concatenation\\n          //   result.command = cmd.join( ',' );\\n          // } else if( handName && !Sim_isHandEmpty( nodeData, handName ) ) {\\n          //   //TODO: check if we can just close also if hands are full\\n          //   handName = Sim_getEmptyHand( nodeData );\\n          //   result.command = `close_door ${objectName1} ${handName}`;\\n          }\\n          break;\\n        case 'finger_push':\\n          if( !Sim_isObjectPowerable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not pushable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } \\n          break;\\n        case 'gaze':\\n          break;\\n        case 'open': {\\n          if( Sim_isType( nodeData, objectName1, 'bottle' ) ) {\\n            result.command = result.command.replace( 'open', 'unscrew' );\\n            result = checkIfCommandIsValid( result.command );\\n          } else if( Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.command = result.command.replace( 'open', 'open_door' );\\n            result = checkIfCommandIsValid( result.command );\\n          } else {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not openable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n            result.isValid = false;\\n          }\\n          break;\\n        }\\n        case 'close': {\\n          if( Sim_isType( nodeData, objectName1, 'bottle' ) ) {\\n            result.command = result.command.replace( 'close', 'screw' );\\n            result = checkIfCommandIsValid( result.command );\\n          } else if( Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.command = result.command.replace( 'close', 'close_door' );\\n            result = checkIfCommandIsValid( result.command );\\n          } else {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not openable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n            result.isValid = false;\\n          }\\n          break;\\n        }\\n        case 'switch_on': {\\n          if( Sim_isObjectPowerable( nodeData, objectName1 ) ) {\\n            result.command = result.command.replace( 'switch_on', 'finger_push' );\\n            result = checkIfCommandIsValid( result.command );\\n         } else {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not powerable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n            result.isValid = false;\\n          }\\n          break;\\n        }\\n        case 'switch_off': {\\n          if( Sim_isObjectPowerable( nodeData, objectName1 ) ) {\\n            result.command = result.command.replace( 'switch_off', 'finger_push' );\\n            result = checkIfCommandIsValid( result.command );\\n        } else {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not powerable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n            result.isValid = false;\\n          }\\n          break;\\n        }\\n        case 'wait':\\n          break;\\n        default:\\n          result.errorMsg = `Error: ${result.command} does not exist in the robot API.`;\\n          result.suggestMsg = 'Suggestion: Only use command defined in the robot API.';\\n          result.isValid = false;\\n          break;\\n      }\\n    }\\n  }\\n  return( result );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":389,\"location\":\"7522 5499.875\",\"editorPosition\":[1299,73,1133,1290],\"group\":427},\n{\"label\":\"Simulator of Simulator\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"simCommand\",\"name\":\"simCommand\"}],\"out_\":[{\"portId\":\"successSimCommand\",\"name\":\"successSimCommand\"},{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const simCommand = Engine_getInput( nodeData, 'simCommand', '' );\\n  \\n  const feedback = execSimulatorCommand( simCommand );\\n  if( feedback.startsWith( 'Success' ) ) {\\n    Engine_fireOutput( nodeData, 'successSimCommand', simCommand );\\n  } else {\\n    Engine_fireOutput( nodeData, 'feedback', feedback );\\n  }\\n}\\n\\nfunction execSimulatorCommand( command ) {\\n  return( 'Success' );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":388,\"location\":\"8044 5481.155999999998\",\"editorPosition\":[2261,424,400,350],\"group\":427},\n{\"label\":\"Update Environment State\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"oldState\",\"name\":\"oldState\"},{\"portId\":\"simCommand\",\"name\":\"simCommand\"}],\"out_\":[{\"portId\":\"newState\",\"name\":\"newState\"},{\"portId\":\"commandFeedback\",\"name\":\"commandFeedback\"},{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"simCommand\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// Parse the state\\nif( name == 'oldState' ) {\\n  const state = JSON.parse( Engine_getInput( nodeData, 'oldState', '{}' ) );\\n  Engine_set( nodeData, 'state', state );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const commandList = Engine_getInput( nodeData, 'simCommand', '' ).split(','); \\n  const state = Engine_get( nodeData, 'state', {} );\\n  let feedback = '';\\n  \\n  for( const command of commandList ) {\\n    const fb = updateEnvironmentState( command.trim() );\\n    \\n    feedback = feedback+( feedback? '\\\\n': '')+fb;\\n    if( !fb.startsWith( 'Success' ) ) {\\n      feedback = fb;\\n      break; \\n    }\\n  }\\n  \\n  const toRoco = '[Robi to Roco] ';\\n  const commandFeedback = `${toRoco}${feedback}`;\\n  const newState = JSON.stringify( state, null, 2 );\\n  //console.log(newState);\\n  if( feedback.startsWith( 'Success' ) ) {\\n    Engine_fireOutput( nodeData, 'commandFeedback', commandFeedback );\\n    Engine_fireOutput( nodeData, 'newState', newState );\\n  } else {\\n    Engine_fireOutput( nodeData, 'errorMessage', feedback );\\n  }\\n}\\n\\nfunction updateEnvironmentState( command ) {\\n  // Default response\\n  let response = `Error: I don't know how to execute \\\"${command}\\\"`;\\n  \\n  tokenList = command.split( ' ' );\\n  if( tokenList ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    let objectName2 = tokenList[2] || '';\\n    const fromObjectName2 = tokenList[3] || '';\\n    let handName = tokenList[4] || '';\\n    let volume = fromObjectName2 * 0.001;\\n    \\n    switch( commandName ) {\\n      case 'wait':  // wait <time in second>\\n        response = `Success`;\\n        break;\\n      case 'get':  // get <object> from <object> <hand>\\n        Sim_putObjectInHand( nodeData, handName, objectName1 );\\n        response = `Success: ${objectName1} is in ${handName}.`;\\n        break;\\n      case 'put':  // put <object1> <object2>\\n        if( Sim_isObjectInHand( nodeData, 'hand_right', objectName1 ) ) {\\n          objectName2 = Sim_putObjectOnObject( nodeData, 'hand_right', objectName2 );\\n        } else if( Sim_isObjectInHand( nodeData, 'hand_left', objectName1 ) ) {\\n          objectName2 = Sim_putObjectOnObject( nodeData, 'hand_left', objectName2 );\\n        }\\n        response = `Success: ${objectName1} is in/on ${objectName2}.`;\\n        break;\\n      case 'gaze':  // gaze <object>\\n        Sim_gazeAtObject( nodeData, objectName1 );\\n        response = `Success:  ${objectName1} is gazed at.`;\\n        break;\\n      case 'open_door':  // open_door <object>\\n        Sim_setClosure( nodeData, objectName1, 'opened' );\\n        response = `Success: ${objectName1} is opened.`;\\n        break;\\n      case 'close_door':  // close_door <object>\\n        Sim_setClosure( nodeData, objectName1, 'closed' );\\n        response = `Success: ${objectName1} is closed.`;\\n        break;\\n      case 'finger_push':  // finger_push <object>\\n        if( Sim_isObjectPoweredOn( nodeData, objectName1 ) ) {\\n          Sim_setPower( nodeData, objectName1, 'off' );\\n          response = `Success: ${objectName1} is switched on.`;\\n        } else {\\n          Sim_setPower( nodeData, objectName1, 'on' );\\n          response = `Success: ${objectName1} is switched off.`;\\n        }\\n        break;\\n      case 'pour': // pour <srcObject> <destObject> <volume>\\n        const liquid = Sim_getLiquidInObject( nodeData, objectName1 );\\n        const level = Sim_pourObject( nodeData, objectName1, objectName2, volume );\\n        const liquidDesc = ( liquid.length? 'no': liquid.join( '+' ) );\\n        response = `Success: Poured ${level} litter of ${liquidDesc} liquid from ${objectName1} into ${objectName2}.`;\\n        break;\\n      case 'unscrew':  // unscrew <object>\\n        if( !Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n          Sim_setClosure( nodeData, objectName1, 'opened' );\\n          response = `Success: ${objectName1} is opened.`;\\n        }\\n        break;\\n      case 'screw':  // screw <object>\\n        if( Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n          Sim_setClosure( nodeData, objectName1, 'closed' );\\n          response = `Success: ${objectName1} is closed.`;\\n        } \\n        break;\\n    }\\n  }\\n  return( response );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":405,\"location\":\"8634 5481.455999999999\",\"editorPosition\":[2268,114,759,1755],\"group\":427},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"320 240\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"fileServer/pictures/SMILESimulator.png\",\"key\":422,\"location\":\"8174 5451.656\",\"group\":427},\n{\"label\":\"Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"fridge\\\",\\n      \\\"first_glass\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil_bowl\\\",\\n      \\\"fresh_herbs_bowl\\\",\\n      \\\"ice_cubes_bowl\\\",\\n      \\\"lemon_slice_bowl\\\",\\n      \\\"lime_slice_bowl\\\",\\n      \\\"mint_bowl\\\",\\n      \\\"orange_slice_bowl\\\",\\n      \\\"rosemary_bowl\\\",\\n      \\\"sugar_cubes_bowl\\\",\\n      \\\"electric_shaker\\\",\\n      \\\"mixing_container\\\",\\n      \\\"second_glass\\\",\\n      \\\"third_glass\\\",\\n      \\\"forth_glass\\\",\\n      \\\"fifth_glass\\\",\\n      \\\"tray\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"shelf\\\": {\\n    \\\"type\\\": \\\"shelf\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"bitters_bottle\\\",\\n      \\\"brandy_bottle\\\",\\n      \\\"coca_cola_bottle\\\",\\n      \\\"gin_bottle\\\",\\n      \\\"ginger_beer_bottle\\\",\\n      \\\"grenadine_bottle\\\",\\n      \\\"rum_bottle\\\",\\n      \\\"salt_bottle\\\",\\n      \\\"simple_syrup_bottle\\\",\\n      \\\"soda_water_bottle\\\",\\n      \\\"tequila_bottle\\\",\\n      \\\"tonic_water_bottle\\\",\\n      \\\"triple_sec_bottle\\\",\\n      \\\"vermouth_bottle\\\",\\n      \\\"whiskey_bottle\\\",\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"milk_bottle\\\",\\n      \\\"cranberry_juice_bottle\\\",\\n      \\\"pineapple_juice_bottle\\\",\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"basil\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"basil_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"basil_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\",\\n      \\\"basil\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"bitters\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"bitters_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"bitters_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"bitters\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"brandy\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"brandy_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"brandy_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"brandy\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"coca_cola\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"coca_cola_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"coca_cola_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca_cola\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"cranberry_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"cranberry_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"cranberry_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"cranberry_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"fresh_herbs\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"fresh_herbs_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"fresh_herbs_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\",\\n      \\\"fresh_herbs\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"gin\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"gin_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ginger_beer\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"ginger_beer_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ginger_beer_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"ginger_beer\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"grenadine\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"grenadine_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"grenadine_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"grenadine\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"ice_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"ice_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lemon_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mixing_container\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lemon_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"lime_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"lime_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"lime_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\",\\n      \\\"lime_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"milk\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"milk_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"milk_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"milk\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"mint\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"mint_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"mint_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\",\\n      \\\"mint\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"orange_slice\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"orange_slice_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"orange_slice_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\",\\n      \\\"orange_slice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"pineapple_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"pineapple_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"pineapple_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"pineapple_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ]\\n  },\\n  \\\"rosemary\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rosemary_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rosemary_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\",\\n      \\\"rosemary\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"rum\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"rum_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"rum_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"rum\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"salt\\\": {\\n    \\\"type\\\": \\\"salt\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"salt_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"salt_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"salt\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"simple_syrup\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"simple_syrup_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"simple_syrup_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"simple_syrup\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"soda_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"soda_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"soda_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"soda_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"sugar_cubes\\\": {\\n    \\\"type\\\": \\\"ingredient\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"sugar_cubes_bowl\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"sugar_cubes_bowl\\\": {\\n    \\\"type\\\": \\\"bowl\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\",\\n      \\\"sugar_cubes\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tequila\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tequila_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tequila_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tequila\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"tomato_juice\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tomato_juice_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tomato_juice_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.9,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"fridge\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\"\\n  },\\n  \\\"tonic_water\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"tonic_water_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"tonic_water_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"tonic_water\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"triple_sec\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"triple_sec_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"triple_sec_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"triple_sec\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vermouth\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vermouth_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vermouth_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vermouth\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"vodka\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"vodka_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"vodka_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.98,\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\"\\n  },\\n  \\\"whiskey\\\": {\\n    \\\"type\\\": \\\"liquid\\\",\\n    \\\"isHeldByObject\\\": [\\n      \\\"whiskey_bottle\\\"\\n    ],\\n    \\\"holdsObject\\\": []\\n  },\\n  \\\"whiskey_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"whiskey\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ]\\n  },\\n  \\\"electric_shaker\\\": {\\n    \\\"type\\\": \\\"electric_shaker\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"mixing_container\\\": {\\n    \\\"type\\\": \\\"mixing_container\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\",\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"hand_left\\\"\\n    ]\\n  },\\n  \\\"first_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon_slice\\\",\\n      \\\"ice_cubes\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\",\\n      \\\"tomato_juice\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.1,\\n    \\\"isHeldByObject\\\": [\\n      \\\"tray\\\"\\n    ]\\n  },\\n  \\\"second_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"third_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"forth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"fifth_glass\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"holdsLiquid\\\": [],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"tray\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"first_glass\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":408,\"location\":\"9164 5461.455999999999\",\"editorPosition\":[1735,35,425,1463],\"group\":427},\n{\"label\":\"New State\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":410,\"location\":\"9164 5381.656\",\"color\":\"LightYellow\",\"group\":427},\n{\"label\":\"Check for Replan on Error\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"},{\"portId\":\"resetReplan\",\"name\":\"resetReplan\"}],\"out_\":[{\"portId\":\"replanError\",\"name\":\"replanError\"},{\"portId\":\"planFailed\",\"name\":\"planFailed\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"errorMessage\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"maxReplanCount\",\"value\":\"10\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'resetReplan' ) {\\n  Engine_set( nodeData, 'replanCount', 0 );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const errorMessage = Engine_getInput( nodeData, 'errorMessage', '' );\\n  const replanCount = Engine_get( nodeData, 'replanCount', 0 );\\n  const maxReplanCount = Engine_getProperty( nodeData, 'maxReplanCount', 0 );\\n  \\n  if( replanCount < maxReplanCount ) {\\n    // Lets try to replan\\n    if( !errorMessage.includes( 'no command received.' ) ) {\\n      Engine_set( nodeData, 'replanCount', replanCount+1 );\\n    }\\n    \\n    let msg = errorMessage;\\n    const idx = errorMessage.indexOf( '] ' );\\n    if( idx != -1 ) {\\n      msg = '[Roco to Ropa] '+errorMessage.substring( idx+2 );\\n    }\\n    Engine_fireOutput( nodeData, 'replanError', msg );\\n  } else {\\n    const errorMsg = `The user request could not be executed. Please inform the human.`;\\n    // Too many replan, infor user about failure\\n    Engine_fireOutput( nodeData, 'planFailed', errorMsg );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":412,\"location\":\"9324 5750.193999999999\",\"editorPosition\":[-11504,171,716,941],\"group\":427},\n{\"label\":\"[ROCO] Execute plan and in case of error ask to replan\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":427,\"location\":\"5808 6490\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Trigger Next Command\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  setTimeout( ()=> Engine_fireOutput( nodeData, 'out' ), 500 ); // 0.5s\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":413,\"location\":\"9544 5461.656\",\"editorPosition\":[3080,2226,673,333],\"group\":427},\n{\"label\":\"Next Cmd\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":423,\"location\":\"9544 5381.656\",\"color\":\"MediumBlue\",\"group\":427},\n{\"label\":\"[Roco to Alex] Request has been executed successfully. Please inform the human.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":377,\"location\":\"7234 5910.594\",\"group\":427},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2400 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":401,\"location\":\"9972 6109.625\",\"group\":427},\n{\"label\":\"->planResult\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":385,\"location\":\"7234 5840.594\",\"color\":\"Lavender\",\"group\":427},\n{\"label\":\"->errorMessage\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":417,\"location\":\"9972 6029.625\",\"color\":\"Lavender\",\"group\":427},\n{\"label\":\"Success: Request has been executed successfully. Please inform the human.\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1870 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":394,\"location\":\"7244 6070.594\",\"group\":427},\n{\"label\":\"->taskEvaluation\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"300 60\",\"key\":420,\"location\":\"7244 6000.594\",\"color\":\"Lavender\",\"group\":427},\n{\"label\":\"-4) Reload Model and Clean Labels\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1220 100\",\"key\":255,\"location\":\"-3270 -400\",\"color\":\"Gold\"},\n{\"label\":\"Experiments Executor\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"4950 90\",\"key\":263,\"location\":\"-1270 -550\",\"color\":\"LightSalmon\"},\n{\"label\":\"Robot Control System\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"7400 90\",\"key\":265,\"location\":\"4560 -540\",\"color\":\"Thistle\"},\n{\"label\":\"Configurations\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"3060 90\",\"key\":267,\"location\":\"-4570 -550\",\"color\":\"LightSteelBlue\"},\n{\"label\":\"Execution Instructions: \\n\\n-] Enable/Disable Experiment Executor communication to System\\n\\n\\n\\n1) Initialize Templates\\n\\n\\n\\n\\n2) Start Experiment\\n\\n\\n\\n-] Generate Statistics Logs\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1150 1600\",\"key\":264,\"location\":\"-4560 2390\",\"color\":\"PowderBlue\"},\n{\"label\":\"Sequencer\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out1\",\"name\":\"out1\"},{\"portId\":\"out2\",\"name\":\"out2\"},{\"portId\":\"out3\",\"name\":\"out3\"},{\"portId\":\"out4\",\"name\":\"out4\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"timeInterval\",\"value\":\"3\",\"unit\":\"seconds\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst ti = Engine_getProperty( nodeData, 'timeInterval', 1 );\\nconst outCount = nodeData.out_.length;\\n// Start sequencesr\\ntriggerNextOut( 0 );\\n\\nfunction triggerNextOut( index ) {\\n  if( index < outCount ) {\\n    const outPortName = nodeData.out_[index].portId;\\n    Engine_fireOutput( nodeData, outPortName );\\n    \\n    // Plan the next step\\n    setTimeout( ()=> triggerNextOut( index+1 ), ti*1000 );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":266,\"location\":\"-4280 -1100.1\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Clear Label of Message Nodes\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isLocal\",\"value\":\"true\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Test if clean only local group labels:\\n// - isLocal = true => clean only labels in the group we are in\\n// - isLocal = false => clean all labels that are in any group\\nconst isLocal = Engine_getProperty( nodeData, 'isLocal', false );\\n// Group test function\\nconst testGroup = (g)=> ( isLocal? g == nodeData.group: g != undefined );\\n\\n// Get all message nodes (except big plan)\\nconst dataList = appData.me.getNodeListIf( modelId, \\n                                           (d)=> d.category == 'DataFlow_Message' &&\\n                                           testGroup( d.group ) );\\nfor( const data of dataList ) {\\n  setNodeDataField( data.key, 'label', '' );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":271,\"location\":\"6652 5339.625\",\"editorPosition\":[564,1974,693,325],\"group\":427},\n{\"label\":\"Pass Trough\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', value );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":269,\"location\":\"-1820 2370\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Pass Trough\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', value );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":273,\"location\":\"-2790 2740\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"300 300\",\"buttons_\":[{\"buttonMinSize\":\"180 180\",\"buttonFont\":\"70px sans-serif\",\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":275,\"location\":\"4180 4330\"},\n{\"label\":\"---- AutoStart ----\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"570 100\",\"key\":272,\"location\":\"-4560 -1280\",\"color\":\"Gold\"},\n{\"label\":\"Status\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"240 100\",\"key\":276,\"location\":\"-2400 1970\",\"color\":\"Gold\"},\n{\"label\":\"Status\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"240 100\",\"key\":278,\"location\":\"-2360 970\",\"color\":\"Gold\"},\n{\"label\":\"Status\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"240 100\",\"key\":283,\"location\":\"-2370 570\",\"color\":\"Gold\"},\n{\"label\":\"Status\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"240 100\",\"key\":288,\"location\":\"-2370 170\",\"color\":\"Gold\"},\n{\"label\":\"Roco Input\",\"category\":\"DataFlow_Data\",\"size\":\"200 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Alex] Request has been executed successfully. Please inform the human.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":274,\"location\":\"6630 1019.9\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"Add user> header\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":277,\"location\":\"7060 1019.9\",\"editorPosition\":[918,39,712,140]},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2260 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":259,\"location\":\"9382 6569.625\",\"group\":427},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":280,\"location\":\"9392 6469.625\",\"group\":427},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2240 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":285,\"location\":\"9402 6369.625\",\"group\":427},\n{\"label\":\"Blink On Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"gray\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":336,\"location\":\"6700 2540\",\"editorPosition\":[260,386,661,231],\"group\":362},\n{\"label\":\"Blink On Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"gray\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":353,\"location\":\"8530 3590\",\"editorPosition\":[260,386,661,231],\"group\":363},\n{\"label\":\"Blink On Input\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"gray\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":358,\"location\":\"9100 3610\",\"editorPosition\":[260,386,661,231],\"group\":363},\n{\"label\":\"TODO: we sometimes get the environment state in the plan. We should forbid by prompting\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 70\",\"key\":332,\"location\":\"10210 4120\",\"fontColor\":\"Red\",\"group\":363},\n{\"label\":\"Evaluation measures per experiment:\\n- distribution number of re-plan\\n- distribution of error types\\n- distribution of length of the plan\\n- success rate\\n- evaluate different types of feedback (success/error, reason, advice to solve) so to know how better this influence the distributions\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2060 780\",\"key\":330,\"location\":\"890 5970\",\"fontColor\":\"Red\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Ropa] Error: cannot wait 300 because 300 does not exist in environment state.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":323,\"location\":\"6140 2500\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":338,\"location\":\"5860 5590\"},\n{\"label\":\"Error\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Ropa] Error: no command received.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":284,\"location\":\"6610 2380\",\"editorPosition\":[1606,107,758,253]},\n{\"label\":\"Create Ropa User Replan Prompt\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"state\",\"name\":\"state\"},{\"portId\":\"request\",\"name\":\"request\"},{\"portId\":\"feedback\",\"name\":\"feedback\"},{\"portId\":\"cmdHistory\",\"name\":\"cmdHistory\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"feedback\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"This is Alex request: \\n<request>\\n\\nThis is the feedback the robot gave trying to execute the last plan:\\n<feedback>\\n\\nThis is the list of actions performed by the robot up to now:\\n<cmdHistory>\\n\\nThis is the current JSON environment state:\\n<state>\\n\\nWhile describing the remaining action to fullfill the human request, \\ncheck the list of actions performed by the robot up to now\\nand do not replicate actions that where already done but instead give the \\nlist of actions that are still necessary to fullfill the goal.\\nPlease start your answer with [Travi to Ropa]. \\n\",\"fileTypeName\":\"Template\",\"key\":329,\"location\":\"7040 2279.9\",\"editorPosition\":[918,39,712,140]},\n{\"label\":\"Command History\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[\\n  \\\"[Roco to Robi] get vodka_bottle from shelf hand_right\\\",\\n  \\\"[Roco to Robi] open vodka_bottle\\\",\\n  \\\"[Roco to Robi] pour vodka_bottle mixing_container 20\\\",\\n  \\\"[Roco to Robi] close vodka_bottle\\\",\\n  \\\"[Roco to Robi] put vodka_bottle shelf\\\",\\n  \\\"[Roco to Robi] open_door fridge \\\",\\n  \\\"[Roco to Robi] get tomato_juice_bottle from fridge hand_right\\\",\\n  \\\"[Roco to Robi] close_door fridge\\\",\\n  \\\"[Roco to Robi] open tomato_juice_bottle\\\",\\n  \\\"[Roco to Robi] pour tomato_juice_bottle mixing_container 100\\\",\\n  \\\"[Roco to Robi] close tomato_juice_bottle\\\",\\n  \\\"[Roco to Robi] open_door fridge hand_left\\\",\\n  \\\"[Roco to Robi] put tomato_juice_bottle fridge\\\",\\n  \\\"[Roco to Robi] close_door fridge\\\",\\n  \\\"[Roco to Robi] get lemon_slice from lemon_slice_bowl hand_left\\\",\\n  \\\"[Roco to Robi] put lemon_slice mixing_container\\\",\\n  \\\"[Roco to Robi] get ice_cubes from ice_cubes_bowl hand_right\\\",\\n  \\\"[Roco to Robi] put ice_cubes mixing_container\\\",\\n  \\\"[Roco to Robi] switch_on electric_shaker\\\",\\n  \\\"[Roco to Robi] wait 5\\\",\\n  \\\"[Roco to Robi] switch_off electric_shaker\\\",\\n  \\\"[Roco to Robi] get first_glass from table hand_right\\\",\\n  \\\"[Roco to Robi] get mixing_container from  hand_left\\\",\\n  \\\"[Roco to Robi] pour mixing_container first_glass 120\\\",\\n  \\\"[Roco to Robi] put first_glass tray\\\"\\n]\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":371,\"location\":\"9592 5239.2249999999985\",\"editorPosition\":[1735,35,425,1463],\"group\":427},\n{\"label\":\"[Roco to Robi] get vodka_bottle from shelf hand_right,[Roco to Robi] open vodka_bottle,[Roco to Robi] pour vodka_bottle mixing_container 20,[Roco to Robi] close vodka_bottle,[Roco to Robi] put vodka_bottle shelf,[Roco to Robi] open_door fridge ,[Roco to Robi] get tomato_juice_bottle from fridge hand_right,[Roco to Robi] close_door fridge,[Roco to Robi] open tomato_juice_bottle,[Roco to Robi] pour tomato_juice_bottle mixing_container 100,[Roco to Robi] close tomato_juice_bottle,[Roco to Robi] open_door fridge hand_left,[Roco to Robi] put tomato_juice_bottle fridge,[Roco to Robi] close_door fridge,[Roco to Robi] get lemon_slice from lemon_slice_bowl hand_left,[Roco to Robi] put lemon_slice mixing_container,[Roco to Robi] get ice_cubes from ice_cubes_bowl hand_right,[Roco to Robi] put ice_cubes mixing_container,[Roco to Robi] switch_on electric_shaker,[Roco to Robi] wait 5,[Roco to Robi] switch_off electric_shaker,[Roco to Robi] get first_glass from table hand_right,[Roco to Robi] get mixing_container from  hand_left,[Roco to Robi] pour mixing_container first_glass 120,[Roco to Robi] put first_glass tray\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1370 1210\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":386,\"location\":\"10412 5469.875\",\"group\":427},\n{\"label\":\"Step By Step Debugger\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"400 60\",\"key\":396,\"location\":\"5920 5480\",\"color\":\"Lavender\"},\n{\"label\":\"Step By Step Debugger\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"400 60\",\"key\":399,\"location\":\"6000 2410\",\"color\":\"Lavender\"},\n{\"label\":\"TODO: \\n- ignore command that do not change the state\\n(get cup hand_right and the cup is already in hand_right)\\n- if command request a busy hand and the other is free then perform with free hand.\\n- manage synonymous of command names\\n(open bottle = screw bottle, open fridge = open_door fridge)\\n- open_door cola_bottle\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1890 930\",\"key\":387,\"location\":\"-1540 5970\",\"fontColor\":\"Red\"},\n{\"label\":\"Experiment Schedule\",\"category\":\"DataFlow_Component\",\"size\":\"270 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = [\\n  // { 'id': 01, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.01 Bacon_and_Onion_Pizza' },\\n  // { 'id': 02, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.02 BBQ_Chicken_Pizza' },\\n  // { 'id': 03, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.03 Buffalo_Chicken_Pizza' },\\n  // { 'id': 04, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.04 Four_Cheese_Pizza' },\\n  // { 'id': 05, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.05 Hawaiian_Pizza' },\\n  // { 'id': 06, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.06 Margerita_Pizza' },\\n  // { 'id': 07, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.07 Meat_Lovers_Pizza' },\\n  // { 'id': 08, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.08 Mushroom_Pizza' },\\n  // { 'id': 09, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.09 Pepperoni_Pizza' },\\n  // { 'id': 10, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.10 Pesto_Pizza' },\\n  // { 'id': 11, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.11 Spinach_and_Feta_Pizza' },\\n  // { 'id': 12, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.12 Supreme_Pizza' },\\n  // { 'id': 13, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.13 Vegetarian_Pizza' },\\n  // { 'id': 14, 'env': '03.01 Env PIZZA', 'api': '01.01 PizzaAPI', 'alex': '01.01 Basic', 'travi': '01.01 Pizza', 'ropa': '01.01 Pizza', 'user': '01.14 Veggie_Supreme_Pizza' },\\n  \\n  { 'id': 01, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.01 Bloody_Mary' },\\n  { 'id': 02, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.02 Caipirinha' },\\n  { 'id': 03, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.03 Cosmopolitan' },\\n  { 'id': 04, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.04 Daiquiri' },\\n  { 'id': 05, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.05 Gin_and_Tonic' },\\n  { 'id': 06, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.06 Long_Island_Iced_Tea' },\\n  { 'id': 07, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.07 Manhattan' },\\n  { 'id': 08, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.08 Margarita' },\\n  { 'id': 09, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.09 Martini' },\\n  { 'id': 10, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.10 Mojito' },\\n  { 'id': 11, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.11 Negroni' },\\n  { 'id': 12, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.12 Old_Fashioned' },\\n  { 'id': 13, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.13 Pina_Colada' },\\n  { 'id': 14, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.14 Purple_Rain' },\\n  { 'id': 15, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.15 Screwdriver' },\\n  { 'id': 16, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.16 Sex_on_the_Beach' },\\n  { 'id': 17, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.17 Whiskey_Sour' },\\n  { 'id': 18, 'env': '03.01 Env COCKTAIL', 'api': '01.01 CocktailAPI', 'alex': '01.01 Basic', 'travi': '01.01 Cocktail', 'ropa': '01.01 Cocktail', 'user': '02.18 White_Russian' },\\n\\n  // { 'id': 1,    'env': '01.01 Env SMILE', 'api': '01.01 RobotAPIPrompt', 'alex': '01.01 Basic', 'travi': '01.01 Basic', 'ropa': '01.01 Basic', 'user': '01.01 warm tea' },\\n  // { 'id': 2,    'env': '01.01 Env SMILE', 'api': '01.01 RobotAPIPrompt', 'alex': '01.01 Basic', 'travi': '01.01 Basic', 'ropa': '01.01 Basic', 'user': '01.02 cola' },\\n  //{ 'id': 3,    'env': '01.01 Env SMILE', 'api': '01.01 RobotAPIPrompt', 'alex': '01.01 Basic', 'travi': '01.01 Basic', 'ropa': '01.01 Basic', 'user': '01.03 capital Germany' },\\n  // { 'id': 4,    'env': '02.01 Cube p01', 'api': '02.01 RobotAPIPrompt 1 hand', 'alex': '01.01 Basic', 'travi': '02.01 Basic', 'ropa': '02.01 Basic', 'user': '02.01 goal p01' },\\n  // { 'id': 4,    'env': '02.02 Cube p02', 'api': '02.01 RobotAPIPrompt 1 hand', 'alex': '01.01 Basic', 'travi': '02.01 Basic', 'ropa': '02.01 Basic', 'user': '02.02 goal p02' },\\n  // { 'isEnd': true }\\n];\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":407,\"location\":\"-1230 2740\",\"editorPosition\":[-7058,60,1284,318]},\n{\"label\":\"Simulator Checker\\nFunctions\",\"color\":\"orange\",\"size\":\"200 110\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"////////////////////////////////\\r\\n// State checker functions\\r\\n////////////////////////////////\\r\\nfunction Sim_isObjectHoldingNothing( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].holdsObject.length == 0 );\\r\\n}\\r\\nfunction Sim_isType( nodeData, objectName, type ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].type == type );\\r\\n}\\r\\nfunction Sim_isObjectExist( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName] != undefined );\\r\\n}\\r\\nfunction Sim_isHandName( nodeData, handName ) {\\r\\n  return ( ( handName == 'hand_right' ) || \\r\\n           ( handName == 'hand_left' ) );\\r\\n}\\r\\nfunction Sim_isHandEmpty( nodeData, handName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[handName] ) { console.log(`\\\"${handName}\\\" is not a valid handName`) }\\r\\n  return( state[handName].holdsObject.length == 0 );\\r\\n}\\r\\nfunction Sim_isOneHandEmpty( nodeData ) {\\r\\n  return ( Sim_isHandEmpty( nodeData, 'hand_right' ) || \\r\\n           Sim_isHandEmpty( nodeData, 'hand_left' ) );\\r\\n}\\r\\nfunction Sim_isBothHandEmpty( nodeData ) {\\r\\n  return ( Sim_isHandEmpty( nodeData, 'hand_right' ) && \\r\\n           Sim_isHandEmpty( nodeData, 'hand_left' ) );\\r\\n}\\r\\nfunction Sim_isBothHandFull( nodeData ) {\\r\\n  return ( !Sim_isHandEmpty( nodeData, 'hand_right' ) && \\r\\n           !Sim_isHandEmpty( nodeData, 'hand_left' ) );\\r\\n}\\r\\nfunction Sim_isObjectInHand( nodeData, handName, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[handName] ) { console.log(`\\\"${handName}\\\" is not a valid handName`) }\\r\\n  return( state[handName].holdsObject.includes( objectName ) );\\r\\n}\\r\\nfunction Sim_isObjectInOneHand( nodeData, objectName ) {\\r\\n  return( Sim_isObjectInHand( nodeData, 'hand_right', objectName ) || \\r\\n          Sim_isObjectInHand( nodeData, 'hand_left', objectName ) );\\r\\n}\\r\\nfunction Sim_isObjectOpenable( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].closure != undefined );\\r\\n}\\r\\nfunction Sim_isObjectOpened( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].closure == 'opened'? true: false );\\r\\n}\\r\\nfunction Sim_isObjectPowerable( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].power != undefined );\\r\\n}\\r\\nfunction Sim_isObjectPoweredOn( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].power == 'on'? true: false );\\r\\n}\\r\\nfunction Sim_isObjectPourable( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].holdsLiquid != undefined );\\r\\n}\\r\\nfunction Sim_isObjectInactive( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].isInactive == true );\\r\\n}\\r\\nfunction Sim_isObjectHoldingType( nodeData, objectName, typeName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  let result = false;\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  state[objectName].holdsObject.forEach( (o)=> { if( o.type == typeName ) result = true } );\\r\\n  return( result );\\r\\n}\\r\\nfunction Sim_isObjectHolding( nodeData, objectName, holdObjName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].holdsObject.includes( holdObjName ) );\\r\\n}\\r\\nfunction Sim_isObjectInOpenableContainer( nodeData, objectName ) {\\r\\n  return( Sim_isObjectOpenable( nodeData, Sim_getHolderObject( nodeData, objectName ) ) );\\r\\n}\\r\\nfunction Sim_isObjectInOpenedContainer( nodeData, objectName ) {\\r\\n  return( Sim_isObjectOpened( nodeData, Sim_getHolderObject( nodeData, objectName ) ) );\\r\\n}\\r\\nfunction Sim_isLiquidContainerFull( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( Math.abs( state[objectName].volume - state[objectName].fillLevel ) < 0.01 );\\r\\n}\\r\\n\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":406,\"location\":\"6510 6490\",\"isIncludeScript\":true,\"editorPosition\":[1526,35,586,1221]},\n{\"label\":\"Simulator Get/Set\\nFunctions\",\"color\":\"orange\",\"size\":\"200 110\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"////////////////////////////////\\r\\n// Get/Set functions\\r\\n////////////////////////////////\\r\\nfunction Sim_getEmptyHand( nodeData ) {\\r\\n  if( Sim_isHandEmpty( nodeData, 'hand_right' ) && !Sim_isObjectInactive( nodeData, 'hand_right' ) ) {\\r\\n    return( 'hand_right' );\\r\\n  } else if( Sim_isHandEmpty( nodeData, 'hand_left' ) && !Sim_isObjectInactive( nodeData, 'hand_left' ) ) {\\r\\n    return( 'hand_left' );\\r\\n  } else {\\r\\n    return( '' );\\r\\n  }\\r\\n}\\r\\nfunction Sim_getHandNotHoldingObject( nodeData, objectName ) {\\r\\n  if( Sim_isObjectInHand( nodeData, 'hand_right', objectName ) ) {\\r\\n    return( 'hand_left' );\\r\\n  } else if ( Sim_isObjectInHand( nodeData, 'hand_left', objectName ) ) {\\r\\n    return( 'hand_right' );\\r\\n  } else {\\r\\n    return( '' );\\r\\n  }\\r\\n}\\r\\nfunction Sim_getNonEmptyHand( nodeData ) {\\r\\n  const emptyHand = Sim_getEmptyHand( nodeData );\\r\\n  if( emptyHand == 'hand_right' ) {\\r\\n    return( 'hand_left' );\\r\\n  } else {\\r\\n    return( 'hand_right' );\\r\\n  }\\r\\n}\\r\\nfunction Sim_getObjectInObject( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].holdsObject );\\r\\n}\\r\\nfunction Sim_getObjectInHand( nodeData, handName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[handName] ) { console.log(`\\\"${handName}\\\" is not a valid handName`) }\\r\\n  return( state[handName].holdsObject[0] );\\r\\n}\\r\\nfunction Sim_getHolderObject( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  return( state[objectName].isHeldByObject[0] );\\r\\n}\\r\\nfunction Sim_getLiquidInObject( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  let result = [];\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  if( state[objectName].holdsLiquid ) {\\r\\n    result = state[objectName].holdsLiquid;\\r\\n  }\\r\\n  return( result );\\r\\n}\\r\\nfunction Sim_getNearestFreeHolder( nodeData ) {\\r\\n  //TODO: find the closest holder object where the robot can put an object\\r\\n  return( 'table' );\\r\\n}\\r\\n\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":411,\"location\":\"6530 7550\",\"isIncludeScript\":true,\"editorPosition\":[1139,415,537,784]},\n{\"label\":\"Simulator Action\\nFunctions\",\"color\":\"orange\",\"size\":\"200 110\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"////////////////////////////////\\r\\n// Action functions\\r\\n////////////////////////////////\\r\\nfunction Sim_setClosure( nodeData, objectName, status ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  state[objectName].closure = status;\\r\\n}\\r\\nfunction Sim_setPower( nodeData, objectName, status ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  state[objectName].power = status;\\r\\n}\\r\\nfunction Sim_pourObject( nodeData, fromName, toName, volume ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  if( !state[fromName] ) { console.log(`\\\"${fromName}\\\" is not a valid objectName`) }\\r\\n  if( !state[toName] ) { console.log(`\\\"${toName}\\\" is not a valid objectName`) }\\r\\n  if( state[fromName].fillLevel >= 0 ) {\\r\\n    state[toName].fillLevel = Math.min( volume, state[fromName].fillLevel );\\r\\n    const liquid = Sim_getLiquidInObject( nodeData, fromName );\\r\\n    // Only transfer in toName the liquid names that are not already in\\r\\n    const newLiquid = liquid.filter((o)=>!state[toName].holdsLiquid.includes(o))\\r\\n    if( newLiquid.length ) {\\r\\n      state[toName].holdsLiquid.push( ...newLiquid );\\r\\n      if( Sim_isObjectHoldingType( nodeData, toName, 'tea' ) ) {\\r\\n          state[toName].holdsLiquid.push( 'tea' );\\r\\n      }\\r\\n    }\\r\\n    const solids = Sim_getObjectInObject( nodeData, fromName );\\r\\n    // Only transfer in toName the solid names that are not already in\\r\\n    const newSolids = solids.filter((o)=>!state[toName].holdsObject.includes(o))\\r\\n    if( newSolids.length ) {\\r\\n      state[toName].holdsObject.push( ...newSolids );\\r\\n    }\\r\\n    state[fromName].fillLevel -= volume;\\r\\n    state[fromName].fillLevel = Math.max( 0, state[fromName].fillLevel );\\r\\n    return( state[toName].fillLevel );\\r\\n  } else {\\r\\n    return( 0 );\\r\\n  }\\r\\n}\\r\\nfunction Sim_putObjectInHand( nodeData, handName, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  // Hand now holds objectName \\r\\n  if( !state[handName] ) { console.log(`\\\"${handName}\\\" is not a valid handName`) }\\r\\n  state[handName].holdsObject.push( objectName );\\r\\n  // ObjectName is now holded by hand\\r\\n  const previousHolder = state[objectName].isHeldByObject.shift();\\r\\n  state[objectName].isHeldByObject.push( handName );\\r\\n  // previousHolder does not hold objectName anymore\\r\\n  let objectList = state[previousHolder].holdsObject;\\r\\n  state[previousHolder].holdsObject = objectList.filter( (d)=> d != objectName );\\r\\n}\\r\\nfunction Sim_putObjectOnObject( nodeData, handName, containerName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  containerName = containerName || 'table_1';\\r\\n  console.log('putObjectOnObject', handName, containerName);\\r\\n  // Hand now holds nothing \\r\\n  if( !state[handName] ) { console.log(`\\\"${handName}\\\" is not a valid handName`) }\\r\\n  if( !state[containerName] ) { console.log(`\\\"${containerName}\\\" is not a valid objectName`) }\\r\\n  const objectName = state[handName].holdsObject.shift();\\r\\n  const liquid = Sim_getLiquidInObject( nodeData, containerName );\\r\\n  if( liquid.length ) {\\r\\n    if( Sim_isObjectHoldingType( nodeData, objectName, 'tea' ) ) {\\r\\n      state[containerName].holdsLiquid.push( 'tea' );\\r\\n    }\\r\\n  }\\r\\n  // ObjectName is now holded by containerName\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  state[objectName].isHeldByObject.shift();\\r\\n  state[objectName].isHeldByObject.push( containerName );\\r\\n  // containerName now holds objectName \\r\\n  state[containerName].holdsObject.push( objectName );\\r\\n  return( containerName );\\r\\n}\\r\\nfunction Sim_gazeAtObject( nodeData, objectName ) {\\r\\n  const state = Engine_get( nodeData, 'state', {} );\\r\\n  state.gaze.fovea = [objectName];\\r\\n  // Get parent object\\r\\n  if( !state[objectName] ) { console.log(`\\\"${objectName}\\\" is not a valid objectName`) }\\r\\n  const parent = state[objectName].isHeldByObject;\\r\\n  if( parent && parent.length ) {\\r\\n    state.gaze.perif = state[parent[0]].holdsObject;\\r\\n  } else {\\r\\n    state.gaze.perif = [];\\r\\n  }\\r\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":415,\"location\":\"6492 8059.625\",\"isIncludeScript\":true,\"group\":427},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":true}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":409,\"location\":\"6772 6489.625\",\"group\":427},\n{\"label\":\"Sim_isObjectHoldingNothing( nodeData, objectName )\\r\\nSim_isType( nodeData, objectName, type )\\r\\nSim_isObjectExist( nodeData, objectName )\\r\\nSim_isHandName( nodeData, handName )\\r\\nSim_isHandEmpty( nodeData, handName )\\r\\nSim_isOneHandEmpty( nodeData )\\r\\nSim_isBothHandEmpty( nodeData )\\r\\nSim_isBothHandFull( nodeData )\\r\\nSim_isObjectInHand( nodeData, handName, objectName )\\r\\nSim_isObjectInOneHand( nodeData, objectName )\\r\\nSim_isObjectOpenable( nodeData, objectName )\\r\\nSim_isObjectOpened( nodeData, objectName )\\r\\nSim_isObjectPowerable( nodeData, objectName )\\r\\nSim_isObjectPoweredOn( nodeData, objectName )\\r\\nSim_isObjectPourable( nodeData, objectName )\\r\\nSim_isObjectInactive( nodeData, objectName )\\r\\nSim_isObjectHoldingType( nodeData, objectName, typeName )\\r\\nSim_isObjectHolding( nodeData, objectName, holdObjName )\\r\\nSim_isObjectInOpenableContainer( nodeData, objectName )\\r\\nSim_isObjectInOpenedContainer( nodeData, objectName )\\r\\nSim_isLiquidContainerFull( nodeData, objectName )\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 1080\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":414,\"location\":\"7160 6880\"},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":333,\"location\":\"6790 7550\"},\n{\"label\":\"Sim_getEmptyHand( nodeData )\\nSim_getHandNotHoldingObject( nodeData, objectName )\\nSim_getNonEmptyHand( nodeData )\\nSim_getObjectInHand( nodeData, handName )\\nSim_getHolderObject( nodeData, objectName )\\nSim_getLiquidInObject( nodeData, objectName )\\nSim_getNearestFreeHolder( nodeData )\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 450\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":416,\"location\":\"7170 7670\"},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":421,\"location\":\"6762 8059.625\",\"group\":427},\n{\"label\":\"Sim_setClosure( nodeData, objectName, status )\\nSim_setPower( nodeData, objectName, status )\\nSim_pourObject( nodeData, fromName, toName )\\nSim_putObjectInHand( nodeData, handName, objectName )\\nSim_putObjectOnObject( nodeData, handName, containerName )\\nSim_gazeAtObject( nodeData, objectName )\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 410\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":424,\"location\":\"7160 8130\"},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":425,\"location\":\"17620 -6310\"},\n{\"label\":\"Engine_selectNode( nodeData )\\nEngine_get( keyOrData, name, defaultValue )\\nEngine_set( keyOrData, name, value )\\nEngine_getProperty( nodeData, name, defaultValue )\\nEngine_isInputNew( nodeData, name )\\nEngine_getInput( nodeData, name, defaultValue )\\nEngine_setInput( nodeData, name, value )\\nEngine_getInputNameList( nodeData )\\nEngine_clearInputs( nodeData, nameList )\\nEngine_doRun()\\nEngine_doStep()\\nEngine_doPause()\\nEngine_fireOutput( nodeData, name, value )\\nEngine_fireOutputStep( nodeData, name, value )\\nEngine_fireOutputFlow( nodeData, name, value )\\nEngine_fireInput( nodeData, name, value )\\nEngine_isOutputConnected( nodeData, name )\\nEngine_isInputConnected( nodeData, name )\\nEngine_isSelfLoop( nodeData, inName )\\nEngine_applyTemplate( templateStr, values, isKeepUnmatchedValues )\\nEngine_executeAction( nodeData, actionName )\\nEngine_initNodeStatus()\\nEngine_loadModel()\\nEngine_initialize( nodeData )\\nEngine_updateEngineNode( key )\\nEngine_updateProperty( nodeData )\\nEngine_getNextStepData()\\nEngine_clearStep( stepInfo )\\nEngine_addStep( stepInfo )\\nEngine_getInputLinkDataList( nodeData, name )\\nEngine_getOutputLinkDataList( nodeData, name )\\nEngine_getComputeBarrier( nodeData )\\nEngine_updateInput( nodeData, name, value, inCondition )\\nDataFlowDSL_Template( nodeData )\\nDataFlowDSL_Concatenate( nodeData, name, value )\\nDataFlowDSL_Data( nodeData, name, value )\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 1930\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":426,\"location\":\"18020 -6310\"},\n{\"label\":\"Command Checker 0\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"envState\",\"name\":\"envState\"},{\"portId\":\"command\",\"name\":\"command\"}],\"out_\":[{\"portId\":\"simCommand\",\"name\":\"simCommand\"},{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"command\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n//debugger\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// Parse the state\\nif( name == 'envState' ) {\\n  const envState = JSON.parse( Engine_getInput( nodeData, 'envState', '{}' ) );\\n  Engine_set( nodeData, 'state', envState );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const info = checkIfCommandIsValid( value );\\n  if( info.isValid ) {\\n    Engine_fireOutput( nodeData, 'simCommand', info.command );\\n  } else {\\n    Engine_fireOutput( nodeData, 'errorMessage', info.errorMsg );\\n  }\\n}\\n\\n// TODO: Test 2 strategies: \\n// Strategy1: just give an error stating the reason of failure\\n// Strategy2: same as 1 + suggest a command to do or a reasonning to apply\\n// Also check object affordances for each command\\n// Abstract commands like open instead of screw or open_door to get minimal \\n//   representation for different abstraction level\\n\\nfunction checkIfCommandIsValid( value ) {\\n  const toRobi = '[Roco to Robi] ';\\n  const toRoco = '[Robi to Roco] ';\\n  const idx = value.indexOf(toRobi);\\n  let errorMsg = '';\\n  let isValid = true;\\n  let command = '';\\n  \\n  if( idx != -1 ) {\\n    command = value.substring( idx + toRobi.length ).trim();\\n    if( command ) {\\n      isValid = true;\\n    } else {\\n      isValid = false;\\n      errorMsg = `${toRoco}Error: no command received.`;\\n    }\\n  } else {\\n    isValid = false;\\n    errorMsg = `${toRoco}Error: wrong command syntax. The command must have the syntax: ${toRobi}<command>.`;\\n  }\\n  const tokenList = command.split( ' ' );\\n  if( tokenList && isValid ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    const objectName2 = tokenList[2] || '';\\n    let handName = objectName2;\\n    \\n    if( isValid ) {\\n      // Check if commandName is valid\\n      switch( commandName ) {    \\n        case 'put':\\n          if( Sim_isBothHandEmpty( nodeData ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because both hands are empty.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectInOneHand( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;         \\n          } else if( !Sim_isObjectExist( nodeData, objectName2 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( Sim_isObjectOpenable( nodeData, objectName2 ) && !Sim_isObjectOpened( nodeData, objectName2 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} is not opened.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'get':\\n          if( Sim_isBothHandFull( nodeData ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because both hands are already full with objects.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !Sim_isHandName( nodeData, handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not the name of a hand.`;\\n            isValid = false;         \\n          } else if( !Sim_isHandEmpty( nodeData, handName ) ) {\\n            const objectInHand = Sim_getObjectInHand( nodeData, handName );\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} already contains ${objectInHand}.`;\\n            isValid = false;\\n          } else if( Sim_isObjectOpenable( nodeData, Sim_getHolderObject( nodeData, objectName1 ) ) && \\n                    !Sim_isObjectOpened( nodeData, Sim_getHolderObject( nodeData, objectName1 ) ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} is not opened.`;\\n            isValid = false;\\n          } else {\\n            // TODO: add extra parameter for the real simulator but in fact the API of the real simulator should be changed.\\n            // command = `get ${objectName1} table_1 ${handName}`;\\n            // isValid = true;\\n          }\\n          break;\\n        case 'pour':\\n          if( !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectInOneHand( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectPourable( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} do not contain a liquid.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectExist( nodeData, objectName2 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( Sim_isObjectOpenable( nodeData, Sim_getHolderObject( nodeData, objectName2 ) ) ) {\\n            const holder = Sim_getHolderObject( nodeData, objectName2 );\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} is inside ${holder}.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'screw':\\n          if( !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectInOneHand( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;\\n          } else if( !Sim_isOneHandEmpty( nodeData ) ) {\\n            const busyHand = Sim_getHandNotHoldingObject( nodeData, objectName1 );\\n            const objectInHand = Sim_getObjectInHand( nodeData, busyHand );\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${busyHand} is not free it holds ${objectInHand}.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not an object you can open by screwing it.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'open_door':\\n          if( !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no door to open.`;\\n            isValid = false;\\n          } else if( Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is already opened.`;\\n            isValid = false;\\n          } if( Sim_isBothHandFull( nodeData ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because both hands are already full with objects.`;\\n            isValid = false;\\n          } else if( handName && !Sim_isHandEmpty( nodeData, handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not empty.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'close_door':\\n          if( !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no door to close.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is already closed.`;\\n            isValid = false;\\n          } if( Sim_isBothHandFull( nodeData ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because both hands are already full with objects.`;\\n            isValid = false;\\n          } else if( handName && !Sim_isHandEmpty( nodeData, handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not empty.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'finger_push':\\n          if( !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !Sim_isObjectPowerable( nodeData ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no button to power on or off.`;\\n            isValid = false;\\n          } \\n          break;\\n        case 'gaze':\\n          if( !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          }\\n          break;\\n        default:\\n          errorMsg = `${toRoco}Error: ${command} does not exist in the robot API.`;\\n          isValid = false;\\n          break;\\n      }\\n    }\\n  }\\n  return( { command, isValid, errorMsg } );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":418,\"location\":\"7552 5189.875\",\"editorPosition\":[-1084,-5,1063,1292],\"group\":427},\n{\"label\":\"OpenAI ChatGPT\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"},{\"portId\":\"error\",\"name\":\"error\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"true\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"valueChanged\":true},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData;\\n\\nconst systemInput = Engine_getInput( nodeData, 'system', '' );\\nconst inInput = Engine_getInput( nodeData, 'in', '' );\\nconst history = Engine_get( nodeData, 'history', [] );\\n\\nlet isNewChat = Engine_isInputNew( nodeData, 'system' );\\nconst hasHistory = Engine_getProperty( modelId, nodeData, 'hasHistory' );\\n\\nif( !hasHistory ) {\\n  isNewChat = true;\\n}\\n\\nif( isNewChat ) {\\n  // Empty history and add new system prompt\\n  history.splice( 0, history.length );\\n  if( systemInput ) {\\n    const entry = { role: 'system', content: systemInput };\\n    history.push( entry );\\n  }\\n}\\nif( inInput ) {\\n  const entry = { role: 'user', content: inInput };\\n  // Update history\\n  history.push( entry );\\n}\\n\\n// Define model from the component property\\nconst model = Engine_getProperty( modelId, nodeData, 'model' );\\nappData.chatGPT.setParam( 'model', model );\\n    \\n// Ask chatGPT\\nappData.chatGPT.getResponse( history, (response)=>{\\n  // Update history\\n  history.push( { role: 'assistant', content: response } );\\n  // Genereate output\\n  Engine_fireOutput( nodeData, 'out', response );\\n});\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":428,\"location\":\"14540 -7800\",\"editorPosition\":[805,740,598,871],\"group\":455},\n{\"label\":\"DataFlowDSL\",\"color\":\"orange\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/DSL/DataFlowDSL.js\",\"key\":431,\"location\":\"12730 -7900\",\"editorPosition\":[41,250,654,1699]},\n{\"label\":\"Root Function for Node Execution\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"363 107\",\"key\":419,\"location\":\"20700 -6290\"},\n{\"label\":\"Engine Compute Library 1.0\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Compute Library\\n//------------------------------\\nfunction Engine_getOutput( data, name, defaultValue ) {\\n  let result = defaultValue;\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  if( ni.output[name] != undefined ) {\\n    result = ni.output[name];\\n  }\\n  return( result );\\n}\\nfunction Engine_getComputeBarrier( data ) {\\n  let result = [];\\n  const cb = graphData.me.getProperty( graphData.modelId, \\n                                       data,\\n                                       'computeBarrier',\\n                                       null );\\n  if( cb ) {\\n    result = cb.split( ',' ).map( n => n.trim() );\\n  } else {\\n    result = Engine_getInputNameList( data );\\n  }\\n  return( result );\\n}\\nfunction Engine_updateInput( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  // If doCompute just executed => reset inputs isNew state\\n  if( ni.isCompute ) {\\n    for( const inName in ni.inputState ) {\\n      ni.inputState[inName].isNew = false;\\n    }\\n  }\\n  \\n  // Set new input value\\n  Engine_setInput( data, name, value );\\n  \\n  let isCompute = true;\\n  // Get input names for barrier\\n  const inNameList = Engine_getComputeBarrier( data );\\n  for( const inName of inNameList ) {\\n    if( Engine_isInputConnected( data, inName ) ) {\\n      let isNewInput = false;\\n      if( ni.inputState[inName] ) {\\n        isNewInput = ni.inputState[inName].isNew;\\n      }\\n      isCompute &&= isNewInput;\\n      // Short cirtuit computation\\n      if( !isCompute ) {\\n        break;\\n      }\\n    }\\n  }\\n  // Update compute status\\n  ni.isCompute = isCompute;\\n}\\nfunction Engine_fireOutput( data, name, value ) {\\n  // Fire only connected outputs\\n  if( Engine_isOutputConnected( data, name ) ) {\\n    // Get node instance\\n    const ni = Engine_getNodeInstance( data );\\n    \\n    // Save output\\n    ni.output[name] = value;\\n  }\\n}\\nfunction Engine_doCompute( data ) {\\n  if( globalThis[ `${data.category}_doCompute`] ) {\\n    // Get all input values\\n    Engine_fetchInputs( data );\\n    // Execute compute fungion\\n    globalThis[ `${data.category}_doCompute`]( data );\\n  } else {\\n    console.log( 'Compute not found for', data.category );\\n  }\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":429,\"location\":\"20740 -6030\",\"isIncludeScript\":false,\"editorPosition\":[1379,958,704,1069]},\n{\"label\":\"Engine Base API 1.0\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Base API\\n//------------------------------\\nfunction Engine_get( data, name, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Set default value if property did not exist\\n  if( ni.property[name] === undefined ) {\\n    ni.property[name] = defaultValue;\\n  }\\n  // Return property value\\n  return( ni.property[name] );\\n}\\nfunction Engine_set( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Set property value\\n  ni.property[name] = value;\\n}\\nfunction Engine_getInput( data, name, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Update default value\\n  if( ni.input[name] == undefined ) {\\n    ni.input[name] = defaultValue;\\n  }\\n  return( ni.input[name] );\\n}\\nfunction Engine_setInput( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Update value\\n  ni.input[name] = value;\\n  // Update state\\n  if( !ni.inputState[name] ) {\\n    ni.inputState[name] = {};\\n  }\\n  ni.inputState[name].isNew = true;\\n}\\nfunction Engine_setInputDefault( data, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  // Get list of input names\\n  const inNameList = Engine_getInputNameList( data );\\n  for( const inName of inNameList ) {\\n    if( ni.input[inName] == undefined ) {\\n      ni.input[inName] = defaultValue;\\n    }\\n  }\\n}\\nfunction Engine_getLanguage( data ) {\\n  let result = 'text';\\n  if( data.fileType ) {\\n    const [format, language] = data.fileType.split( '/' );\\n    result = language;\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":430,\"location\":\"20740 -5890\",\"isIncludeScript\":false,\"editorPosition\":[3268,773,528,1240]},\n{\"label\":\"Engine Base Library 1.0\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Base Library\\n//------------------------------\\n\\n// Initialize Engine\\nif( !graphData.nodeInstance ) {\\n  Engine_updateGraphModel();\\n  Engine_clearNodeInstance();\\n}\\n\\n//------------------------------\\n// Engine Base Library\\n//------------------------------\\nfunction Engine_updateGraphModel() {\\n  graphData.g = getMainGraph();\\n  graphData.modelId = 'main';\\n  \\n  // Initialize model navigation\\n  const model = graphData.g.getJSONModel();\\n  graphData.me = new ModelExplorer();\\n  graphData.me.setJSONModel( graphData.modelId, model );\\n}\\nfunction Engine_getNodeInstance( data ) {\\n  // If node not existing => create it\\n  if( !graphData.nodeInstance[data.key] ) {\\n    graphData.nodeInstance[data.key] = {\\n      property: {},\\n      input: {},\\n      inputState: {},\\n      output: {},\\n      isCompute: false,\\n    };\\n  }\\n  // Return node instance\\n  return( graphData.nodeInstance[data.key] );\\n}\\nfunction Engine_clearNodeInstance() {\\n  // Persistent link data for nodes\\n  graphData.nodeInstance = {};\\n  graphData.engineInstance = {\\n    currNodeSelectionKey: -1, // Animation\\n  };\\n}\\nfunction Engine_isNodeEnabled( data ) {\\n  let result = true;\\n  if( data.isGroup ) {\\n    result = ( ( data.color == undefined ) || ( data.color.toLowerCase() == 'green' ) );\\n  } else if( data.group !== undefined ) {\\n    const gData = graphData.me.getNode( graphData.me.modelId, data.group );\\n    result = ( gData && ( gData.color.toLowerCase() == 'green' ) );\\n  }\\n  return( result );\\n}\\nfunction Engine_getInputLinkDataList( data, name ) {\\n  const result = [];\\n  const pushInDataList = ()=> {\\n    // Get input link from port name\\n    const inDataList = graphData.me.getLinkListFanInByNodeKey( graphData.modelId, \\n                                                     data.key,\\n                                                     name );\\n    for( const inData of inDataList ) {\\n      if( Engine_isNodeEnabled( inData ) ) {\\n        result.push( inData );\\n      }\\n    }\\n  };\\n  \\n  // Check if name exist\\n  if( data.in_ ) {\\n    for( const inInfo of data.in_ ) {\\n      if( inInfo.portId == name ) {\\n        pushInDataList();\\n        break;\\n      }\\n    }\\n  } else {\\n    name = undefined;  // No input name in this case\\n    pushInDataList();\\n  }\\n  return( result );\\n}\\nfunction Engine_getOutputLinkDataList( data, name ) {\\n  const result = [];\\n  const pushOutDataList = ()=> {\\n    // Get output link from port name\\n    const outDataList = graphData.me.getLinkListFanOutByNodeKey( graphData.modelId,\\n                                                    data.key,\\n                                                    name );\\n    for( const outData of outDataList ) {\\n      if( Engine_isNodeEnabled( outData ) ) {\\n        result.push( outData );\\n      }\\n    }\\n  };\\n  \\n  // Check if name exist\\n  if( data.out_ ) {\\n    for( const outInfo of data.out_ ) {\\n      if( outInfo.portId == name ) {\\n        pushOutDataList();\\n        break;\\n      }\\n    } \\n  } else {\\n    name = undefined; // No input name in this case\\n    pushOutDataList();\\n  }\\n  return( result );\\n}\\nfunction Engine_fetchInputs( data ) {\\n  const storeValue = ( data, fromInName, toInName, defaultValue )=> {\\n    const inLinkList = graphData.me.getLinkListFanInByNodeKey( graphData.modelId,\\n                                                            data.key,\\n                                                            fromInName );\\n    for( const inLink of inLinkList ) {\\n      // Get source node\\n      const outData = graphData.me.getNode( graphData.me.modelId, inLink.from );\\n      \\n      if( Engine_isNodeEnabled( outData ) ) {\\n        const value = Engine_getOutput( outData, inLink.fromPort, defaultValue );\\n        Engine_setInput( data, toInName, value );\\n        break;\\n      }\\n    }\\n  }\\n  // Loop over all connected inputs\\n  const inNameList = Engine_getInputNameList( data, true );\\n  // Case of component with input ports\\n  if( inNameList.length ) {\\n    for( const inName of inNameList ) {\\n      // Store in input inName the first enabled link value comming into it\\n      storeValue( data, inName, inName, null );\\n    }\\n  } else {\\n    // Case of component without input ports\\n    // Store in input '*' the first enabled link value comming into it\\n    storeValue( data, undefined, '*', undefined );\\n  }\\n}\\nfunction Engine_isInputConnected( data, name ) {\\n  // Get input link list\\n  const list = Engine_getInputLinkDataList( data, name );\\n  // If input is connected\\n  return( list && list.length )\\n}\\nfunction Engine_isOutputConnected( data, name ) {\\n  // Get output link list\\n  const list = Engine_getOutputLinkDataList( data, name );\\n  // If output is connected\\n  return( list && list.length )\\n}\\nfunction Engine_getInputNameList( data, isOnlyConnected ) {\\n  const result = []\\n  if( data.in_ ) {\\n    for( const inInfo of data.in_ ) {\\n      const name = inInfo.portId;\\n      // If we want only connected one => skip unconnected one\\n      if( ( isOnlyConnected != undefined ) && isOnlyConnected ) {\\n        if( !Engine_isInputConnected( data, name ) ) {\\n          continue;\\n        }\\n      }\\n      result.push( name );\\n    }\\n  }\\n  return( result );\\n}\\nfunction Engine_getOutputNameList( data, isOnlyConnected ) {\\n  const result = []\\n  if( data.out_ ) {\\n    for( const outInfo of data.out_ ) {\\n      const name = outInfo.portId;\\n      // If we want only connected one => skip unconnected one\\n      if( ( isOnlyConnected != undefined ) && isOnlyConnected ) {\\n        if( !Engine_isOutputConnected( data, name ) ) {\\n          continue;\\n        }\\n      }\\n      result.push( name );\\n    }\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":432,\"location\":\"20740 -6170\",\"isIncludeScript\":false,\"editorPosition\":[1113,640,552,964]},\n{\"label\":\"GenerationRoot Library 1.0\",\"color\":\"orange\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"\\nfunction generationRoot( startNodeData, onGenerated ) {\\n  console.log( 'Generating...' );\\n  \\n  // Setup graph information\\n  if( !graphData.startNodeData ) {\\n    // Generation Info\\n    graphData.startNodeData = startNodeData;\\n    graphData.onGenerated = onGenerated;\\n    // Initialize graph info\\n    graphData.g = getMainGraph();\\n    graphData.modelId = 'main';\\n  }\\n\\n  // Info already set, let's start\\n  startGeneration();\\n}\\nfunction startGeneration() {\\n  // Initialize tempalte generator\\n  if( !graphData.lbg ) {\\n    graphData.lbg = new LineBlockGenerator();\\n  }\\n  \\n  // Reset counters\\n  graphData.count = {\\n    fileCount: 0,\\n    dirCount: 0,\\n    nodeCount: 0,\\n  };\\n  // Reset nodeInstance data (input/outputs)\\n  Engine_clearNodeInstance();\\n  \\n  // Initialize model navigation\\n  const model = graphData.g.getJSONModel();\\n  graphData.me = new ModelExplorer();\\n  graphData.me.setJSONModel( graphData.modelId, model );\\n  \\n  // Initialize Template Manager\\n  graphData.lb = new LineBlockGenerator();\\n  \\n  // Get deployment node\\n  graphData.isOverwrite = graphData.me.getProperty( graphData.modelId, \\n                                                    graphData.startNodeData, \\n                                                    'isOverwrite', true );\\n  \\n  // Get output link from name port\\n  const outDataList = graphData.me.getNodeListFanOutByNodeKey( graphData.modelId, \\n                                                               graphData.startNodeData.key );\\n\\n  // Loop over out nodes\\n  for( const outData of outDataList ) {\\n    if( outData.isGroup ) {\\n      if( !Engine_isNodeEnabled( outData ) ) {\\n        continue;\\n      }\\n    }\\n    // Count dir\\n    ++graphData.count.dirCount;\\n    // Generate group\\n    generateGroup( outData );\\n  }\\n    \\n  // Simulation of done\\n  setTimeout( generationDone, 2*1000 );\\n}\\nfunction generationDone() {\\n  if( graphData.onGenerated ) {\\n    const msg = `Dirs: ${graphData.count.dirCount} - `+\\n                `Files: ${graphData.count.fileCount} - `+\\n                `Nodes: ${graphData.count.nodeCount}`;\\n    graphData.onGenerated( msg );\\n  }\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":437,\"location\":\"20420 -6160\",\"isIncludeScript\":false,\"editorPosition\":[15,785,592,1289]},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":433,\"location\":\"11740 -6980\",\"label\":\"PACO\",\"group\":289},\n{\"label\":\"Dispatch command one at a time and check their logical validity\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":434,\"location\":\"11920 -6900\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":435,\"location\":\"11740 -6780.1\",\"label\":\"LOPA\",\"group\":289},\n{\"label\":\"Check logical validity of command\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":436,\"location\":\"11910 -6780\",\"group\":289},\n{\"label\":\"Replan if necessary\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"230 50\",\"key\":438,\"location\":\"11950 -7040\",\"group\":289},\n{\"label\":\"Remove command or insert command to make plan logically working\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"440 50\",\"key\":439,\"location\":\"11940 -6840\",\"group\":289},\n{\"label\":\"Execute command\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":440,\"location\":\"11910 -6700\",\"group\":289},\n{\"label\":\"Give logical feedback errors\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"300 50\",\"key\":441,\"location\":\"11960 -6740\",\"group\":289},\n{\"label\":\"Get next\\ncommand\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":442,\"location\":\"11650 -6830\",\"group\":289},\n{\"label\":\"Engine Code 1.4\",\"color\":\"orange\",\"size\":\"290 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/72.js\",\"key\":443,\"location\":\"17230 -6310\",\"isIncludeScript\":false,\"editorPosition\":[4720,25,539,1661]},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1820 220\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":447,\"location\":\"14920 -7810\",\"group\":455},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Where is the capital of Italy located?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":452,\"location\":\"14200 -7600\",\"editorPosition\":[1444,1144,400,350],\"group\":455},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":454,\"location\":\"14000 -7600\",\"group\":455},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":444,\"location\":\"14000 -8000\",\"group\":455},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"From now on, alway answer in italian language.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":445,\"location\":\"14200 -8000\",\"editorPosition\":[1438,800,402,97],\"group\":455},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":446,\"location\":\"14000 -7500\",\"group\":455},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"What did I asked you before?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":448,\"location\":\"14200 -7500.200000000001\",\"group\":455},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":450,\"location\":\"14490 -8000\",\"group\":455},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":451,\"location\":\"14490 -7600\",\"group\":455},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":453,\"location\":\"14490 -7500\",\"group\":455},\n{\"label\":\"Example of ChatGPT\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":455,\"location\":\"13980 -7750\",\"font\":\"75px sans-serif\"},\n{\"label\":\"Add history\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"In this template we have history content:\\n<history>\\n\\nThen we have user content:\\n<user>\\n\\nThen we have the assistant content:\\n<assistant>\\n\\nThis is it :-)\",\"fileTypeName\":\"Template\",\"key\":449,\"location\":\"14650 -6940.1\",\"editorPosition\":[918,39,712,140],\"group\":456},\n{\"label\":\"AI component\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"var nodeData;\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":457,\"location\":\"12820 -6700\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the HISTORY.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":460,\"location\":\"14210 -7110.200000000001\",\"editorPosition\":[1438,800,402,97],\"group\":456},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":461,\"location\":\"14010 -7110\",\"group\":456},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":463,\"location\":\"14560 -7170\",\"group\":456},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":466,\"location\":\"14010 -7010\",\"group\":456},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the ASSISTANT text.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":467,\"location\":\"14210 -7010.200000000001\",\"editorPosition\":[1438,800,402,97],\"group\":456},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":470,\"location\":\"14010 -6900\",\"group\":456},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the USER request.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":471,\"location\":\"14210 -6900.200000000001\",\"editorPosition\":[1438,800,402,97],\"group\":456},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":458,\"location\":\"14560 -7070\",\"group\":456},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":459,\"location\":\"14570 -6810\",\"group\":456},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"980 520\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":464,\"location\":\"15380 -6980\",\"group\":456},\n{\"label\":\"Example of Template Generator\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":456,\"location\":\"13990 -6980\",\"font\":\"75px sans-serif\"},\n{\"label\":\"Example of Concatenation\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":462,\"location\":\"14000 -6230\",\"font\":\"75px sans-serif\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the HISTORY.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":468,\"location\":\"14219.999658818393 -6350.300464758519\",\"editorPosition\":[1438,800,402,97],\"group\":462},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":469,\"location\":\"14020 -6350\",\"group\":462},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":472,\"location\":\"14570 -6420\",\"group\":462},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":473,\"location\":\"14020 -6250\",\"group\":462},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the ASSISTANT text.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":474,\"location\":\"14219.999658818393 -6250.300464758519\",\"editorPosition\":[1438,800,402,97],\"group\":462},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":475,\"location\":\"14020 -6140\",\"group\":462},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the USER request.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":476,\"location\":\"14219.999658818393 -6140.300464758519\",\"editorPosition\":[1438,800,402,97],\"group\":462},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":477,\"location\":\"14570 -6330\",\"group\":462},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":478,\"location\":\"14580 -6050\",\"group\":462},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"980 520\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":479,\"location\":\"15390 -6230\",\"group\":462},\n{\"label\":\"\",\"category\":\"DataFlow_Concatenate\",\"color\":\"lightseagreen\",\"in_\":[{\"portId\":\"in0\",\"name\":\"in0\"},{\"portId\":\"in1\",\"name\":\"in1\"},{\"portId\":\"in2\",\"name\":\"in2\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":481,\"location\":\"14720 -6180.1\",\"group\":462},\n{\"label\":\"[ROCO] Execute plan and in case of error ask to replan\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":465,\"location\":\"18897.999731385535 5691.849608446844\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Command Dispatcher\",\"category\":\"DataFlow_Component\",\"size\":\"240 110\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"subPlan\",\"name\":\"subPlan\"},{\"portId\":\"plan\",\"name\":\"plan\"},{\"portId\":\"nextCommand\",\"name\":\"nextCommand\"},{\"portId\":\"planFailed\",\"name\":\"planFailed\"},{\"portId\":\"replanError\",\"name\":\"replanError\"}],\"out_\":[{\"portId\":\"fullPlan\",\"name\":\"fullPlan\"},{\"portId\":\"logObject\",\"name\":\"logObject\"},{\"portId\":\"command\",\"name\":\"command\"},{\"portId\":\"planResult\",\"name\":\"planResult\"},{\"portId\":\"taskEvaluation\",\"name\":\"taskEvaluation\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"plan\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'nextCommand' ) {\\n  const cIdx = Engine_get( nodeData, 'cIdx', -1 );\\n  Engine_set( nodeData, 'cIdx', cIdx+1 );\\n  fireCommand();\\n}\\n\\nif( name == 'subPlan' ) {\\n  // Remove last command from full plan\\n  const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n  fullPlan.pop();\\n  \\n  const commandList = Engine_get( nodeData, 'commandList', [] );\\n  const cIdx = Engine_get( nodeData, 'cIdx', 0 );\\n  const subPlan = value.subPlan;\\n  \\n  const logObject = {\\n    type: 'subPlan',\\n    plan: commandList.join( '\\\\n' ),\\n    commandIdx: cIdx,\\n    message: value.errorMsg,\\n    subPlan,\\n  };\\n  Engine_fireOutput( nodeData, 'logObject', logObject );\\n  \\n  // If value is a plan => we use it, otherwise we just remove the current command\\n  const subPlanList = ( subPlan? subPlan.split( '\\\\n' ): [] );\\n  if( ( cIdx >= 0 ) && ( cIdx < commandList.length ) ) {\\n    // Insert sub plan in place of the current command\\n    commandList.splice( cIdx, 1, ...subPlanList );\\n    \\n    // Move back current index\\n    //Engine_set( nodeData, 'cIdx', cIdx-1 );\\n    \\n    // Re-fire current \\\"new-command\\\"\\n    fireCommand();\\n  }\\n}\\n\\nif( name == 'planFailed' ) {\\n  const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n\\n  const logObject = {\\n    type: 'evaluation',\\n    result: 'Failure',\\n    plan: fullPlan.join( '\\\\n' ),\\n    commandIdx: fullPlan.length,\\n    message: value,\\n  };\\n  Engine_fireOutput( nodeData, 'logObject', logObject );\\n  \\n  triggerFailure();\\n}\\n\\nif( name == 'replanError' ) {\\n  // Remove last command from full plan\\n  const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n  fullPlan.pop();\\n  \\n  const commandList = Engine_get( nodeData, 'commandList', [] );\\n  const cIdx = Engine_get( nodeData, 'cIdx', 0 );\\n  const plan = commandList.join( '\\\\n' ).trim();\\n  \\n  // Do not log empty plans\\n  if( plan ) {\\n    const logObject = {\\n      type: 'rePlan',\\n      plan,\\n      commandIdx: cIdx,\\n      message: value,\\n    };\\n    Engine_fireOutput( nodeData, 'logObject', logObject );\\n  }\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const plan = Engine_getInput( nodeData, 'plan', '' );\\n  const commandList = plan.split( '\\\\n' );\\n  \\n  Engine_set( nodeData, 'commandList', commandList );\\n  Engine_set( nodeData, 'cIdx', 0 );\\n  // Fire first command\\n  fireCommand();\\n}\\n\\n\\nfunction fireCommand() {\\n  const commandList = Engine_get( nodeData, 'commandList', [] );\\n  const cIdx = Engine_get( nodeData, 'cIdx', 0 );\\n  \\n  if( cIdx < commandList.length ) {\\n    \\n    \\n    // Get plan command, like: [Ropa to Roco] gaze glass_1\\n    const planCommand = commandList[cIdx];\\n    \\n    // Get simulator command, like: gaze glass_1\\n    const idx = planCommand.indexOf( '] ' );\\n    const simCommand = planCommand.substring( idx+2 );\\n    \\n    // Create a command for the robot: [Roco to Robi] gaze glass_1\\n    const command = '[Roco to Robi] '+simCommand;\\n    // Add command in full Plan\\n    const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n    if( !simCommand.startsWith( 'gaze' ) ) {\\n      fullPlan.push( command );\\n    }\\n    // Send command\\n    Engine_fireOutput( nodeData, 'command', command );\\n    // Send full plan\\n    let history = fullPlan.join( '\\\\n' );\\n    history = history.replaceAll( '[Roco to Robi] ', '' );\\n    Engine_fireOutput( nodeData, 'fullPlan', history );\\n  } else if( cIdx == commandList.length  ) {\\n    // In this case we completed the plan\\n    const successMsg = `Request has been executed successfully. Please inform the human.`;\\n    const msg = `[Roco to Alex] ${successMsg}`;\\n    const fullPlan = Engine_get( nodeData, 'fullPlan', [] );\\n  \\n    const logObject = {\\n      type: 'evaluation',\\n      result: 'Success',\\n      plan: fullPlan.join( '\\\\n' ),\\n      commandIdx: fullPlan.length,\\n      message: successMsg,\\n    };\\n    Engine_fireOutput( nodeData, 'logObject', logObject );\\n    \\n    // Reset full Plan\\n    Engine_set( nodeData, 'fullPlan', [] );\\n    \\n    Engine_fireOutput( nodeData, 'planResult', msg );\\n    Engine_fireOutput( nodeData, 'taskEvaluation', 'Success: '+successMsg );\\n  } else {\\n    // In this case we received a new plan smaller than the previous one\\n    triggerFailure();\\n  }\\n}\\nfunction triggerFailure() {\\n  // Reset full Plan\\n  Engine_set( nodeData, 'fullPlan', [] );\\n  \\n  const errorMsg = value;\\n  const msg = `[Roco to Alex] ${errorMsg}`;\\n  Engine_fireOutput( nodeData, 'planResult', msg );\\n  Engine_fireOutput( nodeData, 'taskEvaluation', 'Error: '+errorMsg );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":480,\"location\":\"19089.999731385535 5518.07636939538\",\"fileType\":\"text/javascript\",\"editorPosition\":[212,755,738,588],\"group\":465},\n{\"label\":\"Command\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Robi] get vodka hand_left\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":482,\"location\":\"19511.999731385535 5540.103216893688\",\"editorPosition\":[1735,35,425,1463],\"group\":465},\n{\"label\":\"Command Checker 1\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"envState\",\"name\":\"envState\"},{\"portId\":\"command\",\"name\":\"command\"},{\"portId\":\"feedbackType\",\"name\":\"feedbackType\"}],\"out_\":[{\"portId\":\"subPlan\",\"name\":\"subPlan\"},{\"portId\":\"simCommand\",\"name\":\"simCommand\"},{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"command\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n//debugger\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// Parse the state\\nif( name == 'envState' ) {\\n  const envState = JSON.parse( Engine_getInput( nodeData, 'envState', '{}' ) );\\n  Engine_set( nodeData, 'state', envState );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const toRoco = '[Robi to Roco] ';\\n\\n  let info = getCommand( value );\\n  \\n  if( info.isValid ) {\\n    info = checkIfCommandIsValid( info.command );\\n  }\\n  \\n  const fbType = Engine_getInput( nodeData, 'feedbackType', 'F0' );\\n  const isReplan = fbType.startsWith( 'SF' );\\n  \\n  if( isReplan ) {\\n    if( info.subPlan ) {\\n      // Fire a subPlan\\n      setTimeout( ()=> Engine_fireOutput( nodeData, 'subPlan', info ), 0 );\\n    } else {\\n      // Fire a new command or an error\\n      if( info.isValid ) {\\n        Engine_fireOutput( nodeData, 'simCommand', info.command );\\n      } else {\\n        const feedback = ( fbType.endsWith( '0' )? `Error: ${info.command} could not be executed`:\\n                                                   fbType.endsWith( '2' )? info.errorMsg + ' ' + info.suggestMsg:\\n                                                                           info.errorMsg);\\n        Engine_fireOutput( nodeData, 'errorMessage', `${toRoco}${feedback}` );\\n      }\\n    }\\n  } else {\\n    if( info.subPlan || !info.isValid ) {\\n        const feedback = ( fbType.endsWith( '0' )? `Error: ${info.command} could not be executed`:\\n                                                   fbType.endsWith( '2' )? info.errorMsg + ' ' + info.suggestMsg:\\n                                                                           info.errorMsg);\\n      Engine_fireOutput( nodeData, 'errorMessage', `${toRoco}${feedback}` );\\n    } else {\\n      Engine_fireOutput( nodeData, 'simCommand', info.command );\\n    }\\n  }\\n}\\n\\n// TODO: Test 2 strategies: \\n// Strategy1: just give an error stating the reason of failure\\n// Strategy2: same as 1 + suggest a command to do or a reasonning to apply\\n// Also check object affordances for each command\\n// Abstract commands like open instead of screw or open_door to get minimal \\n//   representation for different abstraction level\\n\\nfunction getCommand( value ) {\\n  const result = { command: '', isValid: true, errorMsg: '', suggestMsg: '' };\\n  const toRobi = '[Roco to Robi] ';\\n  const idx = value.indexOf(toRobi);\\n  \\n  if( idx != -1 ) {\\n    result.command = value.substring( idx + toRobi.length ).trim();\\n    if( result.command ) {\\n      result.isValid = true;\\n    } else {\\n      result.isValid = false;\\n      result.errorMsg = `Error: no command received.`; // This message must not be changed because used in \\\"Check for Replan on Error\\\" \\n      result.suggestMsg = 'Suggestions: provide a valid command.';\\n    }\\n  } else {\\n    result.isValid = false;\\n    result.errorMsg = `Error: wrong command syntax. The command must have the syntax: ${toRobi}<command>.`;\\n    result.suggestMsg = 'Suggestions: follow API syntax for the command.';\\n  }\\n  return( result );\\n}\\nfunction checkIfCommandIsValid( command ) {\\n  let result = { command, isValid: true, errorMsg: '', subPlan: null, suggestMsg: '' };\\n  const toRobi = '[Roco to Robi] ';\\n\\n  const tokenList = result.command.split( ' ' );\\n  if( tokenList && result.isValid ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    let objectName2 = tokenList[2] || '';\\n    let handName = objectName2;\\n    \\n    // Check if objectNames are valid\\n    if( commandName == 'wait' ) {\\n      if( isNaN( parseInt( objectName1 ) ) ) {\\n        result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not a number of seconds.`;\\n        result.suggestMsg = 'Suggestions: specify an integer number as parameter for the wait command.';\\n        result.isValid = false;\\n      }\\n    } else {\\n      if( objectName1 && !Sim_isObjectExist( nodeData, objectName1 ) ) {\\n        result.errorMsg = `Error: cannot ${result.command} because \\\"${objectName1}\\\" does not exist in environment state.`;\\n        result.suggestMsg = `Suggestions: replace \\\"${objectName1}\\\" with an object name taken from the JSON environment state.`;\\n        result.isValid = false;\\n      } else if( objectName2 && !Sim_isObjectExist( nodeData, objectName2 ) ) {\\n        result.errorMsg = `Error: cannot ${result.command} because \\\"${objectName2}\\\" does not exist in environment state.`;\\n        result.suggestMsg = `Suggestions: replace \\\"${objectName2}\\\" with an object name taken from the JSON environment state.`;\\n        result.isValid = false;\\n      }\\n    }\\n    \\n    if( result.isValid ) {\\n      // Check if commandName is valid\\n      switch( commandName ) {    \\n        case 'put': // put <object1> <object2>\\n          // objectName1 is not in hand\\n          if( !Sim_isObjectInOneHand( nodeData, objectName1 ) ) {\\n            // Free a hand take it and put it\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not in a hand.`;\\n            const cmdPre = [];\\n            const cmdPost = [];\\n            handName = Sim_getEmptyHand( nodeData );\\n            if( !handName ) {\\n              handName = 'hand_right';\\n              const objectName = Sim_getObjectInHand( nodeData, handName );\\n              const holder = Sim_getNearestFreeHolder( nodeData );\\n              cmdPre.push( `${toRobi}put ${objectName} ${holder}` );\\n              cmdPost.push( `${toRobi}get ${objectName} ${handName}` );\\n            }\\n            cmdPre.push( `${toRobi}get ${objectName1} ${handName}` );\\n            cmdPre.push( `${toRobi}${result.command}` );\\n            cmdPre.push( ...cmdPost );\\n            result.subPlan = cmdPre.join( '\\\\n' );\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          // If destination is a closed container\\n          } else if( Sim_isObjectOpenable( nodeData, objectName2 ) && \\n                    !Sim_isObjectOpened( nodeData, objectName2 ) ) {\\n            // Free a hand to open the container and put objectName1 in container, close container\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName2} is closed.`;\\n            const cmdPre = [];\\n            const cmdPost = [];\\n            handName = Sim_getHandNotHoldingObject( nodeData, objectName1 );\\n            if( !Sim_isHandEmpty( nodeData, handName ) ) {\\n              // Free the hand\\n              const objectInOtherHand = Sim_getObjectInHand( nodeData, handName );\\n              const holder = Sim_getNearestFreeHolder( nodeData );\\n              cmdPre.push( `${toRobi}put ${objectName1} ${holder}` );\\n              cmdPost.push( `${toRobi}get ${objectName1} ${objectInOtherHand}` );\\n            }\\n            cmdPre.push( `${toRobi}open_door ${objectName2} ${handName}` );\\n            cmdPre.push( `${toRobi}put ${objectName1} ${objectName2}` );\\n            cmdPre.push( `${toRobi}close_door ${objectName2}` );\\n            cmdPre.push( ...cmdPost );\\n            result.subPlan = cmdPre.join( '\\\\n' );\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          }\\n          break;\\n        case 'get': // get <object1> <hand>\\n          if( Sim_isBothHandFull( nodeData ) ) {\\n            // Case of both hand full => generate an error\\n            result.errorMsg = `Error: cannot ${result.command} because both hands are already full with objects.`;\\n            result.suggestMsg = `Suggestions: free one hand before doing ${result.command}`;\\n            result.isValid = false;\\n          } else if( !Sim_isHandName( nodeData, handName ) ||\\n                     !Sim_isHandEmpty( nodeData, handName ) ) {\\n            // Case where used hand is full, but the other is free => use free hand\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} with specified hand.`;\\n            handName = Sim_getEmptyHand( nodeData );\\n            result.subPlan = `${toRobi}get ${objectName1} ${handName}`;\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          } else if( Sim_isObjectInOpenableContainer( nodeData, objectName1 ) && \\n                    !Sim_isObjectInOpenedContainer( nodeData, objectName1 ) ) {\\n            // Case where the container is closed\\n            // Free a hand to open the container and get objectName1 in container, close container\\n            const cmdPre = [];\\n            const cmdPost = [];\\n            handName = Sim_getHandNotHoldingObject( nodeData, objectName1 );\\n            objectName2 = Sim_getHolderObject( nodeData, objectName1 );\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is closed ${objectName2}.`;\\n            cmdPre.push( `${toRobi}open_door ${objectName2} ${handName}` );\\n            cmdPre.push( `${toRobi}get ${objectName1} ${handName}` );\\n            cmdPre.push( `${toRobi}close_door ${objectName2}` );\\n            cmdPre.push( ...cmdPost );\\n            result.subPlan = cmdPre.join( '\\\\n' );\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          }\\n          break;\\n        case 'pour': // pour <object1> <object2> \\n          if( !Sim_isObjectInOneHand( nodeData, objectName1 ) &&\\n              !Sim_isBothHandFull( nodeData ) ) {\\n            // Case of object not in hand and one hand is empty  \\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not in hand.`;\\n            handName = Sim_getEmptyHand( nodeData );\\n            result.subPlan = `${toRobi}get ${objectName1} ${handName}\\\\n`+\\n                             `${toRobi}${result.command}`;\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          } else if( !Sim_isObjectPourable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not a container of liquid.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } else if( Sim_isObjectOpenable( nodeData, Sim_getHolderObject( nodeData, objectName2 ) ) ) {\\n            // Case where the destination object is inside an openable container\\n            const holder = Sim_getHolderObject( nodeData, objectName2 );\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName2} is inside ${holder}.`;\\n            result.suggestMsg = `Suggestion: open ${holder} and get ${objectName2} out of ${holder} before pouring.`;\\n            result.isValid = false;\\n          } else if( Sim_isLiquidContainerFull( nodeData, objectName2 ) ) {\\n            const liquid = Sim_getLiquidInObject( nodeData, objectName2 ).join( ',' );\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName2} is already full with ${liquid}.`;\\n            result.suggestMsg = `Suggestion: reconsider the planned command.`;\\n            result.isValid = false;\\n          }\\n          break;\\n        case 'unscrew':\\n        case 'screw': // screw <object1>\\n          if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not screwable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } else if( !Sim_isObjectInOneHand( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not in hand.`;\\n            \\n            const objectHolder = Sim_getHolderObject( nodeData, objectName1 );\\n            if( Sim_isBothHandEmpty( nodeData ) ) {\\n              result.subPlan = `${toRobi}get ${objectName1} hand_left\\\\n`+\\n                               `${toRobi}${commandName} ${objectName1} hand_right\\\\n`+\\n                               `${toRobi}put ${objectName1} ${objectHolder}`;\\n            } else {\\n              const cmdPre = [];\\n              const cmdPost = [];\\n              if( !Sim_isHandEmpty( nodeData, 'hand_left' ) ) {\\n                const objectName = Sim_getObjectInHand( nodeData, 'hand_left' );\\n                const holder = Sim_getNearestFreeHolder( nodeData );\\n                cmdPre.push( `${toRobi}put ${objectName} ${holder}` );\\n                cmdPost.push( `${toRobi}get ${objectName} hand_left` );\\n              }\\n              if( !Sim_isHandEmpty( nodeData, 'hand_right' ) ) {\\n                const objectName = Sim_getObjectInHand( nodeData, 'hand_right' );\\n                const holder = Sim_getNearestFreeHolder( nodeData );\\n                cmdPre.push( `${toRobi}put ${objectName} ${holder}` );\\n                cmdPost.push( `${toRobi}get ${objectName} hand_right` );\\n              }\\n              cmdPre.push( `${toRobi}get ${objectName1} hand_left` );\\n              cmdPre.push( `${toRobi}${commandName} ${objectName1} hand_right` );\\n              cmdPre.push( `${toRobi}put ${objectName1} ${objectHolder}` );\\n              cmdPre.push( ...cmdPost );\\n              result.subPlan = cmdPre.join( '\\\\n' );\\n              result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n           }\\n          } else if( !Sim_isOneHandEmpty( nodeData ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because both hand are used.`;\\n\\n            const busyHand = Sim_getHandNotHoldingObject( nodeData, objectName1 );\\n            const objectInHand = Sim_getObjectInHand( nodeData, busyHand );\\n            const holder = Sim_getNearestFreeHolder( nodeData );\\n            result.subPlan = `${toRobi}put ${objectInHand} ${holder}\\\\n`+\\n                             `${toRobi}${commandName} ${objectName1} ${busyHand}\\\\n`+\\n                             `${toRobi}get ${objectInHand} ${busyHand}`;\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          }\\n          break;\\n        case 'open_door':\\n          if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not openable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } else if( Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is already opened.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n         } if( Sim_isBothHandFull( nodeData ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because both hand are used. Suggest: free one hand`;\\n            \\n            const objectInHand = Sim_getObjectInHand( nodeData, 'hand_right' );\\n            const holder = Sim_getNearestFreeHolder( nodeData );\\n            // Put the current object in left hand on a table\\n            const cmd = [`${toRobi}put ${objectInHand} ${holder}`];\\n            // Define open command for correct object type\\n            cmd.push( `${toRobi}open_door ${objectName1} hand_right` );\\n            // Get the object again in left hand\\n            cmd.push( `${toRobi}get ${objectInHand} hand_right` );\\n            // Create the new full command by concatenation\\n            result.subPlan = cmd.join( '\\\\n' );\\n          } else if( handName && !Sim_isHandEmpty( nodeData, handName ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because hand is used.`;\\n            handName = Sim_getEmptyHand( nodeData );\\n            result.subPlan = `${toRobi}open_door ${objectName1} ${handName}`;\\n            result.suggestMsg = `Suggestions: instead of ${command}, do the following commands:\\\\n${result.subPlan}.`;\\n          }\\n          break;\\n        case 'close_door':\\n          if( !Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not openable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } else if( !Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is already closed.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n        // } if( Sim_isBothHandFull( nodeData ) ) {\\n          //   //TODO: check if we can just close also if hands are full\\n          //   const objectInHand = Sim_getObjectInHand( nodeData, 'hand_right' );\\n          //   const holder = Sim_getNearestFreeHolder( nodeData );\\n          //   // Put the current object in left hand on a table\\n          //   const cmd = [`put ${objectInHand} ${holder}`];\\n          //   // Define open command for correct object type\\n          //   cmd.push( `close_door ${objectName1} hand_right`;\\n          //   // Get the object again in left hand\\n          //   cmd.push( `get ${objectInHand} hand_right` );\\n          //   // Create the new full command by concatenation\\n          //   result.command = cmd.join( ',' );\\n          // } else if( handName && !Sim_isHandEmpty( nodeData, handName ) ) {\\n          //   //TODO: check if we can just close also if hands are full\\n          //   handName = Sim_getEmptyHand( nodeData );\\n          //   result.command = `close_door ${objectName1} ${handName}`;\\n          }\\n          break;\\n        case 'finger_push':\\n          if( !Sim_isObjectPowerable( nodeData, objectName1 ) ) {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not pushable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n          } \\n          break;\\n        case 'gaze':\\n          break;\\n        case 'open': {\\n          if( Sim_isType( nodeData, objectName1, 'bottle' ) ) {\\n            result.command = result.command.replace( 'open', 'unscrew' );\\n            result = checkIfCommandIsValid( result.command );\\n          } else if( Sim_isObjectOpenable( nodeData, objectName1 ) ) {\\n            result.command = result.command.replace( 'open', 'open_door' );\\n            result = checkIfCommandIsValid( result.command );\\n          } else {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not openable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n            result.isValid = false;\\n          }\\n          break;\\n        }\\n        case 'close': {\\n          if( Sim_isType( nodeData, objectName1, 'bottle' ) ) {\\n            result.command = result.command.replace( 'close', 'screw' );\\n            result = checkIfCommandIsValid( result.command );\\n          } else if( Sim_isObjectOpenable( nodeData, objectName1 ) ) { //kjhkhkhkhkhkhkjhjk\\n            result.command = result.command.replace( 'close', 'close_door' );\\n            result = checkIfCommandIsValid( result.command );\\n          } else {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not openable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n            result.isValid = false;\\n          }\\n          break;\\n        }\\n        case 'switch_on': {\\n          if( Sim_isObjectPowerable( nodeData, objectName1 ) ) {\\n            result.command = result.command.replace( 'switch_on', 'finger_push' );\\n            result = checkIfCommandIsValid( result.command );\\n         } else {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not powerable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n            result.isValid = false;\\n          }\\n          break;\\n        }\\n        case 'switch_off': {\\n          if( Sim_isObjectPowerable( nodeData, objectName1 ) ) {\\n            result.command = result.command.replace( 'switch_off', 'finger_push' );\\n            result = checkIfCommandIsValid( result.command );\\n        } else {\\n            result.errorMsg = `Error: cannot ${result.command} because ${objectName1} is not powerable.`;\\n            result.subPlan = '';\\n            result.suggestMsg = 'Suggestion: reconsider the planned command.';\\n            result.isValid = false;\\n          }\\n          break;\\n        }\\n        case 'wait':\\n          break;\\n        case 'reset':\\n          break;\\n        default:\\n          result.errorMsg = `Error: ${result.command} does not exist in the robot API.`;\\n          result.suggestMsg = 'Suggestion: Only use command defined in the robot API.';\\n          result.isValid = false;\\n          break;\\n      }\\n    }\\n  }\\n  return( result );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":483,\"location\":\"19930 5540\",\"editorPosition\":[2695,451,728,692],\"group\":465},\n{\"label\":\"Simulator of Simulator\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"simCommand\",\"name\":\"simCommand\"}],\"out_\":[{\"portId\":\"successSimCommand\",\"name\":\"successSimCommand\"},{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const simCommand = Engine_getInput( nodeData, 'simCommand', '' );\\n  \\n  const feedback = execSimulatorCommand( simCommand );\\n  if( feedback.startsWith( 'Success' ) ) {\\n    Engine_fireOutput( nodeData, 'successSimCommand', simCommand );\\n  } else {\\n    Engine_fireOutput( nodeData, 'feedback', feedback );\\n  }\\n}\\n\\nfunction execSimulatorCommand( command ) {\\n  return( 'Success' );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":484,\"location\":\"20460 5460\",\"editorPosition\":[2261,424,400,350],\"group\":465},\n{\"label\":\"Update Environment State\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"oldState\",\"name\":\"oldState\"},{\"portId\":\"simCommand\",\"name\":\"simCommand\"}],\"out_\":[{\"portId\":\"newState\",\"name\":\"newState\"},{\"portId\":\"commandFeedback\",\"name\":\"commandFeedback\"},{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"simCommand\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// Parse the state\\nif( name == 'oldState' ) {\\n  const state = JSON.parse( Engine_getInput( nodeData, 'oldState', '{}' ) );\\n  Engine_set( nodeData, 'state', state );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const commandList = Engine_getInput( nodeData, 'simCommand', '' ).split(','); \\n  const state = Engine_get( nodeData, 'state', {} );\\n  let feedback = '';\\n  \\n  for( const command of commandList ) {\\n    const fb = updateEnvironmentState( command.trim() );\\n    \\n    feedback = feedback+( feedback? '\\\\n': '')+fb;\\n    if( !fb.startsWith( 'Success' ) ) {\\n      feedback = fb;\\n      break; \\n    }\\n  }\\n  \\n  const toRoco = '[Robi to Roco] ';\\n  const commandFeedback = `${toRoco}${feedback}`;\\n  const newState = JSON.stringify( state, null, 2 );\\n  //console.log(newState);\\n  if( feedback.startsWith( 'Success' ) ) {\\n    Engine_fireOutput( nodeData, 'commandFeedback', commandFeedback );\\n    Engine_fireOutput( nodeData, 'newState', newState );\\n  } else {\\n    Engine_fireOutput( nodeData, 'errorMessage', feedback );\\n  }\\n}\\n\\nfunction updateEnvironmentState( command ) {\\n  // Default response\\n  let response = `Error: I don't know how to exectuete \\\"${command}\\\"`;\\n  \\n  tokenList = command.split( ' ' );\\n  if( tokenList ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    let objectName2 = tokenList[2] || '';\\n    //TODO: Use this instead of next line if the real simulator API is not cleand: let handName = tokenList[3] || '';\\n    //      this is linked to the comment in 'get' in command checker file\\n    let handName = tokenList[2] || '';\\n    \\n    switch( commandName ) {\\n      case 'reset':\\n        response = `Success`;\\n        break;\\n      case 'wait':\\n        response = `Success`;\\n        break;\\n      case 'get':\\n        Sim_putObjectInHand( nodeData, handName, objectName1 );\\n        response = `Success: ${objectName1} is in ${handName}.`;\\n        break;\\n      case 'put':\\n        if( Sim_isObjectInHand( nodeData, 'hand_right', objectName1 ) ) {\\n          objectName2 = Sim_putObjectOnObject( nodeData, 'hand_right', objectName2 );\\n        } else if( Sim_isObjectInHand( nodeData, 'hand_left', objectName1 ) ) {\\n          objectName2 = Sim_putObjectOnObject( nodeData, 'hand_left', objectName2 );\\n        }\\n        response = `Success: ${objectName1} is in/on ${objectName2}.`;\\n        break;\\n      case 'gaze':\\n        Sim_gazeAtObject( nodeData, objectName1 );\\n        response = `Success:  ${objectName1} is gazed at.`;\\n        break;\\n      case 'open_door':\\n        Sim_setClosure( nodeData, objectName1, 'opened' );\\n        response = `Success: ${objectName1} is opened.`;\\n        break;\\n      case 'close_door':\\n        Sim_setClosure( nodeData, objectName1, 'closed' );\\n        response = `Success: ${objectName1} is closed.`;\\n        break;\\n      case 'finger_push':\\n        if( Sim_isObjectPoweredOn( nodeData, objectName1 ) ) {\\n          Sim_setPower( nodeData, objectName1, 'off' );\\n          response = `Success: ${objectName1} is switched on.`;\\n        } else {\\n          Sim_setPower( nodeData, objectName1, 'on' );\\n          response = `Success: ${objectName1} is switched off.`;\\n        }\\n        break;\\n      case 'pour':\\n        const liquid = Sim_getLiquidInObject( nodeData, objectName1 );\\n        const level = Sim_pourObject( nodeData, objectName1, objectName2 );\\n        if( level > 0 ) {\\n          const liquidDesc = ( liquid.length? 'no': liquid.join( '+' ) );\\n          response = `Success: Poured ${level} litter of ${liquidDesc} liquid from ${objectName1} into ${objectName2}.`;\\n        } else {\\n          response = `Error: ${objectName1} is empty.`;\\n        }\\n        break;\\n      case 'screw':\\n        if( Sim_isObjectOpened( nodeData, objectName1 ) ) {\\n          Sim_setClosure( nodeData, objectName1, 'closed' );\\n          response = `Success: ${objectName1} is closed.`;\\n        } else {\\n          Sim_setClosure( nodeData, objectName1, 'opened' );\\n          response = `Success: ${objectName1} is opened.`;\\n        }\\n        break;\\n    }\\n  }\\n  return( response );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":485,\"location\":\"21051.999731385535 5515.530216893688\",\"editorPosition\":[2268,114,759,1755],\"group\":465},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"320 240\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"fileServer/pictures/SMILESimulator.png\",\"key\":486,\"location\":\"18150 4490\",\"group\":507},\n{\"label\":\"Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"bowl\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"bowl\\\"\\n  },\\n  \\\"cutboard\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"board\\\"\\n  },\\n  \\\"gin\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"type\\\": \\\"bottle\\\"\\n  },\\n  \\\"glass\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"type\\\": \\\"glass\\\"\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ],\\n    \\\"type\\\": \\\"hand\\\"\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"glass\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ],\\n    \\\"type\\\": \\\"hand\\\"\\n  },\\n  \\\"lemon\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"bowl\\\"\\n    ],\\n    \\\"type\\\": \\\"fruit\\\"\\n  },\\n  \\\"shelf\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"shelf\\\"\\n  },\\n  \\\"table\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"shelf\\\",\\n      \\\"vodka\\\",\\n      \\\"gin\\\",\\n      \\\"cutboard\\\",\\n      \\\"bowl\\\",\\n      \\\"glas\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ],\\n    \\\"type\\\": \\\"table\\\"\\n  },\\n  \\\"vodka\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"hand_left\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"type\\\": \\\"bottle\\\"\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":487,\"location\":\"21581.999731385535 5495.430216893687\",\"editorPosition\":[1735,35,425,1463],\"group\":465},\n{\"label\":\"New State\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":488,\"location\":\"21581.999731385535 5415.7302168936885\",\"color\":\"LightYellow\",\"group\":465},\n{\"label\":\"Check for Replan on Error\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"},{\"portId\":\"resetReplan\",\"name\":\"resetReplan\"}],\"out_\":[{\"portId\":\"replanError\",\"name\":\"replanError\"},{\"portId\":\"planFailed\",\"name\":\"planFailed\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"errorMessage\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"maxReplanCount\",\"value\":\"10\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'resetReplan' ) {\\n  Engine_set( nodeData, 'replanCount', 0 );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const errorMessage = Engine_getInput( nodeData, 'errorMessage', '' );\\n  const replanCount = Engine_get( nodeData, 'replanCount', 0 );\\n  const maxReplanCount = Engine_getProperty( nodeData, 'maxReplanCount', 0 );\\n  \\n  if( replanCount < maxReplanCount ) {\\n    // Lets try to replan\\n    Engine_set( nodeData, 'replanCount', replanCount+1 );\\n    \\n    let msg = errorMessage;\\n    const idx = errorMessage.indexOf( '] ' );\\n    if( idx != -1 ) {\\n      msg = '[Roco to Ropa] '+errorMessage.substring( idx+2 );\\n    }\\n    Engine_fireOutput( nodeData, 'replanError', msg );\\n  } else {\\n    const errorMsg = `The user request could not be executed. Please inform the human.`;\\n    // Too many replan, infor user about failure\\n    Engine_fireOutput( nodeData, 'planFailed', errorMsg );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":489,\"location\":\"21741.999731385535 5784.3682168936875\",\"editorPosition\":[3080,2226,673,333],\"group\":465},\n{\"label\":\"Trigger Next Command\",\"category\":\"DataFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  setTimeout( ()=> Engine_fireOutput( nodeData, 'out' ), 500 ); // 0.5s\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":490,\"location\":\"21961.999731385535 5495.630216893688\",\"editorPosition\":[3080,2226,673,333],\"group\":465},\n{\"label\":\"Next Cmd\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":491,\"location\":\"21961.999731385535 5415.7302168936885\",\"color\":\"MediumBlue\",\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":492,\"location\":\"19651.999731385535 5944.668216893689\",\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2400 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":493,\"location\":\"22389.999731385535 6143.699216893689\",\"group\":465},\n{\"label\":\"->planResult\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":494,\"location\":\"19651.999731385535 5874.668216893689\",\"color\":\"Lavender\",\"group\":465},\n{\"label\":\"->errorMessage\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":495,\"location\":\"22389.999731385535 6063.699216893689\",\"color\":\"Lavender\",\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1870 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":496,\"location\":\"19661.999731385535 6104.668216893689\",\"group\":465},\n{\"label\":\"->taskEvaluation\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"300 60\",\"key\":497,\"location\":\"19661.999731385535 6034.668216893689\",\"color\":\"Lavender\",\"group\":465},\n{\"label\":\"Clear Label of Message Nodes\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isLocal\",\"value\":\"true\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Test if clean only local group labels:\\n// - isLocal = true => clean only labels in the group we are in\\n// - isLocal = false => clean all labels that are in any group\\nconst isLocal = Engine_getProperty( nodeData, 'isLocal', false );\\n// Group test function\\nconst testGroup = (g)=> ( isLocal? g == nodeData.group: g != undefined );\\n\\n// Get all message nodes (except big plan)\\nconst dataList = appData.me.getNodeListIf( modelId, \\n                                           (d)=> d.category == 'DataFlow_Message' &&\\n                                           testGroup( d.group ) );\\nfor( const data of dataList ) {\\n  setNodeDataField( data.key, 'label', '' );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":498,\"location\":\"19069.999731385535 5373.699216893689\",\"editorPosition\":[564,1974,693,325],\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2260 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":499,\"location\":\"21799.999731385535 6603.699216893689\",\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":500,\"location\":\"21809.999731385535 6503.699216893689\",\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2240 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":501,\"location\":\"21819.999731385535 6403.699216893689\",\"group\":465},\n{\"label\":\"Command History\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"reset\\r\\nget glass hand_right\\nget vodka hand_left\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":504,\"location\":\"22009.999731385535 5273.299216893687\",\"editorPosition\":[1735,35,425,1463],\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1370 1150\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":505,\"location\":\"22769.999731385535 5473.699216893689\",\"group\":465},\n{\"label\":\"[Ropa to Roco] reset\\r\\n[Ropa to Roco] get glass\\r\\n[Ropa to Roco] get vodka\\r\\n[Ropa to Roco] pour vodka glass\\r\\n[Ropa to Roco] put glass shelf\\r\\n\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1050 1420\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":510,\"location\":\"17470 5890\"},\n{\"label\":\"Plan\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Ropa to Roco] reset\\r\\n[Ropa to Roco] get glass\\r\\n[Ropa to Roco] get vodka\\r\\n[Ropa to Roco] pour vodka glass\\r\\n[Ropa to Roco] put glass shelf\\r\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":511,\"location\":\"16970 5760\",\"editorPosition\":[691,684,400,350]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"300 300\",\"buttons_\":[{\"buttonMinSize\":\"180 180\",\"buttonFont\":\"70px sans-serif\",\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":512,\"location\":\"16460 5769.5999999999985\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":513,\"location\":\"18640 5609.699999999999\"},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1340 140\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":506,\"location\":\"20300 5165\",\"group\":465},\n{\"label\":\"Environment\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":507,\"location\":\"17618.103515625 4581.07044695639\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"bowl\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"bowl\\\"\\n  },\\n  \\\"cutboard\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"board\\\"\\n  },\\n  \\\"gin\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"type\\\": \\\"bottle\\\"\\n  },\\n  \\\"glass\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"type\\\": \\\"glass\\\"\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ],\\n    \\\"type\\\": \\\"hand\\\"\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"glass\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ],\\n    \\\"type\\\": \\\"hand\\\"\\n  },\\n  \\\"lemon\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"bowl\\\"\\n    ],\\n    \\\"type\\\": \\\"fruit\\\"\\n  },\\n  \\\"shelf\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"shelf\\\"\\n  },\\n  \\\"table\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"shelf\\\",\\n      \\\"vodka\\\",\\n      \\\"gin\\\",\\n      \\\"cutboard\\\",\\n      \\\"bowl\\\",\\n      \\\"glas\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ],\\n    \\\"type\\\": \\\"table\\\"\\n  },\\n  \\\"vodka\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"hand_left\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"type\\\": \\\"bottle\\\"\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":508,\"location\":\"18051.896923010645 4872.350024772155\",\"editorPosition\":[1735,35,425,1463],\"group\":507},\n{\"label\":\"New Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"bowl\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"lemon\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"bowl\\\"\\n  },\\n  \\\"cutboard\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"board\\\"\\n  },\\n  \\\"gin\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"shelf\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"type\\\": \\\"bottle\\\"\\n  },\\n  \\\"glass\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"type\\\": \\\"glass\\\"\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ],\\n    \\\"type\\\": \\\"hand\\\"\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"glass\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ],\\n    \\\"type\\\": \\\"hand\\\"\\n  },\\n  \\\"lemon\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"bowl\\\"\\n    ],\\n    \\\"type\\\": \\\"fruit\\\"\\n  },\\n  \\\"shelf\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gin\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table\\\"\\n    ],\\n    \\\"type\\\": \\\"shelf\\\"\\n  },\\n  \\\"table\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"shelf\\\",\\n      \\\"vodka\\\",\\n      \\\"gin\\\",\\n      \\\"cutboard\\\",\\n      \\\"bowl\\\",\\n      \\\"glas\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ],\\n    \\\"type\\\": \\\"table\\\"\\n  },\\n  \\\"vodka\\\": {\\n    \\\"color\\\": \\\"\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"hand_left\\\"\\n    ],\\n    \\\"holdsLiquid\\\": [\\n      \\\"vodka\\\"\\n    ],\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"type\\\": \\\"bottle\\\"\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":509,\"location\":\"17701.896923010645 5002.750024772155\",\"editorPosition\":[1208,387,400,350],\"group\":507},\n{\"label\":\"Initial Environement State\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n   \\\"bowl\\\": {\\n        \\\"color\\\": \\\"\\\",\\n        \\\"holdsObject\\\": [\\n            \\\"lemon\\\"\\n        ],\\n        \\\"isHeldByObject\\\": [\\n            \\\"table\\\"\\n        ],\\n        \\\"type\\\": \\\"bowl\\\"\\n    },\\n    \\\"cutboard\\\": {\\n        \\\"color\\\": \\\"\\\",\\n        \\\"holdsObject\\\": [],\\n        \\\"isHeldByObject\\\": [\\n            \\\"table\\\"\\n        ],\\n        \\\"type\\\": \\\"board\\\"\\n    },\\n    \\\"gin\\\": {\\n        \\\"color\\\": \\\"\\\",\\n        \\\"holdsObject\\\": [],\\n        \\\"isHeldByObject\\\": [\\n            \\\"shelf\\\"\\n        ],\\n      \\\"holdsLiquid\\\": [\\n        \\\"gin\\\"\\n      ],\\n      \\\"volume\\\": 1,\\n      \\\"fillLevel\\\": 1,\\n      \\\"type\\\": \\\"bottle\\\"\\n    },\\n    \\\"glass\\\": {\\n        \\\"color\\\": \\\"\\\",\\n        \\\"holdsObject\\\": [],\\n        \\\"isHeldByObject\\\": [\\n            \\\"table\\\"\\n        ],\\n        \\\"type\\\": \\\"glass\\\"\\n    },\\n    \\\"hand_left\\\": {\\n        \\\"holdsObject\\\": [],\\n        \\\"isHeldByObject\\\": [\\n          \\\"robot\\\"\\n        ],\\n        \\\"type\\\": \\\"hand\\\"\\n    },\\n    \\\"hand_right\\\": {\\n        \\\"holdsObject\\\": [],\\n        \\\"isHeldByObject\\\": [\\n          \\\"robot\\\"\\n        ],\\n        \\\"type\\\": \\\"hand\\\"\\n    },\\n    \\\"lemon\\\": {\\n        \\\"color\\\": \\\"\\\",\\n        \\\"holdsObject\\\": [],\\n        \\\"isHeldByObject\\\": [\\n            \\\"bowl\\\"\\n        ],\\n        \\\"type\\\": \\\"fruit\\\"\\n    },\\n    \\\"shelf\\\": {\\n        \\\"color\\\": \\\"\\\",\\n        \\\"holdsObject\\\": [\\n            \\\"vodka\\\",\\n            \\\"gin\\\"\\n        ],\\n        \\\"isHeldByObject\\\": [\\n            \\\"table\\\"\\n        ],\\n        \\\"type\\\": \\\"shelf\\\"\\n    },\\n    \\\"table\\\": {\\n        \\\"color\\\": \\\"\\\",\\n        \\\"holdsObject\\\": [\\n            \\\"shelf\\\",\\n            \\\"vodka\\\",\\n            \\\"gin\\\",\\n            \\\"cutboard\\\",\\n            \\\"bowl\\\",\\n            \\\"glas\\\"\\n        ],\\n        \\\"isHeldByObject\\\": [\\n            \\\"lab\\\"\\n        ],\\n        \\\"type\\\": \\\"table\\\"\\n    },\\n    \\\"vodka\\\": {\\n      \\\"color\\\": \\\"\\\",\\n      \\\"holdsObject\\\": [],\\n      \\\"isHeldByObject\\\": [\\n          \\\"shelf\\\"\\n      ],\\n      \\\"holdsLiquid\\\": [\\n        \\\"vodka\\\"\\n      ],\\n      \\\"volume\\\": 1,\\n      \\\"fillLevel\\\": 1,\\n      \\\"type\\\": \\\"bottle\\\"\\n    }\\n}\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":514,\"location\":\"17690 4640\",\"editorPosition\":[41,2,418,1367],\"color\":\"#ccffcc\"},\n{\"label\":\"Environment State\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"660 70\",\"key\":515,\"location\":\"17840 4160\",\"group\":507},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":517,\"location\":\"10410 -2990.1\",\"label\":\"Request \\nfor Travi\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleLeft\",\"size\":\"150 40\",\"key\":519,\"location\":\"10190 -3070\",\"label\":\"Alex (LLM)\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointLeftCenter\",\"size\":\"150 40\",\"key\":521,\"location\":\"9900 -3070\",\"label\":\"User request\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":525,\"location\":\"10190 -2990.2\",\"label\":\"Choice\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_PointRightLeft\",\"size\":\"150 40\",\"key\":526,\"location\":\"9910 -2990\",\"label\":\"Answer\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleLeft\",\"size\":\"150 40\",\"key\":527,\"location\":\"10410 -2910.1\",\"label\":\"Travi (LLM)\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":528,\"location\":\"10410 -2830.1\",\"label\":\"Plan \\nRequirements\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleLeft\",\"size\":\"150 40\",\"key\":529,\"location\":\"10410 -2750.1\",\"label\":\"Ropa (LLM)\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":530,\"location\":\"10410 -2670.1\",\"label\":\"High Level Plan\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleLeft\",\"size\":\"150 40\",\"key\":531,\"location\":\"10410 -2570\",\"label\":\"Roco\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":532,\"location\":\"10410 -2480.1\",\"label\":\"Command\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleLeft\",\"size\":\"150 40\",\"key\":533,\"location\":\"10410 -2400.1\",\"label\":\"Logical Checker\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":534,\"location\":\"10410 -2320.2999999999997\",\"label\":\"Choice\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":535,\"location\":\"10210 -2570.1\",\"label\":\"Low Level Plan\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleLeft\",\"size\":\"150 40\",\"key\":536,\"location\":\"10210 -2230.2\",\"label\":\"Simulator\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":537,\"location\":\"10210 -2320.1\",\"label\":\"Command\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":538,\"location\":\"10210 -2160.2\",\"label\":\"Choice\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RectangleLeft\",\"size\":\"150 40\",\"key\":539,\"location\":\"10410 -2160.2\",\"label\":\"Robot\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":541,\"location\":\"10410 -2080.2999999999997\",\"label\":\"Choice\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":543,\"location\":\"10720 -2080\",\"label\":\"Environment\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":544,\"location\":\"10210 -2080\",\"label\":\"Error\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":545,\"location\":\"10020 -2160.1\",\"label\":\"Error\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":546,\"location\":\"10550 -3070\",\"label\":\"Feedback\"},\n{\"tag\":\"\",\"type\":\"\",\"category\":\"Thinking_RoundedRectangleLeft\",\"size\":\"150 40\",\"key\":547,\"location\":\"10580 -2320.1\",\"label\":\"Error\"},\n{\"label\":\"TODO:\\n- Create a file for log\\n- Introduce input for Start-End experiment index\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1700 430\",\"key\":518,\"location\":\"-1520 5060\",\"fontColor\":\"Red\"},\n{\"label\":\"Experiment Log\",\"category\":\"DataFlow_Data\",\"size\":\"240 310\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\n  \\\"feedbackType\\\": \\\"SF1\\\",\\n  \\\"02.01 Bloody_Mary\\\": [\\n    {\\n      \\\"request\\\": \\\"Please, prepare a Bloody Mary cocktail\\\",\\n      \\\"log\\\": [\\n        {\\n          \\\"type\\\": \\\"TRAVI\\\",\\n          \\\"specs\\\": \\\"[Travi to Ropa]\\\\n\\\\nGoal: \\\\nPrepare a Bloody Mary cocktail in the mixing container and serve it in a glass placed on the tray.\\\\n\\\\nObject needed: \\\\nvodka_bottle, tomato_juice_bottle, salt_bottle, first_glass, mixing_container, electric_shaker, tray.\\\\n\\\\nState summary from environment state: \\\\nThe robot's hands are currently empty. The vodka_bottle, tomato_juice_bottle, and salt_bottle are on the shelf and in the fridge. The mixing_container is in the electric_shaker which is on the table and the shaker is currently turned off. The first_glass and the tray are also located on the table. All the bottles are full and the fridge is closed. The glass, the mixing_container and the tray are currently empty.\\\\n\\\\nRemaining actions to do:\\\\n1. Get the vodka_bottle from the shelf.\\\\n2. Open the vodka_bottle.\\\\n3. Pour the vodka from the vodka_bottle into the mixing_container.\\\\n4. Close the vodka_bottle and put it back on the shelf.\\\\n5. Open the fridge door.\\\\n6. Get the tomato_juice_bottle from the fridge.\\\\n7. Open the tomato_juice_bottle.\\\\n8. Pour the tomato_juice from the tomato_juice_bottle into the mixing_container.\\\\n9. Close the tomato_juice_bottle and put it back in the fridge.\\\\n10. Get the salt_bottle from the shelf.\\\\n11. Open the salt_bottle.\\\\n12. Pour the salt from the salt_bottle into the mixing_container.\\\\n13. Close the salt_bottle and put it back on the shelf.\\\\n14. Switch on the electric_shaker to mix the cocktail.\\\\n15. Wait for the mixing process to finish.\\\\n16. Switch off the electric_shaker.\\\\n17. Get the first_glass from the table.\\\\n18. Pour the cocktail from the mixing_container into the first_glass.\\\\n19. Put the empty mixing_container back in the electric_shaker.\\\\n20. Get the tray from the table.\\\\n21. Put the glass with the cocktail on the tray.\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"subPlan\\\",\\n          \\\"plan\\\": \\\"[Ropa to Roco] gaze shelf\\\\n[Ropa to Roco] get vodka_bottle from shelf hand_right\\\\n[Ropa to Roco] open vodka_bottle\\\\n[Ropa to Roco] pour vodka_bottle mixing_container 100\\\\n[Ropa to Roco] close vodka_bottle\\\\n[Ropa to Roco] put vodka_bottle shelf\\\\n[Ropa to Roco] gaze fridge\\\\n[Ropa to Roco] open fridge\\\\n[Ropa to Roco] get tomato_juice_bottle from fridge hand_right\\\\n[Ropa to Roco] open tomato_juice_bottle\\\\n[Ropa to Roco] pour tomato_juice_bottle mixing_container 100\\\\n[Ropa to Roco] close tomato_juice_bottle\\\\n[Ropa to Roco] put tomato_juice_bottle fridge\\\\n[Ropa to Roco] gaze shelf\\\\n[Ropa to Roco] get salt_bottle from shelf hand_right\\\\n[Ropa to Roco] open salt_bottle\\\\n[Ropa to Roco] pour salt_bottle mixing_container 1\\\\n[Ropa to Roco] close salt_bottle\\\\n[Ropa to Roco] put salt_bottle shelf\\\\n[Ropa to Roco] gaze table\\\\n[Ropa to Roco] switch_on electric_shaker\\\\n[Ropa to Roco] wait 60\\\\n[Ropa to Roco] switch_off electric_shaker\\\\n[Ropa to Roco] get first_glass from table hand_left\\\\n[Ropa to Roco] pour mixing_container first_glass 100\\\\n[Ropa to Roco] put mixing_container electric_shaker\\\\n[Ropa to Roco] get tray from table hand_right\\\\n[Ropa to Roco] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 24,\\n          \\\"message\\\": \\\"Error: cannot pour mixing_container first_glass 100 because mixing_container is not in hand.\\\",\\n          \\\"subPlan\\\": \\\"[Roco to Robi] get mixing_container hand_right\\\\n[Roco to Robi] pour mixing_container first_glass 100\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"subPlan\\\",\\n          \\\"plan\\\": \\\"[Ropa to Roco] gaze shelf\\\\n[Ropa to Roco] get vodka_bottle from shelf hand_right\\\\n[Ropa to Roco] open vodka_bottle\\\\n[Ropa to Roco] pour vodka_bottle mixing_container 100\\\\n[Ropa to Roco] close vodka_bottle\\\\n[Ropa to Roco] put vodka_bottle shelf\\\\n[Ropa to Roco] gaze fridge\\\\n[Ropa to Roco] open fridge\\\\n[Ropa to Roco] get tomato_juice_bottle from fridge hand_right\\\\n[Ropa to Roco] open tomato_juice_bottle\\\\n[Ropa to Roco] pour tomato_juice_bottle mixing_container 100\\\\n[Ropa to Roco] close tomato_juice_bottle\\\\n[Ropa to Roco] put tomato_juice_bottle fridge\\\\n[Ropa to Roco] gaze shelf\\\\n[Ropa to Roco] get salt_bottle from shelf hand_right\\\\n[Ropa to Roco] open salt_bottle\\\\n[Ropa to Roco] pour salt_bottle mixing_container 1\\\\n[Ropa to Roco] close salt_bottle\\\\n[Ropa to Roco] put salt_bottle shelf\\\\n[Ropa to Roco] gaze table\\\\n[Ropa to Roco] switch_on electric_shaker\\\\n[Ropa to Roco] wait 60\\\\n[Ropa to Roco] switch_off electric_shaker\\\\n[Ropa to Roco] get first_glass from table hand_left\\\\n[Roco to Robi] get mixing_container hand_right\\\\n[Roco to Robi] pour mixing_container first_glass 100\\\\n[Ropa to Roco] put mixing_container electric_shaker\\\\n[Ropa to Roco] get tray from table hand_right\\\\n[Ropa to Roco] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 24,\\n          \\\"message\\\": \\\"Error: cannot get mixing_container hand_right with specified hand because it is full.\\\",\\n          \\\"subPlan\\\": \\\"[Roco to Robi] get mixing_container from  hand_right\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"evaluation\\\",\\n          \\\"result\\\": \\\"Success\\\",\\n          \\\"plan\\\": \\\"[Roco to Robi] get vodka_bottle from shelf hand_right\\\\n[Roco to Robi] open vodka_bottle\\\\n[Roco to Robi] pour vodka_bottle mixing_container 100\\\\n[Roco to Robi] close vodka_bottle\\\\n[Roco to Robi] put vodka_bottle shelf\\\\n[Roco to Robi] open fridge\\\\n[Roco to Robi] get tomato_juice_bottle from fridge hand_right\\\\n[Roco to Robi] open tomato_juice_bottle\\\\n[Roco to Robi] pour tomato_juice_bottle mixing_container 100\\\\n[Roco to Robi] close tomato_juice_bottle\\\\n[Roco to Robi] put tomato_juice_bottle fridge\\\\n[Roco to Robi] get salt_bottle from shelf hand_right\\\\n[Roco to Robi] open salt_bottle\\\\n[Roco to Robi] pour salt_bottle mixing_container 1\\\\n[Roco to Robi] close salt_bottle\\\\n[Roco to Robi] put salt_bottle shelf\\\\n[Roco to Robi] switch_on electric_shaker\\\\n[Roco to Robi] wait 60\\\\n[Roco to Robi] switch_off electric_shaker\\\\n[Roco to Robi] get first_glass from table hand_left\\\\n[Roco to Robi] get mixing_container from  hand_right\\\\n[Roco to Robi] pour mixing_container first_glass 100\\\\n[Roco to Robi] put mixing_container electric_shaker\\\\n[Roco to Robi] get tray from table hand_right\\\\n[Roco to Robi] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 25,\\n          \\\"message\\\": \\\"Request has been executed successfully. Please inform the human.\\\"\\n        }\\n      ],\\n      \\\"alexResponse\\\": \\\"[Alex to Human]:[Success] Your request has been executed successfully by the robot.\\\",\\n      \\\"finalState\\\": \\\"{\\\\n  \\\\\\\"lab\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"room\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"robot\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"robot\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"gaze\\\\\\\",\\\\n      \\\\\\\"hand_left\\\\\\\",\\\\n      \\\\\\\"hand_right\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lab\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"gaze\\\\\\\": {\\\\n    \\\\\\\"fovea\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"perif\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"robot\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"hand_left\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"hand\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"robot\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"hand_right\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"hand\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"tray\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"robot\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"table\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"table\\\\\\\",\\\\n    \\\\\\\"color\\\\\\\": \\\\\\\"gray\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"basil_bowl\\\\\\\",\\\\n      \\\\\\\"fresh_herbs_bowl\\\\\\\",\\\\n      \\\\\\\"ice_cubes_bowl\\\\\\\",\\\\n      \\\\\\\"lemon_slice_bowl\\\\\\\",\\\\n      \\\\\\\"lime_slice_bowl\\\\\\\",\\\\n      \\\\\\\"mint_bowl\\\\\\\",\\\\n      \\\\\\\"orange_slice_bowl\\\\\\\",\\\\n      \\\\\\\"rosemary_bowl\\\\\\\",\\\\n      \\\\\\\"sugar_cubes_bowl\\\\\\\",\\\\n      \\\\\\\"electric_shaker\\\\\\\",\\\\n      \\\\\\\"mixing_container\\\\\\\",\\\\n      \\\\\\\"second_glass\\\\\\\",\\\\n      \\\\\\\"third_glass\\\\\\\",\\\\n      \\\\\\\"forth_glass\\\\\\\",\\\\n      \\\\\\\"fifth_glass\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lab\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"shelf\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"shelf\\\\\\\",\\\\n    \\\\\\\"color\\\\\\\": \\\\\\\"gray\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"bitters_bottle\\\\\\\",\\\\n      \\\\\\\"brandy_bottle\\\\\\\",\\\\n      \\\\\\\"coca_cola_bottle\\\\\\\",\\\\n      \\\\\\\"gin_bottle\\\\\\\",\\\\n      \\\\\\\"ginger_beer_bottle\\\\\\\",\\\\n      \\\\\\\"grenadine_bottle\\\\\\\",\\\\n      \\\\\\\"rum_bottle\\\\\\\",\\\\n      \\\\\\\"simple_syrup_bottle\\\\\\\",\\\\n      \\\\\\\"soda_water_bottle\\\\\\\",\\\\n      \\\\\\\"tequila_bottle\\\\\\\",\\\\n      \\\\\\\"tonic_water_bottle\\\\\\\",\\\\n      \\\\\\\"triple_sec_bottle\\\\\\\",\\\\n      \\\\\\\"vermouth_bottle\\\\\\\",\\\\n      \\\\\\\"whiskey_bottle\\\\\\\",\\\\n      \\\\\\\"vodka_bottle\\\\\\\",\\\\n      \\\\\\\"salt_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lab\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"fridge\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"fridge\\\\\\\",\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"opened\\\\\\\",\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"on\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"milk_bottle\\\\\\\",\\\\n      \\\\\\\"cranberry_juice_bottle\\\\\\\",\\\\n      \\\\\\\"pineapple_juice_bottle\\\\\\\",\\\\n      \\\\\\\"tomato_juice_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"basil\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"basil_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"basil_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"basil\\\\\\\",\\\\n      \\\\\\\"basil\\\\\\\",\\\\n      \\\\\\\"basil\\\\\\\",\\\\n      \\\\\\\"basil\\\\\\\",\\\\n      \\\\\\\"basil\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"bitters\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"bitters_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"bitters_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"bitters\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"brandy\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"brandy_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"brandy_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"brandy\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"coca_cola\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"coca_cola_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"coca_cola_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"coca_cola\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"cranberry_juice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"cranberry_juice_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"cranberry_juice_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"cranberry_juice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fridge\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"fresh_herbs\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fresh_herbs_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"fresh_herbs_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"fresh_herbs\\\\\\\",\\\\n      \\\\\\\"fresh_herbs\\\\\\\",\\\\n      \\\\\\\"fresh_herbs\\\\\\\",\\\\n      \\\\\\\"fresh_herbs\\\\\\\",\\\\n      \\\\\\\"fresh_herbs\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"gin\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"gin_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"gin_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"gin\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"ginger_beer\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"ginger_beer_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"ginger_beer_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"ginger_beer\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"grenadine\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"grenadine_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"grenadine_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"grenadine\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"ice_cubes\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"ice_cubes_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"ice_cubes_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"ice_cubes\\\\\\\",\\\\n      \\\\\\\"ice_cubes\\\\\\\",\\\\n      \\\\\\\"ice_cubes\\\\\\\",\\\\n      \\\\\\\"ice_cubes\\\\\\\",\\\\n      \\\\\\\"ice_cubes\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"lemon_slice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lemon_slice_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"lemon_slice_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"lemon_slice\\\\\\\",\\\\n      \\\\\\\"lemon_slice\\\\\\\",\\\\n      \\\\\\\"lemon_slice\\\\\\\",\\\\n      \\\\\\\"lemon_slice\\\\\\\",\\\\n      \\\\\\\"lemon_slice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"lime_slice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lime_slice_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"lime_slice_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"lime_slice\\\\\\\",\\\\n      \\\\\\\"lime_slice\\\\\\\",\\\\n      \\\\\\\"lime_slice\\\\\\\",\\\\n      \\\\\\\"lime_slice\\\\\\\",\\\\n      \\\\\\\"lime_slice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"milk\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"milk_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"milk_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"milk\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fridge\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"mint\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"mint_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"mint_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"mint\\\\\\\",\\\\n      \\\\\\\"mint\\\\\\\",\\\\n      \\\\\\\"mint\\\\\\\",\\\\n      \\\\\\\"mint\\\\\\\",\\\\n      \\\\\\\"mint\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"orange_slice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"orange_slice_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"orange_slice_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"orange_slice\\\\\\\",\\\\n      \\\\\\\"orange_slice\\\\\\\",\\\\n      \\\\\\\"orange_slice\\\\\\\",\\\\n      \\\\\\\"orange_slice\\\\\\\",\\\\n      \\\\\\\"orange_slice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"pineapple_juice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"pineapple_juice_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"pineapple_juice_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"pineapple_juice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fridge\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"rosemary\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"rosemary_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"rosemary_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"rosemary\\\\\\\",\\\\n      \\\\\\\"rosemary\\\\\\\",\\\\n      \\\\\\\"rosemary\\\\\\\",\\\\n      \\\\\\\"rosemary\\\\\\\",\\\\n      \\\\\\\"rosemary\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"rum\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"rum_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"rum_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"rum\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"salt\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"salt\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"salt_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"salt_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 0.5,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.499,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"salt\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\"\\\\n  },\\\\n  \\\\\\\"simple_syrup\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"simple_syrup_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"simple_syrup_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"simple_syrup\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"soda_water\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"soda_water_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"soda_water_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"soda_water\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"sugar_cubes\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"sugar_cubes_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"sugar_cubes_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"sugar_cubes\\\\\\\",\\\\n      \\\\\\\"sugar_cubes\\\\\\\",\\\\n      \\\\\\\"sugar_cubes\\\\\\\",\\\\n      \\\\\\\"sugar_cubes\\\\\\\",\\\\n      \\\\\\\"sugar_cubes\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tequila\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"tequila_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"tequila_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"tequila\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tomato_juice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"tomato_juice_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"tomato_juice_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.9,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"tomato_juice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fridge\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\"\\\\n  },\\\\n  \\\\\\\"tonic_water\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"tonic_water_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"tonic_water_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"tonic_water\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"triple_sec\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"triple_sec_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"triple_sec_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"triple_sec\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"vermouth\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"vermouth_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"vermouth_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"vermouth\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"vodka\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"vodka_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"vodka_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.9,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"vodka\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\"\\\\n  },\\\\n  \\\\\\\"whiskey\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"whiskey_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"whiskey_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"whiskey\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"electric_shaker\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"electric_shaker\\\\\\\",\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"off\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"mixing_container\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"mixing_container\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"mixing_container\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"vodka\\\\\\\",\\\\n      \\\\\\\"tomato_juice\\\\\\\",\\\\n      \\\\\\\"salt\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"electric_shaker\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"first_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"vodka\\\\\\\",\\\\n      \\\\\\\"tomato_juice\\\\\\\",\\\\n      \\\\\\\"salt\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.001,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"tray\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"second_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"third_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"forth_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"fifth_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tray\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"tray\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"first_glass\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"hand_right\\\\\\\"\\\\n    ]\\\\n  }\\\\n}\\\"\\n    },\\n    {\\n      \\\"request\\\": \\\"Please, prepare a Bloody Mary cocktail\\\",\\n      \\\"log\\\": [\\n        {\\n          \\\"type\\\": \\\"TRAVI\\\",\\n          \\\"specs\\\": \\\"[Travi to Ropa]\\\\nGoal: \\\\nTo prepare a Bloody Mary cocktail which involves mixing vodka, tomato juice, lemon juice (squeezed from lemon slices), Worcestershire sauce, and Tabasco sauce, with salt and pepper to taste. And then garnish it with lemon slices and celery. However, since the environment lacks Worcestershire sauce, Tabasco sauce, and celery, the cocktail will be made without them.\\\\n\\\\nObjects needed: \\\\n\\\\\\\"vodka_bottle\\\\\\\", \\\\\\\"tomato_juice_bottle\\\\\\\", \\\\\\\"lemon_slice_bowl\\\\\\\", \\\\\\\"salt_bottle\\\\\\\", \\\\\\\"ice_cubes_bowl\\\\\\\", \\\\\\\"mixing_container\\\\\\\", \\\\\\\"first_glass\\\\\\\", \\\\\\\"electric_shaker\\\\\\\", \\\\\\\"tray\\\\\\\".\\\\n\\\\nState summary from environment state: \\\\nThe robot has both its hands free. The mixing container is empty and is currently inside the electric shaker which is switched off. The vodka and tomato juice bottles stored on the shelf, lemon slices in the bowl on the table, and the salt bottle on the shelf. The tray and first glass to be used are also empty and placed on the table.\\\\n\\\\nRemaining actions to do: \\\\n1) Get \\\\\\\"vodka_bottle\\\\\\\".\\\\n2) Pour vodka from \\\\\\\"vodka_bottle\\\\\\\" to \\\\\\\"mixing_container\\\\\\\".\\\\n3) Put \\\\\\\"vodka_bottle\\\\\\\" back on \\\\\\\"shelf\\\\\\\".\\\\n4) Get \\\\\\\"tomato_juice_bottle\\\\\\\" from fridge.\\\\n5) Pour tomato juice from \\\\\\\"tomato_juice_bottle\\\\\\\" to \\\\\\\"mixing_container\\\\\\\".\\\\n6) Put \\\\\\\"tomato_juice_bottle\\\\\\\" back in the \\\\\\\"fridge\\\\\\\".\\\\n7) Get \\\\\\\"lemon_slice\\\\\\\" from \\\\\\\"lemon_slice_bowl\\\\\\\".\\\\n8) Squeeze \\\\\\\"lemon_slice\\\\\\\" to \\\\\\\"mixing_container\\\\\\\".\\\\n9) Get \\\\\\\"salt_bottle\\\\\\\".\\\\n10) Pour salt from \\\\\\\"salt_bottle\\\\\\\" to \\\\\\\"mixing_container\\\\\\\".\\\\n11) Put \\\\\\\"salt_bottle\\\\\\\" back on \\\\\\\"shelf\\\\\\\".\\\\n12) Switch on \\\\\\\"electric_shaker\\\\\\\" to mix the cocktail.\\\\n13) Wait for the cocktail to be mixed.\\\\n14) Switch off \\\\\\\"electric_shaker\\\\\\\".\\\\n15) Get \\\\\\\"first_glass\\\\\\\".\\\\n16) Pour the cocktail from the \\\\\\\"mixing_container\\\\\\\" into the \\\\\\\"first_glass\\\\\\\".\\\\n17) Get the \\\\\\\"tray\\\\\\\".\\\\n18) Put the \\\\\\\"first_glass\\\\\\\" on the \\\\\\\"tray\\\\\\\".\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"TRAVI\\\",\\n          \\\"specs\\\": \\\"[Travi to Ropa]\\\\nGoal: \\\\nto have the Bloody Mary cocktail prepared in the mixer_container of the electric_shaker and served in the first_glass placed on the tray.\\\\nObject needed: \\\\nvodka_bottle, tomato_juice_bottle, lemon_slice_bowl, ice_cubes_bowl, tray, first_glass, electric_shaker, mixing_container.\\\\nState summary from environment state: \\\\nThe robot is currently idle with both hands free. All the necessary objects for the Bloody Mary cocktail including the vodka_bottle, tomato_juice_bottle, lemon_slice_bowl, ice_cubes_bowl, tray, first_glass, electric_shaker, and mixing_container are available in the environment. The electric_shaker is currently off and holds an empty mixing_container, the fridge is closed, the first_glass is empty and the tray is empty too. The vodka bottle and tomato juice bottle are full.\\\\nRemaining actions to do:\\\\nGet vodka_bottle, open it and pour vodka into the mixing_container, close vodka_bottle. Get the tomato_juice_bottle from the fridge, open it and pour tomato juice into the mixing_container, close tomato_juice_bottle. Get a lemon slice from lemon_slice_bowl and put it into the mixing_container. Get some ice cubes from ice_cubes_bowl and put into the mixing_container. After all the ingredients are in the mixing_container, turn on the electric_shaker to mix the cocktail, wait for a few seconds and then turn off. Pour the cocktail from the mixing_container into the first_glass. Put the first_glass on the tray.\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"subPlan\\\",\\n          \\\"plan\\\": \\\"[Ropa to Roco] get vodka_bottle from shelf hand_right\\\\n[Ropa to Roco] open vodka_bottle\\\\n[Ropa to Roco] pour vodka_bottle mixing_container 20\\\\n[Ropa to Roco] close vodka_bottle\\\\n[Ropa to Roco] put vodka_bottle shelf\\\\n[Ropa to Roco] get tomato_juice_bottle from fridge hand_right\\\\n[Ropa to Roco] open tomato_juice_bottle\\\\n[Ropa to Roco] pour tomato_juice_bottle mixing_container 100\\\\n[Ropa to Roco] close tomato_juice_bottle\\\\n[Ropa to Roco] put tomato_juice_bottle fridge\\\\n[Ropa to Roco] get lemon_slice from lemon_slice_bowl hand_left\\\\n[Ropa to Roco] put lemon_slice mixing_container\\\\n[Ropa to Roco] get ice_cubes from ice_cubes_bowl hand_right\\\\n[Ropa to Roco] put ice_cubes mixing_container\\\\n[Ropa to Roco] switch_on electric_shaker\\\\n[Ropa to Roco] wait 5\\\\n[Ropa to Roco] switch_off electric_shaker\\\\n[Ropa to Roco] get first_glass from table hand_right\\\\n[Ropa to Roco] pour mixing_container first_glass 120\\\\n[Ropa to Roco] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 5,\\n          \\\"message\\\": \\\"Error: cannot get tomato_juice_bottle from fridge hand_right because tomato_juice_bottle is closed fridge.\\\",\\n          \\\"subPlan\\\": \\\"[Roco to Robi] open_door fridge \\\\n[Roco to Robi] get tomato_juice_bottle from fridge \\\\n[Roco to Robi] close_door fridge\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"subPlan\\\",\\n          \\\"plan\\\": \\\"[Ropa to Roco] get vodka_bottle from shelf hand_right\\\\n[Ropa to Roco] open vodka_bottle\\\\n[Ropa to Roco] pour vodka_bottle mixing_container 20\\\\n[Ropa to Roco] close vodka_bottle\\\\n[Ropa to Roco] put vodka_bottle shelf\\\\n[Roco to Robi] open_door fridge \\\\n[Roco to Robi] get tomato_juice_bottle from fridge \\\\n[Roco to Robi] close_door fridge\\\\n[Ropa to Roco] open tomato_juice_bottle\\\\n[Ropa to Roco] pour tomato_juice_bottle mixing_container 100\\\\n[Ropa to Roco] close tomato_juice_bottle\\\\n[Ropa to Roco] put tomato_juice_bottle fridge\\\\n[Ropa to Roco] get lemon_slice from lemon_slice_bowl hand_left\\\\n[Ropa to Roco] put lemon_slice mixing_container\\\\n[Ropa to Roco] get ice_cubes from ice_cubes_bowl hand_right\\\\n[Ropa to Roco] put ice_cubes mixing_container\\\\n[Ropa to Roco] switch_on electric_shaker\\\\n[Ropa to Roco] wait 5\\\\n[Ropa to Roco] switch_off electric_shaker\\\\n[Ropa to Roco] get first_glass from table hand_right\\\\n[Ropa to Roco] pour mixing_container first_glass 120\\\\n[Ropa to Roco] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 6,\\n          \\\"message\\\": \\\"Error: cannot get tomato_juice_bottle from fridge with specified hand because it is full.\\\",\\n          \\\"subPlan\\\": \\\"[Roco to Robi] get tomato_juice_bottle from fridge hand_right\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"subPlan\\\",\\n          \\\"plan\\\": \\\"[Ropa to Roco] get vodka_bottle from shelf hand_right\\\\n[Ropa to Roco] open vodka_bottle\\\\n[Ropa to Roco] pour vodka_bottle mixing_container 20\\\\n[Ropa to Roco] close vodka_bottle\\\\n[Ropa to Roco] put vodka_bottle shelf\\\\n[Roco to Robi] open_door fridge \\\\n[Roco to Robi] get tomato_juice_bottle from fridge hand_right\\\\n[Roco to Robi] close_door fridge\\\\n[Ropa to Roco] open tomato_juice_bottle\\\\n[Ropa to Roco] pour tomato_juice_bottle mixing_container 100\\\\n[Ropa to Roco] close tomato_juice_bottle\\\\n[Ropa to Roco] put tomato_juice_bottle fridge\\\\n[Ropa to Roco] get lemon_slice from lemon_slice_bowl hand_left\\\\n[Ropa to Roco] put lemon_slice mixing_container\\\\n[Ropa to Roco] get ice_cubes from ice_cubes_bowl hand_right\\\\n[Ropa to Roco] put ice_cubes mixing_container\\\\n[Ropa to Roco] switch_on electric_shaker\\\\n[Ropa to Roco] wait 5\\\\n[Ropa to Roco] switch_off electric_shaker\\\\n[Ropa to Roco] get first_glass from table hand_right\\\\n[Ropa to Roco] pour mixing_container first_glass 120\\\\n[Ropa to Roco] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 11,\\n          \\\"message\\\": \\\"Error: cannot put tomato_juice_bottle fridge because fridge is closed.\\\",\\n          \\\"subPlan\\\": \\\"[Roco to Robi] open_door fridge hand_left\\\\n[Roco to Robi] put tomato_juice_bottle fridge\\\\n[Roco to Robi] close_door fridge\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"subPlan\\\",\\n          \\\"plan\\\": \\\"[Ropa to Roco] get vodka_bottle from shelf hand_right\\\\n[Ropa to Roco] open vodka_bottle\\\\n[Ropa to Roco] pour vodka_bottle mixing_container 20\\\\n[Ropa to Roco] close vodka_bottle\\\\n[Ropa to Roco] put vodka_bottle shelf\\\\n[Roco to Robi] open_door fridge \\\\n[Roco to Robi] get tomato_juice_bottle from fridge hand_right\\\\n[Roco to Robi] close_door fridge\\\\n[Ropa to Roco] open tomato_juice_bottle\\\\n[Ropa to Roco] pour tomato_juice_bottle mixing_container 100\\\\n[Ropa to Roco] close tomato_juice_bottle\\\\n[Roco to Robi] open_door fridge hand_left\\\\n[Roco to Robi] put tomato_juice_bottle fridge\\\\n[Roco to Robi] close_door fridge\\\\n[Ropa to Roco] get lemon_slice from lemon_slice_bowl hand_left\\\\n[Ropa to Roco] put lemon_slice mixing_container\\\\n[Ropa to Roco] get ice_cubes from ice_cubes_bowl hand_right\\\\n[Ropa to Roco] put ice_cubes mixing_container\\\\n[Ropa to Roco] switch_on electric_shaker\\\\n[Ropa to Roco] wait 5\\\\n[Ropa to Roco] switch_off electric_shaker\\\\n[Ropa to Roco] get first_glass from table hand_right\\\\n[Ropa to Roco] pour mixing_container first_glass 120\\\\n[Ropa to Roco] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 22,\\n          \\\"message\\\": \\\"Error: cannot pour mixing_container first_glass 120 because mixing_container is not in hand.\\\",\\n          \\\"subPlan\\\": \\\"[Roco to Robi] get mixing_container hand_left\\\\n[Roco to Robi] pour mixing_container first_glass 120\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"subPlan\\\",\\n          \\\"plan\\\": \\\"[Ropa to Roco] get vodka_bottle from shelf hand_right\\\\n[Ropa to Roco] open vodka_bottle\\\\n[Ropa to Roco] pour vodka_bottle mixing_container 20\\\\n[Ropa to Roco] close vodka_bottle\\\\n[Ropa to Roco] put vodka_bottle shelf\\\\n[Roco to Robi] open_door fridge \\\\n[Roco to Robi] get tomato_juice_bottle from fridge hand_right\\\\n[Roco to Robi] close_door fridge\\\\n[Ropa to Roco] open tomato_juice_bottle\\\\n[Ropa to Roco] pour tomato_juice_bottle mixing_container 100\\\\n[Ropa to Roco] close tomato_juice_bottle\\\\n[Roco to Robi] open_door fridge hand_left\\\\n[Roco to Robi] put tomato_juice_bottle fridge\\\\n[Roco to Robi] close_door fridge\\\\n[Ropa to Roco] get lemon_slice from lemon_slice_bowl hand_left\\\\n[Ropa to Roco] put lemon_slice mixing_container\\\\n[Ropa to Roco] get ice_cubes from ice_cubes_bowl hand_right\\\\n[Ropa to Roco] put ice_cubes mixing_container\\\\n[Ropa to Roco] switch_on electric_shaker\\\\n[Ropa to Roco] wait 5\\\\n[Ropa to Roco] switch_off electric_shaker\\\\n[Ropa to Roco] get first_glass from table hand_right\\\\n[Roco to Robi] get mixing_container hand_left\\\\n[Roco to Robi] pour mixing_container first_glass 120\\\\n[Ropa to Roco] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 22,\\n          \\\"message\\\": \\\"Error: cannot get mixing_container hand_left with specified hand because it is full.\\\",\\n          \\\"subPlan\\\": \\\"[Roco to Robi] get mixing_container from  hand_left\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"evaluation\\\",\\n          \\\"result\\\": \\\"Success\\\",\\n          \\\"plan\\\": \\\"[Roco to Robi] get vodka_bottle from shelf hand_right\\\\n[Roco to Robi] open vodka_bottle\\\\n[Roco to Robi] pour vodka_bottle mixing_container 20\\\\n[Roco to Robi] close vodka_bottle\\\\n[Roco to Robi] put vodka_bottle shelf\\\\n[Roco to Robi] open_door fridge \\\\n[Roco to Robi] get tomato_juice_bottle from fridge hand_right\\\\n[Roco to Robi] close_door fridge\\\\n[Roco to Robi] open tomato_juice_bottle\\\\n[Roco to Robi] pour tomato_juice_bottle mixing_container 100\\\\n[Roco to Robi] close tomato_juice_bottle\\\\n[Roco to Robi] open_door fridge hand_left\\\\n[Roco to Robi] put tomato_juice_bottle fridge\\\\n[Roco to Robi] close_door fridge\\\\n[Roco to Robi] get lemon_slice from lemon_slice_bowl hand_left\\\\n[Roco to Robi] put lemon_slice mixing_container\\\\n[Roco to Robi] get ice_cubes from ice_cubes_bowl hand_right\\\\n[Roco to Robi] put ice_cubes mixing_container\\\\n[Roco to Robi] switch_on electric_shaker\\\\n[Roco to Robi] wait 5\\\\n[Roco to Robi] switch_off electric_shaker\\\\n[Roco to Robi] get first_glass from table hand_right\\\\n[Roco to Robi] get mixing_container from  hand_left\\\\n[Roco to Robi] pour mixing_container first_glass 120\\\\n[Roco to Robi] put first_glass tray\\\",\\n          \\\"commandIdx\\\": 25,\\n          \\\"message\\\": \\\"Request has been executed successfully. Please inform the human.\\\"\\n        }\\n      ],\\n      \\\"alexResponse\\\": \\\"[Alex to Human]: [Success] Your request has been executed successfully by Ropa.\\\",\\n      \\\"finalState\\\": \\\"{\\\\n  \\\\\\\"lab\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"room\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"robot\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"robot\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"gaze\\\\\\\",\\\\n      \\\\\\\"hand_left\\\\\\\",\\\\n      \\\\\\\"hand_right\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lab\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"gaze\\\\\\\": {\\\\n    \\\\\\\"fovea\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"perif\\\\\\\": [\\\\n      \\\\\\\"basil_bowl\\\\\\\",\\\\n      \\\\\\\"fresh_herbs_bowl\\\\\\\",\\\\n      \\\\\\\"ice_cubes_bowl\\\\\\\",\\\\n      \\\\\\\"lemon_slice_bowl\\\\\\\",\\\\n      \\\\\\\"lime_slice_bowl\\\\\\\",\\\\n      \\\\\\\"mint_bowl\\\\\\\",\\\\n      \\\\\\\"orange_slice_bowl\\\\\\\",\\\\n      \\\\\\\"rosemary_bowl\\\\\\\",\\\\n      \\\\\\\"sugar_cubes_bowl\\\\\\\",\\\\n      \\\\\\\"electric_shaker\\\\\\\",\\\\n      \\\\\\\"fridge\\\\\\\",\\\\n      \\\\\\\"first_glass\\\\\\\",\\\\n      \\\\\\\"second_glass\\\\\\\",\\\\n      \\\\\\\"third_glass\\\\\\\",\\\\n      \\\\\\\"forth_glass\\\\\\\",\\\\n      \\\\\\\"fifth_glass\\\\\\\",\\\\n      \\\\\\\"tray\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"robot\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"hand_left\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"hand\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"mixing_container\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"robot\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"hand_right\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"hand\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"robot\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"table\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"table\\\\\\\",\\\\n    \\\\\\\"color\\\\\\\": \\\\\\\"gray\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"basil_bowl\\\\\\\",\\\\n      \\\\\\\"fresh_herbs_bowl\\\\\\\",\\\\n      \\\\\\\"ice_cubes_bowl\\\\\\\",\\\\n      \\\\\\\"lemon_slice_bowl\\\\\\\",\\\\n      \\\\\\\"lime_slice_bowl\\\\\\\",\\\\n      \\\\\\\"mint_bowl\\\\\\\",\\\\n      \\\\\\\"orange_slice_bowl\\\\\\\",\\\\n      \\\\\\\"rosemary_bowl\\\\\\\",\\\\n      \\\\\\\"sugar_cubes_bowl\\\\\\\",\\\\n      \\\\\\\"electric_shaker\\\\\\\",\\\\n      \\\\\\\"mixing_container\\\\\\\",\\\\n      \\\\\\\"second_glass\\\\\\\",\\\\n      \\\\\\\"third_glass\\\\\\\",\\\\n      \\\\\\\"forth_glass\\\\\\\",\\\\n      \\\\\\\"fifth_glass\\\\\\\",\\\\n      \\\\\\\"tray\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lab\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"shelf\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"shelf\\\\\\\",\\\\n    \\\\\\\"color\\\\\\\": \\\\\\\"gray\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"bitters_bottle\\\\\\\",\\\\n      \\\\\\\"brandy_bottle\\\\\\\",\\\\n      \\\\\\\"coca_cola_bottle\\\\\\\",\\\\n      \\\\\\\"gin_bottle\\\\\\\",\\\\n      \\\\\\\"ginger_beer_bottle\\\\\\\",\\\\n      \\\\\\\"grenadine_bottle\\\\\\\",\\\\n      \\\\\\\"rum_bottle\\\\\\\",\\\\n      \\\\\\\"salt_bottle\\\\\\\",\\\\n      \\\\\\\"simple_syrup_bottle\\\\\\\",\\\\n      \\\\\\\"soda_water_bottle\\\\\\\",\\\\n      \\\\\\\"tequila_bottle\\\\\\\",\\\\n      \\\\\\\"tonic_water_bottle\\\\\\\",\\\\n      \\\\\\\"triple_sec_bottle\\\\\\\",\\\\n      \\\\\\\"vermouth_bottle\\\\\\\",\\\\n      \\\\\\\"whiskey_bottle\\\\\\\",\\\\n      \\\\\\\"vodka_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lab\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"fridge\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"fridge\\\\\\\",\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\",\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"on\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"milk_bottle\\\\\\\",\\\\n      \\\\\\\"cranberry_juice_bottle\\\\\\\",\\\\n      \\\\\\\"pineapple_juice_bottle\\\\\\\",\\\\n      \\\\\\\"tomato_juice_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"basil\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"basil_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"basil_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"basil\\\\\\\",\\\\n      \\\\\\\"basil\\\\\\\",\\\\n      \\\\\\\"basil\\\\\\\",\\\\n      \\\\\\\"basil\\\\\\\",\\\\n      \\\\\\\"basil\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"bitters\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"bitters_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"bitters_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"bitters\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"brandy\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"brandy_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"brandy_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"brandy\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"coca_cola\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"coca_cola_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"coca_cola_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"coca_cola\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"cranberry_juice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"cranberry_juice_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"cranberry_juice_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"cranberry_juice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fridge\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"fresh_herbs\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fresh_herbs_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"fresh_herbs_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"fresh_herbs\\\\\\\",\\\\n      \\\\\\\"fresh_herbs\\\\\\\",\\\\n      \\\\\\\"fresh_herbs\\\\\\\",\\\\n      \\\\\\\"fresh_herbs\\\\\\\",\\\\n      \\\\\\\"fresh_herbs\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"gin\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"gin_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"gin_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"gin\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"ginger_beer\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"ginger_beer_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"ginger_beer_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"ginger_beer\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"grenadine\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"grenadine_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"grenadine_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"grenadine\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"ice_cubes\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"mixing_container\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"ice_cubes_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"lemon_slice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"mixing_container\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"lemon_slice_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"lime_slice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"lime_slice_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"lime_slice_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"lime_slice\\\\\\\",\\\\n      \\\\\\\"lime_slice\\\\\\\",\\\\n      \\\\\\\"lime_slice\\\\\\\",\\\\n      \\\\\\\"lime_slice\\\\\\\",\\\\n      \\\\\\\"lime_slice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"milk\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"milk_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"milk_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"milk\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fridge\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"mint\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"mint_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"mint_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"mint\\\\\\\",\\\\n      \\\\\\\"mint\\\\\\\",\\\\n      \\\\\\\"mint\\\\\\\",\\\\n      \\\\\\\"mint\\\\\\\",\\\\n      \\\\\\\"mint\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"orange_slice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"orange_slice_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"orange_slice_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"orange_slice\\\\\\\",\\\\n      \\\\\\\"orange_slice\\\\\\\",\\\\n      \\\\\\\"orange_slice\\\\\\\",\\\\n      \\\\\\\"orange_slice\\\\\\\",\\\\n      \\\\\\\"orange_slice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"pineapple_juice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"pineapple_juice_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"pineapple_juice_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"pineapple_juice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fridge\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"rosemary\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"rosemary_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"rosemary_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"rosemary\\\\\\\",\\\\n      \\\\\\\"rosemary\\\\\\\",\\\\n      \\\\\\\"rosemary\\\\\\\",\\\\n      \\\\\\\"rosemary\\\\\\\",\\\\n      \\\\\\\"rosemary\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"rum\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"rum_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"rum_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"rum\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"salt\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"salt\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"salt_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"salt_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 0.5,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.5,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"salt\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"simple_syrup\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"simple_syrup_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"simple_syrup_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"simple_syrup\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"soda_water\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"soda_water_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"soda_water_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"soda_water\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"sugar_cubes\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"ingredient\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"sugar_cubes_bowl\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"sugar_cubes_bowl\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bowl\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"sugar_cubes\\\\\\\",\\\\n      \\\\\\\"sugar_cubes\\\\\\\",\\\\n      \\\\\\\"sugar_cubes\\\\\\\",\\\\n      \\\\\\\"sugar_cubes\\\\\\\",\\\\n      \\\\\\\"sugar_cubes\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tequila\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"tequila_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"tequila_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"tequila\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tomato_juice\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"tomato_juice_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"tomato_juice_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.9,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"tomato_juice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"fridge\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\"\\\\n  },\\\\n  \\\\\\\"tonic_water\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"tonic_water_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"tonic_water_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"tonic_water\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"triple_sec\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"triple_sec_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"triple_sec_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"triple_sec\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"vermouth\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"vermouth_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"vermouth_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"vermouth\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"vodka\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"vodka_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"vodka_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.98,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"vodka\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\"\\\\n  },\\\\n  \\\\\\\"whiskey\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"liquid\\\\\\\",\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"whiskey_bottle\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"whiskey_bottle\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"bottle\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"whiskey\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"shelf\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"electric_shaker\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"electric_shaker\\\\\\\",\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"off\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"mixing_container\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"mixing_container\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"lemon_slice\\\\\\\",\\\\n      \\\\\\\"ice_cubes\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"vodka\\\\\\\",\\\\n      \\\\\\\"tomato_juice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"hand_left\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"first_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"lemon_slice\\\\\\\",\\\\n      \\\\\\\"ice_cubes\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"vodka\\\\\\\",\\\\n      \\\\\\\"tomato_juice\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.1,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"tray\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"second_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"third_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"forth_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"fifth_glass\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"glass\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [],\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tray\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"tray\\\\\\\",\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"first_glass\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHeldByObject\\\\\\\": [\\\\n      \\\\\\\"table\\\\\\\"\\\\n    ]\\\\n  }\\\\n}\\\"\\n    },\\n    {\\n      \\\"request\\\": \\\"Please, prepare a Bloody Mary cocktail\\\",\\n      \\\"log\\\": [\\n        {\\n          \\\"type\\\": \\\"TRAVI\\\",\\n          \\\"specs\\\": \\\"\\\"\\n        }\\n      ],\\n      \\\"alexResponse\\\": \\\"\\\",\\n      \\\"finalState\\\": null\\n    }\\n  ]\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":524,\"location\":\"1430 2370\",\"editorPosition\":[-5689,41,1722,1116]},\n{\"label\":\"Experiment Statistics\",\"category\":\"DataFlow_Component\",\"size\":\"280 170\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"task\",\"name\":\"task\"},{\"portId\":\"nextIteration\",\"name\":\"nextIteration\"}],\"out_\":[{\"portId\":\"taskInfo\",\"name\":\"taskInfo\"},{\"portId\":\"nextExperiment\",\"name\":\"nextExperiment\"},{\"portId\":\"experimentIdx\",\"name\":\"experimentIdx\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"task\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"nbIteration\",\"value\":\"10\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'nextIteration' ) {\\n  const nbIteration = Engine_getProperty( nodeData, 'nbIteration', 1 );\\n  const idx = Engine_get( nodeData, 'idx', 0 )+1;\\n  \\n  if( idx < nbIteration ) {\\n    Engine_set( nodeData, 'idx', idx );\\n    \\n    const task = Engine_getInput( nodeData, 'task' );\\n    Engine_fireOutput( nodeData, 'experimentIdx', `Exp: ${task.id} Iter: ${idx}` );\\n    Engine_fireOutput( nodeData, 'taskInfo', task );\\n  } else {\\n    Engine_set( nodeData, 'idx', 0 );\\n    \\n    setTimeout( ()=> Engine_fireOutput( nodeData, 'nextExperiment' ), 0 );\\n  }\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const nbIteration = Engine_getProperty( nodeData, 'nbIteration', 1 );\\n  const idx = Engine_get( nodeData, 'idx', 0 );\\n  \\n  Engine_fireOutput( nodeData, 'experimentIdx', `Exp: ${value.id} Iter: ${idx}` );\\n  \\n  Engine_fireOutput( nodeData, 'taskInfo', value );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":522,\"location\":\"230 2089.7000000000003\",\"editorPosition\":[8920,287,644,938]},\n{\"label\":\"Exp: 1 Iter: 2\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"730 240\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":520,\"location\":\"840 2670\",\"labelFont\":\"100px sans-serif\"},\n{\"label\":\"F0\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"F0\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":523,\"location\":\"-290 2339.9\"},\n{\"label\":\"F2\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"F2\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":542,\"location\":\"-290 2539.9\"},\n{\"label\":\"F1\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"F1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":549,\"location\":\"-290 2439.9\"},\n{\"label\":\"SF1\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"SF1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":550,\"location\":\"-290 2739.9\"},\n{\"label\":\"SF2\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"SF2\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":551,\"location\":\"-290 2839.9\"},\n{\"label\":\"SF0\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"SF0\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":552,\"location\":\"-290 2639.9\"},\n{\"label\":\"Feedback Type\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"SF1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":553,\"location\":\"80 2539.6000000000004\",\"editorPosition\":[1735,35,425,1463],\"color\":\"#ccffcc\"},\n{\"label\":\"SF1\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"730 240\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":554,\"location\":\"840 2930\",\"labelFont\":\"100px sans-serif\"},\n{\"label\":\"Feedback Type\",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"SF2\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":403,\"location\":\"16861.014244780225 6053.442792927248\",\"editorPosition\":[1735,35,425,1463],\"color\":\"#ccffcc\"},\n{\"label\":\"SF2\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"910 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":516,\"location\":\"17450 6660\"},\n{\"label\":\"assistant> \",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1220 320\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":397,\"location\":\"8790 4070\",\"group\":363},\n{\"label\":\"[Roco to Robi] put first_glass tray\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1680 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":502,\"location\":\"8160 5080\",\"group\":427},\n{\"label\":\"Robot Client\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"simCommand\",\"name\":\"simCommand\"}],\"out_\":[{\"portId\":\"successSimCommand\",\"name\":\"successSimCommand\"},{\"portId\":\"errorMessage\",\"name\":\"errorMessage\"},{\"portId\":\"status\",\"name\":\"status\"},{\"portId\":\"simFeedback\",\"name\":\"simFeedback\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"wsURL\",\"value\":\"172.26.1.219:35000\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  // Instanciate websocket only one time\\n  var ws = Engine_get( nodeData, 'ws', null );\\n  \\n  if( !ws ) {\\n    ws = newWS( sendCommand );\\n    Engine_set( nodeData, 'ws', ws );\\n  }\\n  \\n  Engine_set( nodeData, 'lastCommand', value );\\n  checkSocketState( ws, sendCommand );\\n}\\n\\n//--------------------------------\\n// Communication with robot server\\n//--------------------------------\\nfunction sendCommand() {\\n  // Value is the command supposed to be send to the robot client\\n  ws.send( value );\\n}\\nfunction newWS( onConnected  ) {\\n  const wsURL = appData.me.getProperty( modelId, nodeData, 'wsURL' );\\n  let ws = null;\\n  ws = new WebSocket( `ws://${wsURL}/` );\\n  if( ws ) {\\n    ws.onmessage = (event)=> {\\n      let msg = event.data;\\n      Engine_fireOutput( nodeData, 'status', 'Received response' );\\n      \\n      msg = 'Success';\\n      if( msg == 'Success' ) {\\n        const lastCommand = Engine_get( nodeData, 'lastCommand', '' );\\n        \\n        Engine_fireOutput( nodeData, 'successSimCommand', lastCommand );\\n        Engine_fireOutput( nodeData, 'simFeedback', event.data );\\n      } else {\\n        \\n      }\\n    };\\n    ws.onopen = (event)=> {\\n      Engine_fireOutput( nodeData, 'status', 'Open websocket' );\\n      if( onConnected ) {\\n        onConnected();\\n      } \\n    };\\n    ws.onclose = (event)=> {\\n      ws = null;\\n      Engine_set( nodeData, 'ws', ws );\\n      Engine_fireOutput( nodeData, 'status', 'Server not running' );\\n    };\\n    ws.onerror = (event)=> {\\n      Engine_fireOutput( nodeData, 'status', 'Error' );\\n    };\\n    checkSocketState( ws );\\n  }\\n  return( ws );\\n}\\nfunction checkSocketState( ws, onConnected ) {\\n  console.log( 'readyState:', ws.readyState );\\n  switch( ws.readyState ){\\n    case 0: // CONNECTING: Socket has been created. The connection is not yet open.\\n      Engine_fireOutput( nodeData, 'status', 'Connecting to websocket' );\\n      break;\\n    case 1: // OPEN: The connection is open and ready to communicate.\\n      Engine_fireOutput( nodeData, 'status', 'Opened websocket' );\\n      if( onConnected ) {\\n        onConnected();\\n      }\\n      break;\\n    case 2: // CLOSING: The connection is in the process of closing.\\n      Engine_fireOutput( nodeData, 'status', 'Closing websocket' );\\n      break;\\n    case 3: // CLOSED: The connection is closed or couldn't be opened.\\n      Engine_fireOutput( nodeData, 'status', 'Server not running' );\\n      break;\\n  }\\n}\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"/fileServer/pictures/Robot_Server.png\",\"key\":503,\"location\":\"20450 5603.77715250169\",\"fileType\":\"text/javascript\",\"editorPosition\":[-2947,160,1196,1111],\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2240 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":559,\"location\":\"21600 4780\",\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2240 70\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":560,\"location\":\"21600 4860\",\"group\":465},\n{\"label\":\"Kanban Board\",\"category\":\"KanbanDSL_KanbanBoard\",\"isGroup\":true,\"size\":\"162.00000000003638 NaN\",\"key\":558,\"location\":\"24949.999999999985 5909.999994140622\"},\n{\"category\":\"KanbanDSL_KanbanCard\",\"label\":\"Env state for bottle:\\n\\\"gin_bottle\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": \\n    [\\n      \\\"table\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"gin\\\"\\n    ]\\n  },\",\"color\":\"1\",\"key\":564,\"location\":\"24961.999999999985 5696.955999999997\",\"group\":558},\n{\"category\":\"KanbanDSL_KanbanCard\",\"label\":\"Env state for liquid:\\n\\\"gin\\\": {\\n        \\\"type\\\": \\\"gin\\\",\\n        \\\"isHeldByObject\\\": [\\n            \\\"gin_bottle\\\"\\n        ]\\n    },\",\"color\":\"1\",\"key\":565,\"location\":\"24961.999999999985 5859.395941406247\",\"group\":558},\n{\"category\":\"KanbanDSL_KanbanCard\",\"label\":\"Env state for bowl:\\n\\\"parmesan_cheese_bowl\\\": {\\n        \\\"type\\\": \\\"bowl\\\",\\n        \\\"holdsObject\\\": [\\n            \\\"parmesan_cheese\\\",\\n\\\"parmesan_cheese\\\",\\n\\\"parmesan_cheese\\\",\\n\\\"parmesan_cheese\\\",\\n\\\"parmesan_cheese\\\"\\n        ],\\n\\\"isHeldByObject\\\": [\\n            \\\"table\\\"\\n        ]\\n    },\",\"color\":\"1\",\"key\":555,\"location\":\"24961.999999999985 6128.999994140622\",\"group\":558},\n{\"category\":\"KanbanDSL_KanbanCard\",\"label\":\"Env state for ingredient:\\n\\\"parmesan_cheese\\\": {\\n        \\\"type\\\": \\\"ingredient\\\",\\n        \\\"isHeldByObject\\\": [\\n            \\\"parmesan_cheese_bowl\\\"\\n        ]\\n    },\",\"color\":\"1\",\"key\":557,\"location\":\"24961.999999999985 5967.351947265622\",\"group\":558},\n{\"label\":\"Initial Environement State \",\"category\":\"DataFlow_Data\",\"size\":\"250 100\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [],\\n    \\\"perif\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"robot\\\"\\n    ]\\n  },\\n  \\\"robot\\\": {\\n    \\\"type\\\": \\\"robot\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"gaze\\\",\\n      \\\"hand_left\\\",\\n      \\\"hand_right\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"type\\\": \\\"hand\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"type\\\": \\\"room\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"table\\\"\\n    ]\\n  },\\n  \\\"table\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHeldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":562,\"location\":\"17670 4300\",\"editorPosition\":[1223,451,400,350],\"color\":\"#ccffcc\",\"group\":507},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"320 240\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"fileServer/pictures/SMILESimulator2.png\",\"key\":563,\"location\":\"18170 4760\"},\n{\"label\":\"clear\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"clear\",\"name\":\"clear\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":540,\"location\":\"19250 4800\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":465},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":548,\"location\":\"5414.9710551998905 2483.1922034338486\",\"color\":\"#ccffcc\"},\n{\"label\":\"TODO\",\"category\":\"KanbanDSL_KanbanBoard\",\"isGroup\":true,\"size\":\"172 NaN\",\"key\":566,\"location\":\"13648 5113\"},\n{\"category\":\"KanbanDSL_KanbanCard\",\"label\":\"Finish testing pizza making\",\"color\":\"1\",\"key\":568,\"location\":\"13660 5050\",\"group\":566},\n{\"category\":\"KanbanDSL_KanbanCard\",\"label\":\"Add in TRAVI prompt to make the pizza in the big_plate and to use the big_plate to put it in oven\",\"color\":\"1\",\"key\":569,\"location\":\"13660 5114.8240234375\",\"group\":566},\n{\"category\":\"KanbanDSL_KanbanCard\",\"label\":\"use pizza as a synonyme for pizza_dow_big_plate\",\"color\":\"1\",\"key\":571,\"location\":\"13660 5176\",\"group\":566}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":201,\"to\":200,\"points\":[7492.357914062501,3397.8050000000003,7502.357914062501,3397.8050000000003,7529.999515625001,3501.567000000001,7539.999515625001,3501.567000000001],\"key\":-124,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":205,\"to\":204,\"points\":[8192.3579140625,3501.567000000001,8202.3579140625,3501.567000000001,8209.999515625,3501.1670000000004,8219.999515625,3501.1670000000004],\"key\":-129,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":200,\"to\":205,\"points\":[7812.357914062501,3501.567000000001,7822.357914062501,3501.567000000001,7839.999515625001,3501.567000000001,7849.999515625001,3501.567000000001],\"key\":-130},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":207,\"to\":206,\"points\":[9310.4619140625,3450,9320.4619140625,3450,9319.999515625,3451.467000000001,9329.999515625,3451.467000000001],\"key\":-132},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":211,\"to\":298,\"points\":[8490.4619140625,3320,8500.4619140625,3320,8596.440921875,3421.267000000001,8606.440921875,3421.267000000001],\"key\":-138},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":218,\"to\":295,\"points\":[8342.3579140625,1999.7420000000002,8352.3579140625,1999.7420000000002,8406.440921875,1983.5040000000008,8416.440921875,1983.5040000000008],\"key\":-144},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":222,\"to\":220,\"points\":[9782.3579140625,2018.809000000001,9792.3579140625,2018.809000000001,9818.103515625,2004.377152501692,9828.103515625,2004.377152501692],\"key\":-147},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":223,\"to\":222,\"points\":[9472.3579140625,2018.809000000001,9482.3579140625,2018.809000000001,9499.999515625,2018.809000000001,9509.999515625,2018.809000000001],\"key\":-148,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":224,\"to\":223,\"points\":[9132.3579140625,2018.809000000001,9142.3579140625,2018.809000000001,9149.999515625,2018.809000000001,9159.999515625,2018.809000000001],\"key\":-149},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":295,\"to\":224,\"points\":[8815.9165078125,2013.5040000000008,8825.9165078125,2013.5040000000008,8849.999515625,2018.809000000001,8859.999515625,2018.809000000001],\"key\":-150},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":227,\"to\":226,\"points\":[8052.3579140625,2153.504000000001,8062.3579140625,2153.504000000001,8069.999515625,2153.2039999999997,8079.999515625,2153.2039999999997],\"key\":-152,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":228,\"to\":227,\"points\":[7652.3579140625,2153.504000000001,7662.3579140625,2153.504000000001,7699.999515625,2153.504000000001,7709.999515625,2153.504000000001],\"key\":-153},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":229,\"to\":228,\"points\":[7352.3579140625,2153.504000000001,7362.3579140625,2153.504000000001,7369.999515625,2153.504000000001,7379.999515625,2153.504000000001],\"key\":-154,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":229,\"points\":[5582.3579140625,3498.4890000000005,5592.3579140625,3498.4890000000005,5990,3380,5990,2150,6964.1997109375,2143.504000000001,6974.1997109375,2143.504000000001],\"key\":-156},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"assistant\",\"from\":238,\"to\":240,\"points\":[6862.4619140625,705.8630000000003,6872.4619140625,705.8630000000003,6922,755.8630000000003,6975.751953125,755.8630000000003,6985.751953125,755.8630000000003],\"key\":-163},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":240,\"to\":241,\"points\":[7372.4619140625,755.8630000000003,7382.4619140625,755.8630000000003,7378.103515625,756.402,7388.103515625,756.402],\"key\":-165,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"history\",\"from\":241,\"to\":240,\"points\":[7660.4619140625,756.402,7670.4619140625,756.402,7670,656.402,6952,655.8630000000003,6952,735.8630000000003,6975.751953125,735.8630000000003,6985.751953125,735.8630000000003],\"key\":-166},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":243,\"to\":242,\"points\":[7372.4619140625,905.8630000000003,7382.4619140625,905.8630000000003,7380.103515625,905.6629999999996,7390.103515625,905.6629999999996],\"key\":-167,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":241,\"to\":177,\"points\":[7660.4619140625,756.402,7670.4619140625,756.402,10150,756.402,10220,1010,10318.103515625,1019.2070000000012,10328.103515625,1019.2070000000012],\"key\":-169},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":245,\"to\":239,\"points\":[5490.4619140625,866.9090000000023,5500.4619140625,866.9090000000023,5608.103515625,860,5618.103515625,860],\"key\":-170,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":248,\"to\":245,\"points\":[5090.4619140625,866.9090000000023,5100.4619140625,866.9090000000023,5138.103515625,866.9090000000023,5148.103515625,866.9090000000023],\"key\":-171},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":246,\"to\":239,\"points\":[5490.4619140625,716.9090000000023,5500.4619140625,716.9090000000023,5608.103515625,860,5618.103515625,860],\"key\":-172,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":249,\"to\":246,\"points\":[5090.4619140625,716.9090000000023,5100.4619140625,716.9090000000023,5138.103515625,716.9090000000023,5148.103515625,716.9090000000023],\"key\":-173},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToHuman\",\"toPort\":\"in\",\"from\":252,\"to\":238,\"points\":[10224.0546875,634.662999999998,10234.0546875,634.662999999998,10272,605.8630000000003,10271.999932584351,501.4681159915863,6521.999932584347,501.4681159915863,6521.999932584347,651.4681159915863,6580.103515625,705.8630000000003,6590.103515625,705.8630000000003],\"key\":-177},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":251,\"to\":252,\"points\":[9812.4619140625,655.8630000000003,9822.4619140625,655.8630000000003,9830.103515625,654.662999999998,9840.103515625,654.662999999998],\"key\":-179},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":257,\"to\":251,\"points\":[9502.4619140625,655.8630000000003,9512.4619140625,655.8630000000003,9530.103515625,655.8630000000003,9540.103515625,655.8630000000003],\"key\":-180,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":292,\"to\":258,\"points\":[8856.0205078125,655.8630000000003,8866.0205078125,655.8630000000003,8880.103515625,655.8630000000003,8890.103515625,655.8630000000003],\"key\":-181},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":256,\"to\":292,\"points\":[8360.4619140625,560,8370.4619140625,560,8446.544921875,625.8630000000003,8456.544921875,625.8630000000003],\"key\":-183},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":258,\"to\":257,\"points\":[9162.4619140625,655.8630000000003,9172.4619140625,655.8630000000003,9180.103515625,655.8630000000003,9190.103515625,655.8630000000003],\"key\":-184},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":201,\"points\":[5582.3579140625,3498.4890000000005,5592.3579140625,3498.4890000000005,6120,3390,7104.199710937501,3387.8050000000003,7114.199710937501,3387.8050000000003],\"key\":-187},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":239,\"to\":176,\"points\":[5890.4619140625,860,5900.4619140625,860,6000,1170,6928.103515625,1170,6938.103515625,1170],\"key\":-162},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":239,\"to\":243,\"points\":[5890.4619140625,860,5900.4619140625,860,6000,910,7020.103515625,905.8630000000003,7030.103515625,905.8630000000003],\"key\":-164},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":239,\"to\":240,\"points\":[5890.4619140625,860,5900.4619140625,860,6000,780,6975.751953125,775.8630000000003,6985.751953125,775.8630000000003],\"key\":-189},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToHuman\",\"toPort\":\"in\",\"from\":252,\"to\":253,\"points\":[10224.0546875,634.662999999998,10234.0546875,634.662999999998,10318.103515625,610,10328.103515625,610],\"key\":-190},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToAlex\",\"toPort\":\"in\",\"from\":202,\"to\":213,\"points\":[10396.4892578125,3440,10406.4892578125,3440,10470,3380,10850,3380,10898.103515625,3200,10908.103515625,3200],\"key\":-194},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":253,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10150,1000,10230,716.402,10318.103515625,610,10328.103515625,610],\"key\":-176},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":250,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10160,1010,10220,780,10320.103515625,756.1680000000006,10330.103515625,756.1680000000006],\"key\":-178},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":171,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10150,1080,10150,1220,10350,1220,10350,2650,6990,2650,6990,2570,7038.103515625,2575,7048.103515625,2575],\"key\":-203},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":172,\"to\":175,\"points\":[5090.4619140625,1011.6040000000002,5100.4619140625,1011.6040000000002,5138.103515625,1011.6040000000002,5148.103515625,1011.6040000000002],\"key\":-205},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":175,\"to\":239,\"points\":[5490.4619140625,1011.6040000000002,5500.4619140625,1011.6040000000002,5608.103515625,860,5618.103515625,860],\"key\":-206,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":179,\"to\":249,\"points\":[4750.4619140625,716.9090000000023,4760.4619140625,716.9090000000023,4808.103515625,716.9090000000023,4818.103515625,716.9090000000023],\"key\":-185},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":174,\"to\":172,\"points\":[4750.4619140625,1011.6040000000002,4760.4619140625,1011.6040000000002,4808.103515625,1011.6040000000002,4818.103515625,1011.6040000000002],\"key\":-204},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":247,\"to\":248,\"points\":[4750.4619140625,866.9090000000023,4760.4619140625,866.9090000000023,4808.103515625,866.9090000000023,4818.103515625,866.9090000000023],\"key\":-200},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":177,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10160,1040,10318.103515625,1019.2070000000012,10328.103515625,1019.2070000000012],\"key\":-229},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":345,\"to\":233,\"points\":[5242.3579140625,3408.789,5252.3579140625,3408.789,5249.999515625,3498.4890000000005,5259.999515625,3498.4890000000005],\"key\":-326},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":284,\"to\":171,\"points\":[6900.4619140625,2380,6910.4619140625,2380,7038.103515625,2575,7048.103515625,2575],\"key\":-345},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":344,\"to\":214,\"points\":[10451.3447265625,3789.6999999999994,10461.3447265625,3789.6999999999994,10840,3800,10840,3880,10918.103515625,3925,10928.103515625,3925],\"key\":-366},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":344,\"to\":213,\"points\":[10451.3447265625,3789.6999999999994,10461.3447265625,3789.6999999999994,10840,3770,10840,3450,10898.103515625,3200,10908.103515625,3200],\"key\":-367},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":203,\"to\":202,\"points\":[9952.3579140625,3451.367,9962.3579140625,3451.367,10018.103515625,3450,10028.103515625,3450],\"key\":-368},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":204,\"to\":344,\"points\":[8492.3579140625,3501.1670000000004,8502.3579140625,3501.1670000000004,8790,3500,8790,3790,10118.103515625,3789.6999999999994,10128.103515625,3789.6999999999994],\"key\":-369},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":226,\"to\":359,\"points\":[8352.3579140625,2153.2039999999997,8362.3579140625,2153.2039999999997,8509.999515625,2169.542,8519.999515625,2169.542],\"key\":-351},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":226,\"to\":295,\"points\":[8352.3579140625,2153.2039999999997,8362.3579140625,2153.2039999999997,8406.440921875,2023.5040000000008,8416.440921875,2023.5040000000008],\"key\":-354},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":359,\"to\":219,\"points\":[8843.2407265625,2169.542,8853.2407265625,2169.542,10448.103515625,2210,10458.103515625,2210],\"key\":-362},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":359,\"to\":357,\"points\":[8843.2407265625,2169.542,8853.2407265625,2169.542,9020,2420,9000,3780,7050,3770,7050,4000,7078.103515625,4130,7088.103515625,4130],\"key\":-363},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":195,\"to\":357,\"points\":[6942.357914062501,3477.4049999999993,6952.357914062501,3477.4049999999993,6990,3580,6990,4010,7078.103515625,4130,7088.103515625,4130],\"key\":-364},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":195,\"to\":201,\"points\":[6942.357914062501,3477.4049999999993,6952.357914062501,3477.4049999999993,7104.199710937501,3407.8050000000003,7114.199710937501,3407.8050000000003],\"key\":-374},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":242,\"to\":170,\"points\":[7662.4619140625,905.6629999999996,7672.4619140625,905.6629999999996,9500,916.402,9688.103515625,1043.147,9698.103515625,1043.147],\"key\":-376},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":242,\"to\":292,\"points\":[7662.4619140625,905.6629999999996,7672.4619140625,905.6629999999996,7830,666.402,8446.544921875,665.8630000000003,8456.544921875,665.8630000000003],\"key\":-377},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":346,\"to\":345,\"points\":[4610.4619140625,2690.152,4620.4619140625,2690.152,4860,2740,4860,3400,4909.999515625,3408.789,4919.999515625,3408.789],\"key\":-387},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":346,\"to\":361,\"points\":[4610.4619140625,2690.152,4620.4619140625,2690.152,10410,2700,10410,3390,10459.999515625,3457.6050000000005,10469.999515625,3457.6050000000005],\"key\":-388},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":294,\"to\":233,\"points\":[5232.3579140625,3628.789,5242.3579140625,3628.789,5249.999515625,3498.4890000000005,5259.999515625,3498.4890000000005],\"key\":-339},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToRopa\",\"toPort\":\"in\",\"from\":252,\"to\":250,\"points\":[10224.0546875,654.662999999998,10234.0546875,654.662999999998,10320.103515625,756.1680000000006,10330.103515625,756.1680000000006],\"key\":-126},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToRopa\",\"toPort\":\"in\",\"from\":252,\"to\":395,\"points\":[10224.0546875,654.662999999998,10234.0546875,654.662999999998,10260,1010,10260,1300,6120,1300,6120,2240,6171.751953125,2239.9,6181.751953125,2239.9],\"key\":-133},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":220,\"to\":219,\"points\":[10180.14453125,2014.377152501692,10190.14453125,2014.377152501692,10448.103515625,2210,10458.103515625,2210],\"key\":-134,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":220,\"to\":360,\"points\":[10180.14453125,2014.377152501692,10190.14453125,2014.377152501692,10200,2670,6200,2670,6201.751953125,3469.9,6211.751953125,3469.9],\"key\":-137,\"color\":\"LightSeaGreen\"},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":193,\"to\":199,\"points\":[11591.063878428937,-7248.991930530821,11521.932121571062,-7209.488069469178],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-140},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":184,\"to\":193,\"points\":[11626.498,-7328.74,11626.498,-7289.74],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-135},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":199,\"to\":212,\"points\":[11486.498,-7168.74,11486.498,-7109.74],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-143},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":193,\"to\":180,\"points\":[11674.399430041809,-7249.045765545532,11767.871283395754,-7209.64],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-151},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":180,\"to\":187,\"points\":[11816.498,-7168.74,11816.498,-7119.74],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-155},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":187,\"to\":433,\"points\":[11812.422910201287,-7078.74,11808.99960942275,-7061.51886637439,11813.865310844467,-7000.5],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-157},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":435,\"to\":367,\"points\":[11811.9125,-6759.6,11808.5,-6740.1,11811.90350877193,-6720.700000000001],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-158},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":279,\"to\":184,\"points\":[11878.342245659593,-6628.862443671223,12030,-6640,12510.998,-6799.04,12510.998,-7389.04,11830.998,-7389.04,11701.998,-7363.933887530562],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-159},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":279,\"to\":180,\"points\":[11736.7250133794,-6637.040724726824,11620,-6660,11630,-7160,11740.998,-7177.402768501539],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-160},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":212,\"to\":184,\"points\":[11487.42047725329,-7068.740505482428,11490.998,-6989.24,11180.998,-6989.24,11180.998,-7349.24,11550.998,-7349.24],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-161},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":328,\"to\":256,\"points\":[3160.4619140625,1970,3170.4619140625,1970,3200,1970,3210,570,8078.103515625,560,8088.103515625,560],\"key\":-174,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":351,\"to\":218,\"points\":[3160.4619140625,2160,3170.4619140625,2160,5490,2160,5490,2000,8059.999515625,1999.7420000000002,8069.999515625,1999.7420000000002],\"key\":-175,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":365,\"to\":211,\"points\":[3150.4619140625,2340,3160.4619140625,2340,3200,2340,3200,3320,8208.103515625,3320,8218.103515625,3320],\"key\":-182,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":235,\"to\":239,\"points\":[5490.4619140625,1141.658,5500.4619140625,1141.658,5608.103515625,860,5618.103515625,860],\"key\":-186,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":216,\"to\":310,\"points\":[2500.4619140625,2520,2510.4619140625,2520,2790,2520,2790,1430,3289.3173828125,1430,3299.3173828125,1430],\"key\":-188,\"color\":\"LightCoral\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":190,\"points\":[1990.73046875,2040,2000.73046875,2040,2170,2040,2208.103515625,1959.9,2218.103515625,1959.9],\"key\":-191},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"traviPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":194,\"points\":[1990.73046875,2060,2000.73046875,2060,2180,2060,2208.103515625,2149.9,2218.103515625,2149.9],\"key\":-192},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":208,\"points\":[1990.73046875,2080,2000.73046875,2080,2150,2080,2208.103515625,2329.9,2218.103515625,2329.9],\"key\":-193},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"userPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":216,\"points\":[1990.73046875,2100,2000.73046875,2100,2120,2100,2218.103515625,2520,2228.103515625,2520],\"key\":-195},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"environmentState\",\"toPort\":\"in\",\"from\":261,\"to\":210,\"points\":[1990.73046875,2120,2000.73046875,2120,2090,2120,2198.103515625,2719.9,2208.103515625,2719.9],\"key\":-197},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"schedule\",\"from\":407,\"to\":327,\"points\":[-919.5380859375,2740,-909.5380859375,2740,-780,2170.737,-502.5166015625,2169.9,-492.5166015625,2169.9],\"key\":-199},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"userPromptList\",\"from\":343,\"to\":327,\"points\":[-919.5380859375,2606.737,-909.5380859375,2606.737,-790,2150.737,-502.5166015625,2149.9,-492.5166015625,2149.9],\"key\":-201},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"ropaPromptList\",\"from\":341,\"to\":327,\"points\":[-909.5380859375,2476.737,-899.5380859375,2476.737,-810,2130.737,-502.5166015625,2129.9,-492.5166015625,2129.9],\"key\":-202},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"traviPromptList\",\"from\":339,\"to\":327,\"points\":[-909.5380859375,2346.737,-899.5380859375,2346.737,-830,2110.737,-502.5166015625,2109.9,-492.5166015625,2109.9],\"key\":-207},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"alexPromptList\",\"from\":337,\"to\":327,\"points\":[-909.5380859375,2226.737,-899.5380859375,2226.737,-840,2090.737,-502.5166015625,2089.9,-492.5166015625,2089.9],\"key\":-208},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"robotAIPromptList\",\"from\":334,\"to\":327,\"points\":[-909.5380859375,2102.259847498308,-899.5380859375,2102.259847498308,-850,2070.737,-502.5166015625,2069.9,-492.5166015625,2069.9],\"key\":-209},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"environmentStateList\",\"from\":290,\"to\":327,\"points\":[-909.5380859375,1966.737,-899.5380859375,1966.737,-850,2050.737,-502.5166015625,2049.9,-492.5166015625,2049.9],\"key\":-210},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"nextExperiment\",\"from\":273,\"to\":327,\"points\":[-2509.5380859375,2740,-2499.5380859375,2740,-2480,2740,-2480,2870,-580,2870,-580,2030,-502.5166015625,2029.9,-492.5166015625,2029.9],\"key\":-213},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":407,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1400,2460.737,-1271.896484375,2740,-1261.896484375,2740],\"key\":-198},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":343,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1390,2430.737,-1271.896484375,2606.737,-1261.896484375,2606.737],\"key\":-214},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":341,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1380,2400.737,-1271.896484375,2476.737,-1261.896484375,2476.737],\"key\":-215},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":339,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1380,2370.737,-1271.896484375,2346.737,-1261.896484375,2346.737],\"key\":-216},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":337,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1390,2340.737,-1272.896484375,2226.737,-1271.896484375,2226.737,-1261.896484375,2226.737],\"key\":-217},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":334,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1400,2310.737,-1271.896484375,2102.259847498308,-1261.896484375,2102.259847498308],\"key\":-218},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":290,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1410,2280.737,-1271.896484375,1966.737,-1261.896484375,1966.737],\"key\":-219},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"startApplication\",\"toPort\":\"in\",\"from\":261,\"to\":307,\"points\":[1990.73046875,2140,2000.73046875,2140,2070,2140,2070,2830,-2430,2830,-2431.896484375,2670.737,-2421.896484375,2670.737],\"key\":-222},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":320,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3709.999515625,1430,3719.999515625,1430],\"key\":-223,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":293,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3708.103515625,1540,3718.103515625,1540],\"key\":-225,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"startApplication\",\"toPort\":\"trigger\",\"from\":261,\"to\":310,\"points\":[1990.73046875,2140,2000.73046875,2140,2060,2160,2060,1810,2820,1810,2820,1450,3289.3173828125,1450,3299.3173828125,1450],\"key\":-226},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":297,\"to\":320,\"points\":[3630.4619140625,1570,3640.4619140625,1570,3709.999515625,1430,3719.999515625,1430],\"key\":-228,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":297,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1430,2260,-1250,1820,-180,1770,-50,1600,2740,1620,2740,1570,3308.103515625,1570,3318.103515625,1570],\"key\":-230},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":190,\"to\":328,\"points\":[2490.4619140625,1959.9,2500.4619140625,1959.9,2821.751953125,1960,2831.751953125,1960],\"key\":-233},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":194,\"to\":351,\"points\":[2490.4619140625,2149.9,2500.4619140625,2149.9,2821.751953125,2150,2831.751953125,2150],\"key\":-234,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":208,\"to\":365,\"points\":[2490.4619140625,2329.9,2500.4619140625,2329.9,2811.751953125,2330,2821.751953125,2330],\"key\":-235,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":210,\"to\":369,\"points\":[2530.4619140625,2719.9,2540.4619140625,2719.9,2831.751953125,2719.9,2841.751953125,2719.9],\"key\":-236,\"color\":\"#ccffcc\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":340,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3740,1130,4070.751953125,1130,4071.751953125,1129.9,4081.751953125,1129.9],\"key\":-241,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":340,\"to\":235,\"points\":[4410.4619140625,1139.9,4420.4619140625,1139.9,5138.103515625,1141.658,5148.103515625,1141.658],\"key\":-240,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":340,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-220,1670,-190,1620,2760,1640,2760,1150,4071.751953125,1149.9,4081.751953125,1149.9],\"key\":-244},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":328,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1690,-180,1640,2630,1660,2700,1980,2821.751953125,1980,2831.751953125,1980],\"key\":-247},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":351,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1710,-172.37881499583682,1658.7029711273585,2620,1680,2730,2170,2821.751953125,2170,2831.751953125,2170],\"key\":-248},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":365,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1730,-170,1680,2610,1700,2750,2350,2811.751953125,2350,2821.751953125,2350],\"key\":-249},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":369,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-200,1750,-154.75109121645937,1693.4499570930984,2594.49897316846,1715.484658371211,2813.1510519010144,2742.6397843523805,2831.751953125,2739.9,2841.751953125,2739.9],\"key\":-250},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToRoco\",\"toPort\":\"in\",\"from\":202,\"to\":214,\"points\":[10396.4892578125,3460,10406.4892578125,3460,10470,3530,10850,3530,10850,3870,10918.103515625,3925,10928.103515625,3925],\"key\":-254},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToRoco\",\"toPort\":\"in\",\"from\":202,\"to\":361,\"points\":[10396.4892578125,3460,10406.4892578125,3460,10459.999515625,3457.6050000000005,10469.999515625,3457.6050000000005],\"key\":-256},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"taskInfo\",\"toPort\":\"taskInfo\",\"from\":326,\"to\":261,\"points\":[1318.0478515625,2054.377152501692,1328.0478515625,2054.377152501692,1499.97265625,2090,1509.97265625,2090],\"key\":-221,\"color\":\"LightSeaGreen\"},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":367,\"to\":279,\"points\":[11812.82679593673,-6679.7,11808.17265669598,-6644.008802404461],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-265},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextExperiment\",\"toPort\":\"nextExperiment\",\"from\":522,\"to\":327,\"points\":[628.2685546875,2089.7000000000003,638.2685546875,2089.7000000000003,680,2100,680,1950,-530,1950,-530,2010,-502.5166015625,2029.9,-492.5166015625,2029.9],\"key\":-266},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":360,\"to\":195,\"points\":[6540.4619140625,3479.9,6550.4619140625,3479.9,6609.999515625001,3477.4049999999993,6619.999515625001,3477.4049999999993],\"key\":-267,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":374,\"to\":376,\"points\":[-3139.5380859375,420,-3129.5380859375,420,-3000.572265625,479.79999999999995,-2990.572265625,479.79999999999995],\"key\":-268},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":375,\"to\":376,\"points\":[-3139.5380859375,550,-3129.5380859375,550,-3000.572265625,499.79999999999995,-2990.572265625,499.79999999999995],\"key\":-269},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":376,\"to\":360,\"points\":[-2659.5380859375,489.79999999999995,-2649.5380859375,489.79999999999995,-2360,400,-1680,400,-1680,3880,6145.395412517533,3876.942589377504,6140.054559675014,3491.30674765824,6201.751953125,3489.9,6211.751953125,3489.9],\"key\":-271},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":379,\"to\":378,\"points\":[-3149.5380859375,950,-3139.5380859375,950,-3010.572265625,899.6999999999999,-3000.572265625,899.6999999999999],\"key\":-272},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":380,\"to\":378,\"points\":[-3149.5380859375,820,-3139.5380859375,820,-3010.572265625,879.6999999999999,-3000.572265625,879.6999999999999],\"key\":-273},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":378,\"to\":384,\"points\":[-2669.5380859375,889.6999999999999,-2659.5380859375,889.6999999999999,-2370,800,-1650,800,-1650,5440,5381.751953125,5439.699999999999,5391.751953125,5439.699999999999],\"key\":-275},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":392,\"to\":391,\"points\":[-3139.5380859375,150,-3129.5380859375,150,-3000.572265625,99.8,-2990.572265625,99.8],\"key\":-276},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":393,\"to\":391,\"points\":[-3139.5380859375,20,-3129.5380859375,20,-3000.572265625,79.8,-2990.572265625,79.8],\"key\":-277},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":395,\"to\":230,\"points\":[6510.4619140625,2249.9,6520.4619140625,2249.9,6559.999515625,2249.3420000000006,6569.999515625,2249.3420000000006],\"key\":-278,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":391,\"to\":395,\"points\":[-2659.5380859375,89.8,-2649.5380859375,89.8,-2370,0,-1580,0,-1580,90,6040,90,6040,2260,6171.751953125,2259.9,6181.751953125,2259.9],\"key\":-279},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":381,\"to\":373,\"points\":[-3079.5380859375,-260.1,-3069.5380859375,-260.1,-2961.896484375,-260,-2951.896484375,-260],\"key\":-280},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":366,\"to\":350,\"points\":[-3139.5380859375,1830.6370000000002,-3129.5380859375,1830.6370000000002,-3020.572265625,1879.9,-3010.572265625,1879.9],\"key\":-242},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":368,\"to\":350,\"points\":[-3139.5380859375,1960.6370000000002,-3129.5380859375,1960.6370000000002,-3020.572265625,1899.9,-3010.572265625,1899.9],\"key\":-245},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":373,\"to\":186,\"points\":[-2639.5380859375,-260,-2629.5380859375,-260,-2601.896484375,-260,-2591.896484375,-260],\"key\":-227,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":391,\"to\":398,\"points\":[-2659.5380859375,89.8,-2649.5380859375,89.8,-2428.248046875,90,-2418.248046875,90],\"key\":-246,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":373,\"to\":296,\"points\":[-2639.5380859375,-260,-2629.5380859375,-260,-2580,-160,-2280,-160,-2261.896484375,-260,-2251.896484375,-260],\"key\":-281,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":376,\"to\":400,\"points\":[-2659.5380859375,489.79999999999995,-2649.5380859375,489.79999999999995,-2428.248046875,490,-2418.248046875,490],\"key\":-251},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":378,\"to\":402,\"points\":[-2669.5380859375,889.6999999999999,-2659.5380859375,889.6999999999999,-2418.248046875,890,-2408.248046875,890],\"key\":-252},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":404,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-2458.248046875,1890,-2448.248046875,1890],\"key\":-282},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"resetExperiment\",\"from\":324,\"to\":327,\"points\":[-4219.5380859375,-760,-4209.5380859375,-760,-660,-770,-650,2010,-502.5166015625,2009.9,-492.5166015625,2009.9],\"key\":-283},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"command\",\"toPort\":\"in\",\"from\":372,\"to\":383,\"points\":[7024.0546875,5479.775,7034.0546875,5479.775,7050,5510,7052.103515625,5505.928999999999,7062.103515625,5505.928999999999],\"key\":-286},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":389,\"to\":412,\"points\":[7879.365234375,5519.875,7889.365234375,5519.875,7944,5730.594,9206.634765625,5740.193999999999,9216.634765625,5740.193999999999],\"key\":-315},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":388,\"to\":412,\"points\":[8454.26171875,5491.155999999998,8464.26171875,5491.155999999998,8574,5711.656,9174,5711.656,9206.634765625,5740.193999999999,9216.634765625,5740.193999999999],\"key\":-316},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":405,\"to\":412,\"points\":[9027.951171875,5501.455999999999,9037.951171875,5501.455999999999,9104,5501.656,9206.634765625,5740.193999999999,9216.634765625,5740.193999999999],\"key\":-317},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":408,\"to\":413,\"points\":[9454.4619140625,5461.455999999999,9464.4619140625,5461.455999999999,9502.103515625,5461.656,9512.103515625,5461.656],\"key\":-295},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"nextCommand\",\"from\":413,\"to\":372,\"points\":[9834.4619140625,5461.656,9844.4619140625,5461.656,9892,5459.875,9894,6090.844,6482,6089.875,5830,5730,6549.958984375,5479.775,6559.958984375,5479.775],\"key\":-298},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planResult\",\"toPort\":\"in\",\"from\":372,\"to\":377,\"points\":[7024.0546875,5499.775,7034.0546875,5499.775,7192.103515625,5910.594,7202.103515625,5910.594],\"key\":-291},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planFailed\",\"toPort\":\"planFailed\",\"from\":412,\"to\":372,\"points\":[9665.02734375,5760.193999999999,9675.02734375,5760.193999999999,9802,5789.625,9802,6129.625,6524,6130.594,6522,5529.875,6549.958984375,5499.775,6559.958984375,5499.775],\"key\":-292},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planResult\",\"toPort\":\"resetReplan\",\"from\":372,\"to\":412,\"points\":[7024.0546875,5499.775,7034.0546875,5499.775,7174,5770.594,9206.634765625,5760.193999999999,9216.634765625,5760.193999999999],\"key\":-305},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"in\",\"from\":412,\"to\":401,\"points\":[9665.02734375,5740.193999999999,9675.02734375,5740.193999999999,9822,5779.625,9822,6109.625,9930.103515625,6109.625,9940.103515625,6109.625],\"key\":-306},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"newState\",\"toPort\":\"in\",\"from\":405,\"to\":408,\"points\":[9027.951171875,5461.455999999999,9037.951171875,5461.455999999999,9122.103515625,5461.455999999999,9132.103515625,5461.455999999999],\"key\":-301},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"taskEvaluation\",\"toPort\":\"in\",\"from\":372,\"to\":394,\"points\":[7024.0546875,5519.775,7034.0546875,5519.775,7202.103515625,6070.594,7212.103515625,6070.594],\"key\":-304},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":361,\"to\":384,\"points\":[10792.3579140625,3457.6050000000005,10802.3579140625,3457.6050000000005,10800,4390,5390,4390,5381.751953125,5419.699999999999,5391.751953125,5419.699999999999],\"key\":-270},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"envState\",\"from\":233,\"to\":389,\"points\":[5582.3579140625,3498.4890000000005,5592.3579140625,3498.4890000000005,5980,3570,5980,4590,7430,4590,7403.828125,5479.875,7413.828125,5479.875],\"key\":-307},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planResult\",\"toPort\":\"in\",\"from\":372,\"to\":274,\"points\":[7024.0546875,5499.775,7034.0546875,5499.775,7050,4630,6450,4630,6450,1020,6520,1020,6588.103515625,1019.9,6598.103515625,1019.9],\"key\":-311},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":408,\"to\":294,\"points\":[9454.4619140625,5461.455999999999,9464.4619140625,5461.455999999999,9440,5170,9440,4530,5180,4530,4830,3790,4899.999515625,3628.789,4909.999515625,3628.789],\"key\":-319},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"oldState\",\"from\":233,\"to\":405,\"points\":[5582.3579140625,3498.4890000000005,5592.3579140625,3498.4890000000005,6000,3550,6000,4570,8540,4560,8516.6484375,5471.455999999999,8526.6484375,5471.455999999999],\"key\":-320},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":266,\"to\":373,\"points\":[-3991.751953125,-1130.1,-3981.751953125,-1130.1,-3340,-640,-3340,-190,-2960,-190,-2961.896484375,-260,-2951.896484375,-260],\"key\":-212},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":384,\"to\":271,\"points\":[5720.4619140625,5429.699999999999,5730.4619140625,5429.699999999999,5770,5340,6610.103515625,5339.625,6620.103515625,5339.625],\"key\":-237,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"plan\",\"from\":384,\"to\":372,\"points\":[5720.4619140625,5429.699999999999,5730.4619140625,5429.699999999999,6380,5430,6380,5460,6549.958984375,5459.775,6559.958984375,5459.775],\"key\":-238},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":269,\"points\":[-3069.5380859375,2370.637,-3059.5380859375,2370.637,-1861.896484375,2370,-1851.896484375,2370],\"key\":-231},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"in\",\"from\":266,\"to\":269,\"points\":[-3991.751953125,-1090.1,-3981.751953125,-1090.1,-3380,-640,-3370,2450,-1860,2450,-1862.896484375,2370,-1861.896484375,2370,-1851.896484375,2370],\"key\":-239},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":335,\"to\":273,\"points\":[-3069.5380859375,2740.637,-3059.5380859375,2740.637,-2831.896484375,2740,-2821.896484375,2740],\"key\":-243},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out4\",\"toPort\":\"in\",\"from\":266,\"to\":273,\"points\":[-3991.751953125,-1070.1,-3981.751953125,-1070.1,-3400,-640,-3390,2850,-2830,2850,-2831.896484375,2740,-2821.896484375,2740],\"key\":-253},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":275,\"to\":266,\"points\":[4520.4619140625,4330,4530.4619140625,4330,4540,4540,850,4520,-4600,4520,-4600,1810,-4590,-1100,-4321.896484375,-1100.1,-4311.896484375,-1100.1],\"key\":-255},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"taskEvaluation\",\"toPort\":\"taskEvaluation\",\"from\":252,\"to\":326,\"points\":[10224.0546875,674.662999999998,10234.0546875,674.662999999998,10260,660,10260,600,10260,520,6420,520,6420,1850,820,1820,817.9453125,2074.377152501692,827.9453125,2074.377152501692],\"key\":-257},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":274,\"to\":277,\"points\":[6870.4619140625,1019.9,6880.4619140625,1019.9,7018.103515625,1019.9,7028.103515625,1019.9],\"key\":-260},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":277,\"to\":242,\"points\":[7370.4619140625,1019.9,7380.4619140625,1019.9,7380.103515625,905.6629999999996,7390.103515625,905.6629999999996],\"key\":-262,\"color\":\"#ff8093\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":369,\"to\":345,\"points\":[3170.4619140625,2729.9,3180.4619140625,2729.9,3180,3430,4900,3430,4909.999515625,3408.789,4919.999515625,3408.789],\"key\":-196,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":389,\"to\":259,\"points\":[7879.365234375,5519.875,7889.365234375,5519.875,7952,5679.625,9052,5689.625,9340.103515625,6569.625,9350.103515625,6569.625],\"key\":-264},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":388,\"to\":280,\"points\":[8454.26171875,5491.155999999998,8464.26171875,5491.155999999998,8572,5659.625,9072,5659.625,9350.103515625,6469.625,9360.103515625,6469.625],\"key\":-274},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":405,\"to\":285,\"points\":[9027.951171875,5501.455999999999,9037.951171875,5501.455999999999,9360.103515625,6369.625,9370.103515625,6369.625],\"key\":-284},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":204,\"to\":353,\"points\":[8492.3579140625,3501.1670000000004,8502.3579140625,3501.1670000000004,8488.103515625,3590,8498.103515625,3590],\"key\":-294},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":204,\"to\":298,\"points\":[8492.3579140625,3501.1670000000004,8502.3579140625,3501.1670000000004,8596.440921875,3461.267000000001,8606.440921875,3461.267000000001],\"key\":-297},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":298,\"to\":358,\"points\":[9005.9165078125,3451.267000000001,9015.9165078125,3451.267000000001,9058.103515625,3610,9068.103515625,3610],\"key\":-299},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":298,\"to\":207,\"points\":[9005.9165078125,3451.267000000001,9015.9165078125,3451.267000000001,9028.103515625,3450,9038.103515625,3450],\"key\":-302},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":284,\"to\":336,\"points\":[6900.4619140625,2380,6910.4619140625,2380,6910,2460,6660,2460,6658.103515625,2540,6668.103515625,2540],\"key\":-224},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":230,\"to\":229,\"points\":[6892.3579140625,2249.3420000000006,6902.3579140625,2249.3420000000006,6964.1997109375,2163.504000000001,6974.1997109375,2163.504000000001],\"key\":-261},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":323,\"to\":284,\"points\":[6360.4619140625,2500,6370.4619140625,2500,6568.103515625,2380,6578.103515625,2380],\"key\":-220},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"nextCommand\",\"from\":338,\"to\":372,\"points\":[6080.4619140625,5590,6090.4619140625,5590,6549.958984375,5479.775,6559.958984375,5479.775],\"key\":-285},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":329,\"points\":[5582.3579140625,3498.4890000000005,5592.3579140625,3498.4890000000005,6070,3380,6072.701300114133,2173.5367230998568,6911.941076061583,2168.8218928979045,6938.9931640625,2249.9,6948.9931640625,2249.9],\"key\":-288},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":230,\"to\":329,\"points\":[6892.3579140625,2249.3420000000006,6902.3579140625,2249.3420000000006,6938.9931640625,2269.9,6948.9931640625,2269.9],\"key\":-289},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"feedback\",\"from\":284,\"to\":329,\"points\":[6900.4619140625,2380,6910.4619140625,2380,6938.9931640625,2289.9,6948.9931640625,2289.9],\"key\":-293},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":329,\"to\":228,\"points\":[7350.4619140625,2279.9,7360.4619140625,2279.9,7369.999515625,2153.504000000001,7379.999515625,2153.504000000001],\"key\":-303,\"color\":\"#ff8093\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":371,\"to\":386,\"points\":[9882.4619140625,5239.2249999999985,9892.4619140625,5239.2249999999985,10370.103515625,5469.875,10380.103515625,5469.875],\"key\":-318},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"cmdHistory\",\"from\":371,\"to\":329,\"points\":[9882.4619140625,5239.2249999999985,9892.4619140625,5239.2249999999985,9991.72995148096,5171.96020096163,9993.22995148096,4490.139075140173,6490,4490,6500,2310,6938.9931640625,2309.9,6948.9931640625,2309.9],\"key\":-314},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":359,\"to\":344,\"points\":[8843.2407265625,2169.542,8853.2407265625,2169.542,10118.103515625,3789.6999999999994,10128.103515625,3789.6999999999994],\"key\":-323},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"successSimCommand\",\"toPort\":\"simCommand\",\"from\":388,\"to\":405,\"points\":[8454.26171875,5471.155999999998,8464.26171875,5471.155999999998,8516.6484375,5491.455999999999,8526.6484375,5491.455999999999],\"key\":-310},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":406,\"to\":409,\"points\":[6710.999997542399,6489.684896393877,6730.103515625,6489.625,6740.103515625,6489.625],\"key\":-324},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":409,\"to\":414,\"points\":[7082.4619140625,6489.625,7092.4619140625,6489.625,7118.103515625,6880,7128.103515625,6880],\"key\":-325},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":333,\"to\":416,\"points\":[7100.4619140625,7550,7110.4619140625,7550,7128.103515625,7670,7138.103515625,7670],\"key\":-327},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":411,\"to\":333,\"points\":[6731,7550,6748.103515625,7550,6758.103515625,7550],\"key\":-328},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":421,\"to\":424,\"points\":[7072.4619140625,8059.625,7082.4619140625,8059.625,7118.103515625,8130,7128.103515625,8130],\"key\":-329},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":415,\"to\":421,\"points\":[6693,8059.625,6720.103515625,8059.625,6730.103515625,8059.625],\"key\":-330},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":425,\"to\":426,\"points\":[17930.4619140625,-6310,17940.4619140625,-6310,17978.103515625,-6310,17988.103515625,-6310],\"key\":-331},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":443,\"to\":425,\"points\":[17521,-6310,17578.103515625,-6310,17588.103515625,-6310],\"key\":-332},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":433,\"to\":187,\"points\":[11858.0375,-7000.5,11940,-7040,11859.235862930453,-7078.74],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-336},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":433,\"to\":189,\"points\":[11815.5,-6959.5,11815.5,-6920.5],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-337},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":189,\"to\":435,\"points\":[11815.5,-6879.5,11808.5,-6840.05,11815.5,-6800.6],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-338},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":435,\"to\":189,\"points\":[11843.845662474896,-6800.6,11893.184999999712,-6836.28293456378,11840.493971224056,-6879.5],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-340},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":367,\"to\":435,\"points\":[11871.487523027408,-6720.7,11925.621666666379,-6740.521379560865,11872.538222697336,-6759.6],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-341},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":367,\"to\":189,\"points\":[11775.013959831012,-6720.7,11676.223854166385,-6770.722110279783,11793.414545203606,-6879.5],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-342},\n{\"text\":\"Reference\",\"color\":\"LightSeaGreen\",\"category\":\"CodeFlow_Code\",\"from\":428,\"to\":447,\"points\":[14830.55859375,-7810,14840.55859375,-7810,14878.103515625,-7810,14888.103515625,-7810],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-344},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":454,\"to\":452,\"points\":[14120.4619140625,-7600,14130.4619140625,-7600,14158.103515625,-7600,14168.103515625,-7600],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-346},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":444,\"to\":445,\"points\":[14120.4619140625,-8000,14130.4619140625,-8000,14158.103515625,-8000,14168.103515625,-8000],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-347},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":446,\"to\":448,\"points\":[14120.4619140625,-7500,14130.4619140625,-7500,14158.103515625,-7500.200000000001,14168.103515625,-7500.200000000001],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-349},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":445,\"to\":450,\"points\":[14380.4619140625,-8000,14390.4619140625,-8000,14448.103515625,-8000,14458.103515625,-8000],\"key\":-352},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":445,\"to\":428,\"points\":[14380.4619140625,-8000,14390.4619140625,-8000,14464.662109375,-7810,14474.662109375,-7810],\"key\":-348},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":448,\"to\":453,\"points\":[14380.4619140625,-7500.200000000001,14390.4619140625,-7500.200000000001,14448.103515625,-7500,14458.103515625,-7500],\"key\":-343},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":452,\"to\":451,\"points\":[14380.4619140625,-7600,14390.4619140625,-7600,14448.103515625,-7600,14458.103515625,-7600],\"key\":-350},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":452,\"to\":428,\"points\":[14380.4619140625,-7600,14390.4619140625,-7600,14464.662109375,-7790,14474.662109375,-7790],\"key\":-353},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":448,\"to\":428,\"points\":[14380.4619140625,-7500.200000000001,14390.4619140625,-7500.200000000001,14464.662109375,-7790,14474.662109375,-7790],\"key\":-355},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":461,\"to\":460,\"points\":[14130.4619140625,-7110,14140.4619140625,-7110,14168.103515625,-7110.200000000001,14178.103515625,-7110.200000000001],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-356},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":460,\"to\":463,\"points\":[14390.4619140625,-7110.200000000001,14400.4619140625,-7110.200000000001,14437.103515625,-7170,14518.103515625,-7170,14528.103515625,-7170],\"key\":-357},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"history\",\"from\":460,\"to\":449,\"points\":[14390.4619140625,-7110.200000000001,14400.4619140625,-7110.200000000001,14563.751953125,-6960.1,14573.751953125,-6960.1],\"key\":-358},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":466,\"to\":467,\"points\":[14130.4619140625,-7010,14140.4619140625,-7010,14168.103515625,-7010.200000000001,14178.103515625,-7010.200000000001],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-359},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"assistant\",\"from\":467,\"to\":449,\"points\":[14390.4619140625,-7010.200000000001,14400.4619140625,-7010.200000000001,14563.751953125,-6940.1,14573.751953125,-6940.1],\"key\":-360},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":470,\"to\":471,\"points\":[14130.4619140625,-6900,14140.4619140625,-6900,14168.103515625,-6900.200000000001,14178.103515625,-6900.200000000001],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-361},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":471,\"to\":449,\"points\":[14390.4619140625,-6900.200000000001,14400.4619140625,-6900.200000000001,14563.751953125,-6920.1,14573.751953125,-6920.1],\"key\":-365},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":467,\"to\":458,\"points\":[14390.4619140625,-7010.200000000001,14400.4619140625,-7010.200000000001,14518.103515625,-7070,14528.103515625,-7070],\"key\":-370},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":471,\"to\":459,\"points\":[14390.4619140625,-6900.200000000001,14400.4619140625,-6900.200000000001,14528.103515625,-6810,14538.103515625,-6810],\"key\":-371},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":449,\"to\":464,\"points\":[14960.4619140625,-6940.1,14970.4619140625,-6940.1,15250,-6940,15250,-6980,15338.103515625,-6980,15348.103515625,-6980],\"key\":-372,\"color\":\"#ff8093\"},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":469,\"to\":468,\"points\":[14140.4619140625,-6350,14150.4619140625,-6350,14178.103174443393,-6350.300464758519,14188.103174443393,-6350.300464758519],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-373},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":468,\"to\":472,\"points\":[14400.461572880893,-6350.300464758519,14410.461572880893,-6350.300464758519,14437.103174443393,-6420.000464758518,14528.103515625,-6420,14538.103515625,-6420],\"key\":-375},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":473,\"to\":474,\"points\":[14140.4619140625,-6250,14150.4619140625,-6250,14178.103174443393,-6250.300464758519,14188.103174443393,-6250.300464758519],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-379},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":475,\"to\":476,\"points\":[14140.4619140625,-6140,14150.4619140625,-6140,14178.103174443393,-6140.300464758519,14188.103174443393,-6140.300464758519],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-381},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":474,\"to\":477,\"points\":[14400.461572880893,-6250.300464758519,14410.461572880893,-6250.300464758519,14528.103515625,-6330,14538.103515625,-6330],\"key\":-383},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":476,\"to\":478,\"points\":[14400.461572880893,-6140.300464758519,14410.461572880893,-6140.300464758519,14538.103515625,-6050,14548.103515625,-6050],\"key\":-384},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in0\",\"from\":468,\"to\":481,\"points\":[14400.461572880893,-6350.300464758519,14410.461572880893,-6350.300464758519,14670.3173828125,-6200.1,14680.3173828125,-6200.1],\"key\":-378},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in1\",\"from\":474,\"to\":481,\"points\":[14400.461572880893,-6250.300464758519,14410.461572880893,-6250.300464758519,14670.3173828125,-6180.1,14680.3173828125,-6180.1],\"key\":-380},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in2\",\"from\":476,\"to\":481,\"points\":[14400.461572880893,-6140.300464758519,14410.461572880893,-6140.300464758519,14670.3173828125,-6160.1,14680.3173828125,-6160.1],\"key\":-382},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":481,\"to\":479,\"points\":[14800.4619140625,-6180.1,14810.4619140625,-6180.1,15190,-6180,15190,-6230,15348.103515625,-6230,15358.103515625,-6230],\"key\":-385,\"color\":\"lightseagreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"subPlan\",\"toPort\":\"subPlan\",\"from\":389,\"to\":372,\"points\":[7879.365234375,5479.875,7889.365234375,5479.875,7892,5479.625,7892,5409.625,6512,5409.625,6512,5439.875,6549.958984375,5439.775,6559.958984375,5439.775],\"key\":-386},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"simCommand\",\"toPort\":\"simCommand\",\"from\":389,\"to\":388,\"points\":[7879.365234375,5499.875,7889.365234375,5499.875,7926.6484375,5481.155999999998,7936.6484375,5481.155999999998],\"key\":-296},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"command\",\"toPort\":\"in\",\"from\":480,\"to\":482,\"points\":[19442.054418885535,5518.07636939538,19452.054418885535,5518.07636939538,19470.103247010535,5540.103216893688,19480.103247010535,5540.103216893688],\"key\":-333},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"command\",\"from\":482,\"to\":483,\"points\":[19802.461645448035,5540.103216893688,19812.461645448035,5540.103216893688,19811.828125,5540,19821.828125,5540],\"key\":-334},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":483,\"to\":489,\"points\":[20287.365234375,5560,20297.365234375,5560,20351.999731385535,5754.668216893689,21624.634497010535,5774.3682168936875,21634.634497010535,5774.3682168936875],\"key\":-335},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":484,\"to\":489,\"points\":[20870.26171875,5470,20880.26171875,5470,20981.999731385535,5735.7302168936885,21581.999731385535,5735.7302168936885,21624.634497010535,5774.3682168936875,21634.634497010535,5774.3682168936875],\"key\":-389},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":485,\"to\":489,\"points\":[21445.950903260535,5535.530216893688,21455.950903260535,5535.530216893688,21511.999731385535,5525.7302168936885,21624.634497010535,5774.3682168936875,21634.634497010535,5774.3682168936875],\"key\":-390},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":487,\"to\":490,\"points\":[21872.461645448035,5495.430216893687,21882.461645448035,5495.430216893687,21920.103247010535,5495.630216893688,21930.103247010535,5495.630216893688],\"key\":-391},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planResult\",\"toPort\":\"in\",\"from\":480,\"to\":492,\"points\":[19442.054418885535,5538.07636939538,19452.054418885535,5538.07636939538,19610.103247010535,5944.668216893689,19620.103247010535,5944.668216893689],\"key\":-392},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planFailed\",\"toPort\":\"planFailed\",\"from\":489,\"to\":480,\"points\":[22083.027075135535,5794.3682168936875,22093.027075135535,5794.3682168936875,22209.999731385535,5813.699216893689,22209.999731385535,6153.699216893689,18931.999731385535,6154.668216893689,18931.999731385535,5602.4532168936885,18967.958715760535,5538.07636939538,18977.958715760535,5538.07636939538],\"key\":-393},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planResult\",\"toPort\":\"resetReplan\",\"from\":480,\"to\":489,\"points\":[19442.054418885535,5538.07636939538,19452.054418885535,5538.07636939538,19581.999731385535,5794.668216893689,21624.634497010535,5794.3682168936875,21634.634497010535,5794.3682168936875],\"key\":-394},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"in\",\"from\":489,\"to\":493,\"points\":[22083.027075135535,5774.3682168936875,22093.027075135535,5774.3682168936875,22229.999731385535,5803.699216893689,22229.999731385535,6133.699216893689,22348.103247010535,6143.699216893689,22358.103247010535,6143.699216893689],\"key\":-395},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"newState\",\"toPort\":\"in\",\"from\":485,\"to\":487,\"points\":[21445.950903260535,5495.530216893688,21455.950903260535,5495.530216893688,21540.103247010535,5495.430216893687,21550.103247010535,5495.430216893687],\"key\":-396},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"taskEvaluation\",\"toPort\":\"in\",\"from\":480,\"to\":496,\"points\":[19442.054418885535,5558.07636939538,19452.054418885535,5558.07636939538,19620.103247010535,6104.668216893689,19630.103247010535,6104.668216893689],\"key\":-397},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":483,\"to\":499,\"points\":[20287.365234375,5560,20297.365234375,5560,20359.999731385535,5703.699216893689,21459.999731385535,5713.699216893689,21758.103247010535,6603.699216893689,21768.103247010535,6603.699216893689],\"key\":-398},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":484,\"to\":500,\"points\":[20870.26171875,5470,20880.26171875,5470,20979.999731385535,5683.699216893689,21479.999731385535,5683.699216893689,21768.103247010535,6503.699216893689,21778.103247010535,6503.699216893689],\"key\":-399},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":485,\"to\":501,\"points\":[21445.950903260535,5535.530216893688,21455.950903260535,5535.530216893688,21778.103247010535,6403.699216893689,21788.103247010535,6403.699216893689],\"key\":-400},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":504,\"to\":505,\"points\":[22300.461645448035,5273.299216893687,22310.461645448035,5273.299216893687,22728.103247010535,5473.699216893689,22738.103247010535,5473.699216893689],\"key\":-403},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"successSimCommand\",\"toPort\":\"simCommand\",\"from\":484,\"to\":485,\"points\":[20870.26171875,5450,20880.26171875,5450,20934.648168885535,5525.530216893688,20944.648168885535,5525.530216893688],\"key\":-405},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"subPlan\",\"toPort\":\"subPlan\",\"from\":483,\"to\":480,\"points\":[20287.365234375,5520,20297.365234375,5520,20299.999731385535,5503.699216893689,20299.999731385535,5433.699216893689,18919.999731385535,5433.699216893689,18919.999731385535,5493.699216893689,18967.958715760535,5478.07636939538,18977.958715760535,5478.07636939538],\"key\":-407},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"simCommand\",\"toPort\":\"simCommand\",\"from\":483,\"to\":503,\"points\":[20287.365234375,5540,20297.365234375,5540,20332.6484375,5603.77715250169,20342.6484375,5603.77715250169],\"key\":-408},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":511,\"to\":510,\"points\":[17260.4619140625,5760,17270.4619140625,5760,17428.103515625,5890,17438.103515625,5890],\"key\":-409},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":511,\"to\":498,\"points\":[17260.4619140625,5760,17270.4619140625,5760,19028.103247010535,5373.699216893689,19038.103247010535,5373.699216893689],\"key\":-411},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"plan\",\"from\":511,\"to\":480,\"points\":[17260.4619140625,5760,17270.4619140625,5760,18967.958715760535,5498.07636939538,18977.958715760535,5498.07636939538],\"key\":-412},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":490,\"to\":513,\"points\":[22252.461645448035,5495.630216893688,22262.461645448035,5495.630216893688,22270,5690,18600,5690,18598.103515625,5609.699999999999,18608.103515625,5609.699999999999],\"key\":-406,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":482,\"to\":506,\"points\":[19802.461645448035,5540.103216893688,19812.461645448035,5540.103216893688,20258.103515625,5165,20268.103515625,5165],\"key\":-414},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":514,\"to\":508,\"points\":[17980.4619140625,4640,17990.4619140625,4640,18010.000438635645,4872.350024772155,18020.000438635645,4872.350024772155],\"key\":-415},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":509,\"to\":508,\"points\":[17992.358837073145,5002.750024772155,18002.358837073145,5002.750024772155,18010.000438635645,4872.350024772155,18020.000438635645,4872.350024772155],\"key\":-416},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"envState\",\"from\":508,\"to\":483,\"points\":[18342.358837073145,4872.350024772155,18352.358837073145,4872.350024772155,19811.828125,5520,19821.828125,5520],\"key\":-417},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":487,\"to\":509,\"points\":[21872.461645448035,5495.430216893687,21882.461645448035,5495.430216893687,17659.000438635645,5002.750024772155,17660.000438635645,5002.750024772155,17670.000438635645,5002.750024772155],\"key\":-418},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":512,\"to\":514,\"points\":[16800.4619140625,5769.5999999999985,16810.4619140625,5769.5999999999985,17648.103515625,4640,17658.103515625,4640],\"key\":-410},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"oldState\",\"from\":508,\"to\":485,\"points\":[18342.358837073145,4872.350024772155,18352.358837073145,4872.350024772155,20934.648168885535,5505.530216893688,20944.648168885535,5505.530216893688],\"key\":-420},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":521,\"to\":519,\"points\":[10051,-3070,10190,-3070],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-422},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":525,\"to\":526,\"points\":[10190.026776278926,-2990.146090554485,10060.973223721074,-2990.053909445515],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-423},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":519,\"to\":525,\"points\":[10265.5,-3049.5,10265.5,-3010.7],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-424},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":525,\"to\":517,\"points\":[10340.982958366889,-2990.1656895643787,10410.000000051652,-2990.1343181817947],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-421},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":517,\"to\":527,\"points\":[10485.5,-2969.6,10485.5,-2930.6],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-425},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":527,\"to\":528,\"points\":[10485.5,-2889.6,10485.5,-2850.6],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-426},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":528,\"to\":529,\"points\":[10485.5,-2809.6,10485.5,-2770.6],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-427},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":529,\"to\":530,\"points\":[10485.5,-2729.6,10485.5,-2690.6],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-428},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":530,\"to\":531,\"points\":[10485.5,-2649.6,10485.5,-2590.5],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-429},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":531,\"to\":532,\"points\":[10485.5,-2549.5,10485.5,-2500.6],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-430},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":532,\"to\":533,\"points\":[10485.5,-2459.6,10485.5,-2420.6],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-431},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":531,\"to\":535,\"points\":[10410,-2575.3982499983013,10385.49999996875,-2577.149999999984,10360.998762050282,-2575.4226627261964],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-432},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":535,\"to\":531,\"points\":[10359.510317993996,-2552.0141812036095,10386.307495085795,-2545.4657849492332,10410,-2551.32587499494],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-433},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":533,\"to\":534,\"points\":[10485.5,-2379.6,10485.5,-2340.7999999999997],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-434},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":534,\"to\":537,\"points\":[10410.037481509371,-2320.2245374815093,10360.99999975,-2320.1754999997497],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-436},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":537,\"to\":536,\"points\":[10285.5,-2299.6,10285.5,-2250.7],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-437},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":536,\"to\":538,\"points\":[10285.5,-2209.7,10285.5,-2180.7],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-439},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":538,\"to\":539,\"points\":[10361,-2160.2,10410,-2160.2],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-440},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":539,\"to\":541,\"points\":[10485.5,-2139.7,10485.5,-2100.7999999999997],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-441},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":544,\"to\":529,\"points\":[10210.000040883126,-2079.0344486046674,10000,-2080,10000,-2750,10410,-2751.7854289493093],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-442},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":541,\"to\":543,\"points\":[10560.963726994629,-2080.2269705867793,10720.000000234131,-2080.0730645159024],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-443},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":541,\"to\":544,\"points\":[10410.056208406615,-2080.18683431261,10360.999999437501,-2080.1132499991563],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-444},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":538,\"to\":545,\"points\":[10210.019731718818,-2160.1602735430097,10170.999999930747,-2160.1397368420685],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-438},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":545,\"to\":529,\"points\":[10094.965133623791,-2180.599829898391,10080.529668011173,-2733.8680903937857,10410,-2747.073829738957],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-445},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":543,\"to\":531,\"points\":[10795.688265112498,-2100.499978916369,10800,-2570,10561,-2570],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-446},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":543,\"to\":529,\"points\":[10795.637686491422,-2100.499988722814,10800,-2750,10561,-2750.0759936406994],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-447},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":543,\"to\":527,\"points\":[10795.611144538472,-2100.49999265149,10800,-2910,10561,-2910.0759936406994],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-448},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":531,\"to\":546,\"points\":[10531.454166666666,-2590.5,10620,-2630,10625.243750488224,-3049.500039057923],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-449},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":546,\"to\":519,\"points\":[10550,-3070,10341,-3070],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-450},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":534,\"to\":547,\"points\":[10560.955907943222,-2320.211228343596,10580.00000034602,-2320.1888235290044],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-435},\n{\"text\":\"Data\",\"color\":\"black\",\"category\":\"Connectors_LinkType1\",\"from\":547,\"to\":531,\"points\":[10654.929329126793,-2340.599806375826,10649.027452203556,-2552.60875910263,10561,-2561.9705305130237],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-451},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"replanError\",\"from\":412,\"to\":372,\"points\":[9665.02734375,5740.193999999999,9675.02734375,5740.193999999999,9722.81357888129,5710.122879410665,9731.018543491671,5588.463002751243,6532,5569.875,6532,5539.875,6549.958984375,5519.775,6559.958984375,5519.775],\"key\":-452},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"in\",\"from\":412,\"to\":284,\"points\":[9665.02734375,5740.193999999999,9675.02734375,5740.193999999999,9995.602234075708,5736.11861382267,10013.864645601658,4455.448983597123,6180,4470,6180,2660,6568.103515625,2380,6578.103515625,2380],\"key\":-453},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"environment\",\"from\":233,\"to\":326,\"points\":[5582.3579140625,3498.4890000000005,5592.3579140625,3498.4890000000005,5928.203077304256,3598.233847204168,5929.703077304256,3844.8781437644197,712.4024898528082,3844.8781437644197,710,2130,817.9453125,2094.377152501692,827.9453125,2094.377152501692],\"key\":-322},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"logObject\",\"toPort\":\"logObject\",\"from\":372,\"to\":326,\"points\":[7024.0546875,5459.775,7034.0546875,5459.775,7070,5450,7069.547061068741,4919.767782865857,565.731389000759,4894.6241655769345,570,2150,817.9453125,2054.377152501692,827.9453125,2054.377152501692],\"key\":-454},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"log\",\"toPort\":\"in\",\"from\":326,\"to\":524,\"points\":[1318.0478515625,2094.377152501692,1328.0478515625,2094.377152501692,1388.103515625,2370,1398.103515625,2370],\"key\":-455},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"replanError\",\"from\":489,\"to\":480,\"points\":[22083.027075135535,5774.3682168936875,22093.027075135535,5774.3682168936875,22090,5650,18950.310767646897,5647.034889508673,18952.025107321915,5597.319038933157,18967.958715760535,5558.07636939538,18977.958715760535,5558.07636939538],\"key\":-456},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"task\",\"from\":327,\"to\":522,\"points\":[77.5166015625,2079.9,87.5166015625,2079.9,121.9521484375,2079.7000000000003,131.9521484375,2079.7000000000003],\"key\":-457},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"taskInfo\",\"toPort\":\"task\",\"from\":522,\"to\":326,\"points\":[628.2685546875,2069.7000000000003,638.2685546875,2069.7000000000003,817.9453125,2034.3771525016919,827.9453125,2034.3771525016919],\"key\":-458},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextIteration\",\"toPort\":\"nextIteration\",\"from\":326,\"to\":522,\"points\":[1318.0478515625,2074.377152501692,1328.0478515625,2074.377152501692,1360,2080,1360.4999660941266,1900.8598316597374,96.00302180099675,1899.4883599197233,100.11743702103968,2101.0947057018166,121.9521484375,2099.7000000000003,131.9521484375,2099.7000000000003],\"key\":-459},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"experimentIdx\",\"toPort\":\"in\",\"from\":522,\"to\":520,\"points\":[628.2685546875,2109.7000000000003,638.2685546875,2109.7000000000003,798.103515625,2670,808.103515625,2670],\"key\":-460},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"feedbackType\",\"from\":553,\"to\":326,\"points\":[370.4619140625,2539.6000000000004,380.4619140625,2539.6000000000004,817.9453125,2114.377152501692,827.9453125,2114.377152501692],\"key\":-462},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":523,\"to\":553,\"points\":[-69.5380859375,2339.9,-59.5380859375,2339.9,38.103515625,2539.6000000000004,48.103515625,2539.6000000000004],\"key\":-463},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":549,\"to\":553,\"points\":[-69.5380859375,2439.9,-59.5380859375,2439.9,38.103515625,2539.6000000000004,48.103515625,2539.6000000000004],\"key\":-464},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":542,\"to\":553,\"points\":[-69.5380859375,2539.9,-59.5380859375,2539.9,38.103515625,2539.6000000000004,48.103515625,2539.6000000000004],\"key\":-465},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":552,\"to\":553,\"points\":[-69.5380859375,2639.9,-59.5380859375,2639.9,38.103515625,2539.6000000000004,48.103515625,2539.6000000000004],\"key\":-466},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":550,\"to\":553,\"points\":[-69.5380859375,2739.9,-59.5380859375,2739.9,38.103515625,2539.6000000000004,48.103515625,2539.6000000000004],\"key\":-467},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":551,\"to\":553,\"points\":[-69.5380859375,2839.9,-59.5380859375,2839.9,38.103515625,2539.6000000000004,48.103515625,2539.6000000000004],\"key\":-468},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":553,\"to\":554,\"points\":[370.4619140625,2539.6000000000004,380.4619140625,2539.6000000000004,798.103515625,2930,808.103515625,2930],\"key\":-461,\"color\":\"#ccffcc\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"feedbackType\",\"from\":553,\"to\":389,\"points\":[370.4619140625,2539.6000000000004,380.4619140625,2539.6000000000004,478.0658245394511,2562.6088405552355,478.0658245394511,5636.710205178956,7400,5630,7403.828125,5519.875,7413.828125,5519.875],\"key\":-469},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":266,\"to\":553,\"points\":[-3991.751953125,-1110.1,-3981.751953125,-1110.1,-3362.672370268212,-638.7256493537152,-3350.5052934387754,2998.342088177764,2.2858978440135616,3002.9137164498056,38.103515625,2539.6000000000004,48.103515625,2539.6000000000004],\"key\":-470},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":512,\"to\":403,\"points\":[16800.4619140625,5769.5999999999985,16810.4619140625,5769.5999999999985,16819.117760405225,6053.442792927248,16829.117760405225,6053.442792927248],\"key\":-419},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":512,\"to\":511,\"points\":[16800.4619140625,5769.5999999999985,16810.4619140625,5769.5999999999985,16928.103515625,5760,16938.103515625,5760],\"key\":-471},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":403,\"to\":516,\"points\":[17151.476158842725,6053.442792927248,17161.476158842725,6053.442792927248,17408.103515625,6660,17418.103515625,6660],\"key\":-472,\"color\":\"#ccffcc\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"feedbackType\",\"from\":403,\"to\":483,\"points\":[17151.476158842725,6053.442792927248,17161.476158842725,6053.442792927248,19811.828125,5560,19821.828125,5560],\"key\":-473},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"fullPlan\",\"toPort\":\"in\",\"from\":372,\"to\":371,\"points\":[7024.0546875,5439.775,7034.0546875,5439.775,7102,5319.875,9502,5319.875,9550.103515625,5239.2249999999985,9560.103515625,5239.2249999999985],\"key\":-474},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":206,\"to\":397,\"points\":[9642.3579140625,3451.467000000001,9652.3579140625,3451.467000000001,8748.103515625,4070,8758.103515625,4070],\"key\":-475},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":206,\"to\":203,\"points\":[9642.3579140625,3451.467000000001,9652.3579140625,3451.467000000001,9669.999515625,3451.367,9679.999515625,3451.367],\"key\":-476,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":344,\"to\":397,\"points\":[10451.3447265625,3789.6999999999994,10461.3447265625,3789.6999999999994,10460,3880,8748.103515625,4070,8758.103515625,4070],\"key\":-477},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"fullPlan\",\"toPort\":\"in\",\"from\":480,\"to\":504,\"points\":[19442.054418885535,5478.07636939538,19452.054418885535,5478.07636939538,21968.103247010535,5273.299216893687,21978.103247010535,5273.299216893687],\"key\":-478},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":383,\"to\":502,\"points\":[7384.4619140625,5505.928999999999,7394.4619140625,5505.928999999999,8118.103515625,5080,8128.103515625,5080],\"key\":-401},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"command\",\"from\":383,\"to\":389,\"points\":[7384.4619140625,5505.928999999999,7394.4619140625,5505.928999999999,7403.828125,5499.875,7413.828125,5499.875],\"key\":-402},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"logObject\",\"toPort\":\"logObject\",\"from\":220,\"to\":326,\"points\":[10180.14453125,1994.377152501692,10190.14453125,1994.377152501692,817.9453125,2054.377152501692,827.9453125,2054.377152501692],\"key\":-404},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"successSimCommand\",\"toPort\":\"simCommand\",\"from\":503,\"to\":485,\"points\":[20850.26171875,5573.77715250169,20860.26171875,5573.77715250169,20934.648168885535,5525.530216893688,20944.648168885535,5525.530216893688],\"key\":-479},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":503,\"to\":500,\"points\":[20850.26171875,5593.77715250169,20860.26171875,5593.77715250169,21457.46127036655,5609.016397613455,21768.103247010535,6503.699216893689,21778.103247010535,6503.699216893689],\"key\":-480},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":503,\"to\":489,\"points\":[20850.26171875,5593.77715250169,20860.26171875,5593.77715250169,21524.51103708191,5609.015998487223,21624.634497010535,5774.3682168936875,21634.634497010535,5774.3682168936875],\"key\":-481},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"status\",\"toPort\":\"in\",\"from\":503,\"to\":559,\"points\":[20850.26171875,5613.77715250169,20860.26171875,5613.77715250169,21558.103515625,4780,21568.103515625,4780],\"key\":-482},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"simFeedback\",\"toPort\":\"in\",\"from\":503,\"to\":560,\"points\":[20850.26171875,5633.77715250169,20860.26171875,5633.77715250169,21558.103515625,4860,21568.103515625,4860],\"key\":-483},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":540,\"to\":559,\"points\":[19541.3447265625,4800,19551.3447265625,4800,21558.103515625,4780,21568.103515625,4780],\"key\":-413},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":540,\"to\":560,\"points\":[19541.3447265625,4800,19551.3447265625,4800,21558.103515625,4860,21568.103515625,4860],\"key\":-484},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":513,\"to\":540,\"points\":[18860.4619140625,5609.699999999999,18870.4619140625,5609.699999999999,19208.103515625,4800,19218.103515625,4800],\"key\":-485},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"nextCommand\",\"from\":513,\"to\":480,\"points\":[18860.4619140625,5609.699999999999,18870.4619140625,5609.699999999999,18967.958715760535,5518.07636939538,18977.958715760535,5518.07636939538],\"key\":-486},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":548,\"to\":230,\"points\":[5535.4329692623905,2483.1922034338486,5545.4329692623905,2483.1922034338486,6559.999515625,2249.3420000000006,6569.999515625,2249.3420000000006],\"key\":-487,\"color\":\"#ccffcc\"}\n]}"
}