{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "ConnectorsDSL",
    "PicturesDSL",
    "TreeDSL",
    "KanbanDSL",
    "DataFlowDSL"
  ],
  "view": {
    "scale": 0.22977624784853393,
    "position": [
      3484.320012886823,
      -3430.341403303425
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"- The first 4 lines of the example on the left are created after pressing the \\\"Start\\\" button.\\n- Then the ChatGPT (assistant) give its first command.\\n- Then the user has to enter the status by simulating the robot and press \\\"Send\\\".\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"260 250\",\"key\":0,\"location\":\"5320 340\",\"group\":20,\"color\":\"lightyellow\"},\n{\"label\":\"user> [User] Please, Robert, put the toast in the oven\\n[Status] Robi's hand is empty\\n[Status] the toast is on the plate in front of Robi\\n[Status] The oven is near Robi\\nassistant> [Body] take_object(toast)\\nuser> [Status] toast in hand\\nassistant> [Body] put_object(toast, oven)\\nuser> [Status] failure because oven is closed\\nassistant> [Body] open_door(oven)\\nuser> [Status] oven is opened\\nassistant> [Body] put_object(toast, oven)\\nuser> [Status] toast in oven\\nassistant> Is there anything else I can assist you with?\\nuser> \",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"640 350\",\"key\":1,\"location\":\"4700 360\",\"group\":20},\n{\"label\":\"Execution example\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 30\",\"key\":2,\"location\":\"4690 150\",\"group\":20},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":3,\"location\":\"5370 50\",\"group\":20},\n{\"label\":\"By pressing the \\\"Start\\\" button you initialize the chat with the \\\"First user input\\\" and the \\\"Prompt\\\".\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"540 80\",\"key\":4,\"location\":\"4750 40\",\"group\":20},\n{\"label\":\"4)\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"60 30\",\"key\":5,\"location\":\"4690 40\",\"group\":20},\n{\"label\":\"Chat Data\",\"category\":\"DataFlow_DataSend\",\"size\":\"220 120\",\"buttons_\":[{\"name\":\"Send\",\"checked\":true}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"user> [User] Please, Robert, put the toast in the oven\\n[Status] Robi's hand is empty\\n[Status] the toast is on the plate in front of Robi\\n[Status] The oven is near Robi\\nassistant> [Body] take_object(toast)\\nuser> [Status] toast in hand\\nassistant> [Body] put_object(toast, oven)\\nuser> [Status] failure because oven is closed\\nassistant> [Body] open_door(oven)\\nuser> [Status] oven is opened\\nassistant> [Body] put_object(toast, oven)\\nuser> [Status] toast in oven\\nassistant> Is there anything else I can assist you with?\\nuser> \",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":6,\"location\":\"5340 -90\",\"editorPosition\":[1453,633,575,347],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":20},\n{\"label\":\"Open the editor of the \\\"Chat Data\\\" node and leave it open. This editor will be used to enter the status of Robi after each command send by ChatGPT or to enter new goal.\\nBy pressing the \\\"Send\\\" button, you send the last user input to the system.\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"540 80\",\"key\":7,\"location\":\"4750 -80\",\"group\":20},\n{\"label\":\"3)\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"60 30\",\"key\":8,\"location\":\"4690 -130\",\"group\":20},\n{\"label\":\"In this model, ChatGPT takes the role of a Robot controler called Robert. It controls a robot called Robi. and gets from it status describing the changes in the environment.\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 80\",\"key\":9,\"location\":\"4690 -496.201\",\"group\":20},\n{\"label\":\"Introduction\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 30\",\"key\":10,\"location\":\"4690 -546.201\",\"group\":20},\n{\"label\":\"First user input\",\"category\":\"DataFlow_Data\",\"size\":\"220 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> [User] Please, Robert, put the toast in the oven\\n[Status] Robi's hand is empty\\n[Status] the toast is on the plate in front of Robi\\n[Status] The oven is near Robi\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":11,\"location\":\"5340 -200\",\"editorPosition\":[57,637,1194,123],\"group\":20},\n{\"label\":\"Open the editor of the \\\"First user input\\\" node to get the request of the user and the first status of the robot\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"540 80\",\"key\":12,\"location\":\"4750 -210\",\"group\":20},\n{\"label\":\"2)\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"60 30\",\"key\":13,\"location\":\"4690 -210\",\"group\":20},\n{\"label\":\"1)\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"60 30\",\"key\":14,\"location\":\"4690 -306.201\",\"group\":20},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":15,\"location\":\"6990 -590\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":16,\"location\":\"6990 -520\"},\n{\"label\":\"Prompt for Robot Controller\",\"category\":\"DataFlow_Data\",\"size\":\"220 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a robot controller called Robert. You (Robert) controls a robot named Robi that lives in the real world. \\nRobi has a physical body with two arms with hands, and a mobile platform that allow it to move.\\nRobi is controlled by an API defining commands that can be used to act and perceive. \\n\\nList of commands of the API:\\n* This command allows you to open the door of an <object>\\n  command syntax: [Body] open_door( <object> )\\n  result syntax:\\n  - [Status] <object> is opened\\n  - [Status] <object> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object> can only be opened if it is closed\\n* This command allows you to close the door of an <object>\\n  command syntax: [Body] close_door( <object> )\\n  result syntax:\\n  - [Status] <object> is closed\\n  - [Status] <object> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object> can only be closed if it is opened\\n* This command allows you to take an <object> in your robotic hand\\n  command syntax: \\n  - [Body] take_object( <object> )\\n  result syntax:\\n  - [Status] <object> is in hand\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object> can only be taken if the hand is empty\\n* This command allows you to put an <object> which is in your hand in or on a <destination object>\\n  command syntax: \\n  - [Body] put_object( <object>, <destination object> )\\n  result syntax:\\n  - [Status] <object> is in or on <destination object>\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - <object> can only be put somewhere if it is in the hand\\n  - <object> can be put on a <destination object> that has a flat surface\\n  - <object> can be put in a <destination object> that is a container\\n\\nYou (Robert) have also several high level tasks to perform or consider.\\n\\nList of task to do:\\n  - Answer the questions asked by the human user\\n  - Perform actions requested by the human user using the API commands at your disposal.\\n\\nA human user can interact with you (Robert) using the following sysntax:\\n  - [User] <user request>\\nEach time you (Robert) decide to use a Command, you write the command and wait.\\nAt this point Robi will execute the command. This might take some time. When Robi finishes the execution of the command it will return a status to you. Tis can be a success or a failure.\\n\\nYou only send a single command at a time. You should not send the [Status] message.\\nWait now for the user input.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":17,\"location\":\"5340 -306.201\",\"editorPosition\":[363,79,702,846],\"group\":20},\n{\"label\":\"Open the editor of the \\\"Prompt for Robot Controller\\\" node if you want to get the prompt used by ChatGPT to respond. The available command for Robi are described in this node.\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"540 80\",\"key\":18,\"location\":\"4750 -306.201\",\"group\":20},\n{\"label\":\"How to use this model\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 30\",\"key\":19,\"location\":\"4690 -376.201\",\"group\":20},\n{\"label\":\"Documentation\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":20,\"location\":\"4660 -21.899157226562465\"},\n{\"label\":\"Engine Code 1.2\",\"color\":\"orange\",\"size\":\"220 110\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/00/90.js\",\"key\":21,\"location\":\"8490 -310\",\"isIncludeScript\":true,\"editorPosition\":[3004,59,703,768]},\n{\"label\":\"First user input\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> [User] Please, Robert, put the toast in the oven\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":22,\"location\":\"7330 279.90000000000003\",\"editorPosition\":[57,637,1194,123]},\n{\"label\":\"Text to JSON\",\"category\":\"DataFlow_Text2JSON\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"doCompute\":\"DataFlowDSL_Text2JSON\",\"fileTypeName\":\"Converter\",\"key\":23,\"location\":\"9320 140\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"JSON to Text\",\"category\":\"DataFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"doCompute\":\"DataFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":24,\"location\":\"8310 140\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Chat in JSON\",\"category\":\"DataFlow_Data\",\"size\":\"160 130\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[User] Can you open the fridge door for me?\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":25,\"location\":\"9640 140\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Response\",\"category\":\"DataFlow_Data\",\"size\":\"180 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[User] Can you open the fridge door for me?\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":26,\"location\":\"8030 70\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350]},\n{\"label\":\"Chat Data\",\"category\":\"DataFlow_DataSend\",\"size\":\"180 80\",\"buttons_\":[{\"name\":\"Send\",\"checked\":true}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"user> \\nassistant> [User] Can you open the fridge door for me?\\nuser> \",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":28,\"location\":\"8660 129.9\",\"editorPosition\":[1121,603,400,350],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"ChatJSON Splitter\",\"category\":\"DataFlow_ChatJSONSplitter\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"user\",\"name\":\"user\"}],\"doCompute\":\"DataFlowDSL_ChatJSONSplitter\",\"fileTypeName\":\"Splitter\",\"key\":29,\"location\":\"9880 140\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"User Data\",\"category\":\"DataFlow_Data\",\"size\":\"160 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"role\\\": \\\"user\\\",\\n  \\\"content\\\": \\\"\\\"\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":30,\"location\":\"10230 170\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[2525,1821,400,350]},\n{\"label\":\"History Data\",\"category\":\"DataFlow_Data\",\"size\":\"160 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"[]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":31,\"location\":\"10230 80\",\"editorPosition\":[2591,1446,400,350],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":32,\"location\":\"6010 269.8\"},\n{\"label\":\"Prompt for Robot Controller\",\"category\":\"DataFlow_Data\",\"size\":\"290 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a robot controller called Robert. You (Robert) controls a robot named Robi that lives in the real world. \\nRobi has a physical body with two arms with hands, and a mobile platform that allow it to move.\\nRobi is controlled by an API defining commands that can be used to act and perceive. \\n\\nList of commands of the API:\\n* This command allows you to open the door of an <object>\\n  command syntax: [Body] open_door( <object> )\\n  result syntax:\\n  - [Status] <object> is opened\\n  - [Status] <object> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object> can only be opened if it is closed\\n* This command allows you to close the door of an <object>\\n  command syntax: [Body] close_door( <object> )\\n  result syntax:\\n  - [Status] <object> is closed\\n  - [Status] <object> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object> can only be closed if it is opened\\n* This command allows you to take an <object> in your robotic hand\\n  command syntax: \\n  - [Body] take_object( <object> )\\n  result syntax:\\n  - [Status] <object> is in hand\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object> can only be taken if the hand is empty\\n* This command allows you to put an <object> which is in your hand in or on a <destination object>\\n  command syntax: \\n  - [Body] put_object( <object>, <destination object> )\\n  result syntax:\\n  - [Status] <object> is in or on <destination object>\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - <object> can only be put somewhere if it is in the hand\\n  - <object> can be put on a <destination object> that has a flat surface\\n  - <object> can be put in a <destination object> that is a container\\n\\nYou (Robert) have also several high level tasks to perform or consider.\\n\\nList of task to do:\\n  - Answer the questions asked by the human user\\n  - Perform actions requested by the human user using the API commands at your disposal.\\n\\nA human user can interact with you (Robert) using the following sysntax:\\n  - [User] <<user request>>\\nEach time you (Robert) decide to use a Command, you write the command and wait.\\nAt this point Robi will execute the command. This might take some time. When Robi finishes the execution of the command it will return a status to you. Tis can be a success or a failure.\\n\\nYou only send a single command at a time. You should not send the [Status] message.\\nWait now for the user input.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":33,\"location\":\"7160 60\",\"editorPosition\":[363,79,702,846]},\n{\"label\":\"Simple Interactive Robotic ChatGPT with AI DSL\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1000 50\",\"key\":34,\"location\":\"7580 -90\"},\n{\"label\":\"AI Flow DSL Test Robot3\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1560 30\",\"key\":35,\"location\":\"7210 -530\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"color\":\"SkyBlue\",\"props_\":[{\"name\":\"Name\",\"value\":\"tbd\"},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"@getDate()\"},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frankonello\"}],\"key\":37,\"location\":\"7200 -340\"},\n{\"label\":\"API Keys\",\"category\":\"DataFlow_Param\",\"size\":\"460 80\",\"props_\":[{\"name\":\"ChatGPT\",\"value\":\"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\"}],\"key\":38,\"location\":\"7930 -320\"},\n{\"label\":\"Compose Robot Simulator Prompt\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"commandList\",\"name\":\"commandList\"},{\"portId\":\"previousStatus\",\"name\":\"previousStatus\"},{\"portId\":\"command\",\"name\":\"command\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a robot named Robi that lives in the real world. \\nYou (Robi) have a physical body with two arms with hands, and a mobile platform that allow you to move.\\nYou (Robi) are controlled by an API defining commands that can be used to act and perceive.\\n\\nList of commands of the API:\\n<commandList>\\n\\nYou (Robi) live in a kitchen where several objects are present. You are in front of a long table on top of which are several objects. There are different kind of objects:\\n  - small objects that you can take with you hand if your hand is empty before you grasp.\\n  - bigger objects that you cannot take like oven, fridge,... and these objects may have doors that you can open or close or buttons that you can press to switch on/off.\\n  \\nThe environment status listing is defined by a list of object and their status. Status can be:\\n  - \\\"opened\\\" or \\\"closed\\\" for objects with doors\\n  - \\\"on\\\" or \\\"off\\\" for objects with a power switch button\\n  - \\\"in <container object>\\\" if an object has been placed inside a container\\n  - \\\"on <object surface>\\\" if an object is placed on top of another one\\n  - \\\"toasted\\\" or \\\"raw\\\" if an object like bred, toast, ... has been put in a powered on toaster or not\\n  - \\\"hot\\\", \\\"cold\\\" or \\\"warm\\\" depending if the object has been put in an oven or in a fridge, for example or if it is at ambiant temperature\\n    \\n  Your task, Robi consist in updating the environment status each time you receive a command. Consider each line of the environment status listing and check if the current command may have modified this line once executed. For example, after a take_object(toast) command the tstatus is toast is in Robi's hand, or after a open_door(oven) command the status is oven is opened,... Keep the lines that are independent of the current command as they are. \\n  \\nCurrent environment status:\\n<previousStatus>\\n\\nCurrent command:\\n<command>\\n\\nNew environment status:\",\"fileTypeName\":\"Template\",\"key\":44,\"location\":\"8130 684.2771525016921\",\"editorPosition\":[2982,69,690,617]},\n{\"label\":\"Initial Status\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Status] Robi's hand is empty\\n[Status] Plate1 is on table\\n[Status] toast1 is on plate1\\n[Status] toast1 is raw\\n[Status] toast1 is at room temperature\\n[Status] oven is on table\\n[Status] oven is empty\\n[Status] oven is closed\\n[Status] oven is off\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":49,\"location\":\"7120 430\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a robot named Robi that lives in the real world. \\nYou (Robi) have a physical body with two arms with hands, and a mobile platform that allow you to move.\\nYou (Robi) are controlled by an API defining commands that can be used to act and perceive.\\n\\nList of commands of the API:\\n* This command allows you to open the door of an <object>\\n  command syntax: [Body] open_door( <object> )\\n  result syntax:\\n  - [Status] <object> is opened\\n  - [Status] <object> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object> can only be opened if it is closed\\n* This command allows you to close the door of an <object>\\n  command syntax: [Body] close_door( <object> )\\n  result syntax:\\n  - [Status] <object> is closed\\n  - [Status] <object> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object> can only be closed if it is opened\\n* This command allows you to take an <object> in your robotic hand\\n  command syntax: \\n  - [Body] take_object( <object> )\\n  result syntax:\\n  - [Status] <object> is in hand\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object> can only be taken if the hand is empty\\n* This command allows you to put an <object> which is in your hand in or on a <destination object>\\n  command syntax: \\n  - [Body] put_object( <object>, <destination object> )\\n  result syntax:\\n  - [Status] <object> is in or on <destination object>\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - <object> can only be put somewhere if it is in the hand\\n  - <object> can be put on a <destination object> that has a flat surface\\n  - <object> can be put in a <destination object> that is a container\\n\\nYou (Robi) live in a kitchen where several objects are present. You are in front of a long table on top of which are several objects. There are different kind of objects:\\n  - small objects that you can take with you hand if your hand is empty before you grasp.\\n  - bigger objects that you cannot take like oven, fridge,... and these objects may have doors that you can open or close or buttons that you can press to switch on/off.\\n  \\nThe environment status listing is defined by a list of object and their status. Status can be:\\n  - \\\"opened\\\" or \\\"closed\\\" for objects with doors\\n  - \\\"on\\\" or \\\"off\\\" for objects with a power switch button\\n  - \\\"in <<container object>>\\\" if an object has been placed inside a container\\n  - \\\"on <<object surface>>\\\" if an object is placed on top of another one\\n  - \\\"toasted\\\" or \\\"raw\\\" if an object like bred, toast, ... has been put in a powered on toaster or not\\n  - \\\"hot\\\", \\\"cold\\\" or \\\"warm\\\" depending if the object has been put in an oven or in a fridge, for example or if it is at ambiant temperature\\n    \\n  Your task, Robi consist in updating the environment status each time you receive a command. Consider each line of the environment status listing and check if the current command may have modified this line once executed. For example, after a take_object(toast) command the tstatus is toast is in Robi's hand, or after a open_door(oven) command the status is oven is opened,... Keep the lines that are independent of the current command as they are. \\n  \\nCurrent environment status:\\n[Status] Robi's hand is empty\\n[Status] Plate1 is on table\\n[Status] toast1 is on plate1\\n[Status] toast1 is raw\\n[Status] toast1 is at room temperature\\n[Status] oven is on table\\n[Status] oven is empty\\n[Status] oven is closed\\n[Status] oven is off\\n\\nCurrent command:\\nassistant> [User] Hi Robert! How are you today?\\n\\nNew environment status:\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":54,\"location\":\"8500 699.6999999999999\",\"editorPosition\":[3303,92,653,894]},\n{\"label\":\"Compose Robot Controller Prompt\",\"category\":\"DataFlow_Template\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"commandList\",\"name\":\"commandList\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a robot controller called Robert. You (Robert) controls a robot named Robi that lives in the real world. \\nRobi has a physical body with two arms with hands, and a mobile platform that allow it to move.\\nRobi is controlled by an API defining commands that can be used to act and perceive. \\n\\nList of commands of the API:\\n<commandList>\\n\\nYou (Robert) have also several high level tasks to perform or consider.\\n\\nList of task to do:\\n  - Answer the questions asked by the human user\\n  - Perform actions requested by the human user using the API commands at your disposal.\\n\\nA human user can interact with you (Robert) using the following sysntax:\\n  - [User] <user request>\\nEach time you (Robert) decide to use a Command, you write the command and wait.\\nAt this point Robi will execute the command. This might take some time. When Robi finishes the execution of the command it will return a status to you. Tis can be a success or a failure.\\n\\nYou only send a single command at a time. You should not send the [Status] message.\\nWait now for the user input.\",\"fileTypeName\":\"Template\",\"key\":55,\"location\":\"6790 44.377152501692066\"},\n{\"label\":\"Command List\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"* This command allows you to open the door of an <object>\\n  command syntax: [Body] open_door( <object> )\\n  result syntax:\\n  - [Status] <object> is opened\\n  - [Status] <object> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object> can only be opened if it is closed\\n* This command allows you to close the door of an <object>\\n  command syntax: [Body] close_door( <object> )\\n  result syntax:\\n  - [Status] <object> is closed\\n  - [Status] <object> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object> can only be closed if it is opened\\n* This command allows you to take an <object> in your robotic hand\\n  command syntax: \\n  - [Body] take_object( <object> )\\n  result syntax:\\n  - [Status] <object> is in hand\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object> can only be taken if the hand is empty\\n* This command allows you to put an <object> which is in your hand in or on a <destination object>\\n  command syntax: \\n  - [Body] put_object( <object>, <destination object> )\\n  result syntax:\\n  - [Status] <object> is in or on <destination object>\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - <object> can only be put somewhere if it is in the hand\\n  - <object> can be put on a <destination object> that has a flat surface\\n  - <object> can be put in a <destination object> that is a container\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":56,\"location\":\"6410 59.8\"},\n{\"label\":\"Current Status\",\"category\":\"DataFlow_Data\",\"size\":\"220 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Status] Robi's hand is empty\\n[Status] Plate1 is on table\\n[Status] toast1 is on plate1\\n[Status] toast1 is raw\\n[Status] toast1 is at room temperature\\n[Status] oven is on table\\n[Status] oven is empty\\n[Status] oven is closed\\n[Status] oven is off\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":52,\"location\":\"7410 719.9\",\"editorPosition\":[2113,577,400,350]},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [User] Can you open the fridge door for me?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":51,\"location\":\"7800 760\",\"editorPosition\":[2058,636,400,350]},\n{\"label\":\"Response\",\"category\":\"DataFlow_Data\",\"size\":\"180 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[User] Can you open the fridge door for me?\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":57,\"location\":\"7930 490\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350]},\n{\"label\":\"JSON to Text\",\"category\":\"DataFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"doCompute\":\"DataFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":58,\"location\":\"8210 559.9\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"New Status\",\"category\":\"DataFlow_Data\",\"size\":\"180 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[Status] Robi's hand is empty\\\\n[Status] Plate1 is on table\\\\n[Status] toast1 is on plate1\\\\n[Status] toast1 is raw\\\\n[Status] toast1 is at room temperature\\\\n[Status] oven is on table\\\\n[Status] oven is empty\\\\n[Status] oven is closed\\\\n[Status] oven is off\\\\n\\\\nCurrent command:\\\\n[Body] open_door(oven)\\\\n\\\\nNew environment status:\\\\n[Status] Robi's hand is empty\\\\n[Status] Plate1 is on table\\\\n[Status] toast1 is on plate1\\\\n[Status] toast1 is raw\\\\n[Status] toast1 is at room temperature\\\\n[Status] oven is on table\\\\n[Status] oven is empty\\\\n[Status] oven cannot be opened because it is already closed\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":60,\"location\":\"9300 690\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350]},\n{\"label\":\"JSON to Text\",\"category\":\"DataFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"doCompute\":\"DataFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":61,\"location\":\"9580 760\",\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"User input\",\"category\":\"DataFlow_Data\",\"size\":\"200 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Status] Robi's hand is empty\\n[Status] Plate1 is on table\\n[Status] toast1 is on plate1\\n[Status] toast1 is raw\\n[Status] toast1 is at room temperature\\n[Status] oven is on table\\n[Status] oven is empty\\n[Status] oven is closed\\n[Status] oven is off\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":59,\"location\":\"8050 270\",\"editorPosition\":[57,637,1194,123]},\n{\"label\":\"Execution Engine\",\"category\":\"Hierarchy_Engine\",\"size\":\"240 80\",\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n  // Uncomment the next line to start debugging\\n  //debugger;\\n// console.log( 'NodeData Info: '+JSON.stringify( nodeData ) );\\n// console.log( 'Button Label: '+obj.data.name );\\n// console.log( 'Button Status: '+obj.data.checked );\\n\\nEngine_executeAction( nodeData, obj.data.name );\",\"buttons_\":[{\"name\":\"Reset\",\"checked\":true},{\"name\":\"Step\",\"checked\":true}],\"props_\":[{\"name\":\"isAutostart\",\"value\":\"false\"},{\"name\":\"isStepByStep\",\"value\":\"true\",\"valueChanged\":true},{\"name\":\"isStepByStepDeepFirst\",\"value\":\"true\",\"valueChanged\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isNodePersistencyUsed\",\"value\":\"true\"}],\"key\":62,\"location\":\"7430 -330\",\"editorPosition\":[2018,102,516,180]},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"doCompute\":\"DataFlowDSL_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"inHistory\",\"name\":\"inHistory\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":63,\"location\":\"7660 80\"},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"doCompute\":\"DataFlowDSL_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"inHistory\",\"name\":\"inHistory\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":65,\"location\":\"8900 680\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":33,\"to\":63,\"points\":[7490.4619140625,60,7500.4619140625,60,7574.544921875,60,7584.544921875,60],\"key\":-2},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":59,\"to\":28,\"points\":[8290.4619140625,270,8300.4619140625,270,8564.877359129641,268.770991259794,8618.103515625,129.9,8628.103515625,129.9],\"key\":-3},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":32,\"to\":22,\"points\":[6130.4619140625,269.8,6140.4619140625,269.8,7288.103515625,279.90000000000003,7298.103515625,279.90000000000003],\"key\":-4},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":24,\"to\":28,\"points\":[8590.4619140625,140,8600.4619140625,140,8618.103515625,129.9,8628.103515625,129.9],\"key\":-5,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":23,\"to\":25,\"points\":[9600.4619140625,140,9610.4619140625,140,9598.103515625,140,9608.103515625,140],\"key\":-6,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":63,\"to\":26,\"points\":[7984.0205078125,70,7994.0205078125,70,7988.103515625,70,7998.103515625,70],\"key\":-7},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":25,\"to\":29,\"points\":[9840.4619140625,140,9850.4619140625,140,9838.103515625,140,9848.103515625,140],\"key\":-9},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"user\",\"toPort\":\"in\",\"from\":29,\"to\":30,\"points\":[10182.234375,150,10192.234375,150,10188.103515625,170,10198.103515625,170],\"key\":-10},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":29,\"to\":31,\"points\":[10182.234375,130,10192.234375,130,10188.103515625,80,10198.103515625,80],\"key\":-11},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":30,\"to\":63,\"points\":[10430.4619140625,170,10440.4619140625,170,10470,170,10470,-20,7524.8773591296695,-21.22900874020663,7524.8773591296695,68.77099125979336,7574.544921875,100,7584.544921875,100],\"key\":-12},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"inHistory\",\"from\":31,\"to\":63,\"points\":[10430.4619140625,80,10440.4619140625,80,10450,80,10450,0,7564.8773591296695,8.87099125979396,7574.544921875,80,7584.544921875,80],\"key\":-13},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":26,\"to\":24,\"points\":[8250.4619140625,70,8260.4619140625,70,8268.103515625,140,8278.103515625,140],\"key\":-14},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":49,\"to\":52,\"points\":[7360.4619140625,430,7370.4619140625,430,7368.103515625,719.9,7378.103515625,719.9],\"key\":-20},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":32,\"to\":56,\"points\":[6130.4619140625,269.8,6140.4619140625,269.8,6368.103515625,59.8,6378.103515625,59.8],\"key\":-29},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"commandList\",\"from\":56,\"to\":44,\"points\":[6650.4619140625,59.8,6660.4619140625,59.8,6650,660,8006.3935546875,664.2771525016921,8016.3935546875,664.2771525016921],\"key\":-30},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"previousStatus\",\"from\":52,\"to\":44,\"points\":[7670.4619140625,719.9,7680.4619140625,719.9,8006.3935546875,684.2771525016921,8016.3935546875,684.2771525016921],\"key\":-31},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":32,\"to\":49,\"points\":[6130.4619140625,269.8,6140.4619140625,269.8,7078.103515625,430,7088.103515625,430],\"key\":-24},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":44,\"to\":54,\"points\":[8410.4619140625,684.2771525016921,8420.4619140625,684.2771525016921,8458.103515625,699.6999999999999,8468.103515625,699.6999999999999],\"key\":-21,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":55,\"to\":33,\"points\":[7070.4619140625,44.377152501692066,7080.4619140625,44.377152501692066,7118.103515625,60,7128.103515625,60],\"key\":-22,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"commandList\",\"from\":56,\"to\":55,\"points\":[6650.4619140625,59.8,6660.4619140625,59.8,6675.7451171875,44.377152501692066,6685.7451171875,44.377152501692066],\"key\":-23},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":61,\"to\":52,\"points\":[9860.4619140625,760,9870.4619140625,760,9870,830,8810,830,7370,830,7368.103515625,719.9,7378.103515625,719.9],\"key\":-27},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":54,\"to\":65,\"points\":[8680.4619140625,699.6999999999999,8690.4619140625,699.6999999999999,8814.544921875,700,8824.544921875,700],\"key\":-34},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"command\",\"from\":51,\"to\":44,\"points\":[7980.4619140625,760,7990.4619140625,760,8006.3935546875,704.2771525016921,8016.3935546875,704.2771525016921],\"key\":-35},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":57,\"to\":58,\"points\":[8150.4619140625,490,8160.4619140625,490,8168.103515625,559.9,8178.103515625,559.9],\"key\":-36},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":63,\"to\":57,\"points\":[7984.0205078125,90,7994.0205078125,90,7888.103515625,490,7898.103515625,490],\"key\":-37},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":58,\"to\":51,\"points\":[8490.4619140625,559.9,8500.4619140625,559.9,8500,630,7770,630,7758.103515625,760,7768.103515625,760],\"key\":-38,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":60,\"to\":61,\"points\":[9520.4619140625,690,9530.4619140625,690,9538.103515625,760,9548.103515625,760],\"key\":-39},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":65,\"to\":60,\"points\":[9224.0205078125,690,9234.0205078125,690,9258.103515625,690,9268.103515625,690],\"key\":-40},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":52,\"to\":59,\"points\":[7670.4619140625,719.9,7680.4619140625,719.9,8008.103515625,270,8018.103515625,270],\"key\":-42},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":28,\"to\":23,\"points\":[8880.4619140625,129.9,8890.4619140625,129.9,9278.103515625,140,9288.103515625,140],\"key\":-32}\n]}"
}