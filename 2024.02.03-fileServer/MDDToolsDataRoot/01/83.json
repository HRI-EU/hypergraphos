{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "ConnectorsDSL",
    "PicturesDSL",
    "TreeDSL",
    "KanbanDSL",
    "DataFlowDSL"
  ],
  "view": {
    "scale": 2.159449267024681,
    "position": [
      14124.041109645335,
      -8710.596829574772
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"API Keys\",\"category\":\"DataFlow_Param\",\"size\":\"460 80\",\"props_\":[{\"name\":\"ChatGPT\",\"value\":\"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\"}],\"key\":18,\"location\":\"17490 -8680\"},\n{\"label\":\"NEW AI Components\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2480 120\",\"key\":20,\"location\":\"14950 -8600\",\"font\":\"250px sans-serif\"},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":156,\"location\":\"14290 -8660\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":157,\"location\":\"14300 -8600\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"260 80\",\"color\":\"SkyBlue\",\"props_\":[{\"name\":\"Name\",\"value\":\"SMILE LLM-Based Planner\",\"valueChanged\":true},{\"name\":\"Version\",\"value\":\"2.8\",\"valueChanged\":true},{\"name\":\"Date\",\"value\":\"@getDate()\"},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frank\",\"valueChanged\":true}],\"key\":158,\"location\":\"14590 -8680\"},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":425,\"location\":\"21250 -8170\",\"editorPosition\":[891,722,643,607],\"group\":82},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 1760\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":426,\"location\":\"21680 -8170\",\"doCompute\":\"DataFlow_Message\",\"group\":82},\n{\"label\":\"Root Function for Node Execution\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"363 107\",\"key\":419,\"location\":\"20700 -6290\",\"group\":82},\n{\"label\":\"Engine Compute Library 1.0\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Compute Library\\n//------------------------------\\nfunction Engine_getOutput( data, name, defaultValue ) {\\n  let result = defaultValue;\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  if( ni.output[name] != undefined ) {\\n    result = ni.output[name];\\n  }\\n  return( result );\\n}\\nfunction Engine_getComputeBarrier( data ) {\\n  let result = [];\\n  const cb = graphData.me.getProperty( graphData.modelId, \\n                                       data,\\n                                       'computeBarrier',\\n                                       null );\\n  if( cb ) {\\n    result = cb.split( ',' ).map( n => n.trim() );\\n  } else {\\n    result = Engine_getInputNameList( data );\\n  }\\n  return( result );\\n}\\nfunction Engine_updateInput( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  // If doCompute just executed => reset inputs isNew state\\n  if( ni.isCompute ) {\\n    for( const inName in ni.inputState ) {\\n      ni.inputState[inName].isNew = false;\\n    }\\n  }\\n  \\n  // Set new input value\\n  Engine_setInput( data, name, value );\\n  \\n  let isCompute = true;\\n  // Get input names for barrier\\n  const inNameList = Engine_getComputeBarrier( data );\\n  for( const inName of inNameList ) {\\n    if( Engine_isInputConnected( data, inName ) ) {\\n      let isNewInput = false;\\n      if( ni.inputState[inName] ) {\\n        isNewInput = ni.inputState[inName].isNew;\\n      }\\n      isCompute &&= isNewInput;\\n      // Short cirtuit computation\\n      if( !isCompute ) {\\n        break;\\n      }\\n    }\\n  }\\n  // Update compute status\\n  ni.isCompute = isCompute;\\n}\\nfunction Engine_fireOutput( data, name, value ) {\\n  // Fire only connected outputs\\n  if( Engine_isOutputConnected( data, name ) ) {\\n    // Get node instance\\n    const ni = Engine_getNodeInstance( data );\\n    \\n    // Save output\\n    ni.output[name] = value;\\n  }\\n}\\nfunction Engine_doCompute( data ) {\\n  if( globalThis[ `${data.category}_doCompute`] ) {\\n    // Get all input values\\n    Engine_fetchInputs( data );\\n    // Execute compute fungion\\n    globalThis[ `${data.category}_doCompute`]( data );\\n  } else {\\n    console.log( 'Compute not found for', data.category );\\n  }\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":429,\"location\":\"20740 -6030.300000000001\",\"isIncludeScript\":false,\"editorPosition\":[2433,113,662,1203],\"group\":82},\n{\"label\":\"Engine Base API 1.0\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Base API\\n//------------------------------\\nfunction Engine_get( data, name, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Set default value if property did not exist\\n  if( ni.property[name] === undefined ) {\\n    ni.property[name] = defaultValue;\\n  }\\n  // Return property value\\n  return( ni.property[name] );\\n}\\nfunction Engine_set( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Set property value\\n  ni.property[name] = value;\\n}\\nfunction Engine_getInput( data, name, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Update default value\\n  if( ni.input[name] == undefined ) {\\n    ni.input[name] = defaultValue;\\n  }\\n  return( ni.input[name] );\\n}\\nfunction Engine_setInput( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Update value\\n  ni.input[name] = value;\\n  // Update state\\n  if( !ni.inputState[name] ) {\\n    ni.inputState[name] = {};\\n  }\\n  ni.inputState[name].isNew = true;\\n}\\nfunction Engine_setInputDefault( data, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  // Get list of input names\\n  const inNameList = Engine_getInputNameList( data );\\n  for( const inName of inNameList ) {\\n    if( ni.input[inName] == undefined ) {\\n      ni.input[inName] = defaultValue;\\n    }\\n  }\\n}\\nfunction Engine_getLanguage( data ) {\\n  let result = 'text';\\n  if( data.fileType ) {\\n    const [format, language] = data.fileType.split( '/' );\\n    result = language;\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":430,\"location\":\"20740 -5890.200000000001\",\"isIncludeScript\":false,\"editorPosition\":[1856,1030,531,937],\"group\":82},\n{\"label\":\"Engine Base Library 1.0\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Base Library\\n//------------------------------\\n\\n// Initialize Engine\\nif( !graphData.nodeInstance ) {\\n  Engine_updateGraphModel();\\n  Engine_clearNodeInstance();\\n}\\n\\n//------------------------------\\n// Engine Base Library\\n//------------------------------\\nfunction Engine_updateGraphModel() {\\n  graphData.g = getMainGraph();\\n  graphData.modelId = 'main';\\n  \\n  // Initialize model navigation\\n  const model = graphData.g.getJSONModel();\\n  graphData.me = new ModelExplorer();\\n  graphData.me.setJSONModel( graphData.modelId, model );\\n}\\nfunction Engine_getNodeInstance( data ) {\\n  // If node not existing => create it\\n  if( !graphData.nodeInstance[data.key] ) {\\n    graphData.nodeInstance[data.key] = {\\n      property: {},\\n      input: {},\\n      inputState: {},\\n      output: {},\\n      isCompute: false,\\n    };\\n  }\\n  // Return node instance\\n  return( graphData.nodeInstance[data.key] );\\n}\\nfunction Engine_clearNodeInstance() {\\n  // Persistent link data for nodes\\n  graphData.nodeInstance = {};\\n  graphData.engineInstance = {\\n    currNodeSelectionKey: -1, // Animation\\n  };\\n}\\nfunction Engine_isNodeEnabled( data ) {\\n  let result = true;\\n  if( data.isGroup ) {\\n    result = ( ( data.color == undefined ) || ( data.color.toLowerCase() == 'green' ) );\\n  } else if( data.group !== undefined ) {\\n    const gData = graphData.me.getNode( graphData.me.modelId, data.group );\\n    result = ( gData && ( gData.color.toLowerCase() == 'green' ) );\\n  }\\n  return( result );\\n}\\nfunction Engine_getInputLinkDataList( data, name ) {\\n  const result = [];\\n  const pushInDataList = ()=> {\\n    // Get input link from port name\\n    const inDataList = graphData.me.getLinkListFanInByNodeKey( graphData.modelId, \\n                                                     data.key,\\n                                                     name );\\n    for( const inData of inDataList ) {\\n      if( Engine_isNodeEnabled( inData ) ) {\\n        result.push( inData );\\n      }\\n    }\\n  };\\n  \\n  // Check if name exist\\n  if( data.in_ ) {\\n    for( const inInfo of data.in_ ) {\\n      if( inInfo.portId == name ) {\\n        pushInDataList();\\n        break;\\n      }\\n    }\\n  } else {\\n    name = undefined;  // No input name in this case\\n    pushInDataList();\\n  }\\n  return( result );\\n}\\nfunction Engine_getOutputLinkDataList( data, name ) {\\n  const result = [];\\n  const pushOutDataList = ()=> {\\n    // Get output link from port name\\n    const outDataList = graphData.me.getLinkListFanOutByNodeKey( graphData.modelId,\\n                                                    data.key,\\n                                                    name );\\n    for( const outData of outDataList ) {\\n      if( Engine_isNodeEnabled( outData ) ) {\\n        result.push( outData );\\n      }\\n    }\\n  };\\n  \\n  // Check if name exist\\n  if( data.out_ ) {\\n    for( const outInfo of data.out_ ) {\\n      if( outInfo.portId == name ) {\\n        pushOutDataList();\\n        break;\\n      }\\n    } \\n  } else {\\n    name = undefined; // No input name in this case\\n    pushOutDataList();\\n  }\\n  return( result );\\n}\\nfunction Engine_fetchInputs( data ) {\\n  const storeValue = ( data, fromInName, toInName, defaultValue )=> {\\n    const inLinkList = graphData.me.getLinkListFanInByNodeKey( graphData.modelId,\\n                                                            data.key,\\n                                                            fromInName );\\n    for( const inLink of inLinkList ) {\\n      // Get source node\\n      const outData = graphData.me.getNode( graphData.me.modelId, inLink.from );\\n      \\n      if( Engine_isNodeEnabled( outData ) ) {\\n        const value = Engine_getOutput( outData, inLink.fromPort, defaultValue );\\n        Engine_setInput( data, toInName, value );\\n        break;\\n      }\\n    }\\n  }\\n  // Loop over all connected inputs\\n  const inNameList = Engine_getInputNameList( data, true );\\n  // Case of component with input ports\\n  if( inNameList.length ) {\\n    for( const inName of inNameList ) {\\n      // Store in input inName the first enabled link value comming into it\\n      storeValue( data, inName, inName, null );\\n    }\\n  } else {\\n    // Case of component without input ports\\n    // Store in input '*' the first enabled link value comming into it\\n    storeValue( data, undefined, '*', undefined );\\n  }\\n}\\nfunction Engine_isInputConnected( data, name ) {\\n  // Get input link list\\n  const list = Engine_getInputLinkDataList( data, name );\\n  // If input is connected\\n  return( list && list.length )\\n}\\nfunction Engine_isOutputConnected( data, name ) {\\n  // Get output link list\\n  const list = Engine_getOutputLinkDataList( data, name );\\n  // If output is connected\\n  return( list && list.length )\\n}\\nfunction Engine_getInputNameList( data, isOnlyConnected ) {\\n  const result = []\\n  if( data.in_ ) {\\n    for( const inInfo of data.in_ ) {\\n      const name = inInfo.portId;\\n      // If we want only connected one => skip unconnected one\\n      if( ( isOnlyConnected != undefined ) && isOnlyConnected ) {\\n        if( !Engine_isInputConnected( data, name ) ) {\\n          continue;\\n        }\\n      }\\n      result.push( name );\\n    }\\n  }\\n  return( result );\\n}\\nfunction Engine_getOutputNameList( data, isOnlyConnected ) {\\n  const result = []\\n  if( data.out_ ) {\\n    for( const outInfo of data.out_ ) {\\n      const name = outInfo.portId;\\n      // If we want only connected one => skip unconnected one\\n      if( ( isOnlyConnected != undefined ) && isOnlyConnected ) {\\n        if( !Engine_isOutputConnected( data, name ) ) {\\n          continue;\\n        }\\n      }\\n      result.push( name );\\n    }\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":432,\"location\":\"20740 -6170.1\",\"isIncludeScript\":false,\"editorPosition\":[3113,92,570,1711],\"group\":82},\n{\"label\":\"GenerationRoot Library 1.0\",\"color\":\"orange\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"\\nfunction generationRoot( startNodeData, onGenerated ) {\\n  console.log( 'Generating...' );\\n  \\n  // Setup graph information\\n  if( !graphData.startNodeData ) {\\n    // Generation Info\\n    graphData.startNodeData = startNodeData;\\n    graphData.onGenerated = onGenerated;\\n    // Initialize graph info\\n    graphData.g = getMainGraph();\\n    graphData.modelId = 'main';\\n  }\\n\\n  // Info already set, let's start\\n  startGeneration();\\n}\\nfunction startGeneration() {\\n  // Initialize tempalte generator\\n  if( !graphData.lbg ) {\\n    graphData.lbg = new LineBlockGenerator();\\n  }\\n  \\n  // Reset counters\\n  graphData.count = {\\n    fileCount: 0,\\n    dirCount: 0,\\n    nodeCount: 0,\\n  };\\n  // Reset nodeInstance data (input/outputs)\\n  Engine_clearNodeInstance();\\n  \\n  // Initialize model navigation\\n  const model = graphData.g.getJSONModel();\\n  graphData.me = new ModelExplorer();\\n  graphData.me.setJSONModel( graphData.modelId, model );\\n  \\n  // Initialize Template Manager\\n  graphData.lb = new LineBlockGenerator();\\n  \\n  // Get deployment node\\n  graphData.isOverwrite = graphData.me.getProperty( graphData.modelId, \\n                                                    graphData.startNodeData, \\n                                                    'isOverwrite', true );\\n  \\n  // Get output link from name port\\n  const outDataList = graphData.me.getNodeListFanOutByNodeKey( graphData.modelId, \\n                                                               graphData.startNodeData.key );\\n\\n  // Loop over out nodes\\n  for( const outData of outDataList ) {\\n    if( outData.isGroup ) {\\n      if( !Engine_isNodeEnabled( outData ) ) {\\n        continue;\\n      }\\n    }\\n    // Count dir\\n    ++graphData.count.dirCount;\\n    // Generate group\\n    generateGroup( outData );\\n  }\\n    \\n  // Simulation of done\\n  setTimeout( generationDone, 2*1000 );\\n}\\nfunction generationDone() {\\n  if( graphData.onGenerated ) {\\n    const msg = `Dirs: ${graphData.count.dirCount} - `+\\n                `Files: ${graphData.count.fileCount} - `+\\n                `Nodes: ${graphData.count.nodeCount}`;\\n    graphData.onGenerated( msg );\\n  }\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":437,\"location\":\"20750 -4830.1\",\"isIncludeScript\":false,\"editorPosition\":[15,785,592,1289],\"group\":82},\n{\"label\":\"Engine Code 1.4\",\"color\":\"orange\",\"size\":\"290 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/72.js\",\"key\":443,\"location\":\"20690 -7690\",\"isIncludeScript\":false,\"editorPosition\":[2320,17,714,1401],\"group\":82},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1820 220\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":447,\"location\":\"14930 -7810\",\"group\":455,\"doCompute\":\"DataFlow_Message\",\"label\":\"\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Where is the capital of Italy located?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":452,\"location\":\"14200 -7600\",\"editorPosition\":[1444,1144,400,350],\"group\":455,\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":454,\"location\":\"14000 -7600\",\"group\":455},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":444,\"location\":\"14000 -8000\",\"group\":455},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"From now on, alway answer in italian language.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":445,\"location\":\"14200 -8000\",\"editorPosition\":[1438,800,402,97],\"group\":455,\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":446,\"location\":\"14000 -7500\",\"group\":455},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"What did I asked you before?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":448,\"location\":\"14200 -7500.200000000001\",\"group\":455,\"doCompute\":\"DataFlow_Data\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":450,\"location\":\"14500 -8000\",\"group\":455,\"doCompute\":\"DataFlow_Message\",\"label\":\"From now on, alway answer in italian language.\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":451,\"location\":\"14500 -7600\",\"group\":455,\"doCompute\":\"DataFlow_Message\",\"label\":\"Where is the capital of Italy located?\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":453,\"location\":\"14500 -7500\",\"group\":455,\"doCompute\":\"DataFlow_Message\",\"label\":\"What did I asked you before?\"},\n{\"label\":\"Example of ChatGPT\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":455,\"location\":\"13980 -7750\",\"font\":\"75px sans-serif\"},\n{\"label\":\"Add history\",\"category\":\"DataFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"In this template we have history content:\\n<history>\\n\\nThen we have user content:\\n<user>\\n\\nThen we have the assistant content:\\n<assistant>\\n\\nThis is it :-)\",\"fileTypeName\":\"Template\",\"key\":449,\"location\":\"14650 -6940\",\"editorPosition\":[918,39,712,140],\"group\":456,\"doCompute\":\"DataFlow_Template\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the HISTORY.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":460,\"location\":\"14210 -7110.200000000001\",\"editorPosition\":[1438,800,402,97],\"group\":456,\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":461,\"location\":\"14010 -7110\",\"group\":456},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":463,\"location\":\"14570 -7170\",\"group\":456,\"doCompute\":\"DataFlow_Message\",\"label\":\"This is the HISTORY.\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":466,\"location\":\"14010 -7010\",\"group\":456},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the ASSISTANT text.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":467,\"location\":\"14210 -7010.200000000001\",\"editorPosition\":[1438,800,402,97],\"group\":456,\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":470,\"location\":\"14010 -6900\",\"group\":456},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the USER request.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":471,\"location\":\"14210 -6900.200000000001\",\"editorPosition\":[1438,800,402,97],\"group\":456,\"doCompute\":\"DataFlow_Data\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":458,\"location\":\"14570 -7070\",\"group\":456,\"doCompute\":\"DataFlow_Message\",\"label\":\"This is the ASSISTANT text.\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":459,\"location\":\"14580 -6810\",\"group\":456,\"doCompute\":\"DataFlow_Message\",\"label\":\"This is the USER request.\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"980 520\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":464,\"location\":\"15390 -6980\",\"group\":456,\"doCompute\":\"DataFlow_Message\",\"label\":\"In this template we have history content:\\nThis is the HISTORY.\\n\\nThen we have user content:\\nThis is the USER request.\\n\\nThen we have the assistant content:\\nThis is the ASSISTANT text.\\n\\nThis is it :-)\"},\n{\"label\":\"Example of Template Generator\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":456,\"location\":\"13990 -6980\",\"font\":\"75px sans-serif\"},\n{\"label\":\"Example of Concatenation\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":462,\"location\":\"14000 -6230\",\"font\":\"75px sans-serif\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the HISTORY.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":468,\"location\":\"14219.999658818393 -6350.300464758519\",\"editorPosition\":[1438,800,402,97],\"group\":462,\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":469,\"location\":\"14020 -6350\",\"group\":462},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":472,\"location\":\"14580 -6420\",\"group\":462,\"doCompute\":\"DataFlow_Message\",\"label\":\"This is the HISTORY.\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":473,\"location\":\"14020 -6250\",\"group\":462},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the ASSISTANT text.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":474,\"location\":\"14219.999658818393 -6250.300464758519\",\"editorPosition\":[1438,800,402,97],\"group\":462,\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":475,\"location\":\"14020 -6140\",\"group\":462},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"This is the USER request.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":476,\"location\":\"14219.999658818393 -6140.300464758519\",\"editorPosition\":[1438,800,402,97],\"group\":462,\"doCompute\":\"DataFlow_Data\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":477,\"location\":\"14570 -6330\",\"group\":462,\"doCompute\":\"DataFlow_Message\",\"label\":\"This is the ASSISTANT text.\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":478,\"location\":\"14580 -6050\",\"group\":462,\"doCompute\":\"DataFlow_Message\",\"label\":\"This is the USER request.\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"980 520\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":479,\"location\":\"15390 -6230\",\"group\":462,\"doCompute\":\"DataFlow_Message\",\"label\":\"This is the HISTORY.\\nThis is the ASSISTANT text.\\nThis is the USER request.\"},\n{\"label\":\"\",\"category\":\"DataFlow_Concatenate\",\"color\":\"lightseagreen\",\"in_\":[{\"portId\":\"in0\",\"name\":\"in0\"},{\"portId\":\"in1\",\"name\":\"in1\"},{\"portId\":\"in2\",\"name\":\"in2\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":481,\"location\":\"14720 -6180.1\",\"group\":462,\"doCompute\":\"DataFlow_Concatenate\",\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"}]},\n{\"label\":\"Folder Content\",\"size\":\"150 100\",\"category\":\"Hierarchy_FolderContent\",\"fileType\":\"text/json\",\"isDir\":true,\"fileURL\":\"/fileServer/upload/oldTest.json\",\"key\":83,\"location\":\"17260 -8010\"},\n{\"label\":\"OpenAI ChatGPT\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"},{\"portId\":\"error\",\"name\":\"error\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\",\"valueChanged\":true},{\"name\":\"hasHistory\",\"value\":\"true\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\",\"valueChanged\":true},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'doCompute' ) {\\n  const systemInput = Engine_getInput( nodeData, 'system', '' );\\n  const inInput = Engine_getInput( nodeData, 'in', '' );\\n  const history = Engine_get( nodeData, 'history', [] );\\n  \\n  let isNewChat = Engine_isInputNew( nodeData, 'system' );\\n  const hasHistory = Engine_getProperty( nodeData, 'hasHistory' );\\n  \\n  if( !hasHistory ) {\\n    isNewChat = true;\\n  }\\n  \\n  if( isNewChat ) {\\n    // Empty history and add new system prompt\\n    history.splice( 0, history.length );\\n    if( systemInput ) {\\n      const entry = { role: 'system', content: systemInput };\\n      history.push( entry );\\n    }\\n  }\\n  if( inInput ) {\\n    const entry = { role: 'user', content: inInput };\\n    // Update history\\n    history.push( entry );\\n  }\\n  \\n  // Define model from the component property\\n  const model = Engine_getProperty( nodeData, 'model' );\\n  appData.chatGPT.setParam( 'model', model );\\n      \\n  // Ask chatGPT\\n  appData.chatGPT.getResponse( history, (response)=>{\\n    // Update history\\n    history.push( { role: 'assistant', content: response } );\\n    // Genereate output\\n    Engine_fireOutput( nodeData, 'out', response );\\n  });\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":84,\"location\":\"14550 -7800\",\"editorPosition\":[557,632,599,726],\"group\":455},\n{\"label\":\"Engine_updateGraphModel()\\nEngine_getNodeInstance( data )\\nEngine_clearNodeInstance()\\nEngine_isNodeEnabled( data )\\nEngine_getInputLinkDataList( data, name )\\nEngine_getOutputLinkDataList( data, name )\\nEngine_fetchInputs( data )\\nEngine_isInputConnected( data, name )\\nEngine_isOutputConnected( data, name )\\nEngine_getInputNameList( data, isOnlyConnected )\\nEngine_getOutputNameList( data, isOnlyConnected )\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 600\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":54,\"location\":\"21770 -6530\",\"doCompute\":\"DataFlow_Message\",\"group\":82},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":true}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":55,\"location\":\"21340 -6780\",\"group\":82},\n{\"label\":\"Engine_getOutput( data, name, defaultValue )\\nEngine_getComputeBarrier( data )\\nEngine_updateInput( data, name, value )\\nEngine_fireOutput( data, name, value )\\nEngine_doCompute( data )\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 320\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":58,\"location\":\"21790 -6030\",\"doCompute\":\"DataFlow_Message\",\"group\":82},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":59,\"location\":\"21400 -6030\",\"group\":82},\n{\"label\":\"Engine_get( data, name, defaultValue )\\nEngine_set( data, name, value )\\nEngine_getInput( data, name, defaultValue )\\nEngine_setInput( data, name, value )\\nEngine_setInputDefault( data, defaultValue )\\nEngine_getLanguage( data )\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 430\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":62,\"location\":\"21800 -5600\",\"doCompute\":\"DataFlow_Message\",\"group\":82},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":63,\"location\":\"21420 -5600\",\"group\":82},\n{\"label\":\"Get API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = Engine_getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          Engine_fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\nEngine_fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":60,\"location\":\"21460 -4820\",\"group\":82},\n{\"label\":\"generationRoot( startNodeData, onGenerated )\\nstartGeneration()\\ngenerationDone()\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 430\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":61,\"location\":\"21840 -4820\",\"doCompute\":\"DataFlow_Message\",\"group\":82},\n{\"label\":\"HChat/1.0/HChat.css\",\"color\":\"orange\",\"size\":\"300 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"lib/HChat/1.0/HChat.js\",\"key\":70,\"location\":\"13830 -5671\",\"isIncludeScript\":false,\"group\":69},\n{\"label\":\"HChat/1.0/HChat.css\",\"color\":\"peachpuff\",\"size\":\"300 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"CSS\",\"fileType\":\"text/css\",\"fileURL\":\"lib/HChat/1.0/HChat.css\",\"key\":72,\"location\":\"13830 -5731\",\"isIncludeScript\":false,\"group\":69},\n{\"label\":\"Libraries\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":69,\"location\":\"13810 -5700\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"460 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"messageIn\",\"name\":\"messageIn\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: all, url: ~/allUsers.png }\\n- { name: user1, url: ~/user1.png }\\n- { name: user2, url: /fileServer/pictures/Monalisa.png }\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlowDSL_Chat\",\"key\":65,\"location\":\"14750 -5720.1\",\"editorPosition\":[449,680,400,350]},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1570 490\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":73,\"location\":\"15480 -5680\",\"label\":\"[\\n  {\\n    \\\"text\\\": \\\"Can not be sent even more\\\",\\n    \\\"sender\\\": \\\"user1\\\",\\n    \\\"receiver\\\": \\\"all\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Can not be sent even more bla\\\",\\n    \\\"sender\\\": \\\"user1\\\",\\n    \\\"receiver\\\": \\\"all\\\"\\n  }\\n]\",\"doCompute\":\"DataFlow_Message\"},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1390 300\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":71,\"location\":\"15440 -5230\",\"doCompute\":\"DataFlow_Message\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":76,\"location\":\"14260 -5720\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\r\\n  \\\"sender\\\": \\\"user1\\\",\\r\\n  \\\"receiver\\\": \\\"all\\\",\\r\\n  \\\"text\\\": \\\"Message from the start button\\\"\\r\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":80,\"location\":\"14440 -5720\",\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":88,\"location\":\"14250 -5620\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\r\\n  \\\"sender\\\": \\\"user1\\\",\\r\\n  \\\"receiver\\\": \\\"all\\\",\\r\\n  \\\"text\\\": \\\"Can not be sent\\\"\\r\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":89,\"location\":\"14430 -5620.1\",\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\r\\n  \\\"sender\\\": \\\"user1\\\",\\r\\n  \\\"receiver\\\": \\\"all\\\",\\r\\n  \\\"text\\\": \\\"Can not be sent even more\\\"\\r\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":74,\"location\":\"14420 -5530.1\",\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":75,\"location\":\"14240 -5530\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":79,\"location\":\"14230 -5400\"},\n{\"label\":\"Data\",\"category\":\"DataFlow_Data\",\"size\":\"140 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"{\\r\\n  \\\"sender\\\": \\\"user1\\\",\\r\\n  \\\"receiver\\\": \\\"all\\\",\\r\\n  \\\"text\\\": \\\"Can not be sent even more bla\\\"\\r\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"key\":81,\"location\":\"14410 -5400.1\",\"doCompute\":\"DataFlow_Data\"},\n{\"label\":\"- Move the Engine in /lib and make a class of it\",\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_BigComment\",\"size\":\"910 130\",\"key\":78,\"location\":\"14480 -4920\"},\n{\"label\":\"Engine Code 1.5\",\"color\":\"orange\",\"size\":\"290 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/90.js\",\"key\":77,\"location\":\"20690 -7520\",\"isIncludeScript\":false,\"editorPosition\":[1529,24,744,1398],\"group\":82},\n{\"label\":\"Execution Engine\",\"category\":\"Hierarchy_Engine\",\"size\":\"240 120\",\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_executeAction( nodeData, obj.data.name );\",\"buttons_\":[{\"name\":\"Reset\",\"checked\":false},{\"name\":\"Run\",\"checked\":false},{\"name\":\"Step\",\"checked\":false},{\"name\":\"Pause\",\"checked\":false}],\"props_\":[{\"name\":\"isAutostart\",\"value\":\"false\"},{\"name\":\"isStepByStep\",\"value\":\"false\"},{\"name\":\"runTimeout\",\"value\":\"1\"},{\"name\":\"isStepByStepDeepFirst\",\"value\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isNodePersistencyUsed\",\"value\":\"true\"}],\"key\":85,\"location\":\"16730 -6630\"},\n{\"label\":\"Old Stuff\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":82,\"location\":\"20670 -6827.5\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":425,\"to\":426,\"points\":[21560.4619140625,-8170,21570.4619140625,-8170,21638.103515625,-8170,21648.103515625,-8170],\"key\":-331},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":443,\"to\":425,\"points\":[20890.144608688406,-7760.394966956869,21208.103515625,-8170,21218.103515625,-8170],\"key\":-332},\n{\"text\":\"CodeFlow_Code\",\"category\":\"LinkDestination\",\"from\":454,\"to\":452,\"points\":[14120.4619140625,-7600,14130.4619140625,-7600,14158.103515625,-7600,14168.103515625,-7600],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-346},\n{\"text\":\"CodeFlow_Code\",\"category\":\"LinkDestination\",\"from\":444,\"to\":445,\"points\":[14120.4619140625,-8000,14130.4619140625,-8000,14158.103515625,-8000,14168.103515625,-8000],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-347},\n{\"text\":\"CodeFlow_Code\",\"category\":\"LinkDestination\",\"from\":446,\"to\":448,\"points\":[14120.4619140625,-7500,14130.4619140625,-7500,14158.103515625,-7500.200000000001,14168.103515625,-7500.200000000001],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-349},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":445,\"to\":450,\"points\":[14380.4619140625,-8000,14390.4619140625,-8000,14458.103515625,-8000,14468.103515625,-8000],\"key\":-352},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":445,\"to\":84,\"points\":[14380.4619140625,-8000,14390.4619140625,-8000,14474.662109375,-7810,14484.662109375,-7810],\"key\":-348},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":448,\"to\":453,\"points\":[14380.4619140625,-7500.200000000001,14390.4619140625,-7500.200000000001,14458.103515625,-7500,14468.103515625,-7500],\"key\":-343},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":452,\"to\":451,\"points\":[14380.4619140625,-7600,14390.4619140625,-7600,14458.103515625,-7600,14468.103515625,-7600],\"key\":-350},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":452,\"to\":84,\"points\":[14380.4619140625,-7600,14390.4619140625,-7600,14474.662109375,-7790,14484.662109375,-7790],\"key\":-353},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":448,\"to\":84,\"points\":[14380.4619140625,-7500.200000000001,14390.4619140625,-7500.200000000001,14474.662109375,-7790,14484.662109375,-7790],\"key\":-355},\n{\"text\":\"CodeFlow_Code\",\"category\":\"LinkDestination\",\"from\":461,\"to\":460,\"points\":[14130.4619140625,-7110,14140.4619140625,-7110,14168.103515625,-7110.200000000001,14178.103515625,-7110.200000000001],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-356},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":460,\"to\":463,\"points\":[14390.4619140625,-7110.200000000001,14400.4619140625,-7110.200000000001,14437.103515625,-7170,14528.103515625,-7170,14538.103515625,-7170],\"key\":-357},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"history\",\"from\":460,\"to\":449,\"points\":[14390.4619140625,-7110.200000000001,14400.4619140625,-7110.200000000001,14563.751953125,-6960,14573.751953125,-6960],\"key\":-358},\n{\"text\":\"CodeFlow_Code\",\"category\":\"LinkDestination\",\"from\":466,\"to\":467,\"points\":[14130.4619140625,-7010,14140.4619140625,-7010,14168.103515625,-7010.200000000001,14178.103515625,-7010.200000000001],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-359},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"assistant\",\"from\":467,\"to\":449,\"points\":[14390.4619140625,-7010.200000000001,14400.4619140625,-7010.200000000001,14563.751953125,-6940,14573.751953125,-6940],\"key\":-360},\n{\"text\":\"CodeFlow_Code\",\"category\":\"LinkDestination\",\"from\":470,\"to\":471,\"points\":[14130.4619140625,-6900,14140.4619140625,-6900,14168.103515625,-6900.200000000001,14178.103515625,-6900.200000000001],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":2},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":471,\"to\":449,\"points\":[14390.4619140625,-6900.200000000001,14400.4619140625,-6900.200000000001,14563.751953125,-6920,14573.751953125,-6920],\"key\":-365},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":467,\"to\":458,\"points\":[14390.4619140625,-7010.200000000001,14400.4619140625,-7010.200000000001,14528.103515625,-7070,14538.103515625,-7070],\"key\":-370},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":471,\"to\":459,\"points\":[14390.4619140625,-6900.200000000001,14400.4619140625,-6900.200000000001,14538.103515625,-6810,14548.103515625,-6810],\"key\":-371},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":449,\"to\":464,\"points\":[14960.4619140625,-6940,14970.4619140625,-6940,15250,-6940,15250,-6980,15348.103515625,-6980,15358.103515625,-6980],\"key\":-372,\"color\":\"#ff8093\"},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":469,\"to\":468,\"points\":[14140.4619140625,-6350,14150.4619140625,-6350,14178.103174443393,-6350.300464758519,14188.103174443393,-6350.300464758519],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-373},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":468,\"to\":472,\"points\":[14400.461572880893,-6350.300464758519,14410.461572880893,-6350.300464758519,14437.103174443393,-6420.000464758518,14538.103515625,-6420,14548.103515625,-6420],\"key\":-375},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":473,\"to\":474,\"points\":[14140.4619140625,-6250,14150.4619140625,-6250,14178.103174443393,-6250.300464758519,14188.103174443393,-6250.300464758519],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-379},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":475,\"to\":476,\"points\":[14140.4619140625,-6140,14150.4619140625,-6140,14178.103174443393,-6140.300464758519,14188.103174443393,-6140.300464758519],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-381},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":474,\"to\":477,\"points\":[14400.461572880893,-6250.300464758519,14410.461572880893,-6250.300464758519,14528.103515625,-6330,14538.103515625,-6330],\"key\":-383},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":476,\"to\":478,\"points\":[14400.461572880893,-6140.300464758519,14410.461572880893,-6140.300464758519,14538.103515625,-6050,14548.103515625,-6050],\"key\":-384},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in0\",\"from\":468,\"to\":481,\"points\":[14400.461572880893,-6350.300464758519,14410.461572880893,-6350.300464758519,14670.3173828125,-6200.1,14680.3173828125,-6200.1],\"key\":-378},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in1\",\"from\":474,\"to\":481,\"points\":[14400.461572880893,-6250.300464758519,14410.461572880893,-6250.300464758519,14670.3173828125,-6180.1,14680.3173828125,-6180.1],\"key\":-380},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in2\",\"from\":476,\"to\":481,\"points\":[14400.461572880893,-6140.300464758519,14410.461572880893,-6140.300464758519,14670.3173828125,-6160.1,14680.3173828125,-6160.1],\"key\":-382},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":481,\"to\":479,\"points\":[14800.4619140625,-6180.1,14810.4619140625,-6180.1,15190,-6180,15190,-6230,15348.103515625,-6230,15358.103515625,-6230],\"key\":-385,\"color\":\"lightseagreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":84,\"to\":447,\"points\":[14840.55859375,-7810,14850.55859375,-7810,14888.103515625,-7810,14898.103515625,-7810],\"key\":-50,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":55,\"to\":54,\"points\":[21650.4619140625,-6780,21660.4619140625,-6780,21728.103515625,-6530,21738.103515625,-6530],\"key\":-33},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":59,\"to\":58,\"points\":[21710.4619140625,-6030,21720.4619140625,-6030,21748.103515625,-6030,21758.103515625,-6030],\"key\":-34},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":63,\"to\":62,\"points\":[21730.4619140625,-5600,21740.4619140625,-5600,21758.103515625,-5600,21768.103515625,-5600],\"key\":-35},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":432,\"to\":55,\"points\":[20921.509403552365,-6226.013503752232,21298.103515625,-6780,21308.103515625,-6780],\"key\":-36},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":430,\"to\":63,\"points\":[20978.522894142814,-5834.446971545686,21378.103515625,-5600,21388.103515625,-5600],\"key\":-38},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":429,\"to\":59,\"points\":[21026.999999900112,-6030.209292707381,21358.103515625,-6030,21368.103515625,-6030],\"key\":-39},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":60,\"to\":61,\"points\":[21770.4619140625,-4820,21780.4619140625,-4820,21798.103515625,-4820,21808.103515625,-4820],\"key\":-40},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":437,\"to\":60,\"points\":[21036.999907359765,-4827.337248662722,21418.103515625,-4820,21428.103515625,-4820],\"key\":-41},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":65,\"to\":73,\"points\":[15310.3720703125,-5730.1,15320.3720703125,-5730.1,15438.103515625,-5680,15448.103515625,-5680],\"key\":-44},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":65,\"to\":71,\"points\":[15310.3720703125,-5710.1,15320.3720703125,-5710.1,15398.103515625,-5230,15408.103515625,-5230],\"key\":-45},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":76,\"to\":80,\"points\":[14380.4619140625,-5720,14390.4619140625,-5720,14398.103515625,-5720,14408.103515625,-5720],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-46},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":80,\"to\":65,\"points\":[14620.4619140625,-5720,14630.4619140625,-5720,14650.517578125,-5720.1,14660.517578125,-5720.1],\"key\":-47},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":88,\"to\":89,\"points\":[14370.4619140625,-5620,14380.4619140625,-5620,14388.103515625,-5620.1,14398.103515625,-5620.1],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-49},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":89,\"to\":65,\"points\":[14610.4619140625,-5620.1,14620.4619140625,-5620.1,14650.517578125,-5720.1,14660.517578125,-5720.1],\"key\":-51},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":75,\"to\":74,\"points\":[14360.4619140625,-5530,14370.4619140625,-5530,14378.103515625,-5530.1,14388.103515625,-5530.1],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-52},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":74,\"to\":65,\"points\":[14600.4619140625,-5530.1,14610.4619140625,-5530.1,14650.517578125,-5720.1,14660.517578125,-5720.1],\"key\":-53},\n{\"text\":\"Reference\",\"category\":\"CodeFlow_Code\",\"from\":79,\"to\":81,\"points\":[14350.4619140625,-5400,14360.4619140625,-5400,14368.103515625,-5400.1,14378.103515625,-5400.1],\"fromPort\":\"out\",\"toPort\":\"in\",\"key\":-54},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":81,\"to\":65,\"points\":[14590.4619140625,-5400.1,14600.4619140625,-5400.1,14650.517578125,-5720.1,14660.517578125,-5720.1],\"key\":-55}\n]}"
}