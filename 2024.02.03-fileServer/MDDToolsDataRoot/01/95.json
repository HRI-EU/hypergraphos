{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "PicturesDSL",
    "DataFlowDSL"
  ],
  "view": {
    "scale": 0.29093815565990633,
    "position": [
      12526.050259247211,
      -7203.015308166932
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"Smile 3 Dialog - V.03\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2350 240\",\"key\":0,\"location\":\"17580 -6940\"},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"410 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"messageIn\",\"name\":\"messageIn\"},{\"portId\":\"clear\",\"name\":\"clear\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: All, url: ~/allUsers.png }\\n- { name: Alice, url: ~/user2.png }\\n- { name: Bob, url: ~/user1.png }\\n- { name: Alex, url: ~/robot.png }\",\"valueChanged\":\"true\"}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"key\":2,\"location\":\"18749.482 -5230.4000000000015\",\"editorPosition\":[1011,79,400,350],\"group\":25,\"history\":[]},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"fileTypeName\":\"LLM\",\"key\":12,\"location\":\"17600 -5660.200000000001\",\"group\":26},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":14,\"location\":\"15870 -6201.000000000004\"},\n{\"label\":\"[Alex -> All] Good evening Bob and Alice, welcome to the kitchen. What would you like to prepare for dinner tonight? Do you have any request or preference?\\n\\n[Bob -> All] Hi Alex, nice to meet you. I love Italian food, do you have any recipes for that?\\n\\n[Alice -> All] Hi Alex, thanks for having us. I would actually prefer something lighter, like a salad or a sandwich.\\n\\n[Alex -> Bob] Sure, I have a lot of Italian recipes. Would you like to make a pasta dish or maybe a pizza?\\n\\n[Alex -> Alice] A salad or sandwich can be a great idea. We have a lot of fresh vegetables and bread in the fridge. How about a chicken Caesar salad or a grilled veggie sandwich?\\n\\n[Bob -> Alex] I'm in the mood for pizza tonight, what kind of toppings do we have?\\n\\n[Alice -> Alex] A chicken Caesar salad sounds perfect to me. What ingredients do we need?\\n\\n[Alex -> Bob] Great, we have tomato sauce, mozzarella cheese, pepperoni, mushrooms, and peppers. How about a pepperoni and mushroom pizza?\\n\\n[Alex -> Alice] For the Caesar salad, we need romaine lettuce, chicken breasts, croutons, Parmesan cheese, and Caesar dressing. Would you like to grill the chicken while I wash and chop the lettuce?\\n\\n[Bob -> Alex] Sounds good, let's make the pizza. Can you show me how to roll out the dough?\\n\\n[Alice -> Alex] Sure, I can grill the chicken. How long should I cook it for?\\n\\n[Alex -> Bob] Of course, I'll get the dough and rolling pin. We want it to be thin and round, about 10 inches in diameter. Once that's done, we'll add the toppings and bake it in the oven at 400 Fahrenheit for 10-12 minutes.\\n\\n[Alex -> Alice] The chicken breasts should be cooked for about 6-7 minutes per side on medium-high heat. Make sure to season them with salt and pepper before cooking.\\n\\n[Bob -> Alex] Thanks for the instructions, let's get started on the pizza. Can you pass me the tomato sauce and toppings?\\n\\n[Alice -> Alex] Got it, I'll start grilling the chicken now.\\n\\n[Alex -> Bob] Here you go. Would you like to spread the sauce on the dough first or add the toppings directly? I find it easier to add the sauce first.\\n\\n[Alex -> Alice] Great, let me know if you need any help. Once the chicken is cooked, we can slice it and add it to the salad.\\n\\n[Bob -> Alex] Good idea, I'll add the sauce first. How much should I use?\\n\\n[Alice -> Alex] Thanks, it's almost done. Should I let it rest for a bit before slicing it?\\n\\n[Alex -> Bob] About 1/2 cup of sauce should be enough for a 10-inch pizza. Spread it evenly with a spoon or ladle.\\n\\n[Alex -> Alice] You can let it rest for a few minutes before slicing it. In the meantime, would you like to prepare the other ingredients for the salad, like the croutons and Parmesan cheese?\\n\\n[Bob -> Alex] Perfect, now for the toppings. How much cheese and pepperoni should we use?\\n\\n[Alice -> Alex] Sure, I can chop the lettuce and make the croutons. How big should the croutons be?\\n\\n[Alex -> Bob] We can use about 1 cup of shredded mozzarella cheese and 12-15 pepperoni slices. You can arrange them however you like on top of the sauce.\\n\\n[Alex -> Alice] The croutons should be about 1 inch in size. We have some pre-made ones in the pantry or we can make our own with bread and olive oil.\\n\\n[Bob -> Alex] Got it, I'll do that now. Should we add any seasoning to the pizza?\\n\\n[Alice -> Alex] I think we should make our own croutons. Do you have any bread or olive oil?\\n\\n[Alex -> Bob] We can add some oregano and red pepper flakes, if you like those flavors.\\n\\n[Alex -> Alice] Sure, we have some sourdough bread and olive oil. Cut the bread into 1-inch cubes and toss them in a bowl with 2 tablespoons of olive oil. Then, spread them on a baking sheet and bake at 350 Fahrenheit for 10-12 minutes until crispy.\\n\\n[Bob -> Alex] Sounds good, let's add some oregano and red pepper flakes. How long should we bake the pizza for?\\n\\n[Alice -> Alex] Thank you, I'll do that now. What else do we need for the salad?\\n\\n[Alex -> Bob] The pizza should be baked for 10-12 minutes at 400 Fahrenheit, or until the cheese is melted and bubbly.\\n\\n[Alex -> Alice] We also need to chop the chicken and grate some Parmesan cheese. Once the lettuce and croutons are ready, we can assemble the salad and toss it with the dressing.\\n\\n[Bob -> Alex] Thanks for the instructions, I'll put the pizza in the oven now.\\n\\n[Alice -> Alex] Okay, let me know when the chicken is ready and I'll start chopping it. Should I leave it in slices or shred it?\\n\\n[Alex -> Bob] Great, let's put a timer for 10 minutes. In the meantime, would you like to prepare any drinks or appetizers?\\n\\n[Alex -> Alice] You can slice the chicken into strips or cubes, whichever you prefer. Once the pizza is done, we can assemble the salad and finish cooking the chicken, if needed.\\n\\n[Bob -> Alex] Hmm, how about some margaritas? Do you have the ingredients for that?\\n\\n[Alice -> Alex] I think strips would be better. Let me know when the pizza is done and I'll finish the salad.\\n\\n[Alex -> Bob] Sure, we have tequila, lime juice, and triple sec. Would you like me to get the recipe for you?\\n\\n[Alex -> Alice] The pizza is almost done, it should be ready in about 2 minutes. Once that's done, we can toss the salad and add the chicken, croutons, and Parmesan cheese.\\n\\n[Bob -> Alex] Yes please, that would be great. Thanks for your help.\\n\\n[Alice -> Alex] Okay, I'm ready to assemble the salad. What's the dressing recipe?\\n\\n[Alex -> Bob] Here's the recipe: in a shaker with ice, combine 2 ounces of tequila, 1 ounce of lime juice, 1/2 ounce of triple sec, and a splash of agave syrup or simple syrup. Shake well and strain into a salt-rimmed glass with ice.\\n\\n[Alex -> Alice] For the dressing, we need 1/4 cup of Caesar dressing and 1 tablespoon of lemon juice. Whisk them together in a bowl and season with salt and pepper to taste.\\n\\n[Bob -> Alex] Thanks, let's make some margaritas then. Do we have any limes and salt for the rim?\\n\\n[Alice -> Alex] Got it, I'll whisk the dressing now. How much should I use for the salad?\\n\\n[Alex -> Bob] Yes, we have limes and salt in the pantry. You can cut the limes into wedges and rub them on the rim of the glasses, then dip them in salt.\\n\\n[Alex -> Alice] We can use about 1/2 cup of dressing for the salad. Once the pizza is out of the oven, we can toss the salad and add the chicken, croutons, and Parmesan cheese.\\n\\n[Bob -> Alex] Perfect, let's get started on the margaritas. Would you like one too, Alice?\\n\\n[Alice -> Alex] Sounds good, thank you. Let me know when you're ready to toss the salad.\\n\\n[Alex -> Bob] Sure, let me grab the ingredients. How do you like your margarita, on the rocks or frozen?\\n\\n[Alex -> Alice] The pizza is out of the oven and ready to be sliced. Shall we toss the salad now?\\n\\n[Bob -> Alex] I prefer mine on the rocks, thanks.\\n\\n[Alice -> Alex] Yes, let's do that. I'll add the chicken, croutons, and Parmesan cheese now.\\n\\n[Alex -> Bob] Here you go, one margarita on the rocks for you and one for Alice. Enjoy!\\n\\n[Bob -> Alex] Thank you, it looks great. Let's have a taste and see how it turned out.\\n\\n[Alice -> Alex] This salad looks amazing, thank you for your help. Shall we serve everything now?\\n\\n[Alex -> Bob] How's the pizza?\\n\\n[Bob -> Alex] It's delicious, thanks for your help.\\n\\n[Alex -> Alice] You're welcome, the salad looks great. Yes, let's serve everything now. Enjoy your meal!\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1460 9999\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":8,\"location\":\"29510 -4300\"},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":13,\"location\":\"17360 -7010\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":16,\"location\":\"17360 -6910\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"props_\":[{\"name\":\"Name\",\"value\":\"Smile 3 Dialog - V.03\"},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"@getDate()\",\"valueChanged\":true},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"- Johane\\n- Frank\\n- Antonello\",\"valueChanged\":\"true\"}],\"key\":18,\"location\":\"17110 -7030\"},\n{\"label\":\"Convert History to OpenAI API\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet responseList = [];\\nfor( const item of value ) {\\n  responseList.push( `[${item.sender} -> ${item.receiver}] ${item.text}` );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', responseList.join('\\\\n') );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":21,\"location\":\"20980 -5340\",\"group\":25},\n{\"label\":\"Clear Text\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', '' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":20,\"location\":\"18010 -6300\"},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":23,\"location\":\"18090 -5650\",\"group\":26},\n{\"label\":\"Broadcast Message\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"history\",\"name\":\"history\"}],\"out_\":[{\"portId\":\"toAlex\",\"name\":\"toAlex\"},{\"portId\":\"toAlice\",\"name\":\"toAlice\"},{\"portId\":\"toBob\",\"name\":\"toBob\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'history' ) {\\n  if( value.length ) {\\n    // Get the last message\\n    const lastMessage = value[value.length-1];\\n    const senderName = lastMessage.sender;\\n    console.log( 'BROADCAST SENDER:->>>>> ', senderName );\\n    // Get the list of all output names\\n    const outputNameList = graphData.dfe.geOutputNameList( nodeData );\\n    // Remove from the list the sender of the last message\\n    let filterNameList = outputNameList.filter( (n)=> !n.endsWith( senderName ) );\\n    // Select a random index for the remaining actors\\n    const idx = Math.floor( Math.random()*filterNameList.length );\\n    const outputName = filterNameList[idx];\\n    console.log( 'BROADCAST CHOICE:->>>>> ', outputName );\\n    // Store the output to the selected actor\\n    graphData.dfe.fireOutput( nodeData, outputName, value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":24,\"location\":\"20560 -5240\",\"group\":25,\"editorPosition\":[1261,888,715,276]},\n{\"label\":\"Alex Robot\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":26,\"location\":\"16098.103515625 -5692.109130859375\"},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":27,\"location\":\"18100 -5128.945\",\"group\":30,\"editorPosition\":[1810,1009,400,350]},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"fileTypeName\":\"LLM\",\"key\":28,\"location\":\"17600 -5140\",\"group\":30},\n{\"label\":\"Alice Human\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":30,\"location\":\"16109.999515625 -5159.9996308593745\"},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"hasHistory\",\"value\":\"false\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"fileTypeName\":\"LLM\",\"key\":32,\"location\":\"17600 -4650\",\"group\":34},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":33,\"location\":\"18090 -4640\",\"group\":34},\n{\"label\":\"Bob Human\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":34,\"location\":\"16079.999515625 -4672.109130859375\"},\n{\"label\":\"Convert History to OpenAI API\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet responseList = [];\\nfor( const item of value ) {\\n  responseList.push( `[${item.sender} -> ${item.receiver}] ${item.text}` );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', responseList.join('\\\\n') );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":35,\"location\":\"20980 -5240\",\"group\":25},\n{\"label\":\"Convert History to OpenAI API\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet responseList = [];\\nfor( const item of value ) {\\n  responseList.push( `[${item.sender} -> ${item.receiver}] ${item.text}` );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', responseList.join('\\\\n') );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":36,\"location\":\"20980 -5140\",\"group\":25},\n{\"label\":\"Chat\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":25,\"location\":\"18639.999578125 -5240\"},\n{\"label\":\"DataFlow Engine\",\"color\":\"orange\",\"size\":\"420 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"lib/DataFlowEngine/1.5/DataFlowEngine.js\",\"key\":38,\"location\":\"20810 -5980\"},\n{\"label\":\"Get Class API\",\"category\":\"DataFlow_TrigComponent\",\"size\":\"270 80\",\"buttons_\":[{\"name\":\"Update\",\"checked\":false}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"show\",\"value\":\"public\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst show = graphData.dfe.getProperty( nodeData, 'show', 'public,private' );\\nlet result = '';\\n// Get input link list\\nconst inLinkDataList = graphData.dfe.getInputLinkDataList( nodeData, 'in' );\\n// If Input is connected\\nif( inLinkDataList && inLinkDataList.length ) {\\n  // Loop over in components\\n  for( const inLinkData of inLinkDataList ) {\\n    const inNodeKey = inLinkData.from;\\n    \\n    // Read data of fanIn components\\n    const inNodeData = getNodeData( inNodeKey );\\n    if( inNodeData && inNodeData.isFile ) {\\n      if( inNodeData.fileContent ) {\\n        const api = getAPI( inNodeData.fileContent );\\n        result = result+api;\\n      } else if( inNodeData.fileURL ) {\\n        loadNodeContent( inNodeData, (s)=>{\\n          result = result+getAPI( s );\\n          graphData.dfe.fireOutput( nodeData, 'out', result );\\n        });\\n      }\\n    }\\n  }\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', result );\\n\\nfunction getAPI( source, show ) {\\n  let result = '';\\n  if( source ) {\\n    // This regexp matches any function definition at the beginning of any line\\n    //const expr = new RegExp( /\\\\nfunction\\\\s+(?<api>\\\\w+\\\\([^\\\\)]*\\\\))/g );\\n    const expr = new RegExp( /\\\\n\\\\s\\\\s(?<api>\\\\w+\\\\([^\\\\)]*\\\\))\\\\s+\\\\{/g );\\n    const match = ('\\\\n'+source).matchAll( expr );\\n    const matchList = Array.from( match, (m)=> m.groups.api );\\n    result = result+matchList.join( '\\\\n' );\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":37,\"location\":\"21360 -5980\",\"editorPosition\":[787,1092,703,895]},\n{\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1170 1870\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"key\":39,\"location\":\"21780 -5980\",\"doCompute\":\"DataFlow_Message\",\"label\":\"constructor(engineData)\\nloadModel()\\nget(keyOrData, name, defaultValue)\\nset(keyOrData, name, value)\\ngetPropertyNameList(nodeData)\\ngetProperty(nodeData, name, defaultValue)\\ngetPropertyList(nodeData)\\ngetInputNameList(nodeData)\\ngeOutputNameList(nodeData)\\ngetInputList(nodeData)\\ngetNodeDataValue(key, name, defaultValue)\\nisInputNew(nodeData, name)\\ngetInput(nodeData, name, defaultValue)\\nsetInput(nodeData, name, value)\\nfireOutput(nodeData, name, value)\\nisOutputConnected(nodeData, name)\\nisInputConnected(nodeData, name)\\nisSelfLoop(nodeData, inName)\\ngetInputLinkDataList(nodeData, name)\\ngetOutputLinkDataList(nodeData, name)\\nexecuteAction(nodeData, actionName)\\ndoRun()\\ndoStep()\\ndoPause()\\n_updateEngineNode(key)\\n_updateProperty(nodeData)\\n_selectNode(nodeData)\\n_fireOutputStep(nodeData, name, value)\\n_fireOutputFlow(nodeData, name, value)\\n_fireInput(nodeData, name, value)\\n_fireEvent(nodeData, name, value)\\n_getNextStepData()\\n_clearStep(stepInfo)\\n_addStep(stepInfo)\\n_getComputeBarrier(nodeData)\\n_updateInput(nodeData, name, value, inCondition)\"},\n{\"label\":\"Data Gate\",\"category\":\"DataFlow_DataGate\",\"size\":\"240 80\",\"buttons_\":[{\"name\":\"Pass\",\"checked\":true}],\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"text\\\": \\\"Hi\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Hi everyone! I'm so excited to be here for dinner with all of you!\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Hi Alice! I'm glad you're excited. I am too! So, let's get started. Any ideas on what we should have for dinner tonight?\\\",\\n    \\\"sender\\\": \\\"Alex\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  },\\n  {\\n    \\\"text\\\": \\\"Hmm, how about pizza? I love pizza! We can have different toppings and make it really fun!\\\",\\n    \\\"sender\\\": \\\"Alice\\\",\\n    \\\"receiver\\\": \\\"All\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"doCompute\":\"DataFlow_DataGate\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":42,\"location\":\"20160 -5240\",\"group\":25},\n{\"label\":\"Basic Image\",\"category\":\"Pictures_Basic\",\"size\":\"966 463\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/Smile3-1.png\",\"key\":41,\"location\":\"20480 -6730\"},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alex\",\"valueChanged\":true},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"robotic cook assistant\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"Take the role of a {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to say something to {other1}: \\n   [{name} -> {other1}] <your sentence>\\nc) if you want to say something to {other2}: \\n   [{name} -> {other2}] <your sentence>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak.\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":43,\"location\":\"16600 -5680\",\"group\":26,\"editorPosition\":[787,1400,400,350]},\n{\"label\":\"Alex Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex has two arms and hands.\\nAlex can see and hear everything \\nAlex cannot move around.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":45,\"location\":\"16150 -5750\",\"group\":26},\n{\"label\":\"Situation\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alex is the owner of the appartment.\\nAlice and Bob are friends that have \\nbeen invited by Alex for a dinner.\\nThey want to prepare and eat the dinner together.\\nThe rule is that every one can contribute \\nand participate in the choice of the food or \\ndrinks and in the preparation of them. \\nYou are all around a table.\\nIngredients are on the table or in the fridge.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":47,\"location\":\"16130 -6200\"},\n{\"label\":\"Alex Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to moderate the discussion between the humans;\\n2) to ask their preference and establish a menu based \\n   on the humans' wish and proposition as well as \\n   on his own recipes proposal;\\n3) to orchestrate the activities of each humans by \\n   asking them information or suggesting them task \\n   to perform;\\n4) to help them to do task in the right order;\\n5) to answer any question of them, while trying \\n   to get them focus of the tasks until the dinner \\n   is prepared or just be silent;\\n6) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":49,\"location\":\"16150 -5530\",\"group\":26,\"editorPosition\":[788,868,400,350]},\n{\"label\":\"Alex Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Alex only wants to prepare pizza or cocktails,\\n  nothing else and you always find a polite and \\n  good way to justify this choice;\\n- Alex likes to make some jokes based on the \\n  current context;\\n- Alex is not very good at remembering where \\n  ingredients and tools are in his appartment\\n  and prefer to ask the humans to search for them;\\n- Alex always expresses himself with short sentences;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":54,\"location\":\"16150 -5650\",\"group\":26,\"editorPosition\":[788,516,400,350]},\n{\"label\":\"Bob Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Bob is open-minded;\\n- Bob likes strong cocktails;\\n- Bob is strongly allergic to peperonies;\\n- Bob is a good and careful father;\\n- Bob is italian and bilingual english-italian;\\n- Bob likes to teach italian words to his \\n  daughther;\\n- when Bob is surprised he often say \\\"cavolo\\\"\\n- Bob rarely thanks people\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":55,\"location\":\"16161.896 -5116.835999999999\",\"group\":30,\"editorPosition\":[1191,516,400,350]},\n{\"label\":\"Bob Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to participate in the discussion with Bob and \\n   Alex;\\n2) to contribute to establish a menu based on the \\n   other's wish and proposition;\\n3) to answer any question of them, while trying to \\n   get them focus of the tasks until the dinner is \\n   prepared\\n4) to take care of your daughther Alice.\\n5) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":56,\"location\":\"16161.896 -4996.835999999999\",\"group\":30,\"editorPosition\":[1192,869,400,350]},\n{\"label\":\"Bob Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Bob has all the capabilities of an adult human.\\nBob can see and hear everything.\\nBob can move around to fetch object.\\nBob knows how to use tools.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":57,\"location\":\"16161.896 -5216.835999999999\",\"group\":30,\"editorPosition\":[1190,165,400,350]},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Bob\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Alex\",\"valueChanged\":\"true\"},{\"name\":\"other2\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"the father of Alice\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Take the role of a {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to say something to {other1}: \\n   [{name} -> {other1}] <your sentence>\\nc) if you want to say something to {other2}: \\n   [{name} -> {other2}] <your sentence>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak.\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":58,\"location\":\"16611.896 -5146.936\",\"group\":30,\"editorPosition\":[1599,1401,400,350]},\n{\"label\":\"Alice Personality\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"- Alice likes to make fun of others;\\n- Alice like pizza and noodles;\\n- Alice hate spicy food;\\n- Alice is very active and willing to do \\n  as much as she can;\\n- Alice speak like a child and sometimes mix english \\n  and italian words in sentences\\n- Alice is like her father and never thanks people she \\n  prefers to make fun of them\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":59,\"location\":\"16131.896 -4630\",\"group\":34,\"editorPosition\":[1594,519,400,350]},\n{\"label\":\"Alice Goals\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"1) to be with the adults;\\n2) to have fun;\\n3) to learn from the adults or from the robot;\\n4) to use your personality while \\n   discussing with the others;\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":60,\"location\":\"16131.896 -4510\",\"group\":34,\"editorPosition\":[1595,872,400,350]},\n{\"label\":\"Alice Capabilities\",\"category\":\"DataFlow_Data\",\"size\":\"210 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Alice has the capabilities of a 5 years old girl.\\nAlice can see and hear everything.\\nAlice can move around to fetch object.\\nAlice does not know how to use every tools.\\nAlice is not allowed to use dangerous tools.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":61,\"location\":\"16131.896 -4730\",\"group\":34,\"editorPosition\":[1592,166,400,350]},\n{\"label\":\"AI template\",\"category\":\"DataFlow_Template\",\"size\":\"240 110\",\"color\":\"Moccasin\",\"in_\":[{\"portId\":\"situation\",\"name\":\"situation\"},{\"portId\":\"capabilities\",\"name\":\"capabilities\"},{\"portId\":\"personality\",\"name\":\"personality\"},{\"portId\":\"goals\",\"name\":\"goals\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"*\"},{\"name\":\"matcher\",\"value\":\"{[^}]+}\"},{\"name\":\"name\",\"value\":\"Alice\",\"valueChanged\":\"true\"},{\"name\":\"other1\",\"value\":\"Bob\",\"valueChanged\":true},{\"name\":\"other2\",\"value\":\"Alex\",\"valueChanged\":\"true\"},{\"name\":\"role\",\"value\":\"the daughter of Bob\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Take the role of a {role} named {name}. \\nyour capabilities are:\\n{capabilities}\\n\\nYou are in the following situation:\\n{situation}\\n\\nThe role of the cook assistant is:\\n{goals}\\n\\nYour personality is:\\n{personality}\\n\\nProduce a single answer with {name} as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [{name} -> All] <your sentence>\\nb) if you want to say something to {other1}: \\n   [{name} -> {other1}] <your sentence>\\nc) if you want to say something to {other2}: \\n   [{name} -> {other2}] <your sentence>\\nb) if you don't want to say anything (be silent): \\n   [{name} -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak.\\n\",\"fileTypeName\":\"Template\",\"doCompute\":\"DataFlow_Template\",\"key\":62,\"location\":\"16581.896 -4660.1\",\"group\":34,\"editorPosition\":[1195,1398,400,350]},\n{\"label\":\"Alex\",\"color\":\"transparent\",\"size\":\"730 150\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Alex</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":64,\"location\":\"17600 -5800\",\"font\":\"150px sans-serif\",\"group\":26,\"editorPosition\":[788,1220,404,176]},\n{\"label\":\"Bob\",\"color\":\"transparent\",\"size\":\"720 145\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Bob</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":65,\"location\":\"17600 -4780\",\"font\":\"150px sans-serif\",\"group\":34,\"editorPosition\":[1195,1220,399,176]},\n{\"label\":\"Alice\",\"color\":\"transparent\",\"size\":\"730 150\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Alice</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":66,\"location\":\"17610 -5268.945\",\"font\":\"150px sans-serif\",\"group\":30,\"editorPosition\":[1596,1223,402,175]},\n{\"label\":\"Capabilities\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Capabilities</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":67,\"location\":\"16160 -6090\",\"editorPosition\":[181,165,603,347]},\n{\"label\":\"Personality\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Personality</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":69,\"location\":\"16160 -6040\",\"editorPosition\":[182,517,603,347]},\n{\"label\":\"Goals\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Goals</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":71,\"location\":\"16160 -5990\",\"editorPosition\":[184,869,601,346]},\n{\"label\":\"Template\",\"color\":\"transparent\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<span style=\\\"font-size: 120px;\\\">Template</span>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":46,\"location\":\"16620 -5990\",\"editorPosition\":[199,1400,584,347]},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":53,\"location\":\"18700 -5690.1\"},\n{\"label\":\"Clear JSON\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', [] );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":63,\"location\":\"18920 -5690.1\"},\n{\"label\":\"TTS\",\"category\":\"DataFlow_Component\",\"size\":\"290 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"onStart\",\"name\":\"onStart\"},{\"portId\":\"onStop\",\"name\":\"onStop\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true},{\"name\":\"voiceMap\",\"value\":\"- {name: Alex, id: 5}\\n- {name: Bob, id: 7}\\n- {name: Alice, id: 6}\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst voiceMap = graphData.dfe.getProperty( nodeData, 'voiceMap', '' );\\nconst voiceMapList = jsyaml.load( voiceMap );\\nlet voiceId = 0;\\nif( voiceMapList && voiceMapList.length ) {\\n  voiceMapList.forEach( (e)=> { if( value.sender == e.name ) voiceId = e.id } );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'onStart' );\\nif( !value.text.endsWith( '(silence)' ) ) {\\n  saySentence( value.text, voiceId, ()=> graphData.dfe.fireOutput( nodeData, 'onStop' ) );\\n} else {\\n  graphData.dfe.fireOutput( nodeData, 'onStop' );\\n}\\n\\nfunction saySentence( message, voiceId, onEnd ) {\\n  // Select voice\\n  //let voiceId = 0;\\n  // VoiceList cache\\n  let voiceList = null;\\n  \\n  // Callback when tts finished speaking\\n  const onTTSEnd = ()=> {\\n    if( onEnd ) {\\n      onEnd();\\n    }\\n  }\\n\\n  let isVoicePresent = false;\\n  let utterance = null;\\n  // Get voice\\n  utterance = new SpeechSynthesisUtterance( message );\\n  //console.log( 'say', this.voiceId, message);\\n  \\n  if( !voiceList || !voiceList.length ) {\\n    voiceList = speechSynthesis.getVoices();\\n  }\\n  \\n  // If we got the list of voices\\n  if( voiceList && voiceList.length ) {\\n    // Get a correct index for a voice\\n    const vIdx = voiceId % voiceList.length;\\n    // Set voice\\n    utterance.voice = voiceList[vIdx];\\n    isVoicePresent = true;\\n  }\\n\\n  if( isVoicePresent && utterance ) {\\n    utterance.addEventListener( 'end', onTTSEnd, { once: true } );\\n    speechSynthesis.speak( utterance );\\n  } else {\\n    // Use euristic timer to call the on end\\n    const timeout = Math.max( 2, message.length*200 );\\n    setTimeout( onTTSEnd, timeout );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":74,\"location\":\"19330 -5170\",\"editorPosition\":[1669,439,567,822],\"group\":25},\n{\"label\":\"Broadcast on Speech\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"},{\"portId\":\"onStart\",\"name\":\"onStart\"},{\"portId\":\"onStop\",\"name\":\"onStop\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nif( name == 'onStop' ) {\\n  const outValue = graphData.dfe.getInput( nodeData, 'in', [] );\\n  \\n  // const lastMessage = outValue[outValue.length-1];\\n  // const sender = lastMessage.sender;\\n  // if( sender == 'Alex' ) {\\n    graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n  // }\\n}\\n// if( name == 'onStart' ) {\\n//   const outValue = graphData.dfe.getInput( nodeData, 'in', [] );\\n  \\n//   const lastMessage = outValue[outValue.length-1];\\n//   const sender = lastMessage.sender;\\n//   if( sender == 'Alex' ) {\\n//     graphData.dfe.fireOutput( nodeData, 'out', outValue );\\n//   }\\n// }\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":68,\"location\":\"19810 -5220\",\"group\":25},\n{\"label\":\"AI Chat\",\"category\":\"DataFlow_Chat\",\"size\":\"340 80\",\"color\":\"Salmon\",\"in_\":[{\"portId\":\"messageIn\",\"name\":\"messageIn\"},{\"portId\":\"clear\",\"name\":\"clear\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"messageOut\",\"name\":\"messageOut\"}],\"props_\":[{\"name\":\"userList\",\"value\":\"- { name: all, url: ~/allUsers.png }\\n- { name: Paul, url: ~/user1.png }\\n- { name: Monalisa, url: /fileServer/pictures/Monalisa.png }\",\"valueChanged\":true}],\"isFile\":true,\"isLocalDiv\":true,\"fileContent\":\"\",\"fileTypeName\":\"AIChat\",\"fileType\":\"application/html\",\"doCompute\":\"DataFlow_Chat\",\"history\":[],\"key\":72,\"location\":\"17280 -3420\",\"editorPosition\":[1561,1323,400,350]},\n{\"label\":\"OpenAI GPT\",\"category\":\"DataFlow_LLM\",\"size\":\"240 80\",\"color\":\"Gold\",\"doCompute\":\"DataFlow_LLM\",\"in_\":[{\"portId\":\"system\",\"name\":\"system\"},{\"portId\":\"user\",\"name\":\"user\"}],\"out_\":[{\"portId\":\"history\",\"name\":\"history\"},{\"portId\":\"assistant\",\"name\":\"assistant\"}],\"props_\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"hasHistory\",\"value\":\"false\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":true}],\"fileTypeName\":\"LLM\",\"key\":75,\"location\":\"16480 -3670.3999999999996\"},\n{\"label\":\"Convert Assistant to Chat\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst match = value.match( /\\\\[(?<sender>\\\\w+)\\\\s+\\\\->\\\\s+(?<receiver>\\\\w+)\\\\]\\\\s+(?<text>.*)/ );\\nif( match ) {\\n  const item = match.groups; \\n  const result = { sender: item.sender, receiver: item.receiver, text: item.text };\\n  graphData.dfe.fireOutput( nodeData, 'out', result );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":76,\"location\":\"16880 -3660.2\"},\n{\"label\":\"{\\n  \\\"sender\\\": \\\"Paul\\\",\\n  \\\"receiver\\\": \\\"all\\\",\\n  \\\"text\\\": \\\"My name is Paul, how can I assist you today?\\\"\\n}\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 540\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":78,\"location\":\"17370 -3900\"},\n{\"label\":\"System prompt\",\"category\":\"DataFlow_Data\",\"size\":\"250 80\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[],\"isFile\":true,\"fileContent\":\"Take the role of an assistant named Paul. \\n\\nProduce a single answer with Paul as a sender. \\nYour answer must be in the following format \\nusing one and only one of the following options:\\na) if you want to say something to All: \\n   [Paul -> All] <your sentence>\\nb) if you don't want to say anything (be silent): \\n   [Paul -> All] (silence)\\n   \\nStop procucing after your single answer and wait \\nfor the others to speak.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"/fileServer/pictures/Text_Data.png\",\"doCompute\":\"DataFlow_Data\",\"key\":80,\"location\":\"16000 -3690.1\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":83,\"location\":\"15770 -3690.1\"},\n{\"label\":\"Convert History to OpenAI API\",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nlet responseList = [];\\nfor( const item of value ) {\\n  responseList.push( `[${item.sender} -> ${item.receiver}] ${item.text}` );\\n}\\n\\ngraphData.dfe.fireOutput( nodeData, 'out', responseList.join('\\\\n') );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":84,\"location\":\"17790 -3430\"},\n{\"label\":\"[Paul -> All] The translation for \\\"pomme\\\" in English is \\\"apple\\\".\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 540\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":70,\"location\":\"17350 -2960\"},\n{\"label\":\"\",\"category\":\"DataFlow_Start\",\"size\":\"80 80\",\"buttons_\":[{\"name\":\"Start\",\"checked\":false}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"key\":77,\"location\":\"21740 -4460\"},\n{\"label\":\"Get TTS Voices \",\"category\":\"DataFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"out_\":[{\"portId\":\"out\",\"name\":\"out\"}],\"props_\":[{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst voiceList = speechSynthesis.getVoices();\\n//const outValue = voiceList.map( (e,i)=> { return( { id:i, name:e.name, lang: e.lang } ) } );\\nconst outValue = voiceList.map( (e ,i)=> `id: ${i}, name: ${e.name},  lang: ${e.lang}` );\\ngraphData.dfe.fireOutput( nodeData, 'out', outValue );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":81,\"location\":\"21930 -4460\",\"editorPosition\":[1544,1449,782,306]},\n{\"label\":\"[]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 3320\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":85,\"location\":\"22260 -2850\"},\n{\"label\":\"Opera on Mac OS [#144]\\n[\\n  \\\"id: 0, name: Daniel,  lang: en-GB\\\",\\n  \\\"id: 1, name: Albert,  lang: en-US\\\",\\n  \\\"id: 2, name: Alice (Enhanced),  lang: it-IT\\\",\\n  \\\"id: 3, name: Alice,  lang: it-IT\\\",\\n  \\\"id: 4, name: Alva,  lang: sv-SE\\\",\\n  \\\"id: 5, name: Am\\u00e9lie,  lang: fr-CA\\\",\\n  \\\"id: 6, name: Amira,  lang: ms-MY\\\",\\n  \\\"id: 7, name: Anna,  lang: de-DE\\\",\\n  \\\"id: 8, name: Bad News,  lang: en-US\\\",\\n  \\\"id: 9, name: Bahh,  lang: en-US\\\",\\n  \\\"id: 10, name: Bells,  lang: en-US\\\",\\n  \\\"id: 11, name: Boing,  lang: en-US\\\",\\n  \\\"id: 12, name: Bubbles,  lang: en-US\\\",\\n  \\\"id: 13, name: Carmit,  lang: he-IL\\\",\\n  \\\"id: 14, name: Cellos,  lang: en-US\\\",\\n  \\\"id: 15, name: Damayanti,  lang: id-ID\\\",\\n  \\\"id: 16, name: Daria,  lang: bg-BG\\\",\\n  \\\"id: 17, name: Wobble,  lang: en-US\\\",\\n  \\\"id: 18, name: Eddy (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 19, name: Eddy (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 20, name: Eddy (English (US)),  lang: en-US\\\",\\n  \\\"id: 21, name: Eddy (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 22, name: Eddy (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 23, name: Eddy (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 24, name: Eddy (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 25, name: Eddy (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 26, name: Eddy (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 27, name: Eddy (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 28, name: Ellen,  lang: nl-BE\\\",\\n  \\\"id: 29, name: Flo (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 30, name: Flo (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 31, name: Flo (English (US)),  lang: en-US\\\",\\n  \\\"id: 32, name: Flo (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 33, name: Flo (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 34, name: Flo (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 35, name: Flo (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 36, name: Flo (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 37, name: Flo (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 38, name: Flo (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 39, name: Fred,  lang: en-US\\\",\\n  \\\"id: 40, name: Good News,  lang: en-US\\\",\\n  \\\"id: 41, name: Grandma (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 42, name: Grandma (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 43, name: Grandma (English (US)),  lang: en-US\\\",\\n  \\\"id: 44, name: Grandma (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 45, name: Grandma (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 46, name: Grandma (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 47, name: Grandma (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 48, name: Grandma (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 49, name: Grandma (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 50, name: Grandma (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 51, name: Grandpa (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 52, name: Grandpa (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 53, name: Grandpa (English (US)),  lang: en-US\\\",\\n  \\\"id: 54, name: Grandpa (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 55, name: Grandpa (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 56, name: Grandpa (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 57, name: Grandpa (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 58, name: Grandpa (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 59, name: Grandpa (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 60, name: Grandpa (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 61, name: Jester,  lang: en-US\\\",\\n  \\\"id: 62, name: Ioana,  lang: ro-RO\\\",\\n  \\\"id: 63, name: Jacques,  lang: fr-FR\\\",\\n  \\\"id: 64, name: Joana,  lang: pt-PT\\\",\\n  \\\"id: 65, name: Junior,  lang: en-US\\\",\\n  \\\"id: 66, name: Kanya,  lang: th-TH\\\",\\n  \\\"id: 67, name: Karen,  lang: en-AU\\\",\\n  \\\"id: 68, name: Kate (Enhanced),  lang: en-GB\\\",\\n  \\\"id: 69, name: Kathy,  lang: en-US\\\",\\n  \\\"id: 70, name: Kyoko,  lang: ja-JP\\\",\\n  \\\"id: 71, name: Lana,  lang: hr-HR\\\",\\n  \\\"id: 72, name: Laura,  lang: sk-SK\\\",\\n  \\\"id: 73, name: Lekha,  lang: hi-IN\\\",\\n  \\\"id: 74, name: Lesya,  lang: uk-UA\\\",\\n  \\\"id: 75, name: Linh,  lang: vi-VN\\\",\\n  \\\"id: 76, name: Luciana,  lang: pt-BR\\\",\\n  \\\"id: 77, name: Majed,  lang: ar-001\\\",\\n  \\\"id: 78, name: T\\u00fcnde,  lang: hu-HU\\\",\\n  \\\"id: 79, name: Meijia,  lang: zh-TW\\\",\\n  \\\"id: 80, name: Melina,  lang: el-GR\\\",\\n  \\\"id: 81, name: Milena,  lang: ru-RU\\\",\\n  \\\"id: 82, name: Moira,  lang: en-IE\\\",\\n  \\\"id: 83, name: M\\u00f3nica,  lang: es-ES\\\",\\n  \\\"id: 84, name: Montse,  lang: ca-ES\\\",\\n  \\\"id: 85, name: Nora,  lang: nb-NO\\\",\\n  \\\"id: 86, name: Organ,  lang: en-US\\\",\\n  \\\"id: 87, name: Paulina,  lang: es-MX\\\",\\n  \\\"id: 88, name: Superstar,  lang: en-US\\\",\\n  \\\"id: 89, name: Ralph,  lang: en-US\\\",\\n  \\\"id: 90, name: Reed (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 91, name: Reed (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 92, name: Reed (English (US)),  lang: en-US\\\",\\n  \\\"id: 93, name: Reed (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 94, name: Reed (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 95, name: Reed (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 96, name: Reed (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 97, name: Reed (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 98, name: Reed (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 99, name: Rishi,  lang: en-IN\\\",\\n  \\\"id: 100, name: Rocko (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 101, name: Rocko (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 102, name: Rocko (English (US)),  lang: en-US\\\",\\n  \\\"id: 103, name: Rocko (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 104, name: Rocko (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 105, name: Rocko (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 106, name: Rocko (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 107, name: Rocko (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 108, name: Rocko (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 109, name: Rocko (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 110, name: Samantha,  lang: en-US\\\",\\n  \\\"id: 111, name: Sandy (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 112, name: Sandy (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 113, name: Sandy (English (US)),  lang: en-US\\\",\\n  \\\"id: 114, name: Sandy (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 115, name: Sandy (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 116, name: Sandy (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 117, name: Sandy (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 118, name: Sandy (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 119, name: Sandy (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 120, name: Sandy (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 121, name: Sara,  lang: da-DK\\\",\\n  \\\"id: 122, name: Satu,  lang: fi-FI\\\",\\n  \\\"id: 123, name: Shelley (German (Germany)),  lang: de-DE\\\",\\n  \\\"id: 124, name: Shelley (English (UK)),  lang: en-GB\\\",\\n  \\\"id: 125, name: Shelley (English (US)),  lang: en-US\\\",\\n  \\\"id: 126, name: Shelley (Spanish (Spain)),  lang: es-ES\\\",\\n  \\\"id: 127, name: Shelley (Spanish (Mexico)),  lang: es-MX\\\",\\n  \\\"id: 128, name: Shelley (Finnish (Finland)),  lang: fi-FI\\\",\\n  \\\"id: 129, name: Shelley (French (Canada)),  lang: fr-CA\\\",\\n  \\\"id: 130, name: Shelley (French (France)),  lang: fr-FR\\\",\\n  \\\"id: 131, name: Shelley (Italian (Italy)),  lang: it-IT\\\",\\n  \\\"id: 132, name: Shelley (Portuguese (Brazil)),  lang: pt-BR\\\",\\n  \\\"id: 133, name: Sinji,  lang: zh-HK\\\",\\n  \\\"id: 134, name: Tessa,  lang: en-ZA\\\",\\n  \\\"id: 135, name: Thomas,  lang: fr-FR\\\",\\n  \\\"id: 136, name: Tingting,  lang: zh-CN\\\",\\n  \\\"id: 137, name: Trinoids,  lang: en-US\\\",\\n  \\\"id: 138, name: Whisper,  lang: en-US\\\",\\n  \\\"id: 139, name: Xander,  lang: nl-NL\\\",\\n  \\\"id: 140, name: Yelda,  lang: tr-TR\\\",\\n  \\\"id: 141, name: Yuna,  lang: ko-KR\\\",\\n  \\\"id: 142, name: Zarvox,  lang: en-US\\\",\\n  \\\"id: 143, name: Zosia,  lang: pl-PL\\\",\\n  \\\"id: 144, name: Zuzana,  lang: cs-CZ\\\"\\n]\",\"category\":\"DataFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 3970\",\"in_\":[{\"portId\":\"in\",\"name\":\"in\"}],\"doCompute\":\"DataFlow_Message\",\"key\":79,\"location\":\"23810 -2520\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":21,\"to\":12,\"points\":[21263.271484375,-5340,21273.271484375,-5340,21530,-5340,21530,-4530,17500,-4530,17500,-5650,17520.314453125,-5650.200000000001,17530.314453125,-5650.200000000001],\"key\":-2},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"clear\",\"from\":20,\"to\":2,\"points\":[18293.271484375,-6300,18303.271484375,-6300,18620,-6300,18620,-5220,18644.02496875,-5220.4000000000015,18654.02496875,-5220.4000000000015],\"key\":-13},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":12,\"to\":23,\"points\":[17931.724609375,-5650.200000000001,17941.724609375,-5650.200000000001,18046.791015625,-5650,18056.791015625,-5650],\"key\":-14},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":23,\"to\":2,\"points\":[18373.271484375,-5650,18383.271484375,-5650,18560,-5650,18570,-5260,18644.02496875,-5240.4000000000015,18654.02496875,-5240.4000000000015],\"key\":-15},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlex\",\"toPort\":\"in\",\"from\":24,\"to\":21,\"points\":[20866.390625,-5260,20876.390625,-5260,20936.791015625,-5340,20946.791015625,-5340],\"key\":-19},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":28,\"to\":27,\"points\":[17931.724609375,-5130,17941.724609375,-5130,18056.791015625,-5128.945,18066.791015625,-5128.945],\"key\":-16},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":32,\"to\":33,\"points\":[17931.724609375,-4640,17941.724609375,-4640,18046.791015625,-4640,18056.791015625,-4640],\"key\":-21},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":27,\"to\":2,\"points\":[18383.271484375,-5128.945,18393.271484375,-5128.945,18560,-5130,18560,-5240,18644.02496875,-5240.4000000000015,18654.02496875,-5240.4000000000015],\"key\":-24},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":33,\"to\":2,\"points\":[18373.271484375,-4640,18383.271484375,-4640,18570,-4640,18570,-5210,18644.02496875,-5240.4000000000015,18654.02496875,-5240.4000000000015],\"key\":-25},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toAlice\",\"toPort\":\"in\",\"from\":24,\"to\":35,\"points\":[20866.390625,-5240,20876.390625,-5240,20936.791015625,-5240,20946.791015625,-5240],\"key\":-26},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toBob\",\"toPort\":\"in\",\"from\":24,\"to\":36,\"points\":[20866.390625,-5220,20876.390625,-5220,20936.791015625,-5140,20946.791015625,-5140],\"key\":-27},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":35,\"to\":28,\"points\":[21263.271484375,-5240,21273.271484375,-5240,21520,-5240,21520,-4540,17490,-4540,17490,-5130,17520.314453125,-5130,17530.314453125,-5130],\"key\":-28},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":36,\"to\":32,\"points\":[21263.271484375,-5140,21273.271484375,-5140,21510,-5140,21510,-4550,17480,-4550,17480,-4640,17520.314453125,-4640,17530.314453125,-4640],\"key\":-29},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":20,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16060,-6300,17966.791015625,-6300,17976.791015625,-6300],\"key\":-30},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":37,\"to\":39,\"points\":[21673.271484375,-5980,21683.271484375,-5980,21736.791015625,-5980,21746.791015625,-5980],\"key\":-31},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"in\",\"from\":38,\"to\":37,\"points\":[21230.999999971584,-5979.929029836505,21317.103515625,-5979.9,21316.791015625,-5980,21326.791015625,-5980],\"key\":-32},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"history\",\"from\":42,\"to\":24,\"points\":[20443.271484375,-5240,20453.271484375,-5240,20482.296875,-5240,20492.296875,-5240],\"key\":-34},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":45,\"to\":43,\"points\":[16403.271484375,-5750,16413.271484375,-5750,16494.05078125,-5690,16504.05078125,-5690],\"key\":-35},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":43,\"points\":[16383.271484375,-6200,16393.271484375,-6200,16494.05078125,-5710,16504.05078125,-5710],\"key\":-36},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":49,\"to\":43,\"points\":[16403.271484375,-5530,16413.271484375,-5530,16494.05078125,-5650,16504.05078125,-5650],\"key\":-37},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":54,\"to\":43,\"points\":[16403.271484375,-5650,16413.271484375,-5650,16494.05078125,-5670,16504.05078125,-5670],\"key\":-39},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":43,\"to\":12,\"points\":[16883.271484375,-5680,16893.271484375,-5680,17520.314453125,-5670.200000000001,17530.314453125,-5670.200000000001],\"key\":-40},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":55,\"to\":58,\"points\":[16415.167484375,-5116.835999999999,16425.167484375,-5116.835999999999,16505.94678125,-5136.936,16515.94678125,-5136.936],\"key\":-38},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":56,\"to\":58,\"points\":[16415.167484375,-4996.835999999999,16425.167484375,-4996.835999999999,16505.94678125,-5116.936,16515.94678125,-5116.936],\"key\":-41},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":57,\"to\":58,\"points\":[16415.167484375,-5216.835999999999,16425.167484375,-5216.835999999999,16505.94678125,-5156.936,16515.94678125,-5156.936],\"key\":-42},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"personality\",\"from\":59,\"to\":62,\"points\":[16385.167484375,-4630,16395.167484375,-4630,16475.94678125,-4650.1,16485.94678125,-4650.1],\"key\":-43},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goals\",\"from\":60,\"to\":62,\"points\":[16385.167484375,-4510,16395.167484375,-4510,16475.94678125,-4630.1,16485.94678125,-4630.1],\"key\":-44},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"capabilities\",\"from\":61,\"to\":62,\"points\":[16385.167484375,-4730,16395.167484375,-4730,16475.94678125,-4670.1,16485.94678125,-4670.1],\"key\":-45},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":58,\"points\":[16383.271484375,-6200,16393.271484375,-6200,16505.94678125,-5176.936,16515.94678125,-5176.936],\"key\":-46},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"situation\",\"from\":47,\"to\":62,\"points\":[16383.271484375,-6200,16393.271484375,-6200,16475.94678125,-4690.1,16485.94678125,-4690.1],\"key\":-47},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":58,\"to\":28,\"points\":[16895.167484375,-5146.936,16905.167484375,-5146.936,17520.314453125,-5150,17530.314453125,-5150],\"key\":-48},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":62,\"to\":32,\"points\":[16865.167484375,-4660.1,16875.167484375,-4660.1,17520.314453125,-4660,17530.314453125,-4660],\"key\":-49},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":47,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16086.791015625,-6200,16096.791015625,-6200],\"key\":-50},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":45,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16106.791015625,-5750,16116.791015625,-5750],\"key\":-51},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":54,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16106.791015625,-5650,16116.791015625,-5650],\"key\":-52},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":49,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16106.791015625,-5530,16116.791015625,-5530],\"key\":-53},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":57,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16118.687015625,-5216.835999999999,16128.687015625,-5216.835999999999],\"key\":-54},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":55,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16118.687015625,-5116.835999999999,16128.687015625,-5116.835999999999],\"key\":-55},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":56,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16118.687015625,-4996.835999999999,16128.687015625,-4996.835999999999],\"key\":-56},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":61,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16088.687015625,-4730,16098.687015625,-4730],\"key\":-57},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":59,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16088.687015625,-4630,16098.687015625,-4630],\"key\":-58},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":60,\"points\":[15993.271484375,-6201.000000000004,16003.271484375,-6201.000000000004,16088.687015625,-4510,16098.687015625,-4510],\"key\":-59},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":53,\"to\":63,\"points\":[18823.271484375,-5690.1,18833.271484375,-5690.1,18876.791015625,-5690.1,18886.791015625,-5690.1],\"key\":-61},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":63,\"to\":42,\"points\":[19203.271484375,-5690.1,19213.271484375,-5690.1,19980,-5690,20000,-5290,20116.791015625,-5240,20126.791015625,-5240],\"key\":-60,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"messageOut\",\"toPort\":\"in\",\"from\":2,\"to\":74,\"points\":[19265.2681328125,-5220.4000000000015,19275.2681328125,-5220.4000000000015,19286.791015625,-5170,19296.791015625,-5170],\"key\":-66},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"onStop\",\"toPort\":\"onStop\",\"from\":74,\"to\":68,\"points\":[19691.5654296875,-5160,19701.5654296875,-5160,19728.4345703125,-5200,19738.4345703125,-5200],\"key\":-68},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"onStart\",\"toPort\":\"onStart\",\"from\":74,\"to\":68,\"points\":[19691.5654296875,-5180,19701.5654296875,-5180,19728.4345703125,-5220,19738.4345703125,-5220],\"key\":-69},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":2,\"to\":68,\"points\":[19265.2681328125,-5240.4000000000015,19275.2681328125,-5240.4000000000015,19728.4345703125,-5240,19738.4345703125,-5240],\"key\":-70},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":68,\"to\":42,\"points\":[20093.271484375,-5220,20103.271484375,-5220,20116.791015625,-5240,20126.791015625,-5240],\"key\":-67,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":84,\"to\":75,\"points\":[18073.271484375,-3430,18083.271484375,-3430,18110,-3430,18110,-3300,16590,-3310,16400.314453125,-3660.3999999999996,16410.314453125,-3660.3999999999996],\"key\":-62},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"messageIn\",\"from\":76,\"to\":72,\"points\":[17160.4619140625,-3660.2,17170.4619140625,-3660.2,17180.517578125,-3430,17190.517578125,-3430],\"key\":-64},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":76,\"to\":78,\"points\":[17160.4619140625,-3660.2,17170.4619140625,-3660.2,17328.103515625,-3900,17338.103515625,-3900],\"key\":-65,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":80,\"to\":75,\"points\":[16293.271484375,-3690.1,16303.271484375,-3690.1,16400.314453125,-3680.3999999999996,16410.314453125,-3680.3999999999996],\"key\":-71},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":83,\"to\":80,\"points\":[15893.271484375,-3690.1,15903.271484375,-3690.1,15956.791015625,-3690.1,15966.791015625,-3690.1],\"key\":-72},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":72,\"to\":84,\"points\":[17720.3720703125,-3430,17730.3720703125,-3430,17748.103515625,-3430,17758.103515625,-3430],\"key\":-73},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":75,\"to\":70,\"points\":[16811.724609375,-3660.3999999999996,16821.724609375,-3660.3999999999996,17306.791015625,-2960,17316.791015625,-2960],\"key\":-74},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":75,\"to\":76,\"points\":[16811.724609375,-3660.3999999999996,16821.724609375,-3660.3999999999996,16836.791015625,-3660.2,16846.791015625,-3660.2],\"key\":-63},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":81,\"to\":85,\"points\":[22213.271484375,-4460,22223.271484375,-4460,22217.103515625,-4240,22216.791015625,-2850,22226.791015625,-2850],\"key\":-75,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":77,\"to\":81,\"points\":[21863.271484375,-4460,21873.271484375,-4460,21886.791015625,-4460,21896.791015625,-4460],\"key\":-76}\n]}"
}