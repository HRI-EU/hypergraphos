I want to avoid that a minimized window is moved to the bottom of the screen.
For doing this I have commented out the following code in winbox.boundle.min.js

   /*.move(d.left+b[n]*k|0,P-d.bottom-d.h,!0)*/
   
The call to the move methog can be found in this code in the source:

function update_min_stack(){

    const length = stack_min.length;
    const splitscreen_index = {};
    const splitscreen_length = {};

    for(let i = 0, self, key; i < length; i++){

        self = stack_min[i];
        key = self.left + ":" + self.top;

        if(splitscreen_length[key]){

            splitscreen_length[key]++;
        }
        else{

            splitscreen_index[key] = 0;
            splitscreen_length[key] = 1;
        }
    }

    for(let i = 0, self, key, width; i < length; i++){

        self = stack_min[i]
        key = self.left + ":" + self.top;
        width = Math.min((root_w - self.left - self.right) / splitscreen_length[key], 250);
        self.resize((width + 1) | 0, self.header, true);
            // This is the call to move I have commented out and put a ; in line before
            //.move((self.left + splitscreen_index[key] * width) | 0, root_h - self.bottom - self.header, true);
        splitscreen_index[key]++;
    }
}