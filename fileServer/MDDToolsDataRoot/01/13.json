{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "ConnectorsDSL",
    "PicturesDSL",
    "TreeDSL",
    "KanbanDSL",
    "AIFlowDSL"
  ],
  "view": {
    "scale": 0.22977624784853368,
    "position": [
      2518.087806673755,
      -3004.19501908019
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"- The first 4 lines of the example on the left are created after pressing the \\\"Start\\\" button.\\n- Then the ChatGPT (assistant) give its first command.\\n- Then the user has to enter the status by simulating the robot and press \\\"Send\\\".\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"260 250\",\"key\":0,\"location\":\"4820 343.799\",\"group\":20,\"color\":\"lightyellow\"},\n{\"label\":\"user> [User] Please, Robert, put the toast in the oven\\n[Status] Robi's hand is empty\\n[Status] the toast is on the plate in front of Robi\\n[Status] The oven is near Robi\\nassistant> [Body] take_object(toast)\\nuser> [Status] toast in hand\\nassistant> [Body] put_object(toast, oven)\\nuser> [Status] failure because oven is closed\\nassistant> [Body] open_door(oven)\\nuser> [Status] oven is opened\\nassistant> [Body] put_object(toast, oven)\\nuser> [Status] toast in oven\\nassistant> Is there anything else I can assist you with?\\nuser> \",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"640 350\",\"key\":1,\"location\":\"4200 363.799\",\"group\":20},\n{\"label\":\"Execution example\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 30\",\"key\":2,\"location\":\"4190 153.799\",\"group\":20},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":3,\"location\":\"4880 33.79900000000001\",\"group\":20},\n{\"label\":\"By pressing the \\\"Start\\\" button you initialize the chat with the \\\"First user input\\\" and the \\\"Prompt\\\".\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"540 80\",\"key\":4,\"location\":\"4250 40\",\"group\":20},\n{\"label\":\"4)\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"60 30\",\"key\":5,\"location\":\"4190 43.79900000000001\",\"group\":20},\n{\"label\":\"Chat Data\",\"category\":\"AIFlow_DataSend\",\"size\":\"190 120\",\"buttons\":[{\"name\":\"Send\",\"checked\":true}],\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"user> [User] Please, Robert, put the toast in the oven\\n[Status] Robi's hand is empty\\n[Status] the toast is on the plate in front of Robi\\n[Status] The oven is near Robi\\nassistant> [Body] take_object(toast)\\nuser> [Status] toast in hand\\nassistant> [Body] put_object(toast, oven)\\nuser> [Status] failure because oven is closed\\nassistant> [Body] open_door(oven)\\nuser> [Status] oven is opened\\nassistant> [Body] put_object(toast, oven)\\nuser> [Status] toast in oven\\nassistant> Is there anything else I can assist you with?\\nuser> \",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":6,\"location\":\"4840 -86.201\",\"editorPosition\":[1453,633,575,347],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":20},\n{\"label\":\"Open the editor of the \\\"Chat Data\\\" node and leave it open. This editor will be used to enter the status of Robi after each command send by ChatGPT or to enter new goal.\\nBy pressing the \\\"Send\\\" button, you send the last user input to the system.\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"540 80\",\"key\":7,\"location\":\"4250 -76.201\",\"group\":20},\n{\"label\":\"3)\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"60 30\",\"key\":8,\"location\":\"4190 -126.201\",\"group\":20},\n{\"label\":\"In this model, ChatGPT takes the role of a Robot controler called Robert. It controls a robot called Robi. and gets from it status describing the changes in the environment.\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 80\",\"key\":9,\"location\":\"4190 -476.201\",\"group\":20},\n{\"label\":\"Introduction\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 30\",\"key\":10,\"location\":\"4190 -526.201\",\"group\":20},\n{\"label\":\"First user input\",\"category\":\"AIFlow_Data\",\"size\":\"190 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> [User] Please, Robert, put the toast in the oven\\n[Status] Robi's hand is empty\\n[Status] the toast is on the plate in front of Robi\\n[Status] The oven is near Robi\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":11,\"location\":\"4840 -196.201\",\"editorPosition\":[57,637,1194,123],\"group\":20},\n{\"label\":\"Open the editor of the \\\"First user input\\\" node to get the request of the user and the first status of the robot\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"540 80\",\"key\":12,\"location\":\"4250 -206.201\",\"group\":20},\n{\"label\":\"2)\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"60 30\",\"key\":13,\"location\":\"4190 -206.201\",\"group\":20},\n{\"label\":\"1)\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"60 30\",\"key\":14,\"location\":\"4190 -286.201\",\"group\":20},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":15,\"location\":\"6970 -600\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":16,\"location\":\"6980 -530\"},\n{\"label\":\"Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"190 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a robot controller called Robert. You (Robert) controls a robot named Robi that lives in the real world. \\nRobi has a physical body with two arms with hands, and a mobile platform that allow it to move.\\nRobi is controlled by an API defining commands that can be used to act and perceive. \\n\\nList of commands of the API:\\n* This command allows you to open the door of an <object>\\n  command syntax: [Body] open_door( <object> )\\n  result syntax:\\n  - [Status] <object> is opened\\n  - [Status] <object> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object> can only be opened if it is closed\\n* This command allows you to close the door of an <object>\\n  command syntax: [Body] close_door( <object> )\\n  result syntax:\\n  - [Status] <object> is closed\\n  - [Status] <object> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object> can only be closed if it is opened\\n* This command allows you to take an <object> in your robotic hand\\n  command syntax: \\n  - [Body] take_object( <object> )\\n  result syntax:\\n  - [Status] <object> is in hand\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object> can only be taken if the hand is empty\\n* This command allows you to put an <object> which is in your hand in or on a <destination object>\\n  command syntax: \\n  - [Body] put_object( <object>, <destination object> )\\n  result syntax:\\n  - [Status] <object> is in or on <destination object>\\n  - [Status] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - <object> can only be put somewhere if it is in the hand\\n  - <object> can be put on a <destination object> that has a flat surface\\n  - <object> can be put in a <destination object> that is a container\\n\\nYou (Robert) have also several high level tasks to perform or consider.\\n\\nList of task to do:\\n  - Answer the questions asked by the human user\\n  - Perform actions requested by the human user using the API commands at your disposal.\\n\\nA human user can interact with you (Robert) using the following sysntax:\\n  - [User] <user request>\\nEach time you (Robert) decide to use a Command, you write the command and wait.\\nAt this point Robi will execute the command. This might take some time. When Robi finishes the execution of the command it will return a status to you. Tis can be a success or a failure.\\n\\nYou only send a single command at a time. You should not send the [Status] message.\\nWait now for the user input.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":17,\"location\":\"4840 -286.201\",\"editorPosition\":[363,79,702,846],\"group\":20},\n{\"label\":\"Open the editor of the \\\"Prompt\\\" node if you want to get the prompt used by ChatGPT to respond. The available command for Robi are described in this node.\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"540 80\",\"key\":18,\"location\":\"4250 -286.201\",\"group\":20},\n{\"label\":\"How to use this model\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 30\",\"key\":19,\"location\":\"4190 -356.201\",\"group\":20},\n{\"label\":\"Documentation\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":20,\"location\":\"4160 -9.999657226562476\"},\n{\"label\":\"Engine Code 1.2\",\"color\":\"orange\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/00/90.js\",\"key\":21,\"location\":\"8530 -340\",\"isIncludeScript\":true,\"editorPosition\":[1216,47,949,1278]},\n{\"label\":\"Scenario 9\",\"category\":\"AIFlow_Data\",\"size\":\"200 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Put the coffee can on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":22,\"location\":\"6490 180\",\"editorPosition\":[169,1166,389,78]},\n{\"label\":\"Text to JSON\",\"category\":\"AIFlow_Text2JSON\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_Text2JSON\",\"fileTypeName\":\"Converter\",\"key\":23,\"location\":\"8950 130\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Chat in JSON\",\"category\":\"AIFlow_Data\",\"size\":\"160 130\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"Here is the state of the environment:\\\\n{\\\\n  \\\\\\\"gaze\\\\\\\": {\\\\n    \\\\\\\"fovea\\\\\\\": [\\\\n      \\\\\\\"glass_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"perif\\\\\\\": [\\\\n      \\\\\\\"fridge_1\\\\\\\",\\\\n      \\\\\\\"microwave_1\\\\\\\",\\\\n      \\\\\\\"toaster_1\\\\\\\",\\\\n      \\\\\\\"plate_1\\\\\\\",\\\\n      \\\\\\\"glass_1\\\\\\\",\\\\n      \\\\\\\"mug_1\\\\\\\",\\\\n      \\\\\\\"pitcher_1\\\\\\\",\\\\n      \\\\\\\"pitcher_2\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"hand_left\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"hand_right\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"lab\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"table_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"fridge_1\\\\\\\",\\\\n      \\\\\\\"microwave_1\\\\\\\",\\\\n      \\\\\\\"toaster_1\\\\\\\",\\\\n      \\\\\\\"plate_1\\\\\\\",\\\\n      \\\\\\\"glass_1\\\\\\\",\\\\n      \\\\\\\"mug_1\\\\\\\",\\\\n      \\\\\\\"pitcher_1\\\\\\\",\\\\n      \\\\\\\"pitcher_2\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"lab\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"fridge_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\",\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"on\\\\\\\",\\\\n    \\\\\\\"temperature\\\\\\\": -5\\\\n  },\\\\n  \\\\\\\"microwave_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\",\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"off\\\\\\\",\\\\n    \\\\\\\"temperature\\\\\\\": 20\\\\n  },\\\\n  \\\\\\\"toaster_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"off\\\\\\\",\\\\n    \\\\\\\"temperature\\\\\\\": 20\\\\n  },\\\\n  \\\\\\\"plate_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"toast_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20\\\\n  },\\\\n  \\\\\\\"toast_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"plate_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"preparation\\\\\\\": \\\\\\\"raw\\\\\\\"\\\\n  },\\\\n  \\\\\\\"cola_bottle_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"plate_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\",\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"volume\\\\\\\": 0.5,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.5,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"coca-cola\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"glass_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"volume\\\\\\\": 0.1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"mug_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": \\\\\\\"ambiant\\\\\\\",\\\\n    \\\\\\\"volume\\\\\\\": 0.1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"pitcher_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"water\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"pitcher_2\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"coffee\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tray_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tea_bag_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ]\\\\n  }\\\\n}\\\\n[from Robi] glass_1 is gazed at\\\\nYour goal is:\\\\nPut the coffee can on the tray\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[to Robi] put pitcher_2 tray_1\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":25,\"location\":\"9270 130\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Chat Data\",\"category\":\"AIFlow_DataSend\",\"size\":\"180 80\",\"buttons\":[{\"name\":\"Send\",\"checked\":true}],\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"user> Here is the state of the environment:\\n{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": -5\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"ambiant\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\\n[from Robi] table_1 is gazed at\\nYour goal is:\\nPut the coffee can on the tray\\nassistant> [to Robi] get pitcher_2 table_1 hand_right\\nuser> \",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":28,\"location\":\"8640 130\",\"editorPosition\":[760,1197,470,409],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"ChatJSON Splitter\",\"category\":\"AIFlow_ChatJSONSplitter\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"history\"},{\"portId\":\"user\"}],\"onCompute\":\"AIFlowDSL_ChatJSONSplitter\",\"fileTypeName\":\"Splitter\",\"key\":29,\"location\":\"9510 130\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"User Data\",\"category\":\"AIFlow_Data\",\"size\":\"160 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"role\\\": \\\"user\\\",\\n  \\\"content\\\": \\\"\\\"\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":30,\"location\":\"9870 160\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[2525,1821,400,350]},\n{\"label\":\"History Data\",\"category\":\"AIFlow_Data\",\"size\":\"160 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"Here is the state of the environment:\\\\n{\\\\n  \\\\\\\"gaze\\\\\\\": {\\\\n    \\\\\\\"fovea\\\\\\\": [\\\\n      \\\\\\\"glass_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"perif\\\\\\\": [\\\\n      \\\\\\\"fridge_1\\\\\\\",\\\\n      \\\\\\\"microwave_1\\\\\\\",\\\\n      \\\\\\\"toaster_1\\\\\\\",\\\\n      \\\\\\\"plate_1\\\\\\\",\\\\n      \\\\\\\"glass_1\\\\\\\",\\\\n      \\\\\\\"mug_1\\\\\\\",\\\\n      \\\\\\\"pitcher_1\\\\\\\",\\\\n      \\\\\\\"pitcher_2\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"hand_left\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"hand_right\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"lab\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"table_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"fridge_1\\\\\\\",\\\\n      \\\\\\\"microwave_1\\\\\\\",\\\\n      \\\\\\\"toaster_1\\\\\\\",\\\\n      \\\\\\\"plate_1\\\\\\\",\\\\n      \\\\\\\"glass_1\\\\\\\",\\\\n      \\\\\\\"mug_1\\\\\\\",\\\\n      \\\\\\\"pitcher_1\\\\\\\",\\\\n      \\\\\\\"pitcher_2\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"lab\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"fridge_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\",\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"on\\\\\\\",\\\\n    \\\\\\\"temperature\\\\\\\": -5\\\\n  },\\\\n  \\\\\\\"microwave_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\",\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"off\\\\\\\",\\\\n    \\\\\\\"temperature\\\\\\\": 20\\\\n  },\\\\n  \\\\\\\"toaster_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"power\\\\\\\": \\\\\\\"off\\\\\\\",\\\\n    \\\\\\\"temperature\\\\\\\": 20\\\\n  },\\\\n  \\\\\\\"plate_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [\\\\n      \\\\\\\"toast_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20\\\\n  },\\\\n  \\\\\\\"toast_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"plate_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"preparation\\\\\\\": \\\\\\\"raw\\\\\\\"\\\\n  },\\\\n  \\\\\\\"cola_bottle_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"plate_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"closure\\\\\\\": \\\\\\\"closed\\\\\\\",\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"volume\\\\\\\": 0.5,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0.5,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"coca-cola\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"glass_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"volume\\\\\\\": 0.1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"mug_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": \\\\\\\"ambiant\\\\\\\",\\\\n    \\\\\\\"volume\\\\\\\": 0.1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 0,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": []\\\\n  },\\\\n  \\\\\\\"pitcher_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"water\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"pitcher_2\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"temperature\\\\\\\": 20,\\\\n    \\\\\\\"volume\\\\\\\": 1,\\\\n    \\\\\\\"fillLevel\\\\\\\": 1,\\\\n    \\\\\\\"holdsLiquid\\\\\\\": [\\\\n      \\\\\\\"coffee\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tray_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ]\\\\n  },\\\\n  \\\\\\\"tea_bag_1\\\\\\\": {\\\\n    \\\\\\\"holdsObject\\\\\\\": [],\\\\n    \\\\\\\"isHoldByObject\\\\\\\": [\\\\n      \\\\\\\"table_1\\\\\\\"\\\\n    ]\\\\n  }\\\\n}\\\\n[from Robi] glass_1 is gazed at\\\\nYour goal is:\\\\nPut the coffee can on the tray\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[to Robi] put pitcher_2 tray_1\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":31,\"location\":\"9870 70\",\"editorPosition\":[2591,1446,400,350],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":32,\"location\":\"6210 50\"},\n{\"label\":\"System Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"190 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a robot controller called Roco. You (Roco) controls a robot named Robi that lives in the real world. \\nRobi has a physical body with two arms each equiped with a hand, and a mobile platform that allow it to move.\\nRobi is controlled by an API defining commands that can be used to act and perceive. \\n\\nList of commands of the API:\\n* This command allows Robi to open the door of an <object>:\\n  command syntax: [to Robi] open_door <object> \\n  result syntax:\\n  - [from Robi] <object> is opened\\n  - [from Robi] <object> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object> can only be opened if it is closed\\n  \\n* This command allows Robi to close the door of an <object>:\\n  command syntax: [to Robi] close_door <object> \\n  result syntax:\\n  - [from Robi] <object> is closed\\n  - [from Robi] <object> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object> can only be closed if it is opened\\n  \\n* This command allows Robi to take an <object> with one of his hand:\\n  command syntax: \\n  - [to Robi] get <object> table_1 hand_left\\n  - [to Robi] get <object> table_1 hand_right\\n  result syntax:\\n  - [from Robi] <object> is in hand_left/hand_right\\n  - [from Robi] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object> can only be taken if the hand is empty\\n  \\n* This command allows Robi to put an <object> which is in one of its hand in or on a <destination object>:\\n  command syntax: \\n  - [to Robi] put <object> <destination object>\\n  result syntax:\\n  - [from Robi] <object> is in/on <destination object>\\n  - [from Robi] <object> cannot be taken because <reason of failure>\\n  constraints:\\n  - <object> can only be put somewhere if it is in the hand\\n  - <object> can be put on a <destination object> that has a flat surface\\n  - <object> can be put in a <destination object> that is a container\\n  \\n* This command informs the human that the goal has been achieved\\n  command syntax: \\n  - [to Human] goal achieved\\n  constraints:\\n  - this command should be send as the last command after achieving a goal\\n\\nYou (Roco) have also several high level tasks to perform or consider.\\n\\nList of task to do:\\n  - Answer the questions asked by the human user\\n  - Perform actions requested by the human user using the API commands at your disposal.\\n\\nA human user can interact with you (Roco) using the following sysntax:\\n  - [from Human] <message from human to Roco>\\nAnd you should aanswer to human with the following syntax:\\n  - [to Human] <message from Roco to human>\\nEach time you (Roco) decide to use a Command, you write the command and wait.\\nAt this point Robi will execute the command. This might take some time. When Robi finishes the execution of the command it will return a from Robi to you. Tis can be a success or a failure.\\n\\nYou only send a single command at a time. You should not send the [from Robi] message.\\nWait now for the user input. \",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":33,\"location\":\"7240 50\",\"editorPosition\":[363,79,702,846]},\n{\"label\":\"Simple Interactive Robotic ChatGPT with AI DSL\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1000 50\",\"key\":34,\"location\":\"7560 -100\"},\n{\"label\":\"AI Flow DSL Test Robot4\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1560 30\",\"key\":35,\"location\":\"7190 -540\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"color\":\"SkyBlue\",\"rows\":[{\"name\":\"Name\",\"value\":\"tbd\"},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"@getDate()\"},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frankonello\"}],\"key\":37,\"location\":\"7180 -350\"},\n{\"label\":\"API Keys\",\"category\":\"AIFlow_Param\",\"size\":\"460 80\",\"rows\":[{\"name\":\"ChatGPT\",\"value\":\"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\"}],\"key\":38,\"location\":\"7910 -330\"},\n{\"label\":\"1) Cola toast\\n    - Toast a slice of bread\\n    - Once ready pour on it cola flavour\\n    - Pour some coffee flavour\\n    - Roast it in the microwave for 20s at 180 degree\\n    - Serve it on a tray\\n2) Make & serve a hot tea\\n3) Serve coffee\\n4) Cool cola and serve\\n5) Serve hot toast\\n6) Make & serve a cold tea\\n7) Make & serve light cola\\n    - Mix cola and hot water \\n    - Cool it in the fridge for 20s\\n8) Make roasted tea and serve it\\n    - Roast tea bag in toaster\\n    - Make and serve a hot tea\\n9) Put the coffee can on the tray\\n\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 190\",\"key\":39,\"location\":\"4520 1020\"},\n{\"label\":\"Scenario\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 30\",\"key\":40,\"location\":\"4520 770\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":41,\"location\":\"6210 450\"},\n{\"label\":\"Scenario 1\",\"category\":\"AIFlow_Data\",\"size\":\"200 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> [User] Please, Robert, put the toast in the oven\\n[Status] Robi's hand is empty\\n[Status] the toast is on the plate in front of Robi\\n[Status] The oven is near Robi\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":42,\"location\":\"6490 450\",\"editorPosition\":[57,637,1194,123]},\n{\"label\":\"Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"290 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": -5\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"ambiant\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":48,\"location\":\"10410 849.9\",\"editorPosition\":[1735,35,425,1463]},\n{\"label\":\"Connecting to websocket\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"920 70\",\"in\":[{\"portId\":\"in\"}],\"key\":49,\"location\":\"10410 760\"},\n{\"label\":\"Robot Client\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"message\"}],\"out\":[{\"portId\":\"response\"},{\"portId\":\"status\"},{\"portId\":\"environmentState\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"wsURL\",\"value\":\"localhost:35000\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_set( nodeData, 'command', value );\\n\\n//--------------------------------\\n// Environment State\\n//--------------------------------\\n\\nvar initState = {\\n  gaze: {\\n    fovea: [],\\n    perif: [],\\n  },\\n  hand_left: {\\n    holdsObject: [],\\n    isHoldByObject: [],\\n  },\\n  hand_right:  {\\n    holdsObject: [],\\n    isHoldByObject: [],\\n  },\\n  lab: {\\n    holdsObject:['table_1'],\\n  },\\n  table_1: {\\n    holdsObject: ['fridge_1','microwave_1','toaster_1','plate_1','glass_1','mug_1','pitcher_1','pitcher_2','tray_1'],\\n    isHoldByObject: ['lab'],\\n  },\\n  fridge_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n    closure: 'closed',\\n    power: 'on',\\n    temperature: -5,\\n  },\\n  microwave_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n    closure: 'closed',\\n    power: 'off',\\n    temperature: 20,\\n  },\\n  toaster_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n    power: 'off',\\n    temperature: 20,\\n  },\\n  plate_1: {\\n    holdsObjectF: ['toast_1'],\\n    isHoldByObject: ['table_1'],\\n    temperature: 20,\\n  },\\n  toast_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['plate_1'],\\n    temperature: 20,\\n    preparation: 'raw'\\n  },\\n  cola_bottle_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['plate_1'],\\n    closure: 'closed',\\n    temperature: 20,\\n    volume: 0.5,\\n    fillLevel: 0.5,\\n    holdsLiquid: ['coca-cola'],\\n  },\\n  glass_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n    temperature: 20,\\n    volume: 0.1,\\n    fillLevel: 0.0,\\n    holdsLiquid: [],\\n  },\\n  mug_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n    temperature: 'ambiant',\\n    volume: 0.1,\\n    fillLevel: 0.0,\\n    holdsLiquid: [],\\n  },\\n  pitcher_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n    temperature: 20,\\n    volume: 1.0,\\n    fillLevel: 1.0,\\n    holdsLiquid: ['water'],\\n  },\\n  pitcher_2: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n    temperature: 20,\\n    volume: 1.0,\\n    fillLevel: 1.0,\\n    holdsLiquid: ['coffee'],\\n  },\\n  tray_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n  },\\n  tea_bag_1: {\\n    holdsObject: [],\\n    isHoldByObject: ['table_1'],\\n  },\\n};\\nvar state = Engine_get( nodeData, 'state', initState );\\n\\nfunction updateEnvironmentState() {\\n  let response = '';\\n  let commandStr = Engine_get( nodeData, 'command' );\\n  const toRobi = '[to Robi] ';\\n  const idx = commandStr.indexOf(toRobi);\\n  if( idx != -1 ) {\\n    commandStr = commandStr.substring( idx + toRobi.length );\\n  }\\n  state = Engine_get( nodeData, 'state' );\\n  tokenList = commandStr.split( ' ' );\\n  if( tokenList ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    let objectName2 = tokenList[2] || '';\\n    let handName = tokenList[3] || '';\\n    switch( commandName ) {\\n      case 'get':\\n        if( handName ) {\\n          if( isHandEmpty( handName ) ) {\\n            getObjectInHand( handName, objectName1 );\\n            response = `[from Robi] ${objectName1} is in ${handName}`;\\n          }\\n        } else {\\n          if( isHandEmpty( 'hand_right' ) ) {\\n            getObjectInHand( 'hand_right', objectName1 );\\n            response = `[from Robi] ${objectName1} is in hand_right`;\\n          } else if( isHandEmpty( 'hand_left' ) ) {\\n            getObjectInHand( 'hand_left', objectName1 );\\n            response = `[from Robi] ${objectName1} is in hand_left`;\\n          }\\n        }\\n        break;\\n      case 'put':\\n        if( isObjectInHand( 'hand_right', objectName1 ) ) {\\n          objectName2 = putObjectOnObject( 'hand_right', objectName2 );\\n        } else if( isObjectInHand( 'hand_left', objectName1 ) ) {\\n          objectName2 = putObjectOnObject( 'hand_left', objectName2 );\\n        }\\n        response = `[from Robi] ${objectName1} is in/on ${objectName2}`;\\n        break;\\n      case 'gaze':\\n        gazeAtObject( objectName1 );\\n        response = `[from Robi] ${objectName1} is gazed at`;\\n        break;\\n      case 'open_door': // valid on microwave and fridge\\n        //if( !isObjectOpened( objectName1 ) ) {\\n        setClosure( objectName1, 'opened' );\\n        response = `[from Robi] ${objectName1} is opened`;\\n        //}\\n        break;\\n      case 'close_door':\\n        //if( isObjectOpened( objectName1 ) ) {\\n        setClosure( objectName1, 'closed' );\\n        response = `[from Robi] ${objectName1} is closed`;\\n        //}\\n        break;\\n      case 'finger_push': // valid on toaster and microwave\\n        if( isObjectPoweredOn( objectName1 ) ) {\\n          setPower( objectName1, 'off' );\\n        } else {\\n          setPower( objectName1, 'on' );\\n        }\\n        break;\\n      case 'pour':\\n        pourObject( objectName1, objectName2 );\\n        break;\\n      case 'screw':\\n        if( isObjectOpened( objectName1 ) ) {\\n          setClosure( objectName1, 'closed' );\\n        } else {\\n          setClosure( objectName1, 'opened' );\\n        }\\n    }\\n  }\\n  console.log(state)\\n  return( response );\\n}\\nfunction isHandEmpty( handName ) {\\n  return( state[handName].holdsObject.length == 0 );\\n}\\nfunction isBothHandEmpty() {\\n  return ( isHandEmpty( 'hand_right' ) && isHandEmpty( 'hand_left' ) );\\n}\\nfunction isObjectInHand( handName, objectName ) {\\n  return( state[handName].holdsObject.includes( objectName ) );\\n}\\nfunction isObjectOpened( objectName ) {\\n  return( state[objectName].closure == 'opened'? true: false );\\n}\\nfunction setClosure( objectName, status ) {\\n  state[objectName].closure = status;\\n}\\nfunction isObjectPoweredOn( objectName ) {\\n  return( state[objectName].power == 'on'? true: false );\\n}\\nfunction setPower( objectName, status ) {\\n  state[objectName].power = status;\\n}\\nfunction pourObject( fromName1, toName2 ) {\\n  if( state[fromName1].fillLevel >= state[toName2].volume ) {\\n    state[fromName1].fillLevel -= state[toName2].volume;\\n    state[fromName1].fillLevel = Math.max( 0, state[fromName1].fillLevel );\\n  }\\n}\\nfunction getObjectInHand( handName, objectName ) {\\n  // Hand now holds objectName \\n  state[handName].holdsObject.push( objectName );\\n  // ObjectName is now holded by hand\\n  const previousHolder = state[objectName].isHoldByObject.shift();\\n  state[objectName].isHoldByObject.push( handName );\\n  // previousHolder does not hold objectName anymore\\n  let objectList = state[previousHolder].holdsObject;\\n  state[previousHolder].holdsObject = objectList.filter( (d)=> d != objectName );\\n}\\nfunction putObjectOnObject( handName, containerName ) {\\n  containerName = containerName || 'table_1';\\n  console.log('putObjectOnObject', handName, containerName);\\n  // Hand now holds nothing \\n  const objectName = state[handName].holdsObject.shift();\\n  // ObjectName is now holded by containerName\\n  state[objectName].isHoldByObject.shift();\\n  state[objectName].isHoldByObject.push( containerName );\\n  // containerName now holds objectName \\n  state[containerName].holdsObject.push( objectName );\\n  return( containerName );\\n}\\nfunction gazeAtObject( objectName ) {\\n  state.gaze.fovea = [objectName];\\n  // Get parent object\\n  const parent = state[objectName].isHoldByObject;\\n  state.gaze.perif = state[parent[0]].holdsObject;\\n}\\n\\nfunction checkIfCommandIsValid( value ) {\\n  const toRobi = '[to Robi] ';\\n  const idx = value.indexOf(toRobi);\\n  let errorMsg = '';\\n  let isValid = true;\\n  let command = '';\\n  if( idx != -1 ) {\\n    command = value.substring( idx + toRobi.length );\\n    if( command ) {\\n      isValid = true;\\n    } else {\\n      isValid = false;\\n      errorMsg = '[from Robi] no command sent';\\n    }\\n  } else {\\n    isValid = false;\\n    errorMsg = '[from Robi] wrong command. The command must have the syntax: [to Robi] <command>';\\n  }\\n  const tokenList = command.split( ' ' );\\n  if( tokenList && isValid ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    let objectName2 = tokenList[2] || '';\\n    let handName = tokenList[3] || '';\\n    switch( commandName ) {    \\n      case 'put':\\n        if( isBothHandEmpty() ) {\\n          errorMsg = '[from Robi] cannot \\\"put\\\" because both hands are empty';\\n          isValid = false;\\n        }\\n      break;\\n    }\\n  }\\n  return( { command, isValid, errorMsg } );\\n}\\n//--------------------------------\\n// Communication with robot server\\n//--------------------------------\\nfunction sendCommand() {\\n  // Value is the command supposed to be send to the robot client\\n  \\n  // Check if the requested command is a valid one in the current\\n  // state of the environment\\n  const cmdCheckInfo = checkIfCommandIsValid( value );\\n  if( cmdCheckInfo.isValid ) {\\n    ws.send( cmdCheckInfo.command );\\n  } else {\\n    Engine_fireOutput( nodeData, 'response', cmdCheckInfo.errorMsg );\\n    const stateMsg = JSON.stringify( state, null, 2 );\\n    Engine_fireOutput( nodeData, 'environmentState', stateMsg );\\n  }\\n}\\n\\n// Instanciate websocket only one time\\nvar ws = Engine_get( nodeData, 'ws', null );\\nif( !ws ) {\\n  ws = newWS( sendCommand );\\n  Engine_set( nodeData, 'ws', ws );\\n} else {\\n  checkSocketState( ws, \\n  );\\n}\\n\\nfunction newWS( onConnected  ) {\\n  const wsURL = appData.me.getProperty( modelId, nodeData, 'wsURL' );\\n  let ws = null;\\n  ws = new WebSocket( `ws://${wsURL}/` );\\n  if( ws ) {\\n    ws.onmessage = (event)=> {\\n      const msg = event.data;\\n      Engine_fireOutput( nodeData, 'status', 'Received response' );\\n      if( msg == 'Success' ) {\\n      const response = updateEnvironmentState();\\n        Engine_fireOutput( nodeData, 'response', response );\\n        const stateMsg = JSON.stringify( state, null, 2 );\\n        Engine_fireOutput( nodeData, 'environmentState', stateMsg );\\n      }\\n    };\\n    ws.onopen = (event)=> {\\n      Engine_fireOutput( nodeData, 'status', 'Open websocket' );\\n      if( onConnected ) {\\n        onConnected();\\n      } \\n    };\\n    ws.onclose = (event)=> {\\n      ws = null;\\n      Engine_set( nodeData, 'ws', ws );\\n      Engine_fireOutput( nodeData, 'status', 'Server not running' );\\n    };\\n    ws.onerror = (event)=> {\\n      Engine_fireOutput( nodeData, 'status', 'Error' );\\n    };\\n    checkSocketState( ws );\\n  }\\n  return( ws );\\n}\\nfunction checkSocketState( ws, onConnected ) {\\n  console.log( 'readyState:', ws.readyState );\\n  switch( ws.readyState ){\\n    case 0: // CONNECTING: Socket has been created. The connection is not yet open.\\n      Engine_fireOutput( nodeData, 'status', 'Connecting to websocket' );\\n      break;\\n    case 1: // OPEN: The connection is open and ready to communicate.\\n      Engine_fireOutput( nodeData, 'status', 'Opened websocket' );\\n      if( onConnected ) {\\n        onConnected();\\n      }\\n      break;\\n    case 2: // CLOSING: The connection is in the process of closing.\\n      Engine_fireOutput( nodeData, 'status', 'Closing websocket' );\\n      break;\\n    case 3: // CLOSED: The connection is closed or couldn't be opened.\\n      Engine_fireOutput( nodeData, 'status', 'Server not running' );\\n      break;\\n  }\\n}\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"/fileServer/pictures/Robot_Server.png\",\"key\":50,\"location\":\"9880 699.8\",\"fileType\":\"text/javascript\",\"editorPosition\":[1581,4,724,1460]},\n{\"label\":\"[from Robi] table_1 is gazed at\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1900 70\",\"in\":[{\"portId\":\"in\"}],\"key\":52,\"location\":\"10410 690\"},\n{\"label\":\"user test command\",\"category\":\"AIFlow_DataSend\",\"size\":\"280 80\",\"buttons\":[{\"name\":\"Send\",\"checked\":false}],\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[to Robi] gaze glass_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":54,\"location\":\"9310 790\",\"editorPosition\":[1560,1908,488,68]},\n{\"label\":\"Roco Command\",\"category\":\"AIFlow_Data\",\"size\":\"200 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [to Robi] get pitcher_2 table_1 hand_right\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":56,\"location\":\"8660 349.9\",\"editorPosition\":[1557,1765,588,72]},\n{\"label\":\"Prompt to Roco\",\"category\":\"AIFlow_Template\",\"size\":\"270 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"environmentState\"},{\"portId\":\"robotResponse\"},{\"portId\":\"goal\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"environmentState,robotResponse\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"Here is the state of the environment:\\n<environmentState>\\n<robotResponse>\\nYour goal is:\\n<goal>\",\"fileTypeName\":\"Template\",\"key\":55,\"location\":\"6950 159.9\",\"editorPosition\":[918,39,712,140]},\n{\"label\":\"Command\",\"category\":\"AIFlow_Data\",\"size\":\"180 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[to Robi] get coffee hand_left\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":61,\"location\":\"8020 250\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350]},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":62,\"location\":\"8300 250\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Execution Engine\",\"category\":\"Hierarchy_Engine\",\"size\":\"240 80\",\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_executeAction( nodeData, obj.data.name );\",\"buttons\":[{\"name\":\"Reset\",\"checked\":false},{\"name\":\"Step\",\"checked\":true}],\"rows\":[{\"name\":\"isAutostart\",\"value\":\"false\"},{\"name\":\"isStepByStep\",\"value\":\"true\",\"valueChanged\":\"true\"},{\"name\":\"isStepByStepDeepFirst\",\"value\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isNodePersistencyUsed\",\"value\":\"true\"}],\"key\":57,\"location\":\"7560 -360\"},\n{\"label\":\"Robi Response\",\"category\":\"AIFlow_Data\",\"size\":\"200 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[from Robi] table_1 is gazed at\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":53,\"location\":\"10330 610\",\"editorPosition\":[57,637,1194,123]},\n{\"label\":\"Start Command\",\"category\":\"AIFlow_Data\",\"size\":\"200 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[to Robi] gaze table_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":58,\"location\":\"9390 699.9\",\"editorPosition\":[1560,1840,488,62]},\n{\"label\":\"User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"190 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Here is the state of the environment:\\n{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": -5\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"ambiant\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": 20,\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\\n[from Robi] table_1 is gazed at\\nYour goal is:\\nPut the coffee can on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":60,\"location\":\"7300 160\",\"editorPosition\":[211,1782,400,350]},\n{\"label\":\"assistant> [to Robi] get coffee hand_left\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1900 70\",\"in\":[{\"portId\":\"in\"}],\"key\":59,\"location\":\"8690 250\"},\n{\"label\":\"Role Selector\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"toHuman\"},{\"portId\":\"toRobi\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst toRobi = '[to Robi] ';\\nconst idx = value.indexOf(toRobi);\\nif( idx != -1 ) {\\n  Engine_fireOutput( nodeData, 'toRobi', value );\\n} else {\\n  Engine_fireOutput( nodeData, 'toHuman', value );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":65,\"location\":\"9030 429.79999999999995\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184]},\n{\"label\":\"Robi Command\",\"category\":\"AIFlow_Data\",\"size\":\"200 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [to Robi] get pitcher_2 table_1 hand_right\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":67,\"location\":\"9390 609.9\",\"editorPosition\":[1557,1765,588,72]},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"onCompute\":\"AIFlowDSL_LLM\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":64,\"location\":\"7640 120\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":32,\"to\":33,\"points\":[6330.4619140625,50,6340.4619140625,50,7198.103515625,50,7208.103515625,50],\"key\":-1},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":33,\"to\":64,\"points\":[7470.4619140625,50,7480.4619140625,50,7554.544921875,100,7564.544921875,100],\"key\":-2},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":23,\"to\":25,\"points\":[9230.4619140625,130,9240.4619140625,130,9228.103515625,130,9238.103515625,130],\"key\":-6,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":28,\"to\":23,\"points\":[8860.4619140625,130,8870.4619140625,130,8908.103515625,130,8918.103515625,130],\"key\":-8},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":25,\"to\":29,\"points\":[9470.4619140625,130,9480.4619140625,130,9468.103515625,130,9478.103515625,130],\"key\":-9},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"user\",\"toPort\":\"in\",\"from\":29,\"to\":30,\"points\":[9812.234375,140,9822.234375,140,9828.103515625,160,9838.103515625,160],\"key\":-10},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":29,\"to\":31,\"points\":[9812.234375,120,9822.234375,120,9828.103515625,70,9838.103515625,70],\"key\":-11},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":30,\"to\":64,\"points\":[10070.4619140625,160,10080.4619140625,160,10150,160,10150,-20,7520,-20,7520,130,7554.544921875,140,7564.544921875,140],\"key\":-12},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"inHistory\",\"from\":31,\"to\":64,\"points\":[10070.4619140625,70,10080.4619140625,70,10100,70,10100,10,7554.8773591296695,8.870991259793954,7554.544921875,120,7564.544921875,120],\"key\":-13},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":32,\"to\":22,\"points\":[6330.4619140625,50,6340.4619140625,50,6448.103515625,180,6458.103515625,180],\"key\":-15},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":41,\"to\":33,\"points\":[6330.4619140625,450,6340.4619140625,450,6420,50,7198.103515625,50,7208.103515625,50],\"key\":-16},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":41,\"to\":42,\"points\":[6330.4619140625,450,6340.4619140625,450,6448.103515625,450,6458.103515625,450],\"key\":-17},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"environmentState\",\"toPort\":\"in\",\"from\":50,\"to\":48,\"points\":[10250.73046875,719.8,10260.73046875,719.8,10368.103515625,849.9,10378.103515625,849.9],\"key\":-23},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"response\",\"toPort\":\"in\",\"from\":50,\"to\":52,\"points\":[10250.73046875,679.8,10260.73046875,679.8,10368.103515625,690,10378.103515625,690],\"key\":-24},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"status\",\"toPort\":\"in\",\"from\":50,\"to\":49,\"points\":[10250.73046875,699.8,10260.73046875,699.8,10368.103515625,760,10378.103515625,760],\"key\":-25},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"message\",\"from\":54,\"to\":50,\"points\":[9630.4619140625,790,9640.4619140625,790,9792.193359375,699.8,9802.193359375,699.8],\"key\":-21},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"environmentState\",\"from\":48,\"to\":55,\"points\":[10740.4619140625,849.9,10750.4619140625,849.9,10750,930,6750,930,6750,140,6809.26953125,139.9,6819.26953125,139.9],\"key\":-28},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":32,\"to\":58,\"points\":[6330.4619140625,50,6340.4619140625,50,6450,700,9348.103515625,699.9,9358.103515625,699.9],\"key\":-29},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"robotResponse\",\"from\":53,\"to\":55,\"points\":[10570.4619140625,610,10580.4619140625,610,10580,550,6780,550,6780,160,6809.26953125,159.9,6819.26953125,159.9],\"key\":-30},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":61,\"to\":62,\"points\":[8240.4619140625,250,8250.4619140625,250,8258.103515625,250,8268.103515625,250],\"key\":-31},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":64,\"to\":61,\"points\":[7964.0205078125,130,7974.0205078125,130,7978.103515625,250,7988.103515625,250],\"key\":-32},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"response\",\"toPort\":\"in\",\"from\":50,\"to\":53,\"points\":[10250.73046875,679.8,10260.73046875,679.8,10288.103515625,610,10298.103515625,610],\"key\":-34},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"message\",\"from\":58,\"to\":50,\"points\":[9630.4619140625,699.9,9640.4619140625,699.9,9792.193359375,699.8,9802.193359375,699.8],\"key\":-35},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"goal\",\"from\":22,\"to\":55,\"points\":[6730.4619140625,180,6740.4619140625,180,6809.26953125,179.9,6819.26953125,179.9],\"key\":-36},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":55,\"to\":60,\"points\":[7260.4619140625,159.9,7270.4619140625,159.9,7258.103515625,160,7268.103515625,160],\"key\":-37,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":60,\"to\":64,\"points\":[7530.4619140625,160,7540.4619140625,160,7554.544921875,140,7564.544921875,140],\"key\":-38},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":62,\"to\":59,\"points\":[8580.4619140625,250,8590.4619140625,250,8648.103515625,250,8658.103515625,250],\"key\":-33,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":62,\"to\":56,\"points\":[8580.4619140625,250,8590.4619140625,250,8618.103515625,349.9,8628.103515625,349.9],\"key\":-39,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":56,\"to\":65,\"points\":[8900.4619140625,349.9,8910.4619140625,349.9,8988.103515625,429.79999999999995,8998.103515625,429.79999999999995],\"key\":-40},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toRobi\",\"toPort\":\"in\",\"from\":65,\"to\":67,\"points\":[9347.806640625,439.79999999999995,9357.806640625,439.79999999999995,9348.103515625,609.9,9358.103515625,609.9],\"key\":-41},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"toHuman\",\"toPort\":\"in\",\"from\":65,\"to\":28,\"points\":[9347.806640625,419.79999999999995,9357.806640625,419.79999999999995,8598.103515625,130,8608.103515625,130],\"key\":-42},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"message\",\"from\":67,\"to\":50,\"points\":[9630.4619140625,609.9,9640.4619140625,609.9,9792.193359375,699.8,9802.193359375,699.8],\"key\":-43}\n]}"
}