{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "ConnectorsDSL",
    "PicturesDSL",
    "TreeDSL",
    "KanbanDSL",
    "AIFlowDSL"
  ],
  "view": {
    "scale": 0.3446643717728014,
    "position": [
      1767.3728782172511,
      -2217.48598992672
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"Engine Code 1.2\",\"color\":\"orange\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/00/90.js\",\"key\":0,\"location\":\"6318.733138854036 -306.1042162974318\",\"isIncludeScript\":true,\"editorPosition\":[1979,45,747,2158]},\n{\"label\":\"Simple Interactive ChatGPT with AI DSL\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1000 50\",\"key\":1,\"location\":\"3720.3876616834905 -493.39338842194957\"},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"140 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{ \\\"role\\\":\\\"user\\\", \\\"content\\\":\\\"Hi!\\\" }\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":2,\"location\":\"4170.3876616834905 -103.39338842194957\",\"editorPosition\":[825,1097,400,350]},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"140 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Answer the question based on the context. If the\\r\\nquestion cannot be answered using the information provided answer\\r\\nwith \\\"I don't know\\\"\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":3,\"location\":\"3490.3876616834905 -353.39338842194957\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":4,\"location\":\"2910.3876616834905 -103.39338842194957\"},\n{\"label\":\"AIFlow DSL Test 2\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1560 30\",\"key\":5,\"location\":\"3850.3876616834905 -943.3933884219496\"},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"140 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"Hi!\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"Hello! How can I assist you today?\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":6,\"location\":\"6030.3876616834905 -343.39338842194957\",\"editorPosition\":[2591,1446,400,350],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"140 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"role\\\": \\\"user\\\",\\n  \\\"content\\\": \\\"How are you?\\\"\\n}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":7,\"location\":\"6030.3876616834905 -253.39338842194957\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[2525,1821,400,350]},\n{\"label\":\"ChatJSON Splitter\",\"category\":\"AIFlow_ChatJSONSplitter\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"history\"},{\"portId\":\"user\"}],\"onCompute\":\"AIFlowDSL_ChatJSONSplitter\",\"fileTypeName\":\"Splitter\",\"key\":8,\"location\":\"5670.3876616834905 -263.39338842194957\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Data\",\"category\":\"AIFlow_DataSend\",\"size\":\"180 80\",\"buttons\":[{\"name\":\"Send\",\"checked\":true}],\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":9,\"location\":\"4810.3876616834905 -263.39338842194957\",\"editorPosition\":[1231,61,400,350],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n//debugger\\n// Check input port\\nformatInput( nodeData, name, value );\\n// switch( name ) {\\n//   case 'system': {\\n//     Engine_setInput( nodeData, 'system', value );\\n//   }\\n//   break;\\n  \\n//   case 'inHistory': {\\n//     Engine_setInput( nodeData, 'inHistory', value );\\n//   }\\n//   break;\\n  \\n//   case 'user': {\\n//     Engine_setInput( nodeData, 'inHistory', value );\\n//   break;\\n// }\\n\\nconst systemValue = Engine_getInput( nodeData, 'system', [] );\\nconst inHistoryValue = Engine_getInput( nodeData, 'inHistory', null );\\nconst userValue = Engine_getInput( nodeData, 'user', null );\\nif( ( inHistoryValue == undefined && userValue ) ||\\n    ( inHistoryValue && userValue ) ) {\\n  \\n  // Merge all input array into a single message\\n  const messages = [];\\n  const history = [];\\n  if( inHistoryValue )\\n    history.push( ...inHistoryValue );\\n  if( userValue )\\n    history.push( ...userValue );\\n  if( systemValue )\\n    messages.push( ...systemValue );\\n  if( history )\\n    messages.push( ...history );\\n\\n  // Ask chatGPT\\n  appData.chatGPT.getResponse( messages, (response)=>{\\n    const defaultIsJSON = typeof( userValue ) == 'object';\\n    const isJSON = Engine_get( nodeData, 'isJSON', defaultIsJSON );\\n    \\n    const outValue = formatResponse( history, isJSON, response );\\n    Engine_fireOutput( nodeData, 'outHistory', outValue );\\n    const assistantValue = formatResponse( [], isJSON, response )\\n    Engine_fireOutput( nodeData, 'assistant', assistantValue );\\n  });\\n  // Clean inputs\\n  Engine_clearInputs( nodeData, [ 'inHistory', 'user' ] );\\n}\\n\\nfunction formatInput( nodedata, name, value ) {\\n    // Format input value\\n    let isJSON = false;\\n    // Input value is an oject or an array\\n    if( typeof( value ) == 'object' ) {\\n      isJSON = true;\\n      // Input value is not an array\\n      if( !Array.isArray( value ) ) {\\n        value = [value];\\n      } \\n    } else {\\n      // Input value is a string\\n      value = [ { role: name, content: value } ];\\n    }\\n    Engine_set( nodeData, 'isJSON', isJSON );\\n    // Save formatted input value\\n    Engine_setInput( nodeData, name, value );\\n}\\nfunction formatResponse( value, isJSON, response ) {\\n  let outValue  = null;\\n  const isvalueEmpty = ( value.length == 0 );\\n\\n  if( isJSON ) {\\n    value.push( { \\\"role\\\": \\\"assistant\\\", \\\"content\\\":response} );\\n    if( !isvalueEmpty ) {\\n      value.push( { \\\"role\\\": \\\"user\\\", \\\"content\\\":\\\"\\\"} );\\n    }\\n    // outValue = JSON.stringify( value, null, 2 );\\n    outValue = value;\\n  \\n  // Case of a string response\\n  } else {\\n    if( value.startsWith( 'user>' ) ) {\\n      if( !response.startsWith( 'assistant>' ) ) {\\n        response = 'assistant> '+response;\\n      }\\n    }\\n    if( !isvalueEmpty ) {\\n      outValue = value + '\\\\n\\\\n' + response + '\\\\n\\\\nuser> ';\\n    } else {\\n      outValue = response;\\n    }\\n  }\\n  return( outValue );\\n}\",\"fileTypeName\":\"LLM\",\"fileType\":\"text/javascript\",\"key\":10,\"location\":\"3820.3876616834905 -333.39338842194957\",\"editorPosition\":[1311,454,628,775]},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"160 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"Hi!\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"Hello! How can I assist you today?\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"How are you?\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"As an AI language model, I do not have feelings like humans do. However, I am functioning well and ready to assist you with any questions or tasks you may have!\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":11,\"location\":\"4190.3876616834905 -323.39338842194957\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350]},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"140 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"Hi!\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"Hello! How can I assist you today?\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"How are you?\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":12,\"location\":\"5440.3876616834905 -263.39338842194957\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":13,\"location\":\"4460.3876616834905 -263.39338842194957\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Text to JSON\",\"category\":\"AIFlow_Text2JSON\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_Text2JSON\",\"fileTypeName\":\"Converter\",\"key\":14,\"location\":\"5110.3876616834905 -263.39338842194957\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Execution Engine\",\"category\":\"Hierarchy_Engine\",\"size\":\"240 80\",\"rows\":[{\"name\":\"isAutostart\",\"value\":\"false\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isNodePersistencyUsed\",\"value\":\"true\"}],\"key\":15,\"location\":\"4070.3876616834905 -723.3933884219496\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"color\":\"SkyBlue\",\"rows\":[{\"name\":\"Name\",\"value\":\"tbd\"},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"@getDate()\"},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frankonello\"}],\"key\":16,\"location\":\"3840.3876616834905 -753.3933884219496\"},\n{\"label\":\"API Keys\",\"category\":\"AIFlow_Param\",\"size\":\"460 80\",\"rows\":[{\"name\":\"ChatGPT\",\"value\":\"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\"}],\"key\":17,\"location\":\"4570.3876616834905 -733.3933884219496\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":11,\"to\":13,\"points\":[4390.8495757459905,-323.39338842194957,4400.8495757459905,-323.39338842194957,4418.4911773084905,-263.39338842194957,4428.4911773084905,-263.39338842194957],\"key\":-1},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":2,\"to\":13,\"points\":[4350.8495757459905,-103.39338842194957,4360.8495757459905,-103.39338842194957,4418.4911773084905,-263.39338842194957,4428.4911773084905,-263.39338842194957],\"key\":-2},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":3,\"to\":10,\"points\":[3670.8495757459905,-353.39338842194957,3680.8495757459905,-353.39338842194957,3734.9325835584905,-353.39338842194957,3744.9325835584905,-353.39338842194957],\"key\":-3},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":4,\"to\":2,\"points\":[3030.8495757459905,-103.39338842194957,3040.8495757459905,-103.39338842194957,4128.4911773084905,-103.39338842194957,4138.4911773084905,-103.39338842194957],\"key\":-4},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":4,\"to\":3,\"points\":[3030.8495757459905,-103.39338842194957,3040.8495757459905,-103.39338842194957,3448.4911773084905,-353.39338842194957,3458.4911773084905,-353.39338842194957],\"key\":-5},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"inHistory\",\"from\":6,\"to\":10,\"points\":[6210.8495757459905,-343.39338842194957,6220.8495757459905,-343.39338842194957,6220.3876616834905,-373.29338842194954,3730.3876616834905,-373.29338842194954,3734.9325835584905,-333.39338842194957,3744.9325835584905,-333.39338842194957],\"key\":-6},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":7,\"to\":10,\"points\":[6210.8495757459905,-253.39338842194957,6220.8495757459905,-253.39338842194957,6250.3876616834905,-253.39338842194957,6250.3876616834905,-403.39338842194957,3690.3876616834905,-403.39338842194957,3690.3876616834905,-313.39338842194957,3734.9325835584905,-313.39338842194957,3744.9325835584905,-313.39338842194957],\"key\":-7},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"history\",\"toPort\":\"in\",\"from\":8,\"to\":6,\"points\":[5972.6220366834905,-273.39338842194957,5982.6220366834905,-273.39338842194957,5988.4911773084905,-343.39338842194957,5998.4911773084905,-343.39338842194957],\"key\":-8},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"user\",\"toPort\":\"in\",\"from\":8,\"to\":7,\"points\":[5972.6220366834905,-253.39338842194957,5982.6220366834905,-253.39338842194957,5988.4911773084905,-253.39338842194957,5998.4911773084905,-253.39338842194957],\"key\":-9},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":12,\"to\":8,\"points\":[5620.8495757459905,-263.39338842194957,5630.8495757459905,-263.39338842194957,5628.4911773084905,-263.39338842194957,5638.4911773084905,-263.39338842194957],\"key\":-10},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":9,\"to\":14,\"points\":[5030.8495757459905,-263.39338842194957,5040.8495757459905,-263.39338842194957,5068.4911773084905,-263.39338842194957,5078.4911773084905,-263.39338842194957],\"key\":-11},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"outHistory\",\"toPort\":\"in\",\"from\":10,\"to\":11,\"points\":[4144.4081694959905,-343.39338842194957,4154.4081694959905,-343.39338842194957,4148.4911773084905,-323.39338842194957,4158.4911773084905,-323.39338842194957],\"key\":-12},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":14,\"to\":12,\"points\":[5390.8495757459905,-263.39338842194957,5400.8495757459905,-263.39338842194957,5398.4911773084905,-263.39338842194957,5408.4911773084905,-263.39338842194957],\"key\":-13,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":13,\"to\":9,\"points\":[4740.8495757459905,-263.39338842194957,4750.8495757459905,-263.39338842194957,4768.4911773084905,-263.39338842194957,4778.4911773084905,-263.39338842194957],\"key\":-14,\"color\":\"LightSeaGreen\"}\n]}"
}