{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "ConnectorsDSL",
    "PicturesDSL",
    "TreeDSL",
    "KanbanDSL",
    "AIFlowDSL"
  ],
  "view": {
    "scale": 0.27148379584700005,
    "position": [
      1581.409382373844,
      2143.656002582079
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"API Keys\",\"category\":\"AIFlow_Param\",\"size\":\"460 80\",\"rows\":[{\"name\":\"ChatGPT\",\"value\":\"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\"}],\"key\":18,\"location\":\"8340 -1640\"},\n{\"label\":\"SMILE Planner v2.5\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2480 120\",\"key\":20,\"location\":\"5800 -1560\",\"font\":\"250px sans-serif\"},\n{\"label\":\"Request\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Travi to Ropa] Please take the tea bag from table_1 and insert it into a mug_1.  Then, pour water from pitcher_1 (at 90 degrees) into the mug_1 until it is full.  Finally, heat up the mug_1 in the microwave_1 (at 20 degrees).  When the tea is warm, pour it into the glass_1 and place the glass_1 on the tray_1.  Please ensure that all objects are returned to their original positions.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":195,\"location\":\"6651.896000000001 3477.504999999999\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"Ropa User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"In order to fullfill the request: \\n[Travi to Ropa] Please take the tea bag from table_1 and insert it into a mug_1.  Then, pour water from pitcher_1 (at 90 degrees) into the mug_1 until it is full.  Finally, heat up the mug_1 in the microwave_1 (at 20 degrees).  When the tea is warm, pour it into the glass_1 and place the glass_1 on the tray_1.  Please ensure that all objects are returned to their original positions.\\nThis plan was executed by Roco until line :\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 mug_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 mug_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 microwave_1\\n[Ropa to Roco] gaze microwave_1\\n[Ropa to Roco] open_door microwave_1\\n[Ropa to Roco] set_temperature microwave_1 20\\n[Ropa to Roco] set_power microwave_1 on\\n[Ropa to Roco] start_cooking microwave_1\\n[Ropa to Roco] wait 10\\n[Ropa to Roco] stop_cooking microwave_1\\n[Ropa to Roco] close_door microwave_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 glass_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] put glass_1 tray_1\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] put tea_bag_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 table_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] put pitcher_1 table_1\\nThe environment state at this step is:\\n{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"mug_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\",\\n      \\\"pitcher_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\",\\n      \\\"pitcher_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"tea_bag_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0.1,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.9,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"mug_1\\\"\\n    ]\\n  }\\n}\\nRoco give now this feedback:\\n[Roco to Ropa] Error: cannot put mug_1 microwave_1 because both hands are empty.\\nPlease make the smallest modification of the plan.\\nDo not modify the first  lines of the plan. \\nCopy the first  lines of the plan and add \\nyour modification to the plan to make the plan fullfil \\nthe request.\\nModified plan:\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":200,\"location\":\"7571.896000000001 3501.567000000001\",\"editorPosition\":[1298,840,405,318],\"group\":363},\n{\"label\":\"Create Ropa Request Prompt\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"state\"},{\"portId\":\"request\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"request,state\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"In order to fullfill the request: \\n<request>\\nThe environment state at this step is:\\n<state>\\nGive a full plan at once.\\nPlan:\",\"fileTypeName\":\"Template\",\"key\":201,\"location\":\"7181.896000000001 3397.8050000000003\",\"editorPosition\":[918,39,712,140],\"group\":363},\n{\"label\":\"Ropa Role Selector\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"ropaToAlex\"},{\"portId\":\"ropaToRoco\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n//Engine_fireOutput( nodeData, 'clear', '' );\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\nvalue = value.replace(/<br>/g, \\\"\\\");\\n\\nconst toRoco = '[Ropa to Roco] ';\\nconst idx = value.indexOf(toRoco);\\nif( idx != -1 ) {\\n  Engine_fireOutput( nodeData, 'ropaToRoco', value );\\n} else {\\n  Engine_fireOutput( nodeData, 'ropaToAlex', value );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":202,\"location\":\"10070 3349.5000000000005\",\"fileType\":\"text/javascript\",\"editorPosition\":[2798,2071,498,301],\"group\":363},\n{\"label\":\"Ropa Plan\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 mug_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 mug_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 tray_1\\n[Ropa to Roco] gaze microwave_1\\n[Ropa to Roco] open_door microwave_1\\n[Ropa to Roco] set_temperature microwave_1 20\\n[Ropa to Roco] set_power microwave_1 on\\n[Ropa to Roco] start_cooking microwave_1\\n[Ropa to Roco] wait 10\\n[Ropa to Roco] stop_cooking microwave_1\\n[Ropa to Roco] close_door microwave_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] get mug_1 hand_right\\n[Ropa to Roco] put mug_1 glass_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] put glass_1 tray_1\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] put tea_bag_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 table_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] put pitcher_1 table_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":203,\"location\":\"9711.896 3451.367\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> In order to fullfill the request: \\n[Travi to Ropa] Please take the tea bag from table_1 and insert it into a mug_1.  Then, pour water from pitcher_1 (at 90 degrees) into the mug_1 until it is full.  Finally, heat up the mug_1 in the microwave_1 (at 20 degrees).  When the tea is warm, pour it into the glass_1 and place the glass_1 on the tray_1.  Please ensure that all objects are returned to their original positions.\\nThis plan was executed by Roco until line :\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 mug_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 mug_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 microwave_1\\n[Ropa to Roco] gaze microwave_1\\n[Ropa to Roco] open_door microwave_1\\n[Ropa to Roco] set_temperature microwave_1 20\\n[Ropa to Roco] set_power microwave_1 on\\n[Ropa to Roco] start_cooking microwave_1\\n[Ropa to Roco] wait 10\\n[Ropa to Roco] stop_cooking microwave_1\\n[Ropa to Roco] close_door microwave_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 glass_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] put glass_1 tray_1\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] put tea_bag_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 table_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] put pitcher_1 table_1\\nThe environment state at this step is:\\n{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"mug_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\",\\n      \\\"pitcher_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\",\\n      \\\"pitcher_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"tea_bag_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0.1,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.9,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"mug_1\\\"\\n    ]\\n  }\\n}\\nRoco give now this feedback:\\n[Roco to Ropa] Error: cannot put mug_1 microwave_1 because both hands are empty.\\nPlease make the smallest modification of the plan.\\nDo not modify the first  lines of the plan. \\nCopy the first  lines of the plan and add \\nyour modification to the plan to make the plan fullfil \\nthe request.\\nModified plan:\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":204,\"location\":\"8251.896 3501.367\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"Add user> header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":205,\"location\":\"7881.896000000001 3501.567000000001\",\"editorPosition\":[918,39,712,140],\"group\":363},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":206,\"location\":\"9361.896 3451.567000000001\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":363},\n{\"label\":\"Ropa Plan\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[Ropa to Roco] gaze table_1\\\\n[Ropa to Roco] gaze tea_bag_1\\\\n[Ropa to Roco] get tea_bag_1 hand_right\\\\n[Ropa to Roco] gaze mug_1\\\\n[Ropa to Roco] put tea_bag_1 mug_1\\\\n[Ropa to Roco] gaze pitcher_1\\\\n[Ropa to Roco] get pitcher_1 hand_right\\\\n[Ropa to Roco] pour pitcher_1 mug_1\\\\n[Ropa to Roco] put pitcher_1 table_1\\\\n[Ropa to Roco] gaze mug_1\\\\n[Ropa to Roco] put mug_1 tray_1\\\\n[Ropa to Roco] gaze microwave_1\\\\n[Ropa to Roco] open_door microwave_1\\\\n[Ropa to Roco] set_temperature microwave_1 20\\\\n[Ropa to Roco] set_power microwave_1 on\\\\n[Ropa to Roco] start_cooking microwave_1\\\\n[Ropa to Roco] wait 10\\\\n[Ropa to Roco] stop_cooking microwave_1\\\\n[Ropa to Roco] close_door microwave_1\\\\n[Ropa to Roco] gaze mug_1\\\\n[Ropa to Roco] get mug_1 hand_right\\\\n[Ropa to Roco] put mug_1 glass_1\\\\n[Ropa to Roco] gaze glass_1\\\\n[Ropa to Roco] put glass_1 tray_1\\\\n[Ropa to Roco] gaze table_1\\\\n[Ropa to Roco] gaze tea_bag_1\\\\n[Ropa to Roco] put tea_bag_1 table_1\\\\n[Ropa to Roco] gaze mug_1\\\\n[Ropa to Roco] put mug_1 table_1\\\\n[Ropa to Roco] gaze pitcher_1\\\\n[Ropa to Roco] put pitcher_1 table_1\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":207,\"location\":\"9061.896 3451.567000000001\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":363},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n\\n\\nEach time you (Ropa) receive a  for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":211,\"location\":\"8250 3320\",\"editorPosition\":[-6887,15,751,1974],\"group\":363,\"color\":\"LightPink\"},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":213,\"location\":\"10960 3370\",\"group\":363},\n{\"label\":\"[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 mug_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 mug_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 tray_1\\n[Ropa to Roco] gaze microwave_1\\n[Ropa to Roco] open_door microwave_1\\n[Ropa to Roco] set_temperature microwave_1 20\\n[Ropa to Roco] set_power microwave_1 on\\n[Ropa to Roco] start_cooking microwave_1\\n[Ropa to Roco] wait 10\\n[Ropa to Roco] stop_cooking microwave_1\\n[Ropa to Roco] close_door microwave_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] get mug_1 hand_right\\n[Ropa to Roco] put mug_1 glass_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] put glass_1 tray_1\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] put tea_bag_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 table_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] put pitcher_1 table_1\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1050 870\",\"in\":[{\"portId\":\"in\"}],\"key\":214,\"location\":\"10960 3880\",\"group\":363},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":218,\"location\":\"8101.896 1999.7420000000002\",\"editorPosition\":[490,662,645,222],\"group\":362,\"color\":\"LightPink\"},\n{\"label\":\"[Travi to Ropa] Please take the tea bag from table_1 and insert it into a mug_1.  Then, pour water from pitcher_1 (at 90 degrees) into the mug_1 until it is full.  Finally, heat up the mug_1 in the microwave_1 (at 20 degrees).  When the tea is warm, pour it into the glass_1 and place the glass_1 on the tray_1.  Please ensure that all objects are returned to their original positions.\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1220 320\",\"in\":[{\"portId\":\"in\"}],\"key\":219,\"location\":\"10471.896 2169.742\",\"group\":362},\n{\"label\":\"Remove assistant>\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\nEngine_fireOutput( nodeData, 'out', value );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":220,\"location\":\"9851.896 2018.409000000001\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":362},\n{\"label\":\"Travi translate Alex request in term of existing objects\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1930 70\",\"key\":221,\"location\":\"6620 1797.1060000000002\",\"group\":362},\n{\"label\":\"Request\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [Travi to Ropa] Please take the tea bag from table_1 and insert it into a mug_1.  Then, pour water from pitcher_1 (at 90 degrees) into the mug_1 until it is full.  Finally, heat up the mug_1 in the microwave_1 (at 20 degrees).  When the tea is warm, pour it into the glass_1 and place the glass_1 on the tray_1.  Please ensure that all objects are returned to their original positions.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":222,\"location\":\"9541.896 2018.809000000001\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":223,\"location\":\"9191.896 2018.809000000001\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":362},\n{\"label\":\"Request\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[Travi to Ropa] Please take the tea bag from table_1 and insert it into a mug_1.  Then, pour water from pitcher_1 (at 90 degrees) into the mug_1 until it is full.  Finally, heat up the mug_1 in the microwave_1 (at 20 degrees).  When the tea is warm, pour it into the glass_1 and place the glass_1 on the tray_1.  Please ensure that all objects are returned to their original positions.\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":224,\"location\":\"8891.896 2018.809000000001\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":362},\n{\"label\":\"User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> This is the environment state:\\n{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [],\\n    \\\"perif\\\": []\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\\nThis is Alex request: \\n[Alex to Ropa] Please prepare a warm tea in a glass and place it on the tray.\\nPlease simply translate the request as decribed before \\nstarting with [Travi to Ropa].\\nVerify that your translation contains only names existing \\nin the environment state keys and no extra explanations\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":226,\"location\":\"8111.896 2153.2039999999997\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"Add user> header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":227,\"location\":\"7741.896 2153.504000000001\",\"editorPosition\":[918,39,712,140],\"group\":362},\n{\"label\":\"Ropa User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"This is the environment state:\\n{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [],\\n    \\\"perif\\\": []\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\\nThis is Alex request: \\n[Alex to Ropa] Please prepare a warm tea in a glass and place it on the tray.\\nPlease simply translate the request as decribed before \\nstarting with [Travi to Ropa].\\nVerify that your translation contains only names existing \\nin the environment state keys and no extra explanations\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":228,\"location\":\"7411.896 2153.504000000001\",\"editorPosition\":[1298,840,405,318],\"group\":362},\n{\"label\":\"Create Ropa User Prompt\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"state\"},{\"portId\":\"request\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"request\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"This is the environment state:\\n<state>\\nThis is Alex request: \\n<request>\\nPlease simply translate the request as decribed before \\nstarting with [Travi to Ropa].\\nVerify that your translation contains only names existing \\nin the environment state keys and no extra explanations\",\"fileTypeName\":\"Template\",\"key\":229,\"location\":\"7041.896 2153.504000000001\",\"editorPosition\":[918,39,712,140],\"group\":362},\n{\"label\":\"Request\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Alex to Ropa] Please prepare a warm tea in a glass and place it on the tray.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":230,\"location\":\"6601.896 2249.742\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\",\\n      \\\"pitcher_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"tea_bag_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0.1,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.9,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"mug_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":233,\"location\":\"5615.688 3496.7720000000013\",\"editorPosition\":[1735,35,425,1463],\"group\":356},\n{\"label\":\"Alex decide to answer by its own or to delegate to the robot\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2090 70\",\"key\":237,\"location\":\"6540 386.40200000000004\",\"group\":352},\n{\"label\":\"Assistant Input\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Alex to Human] The capital of Germany is Berlin.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":238,\"location\":\"6622 705.8630000000003\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"User Input\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":239,\"location\":\"5650 860\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"Add history\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"history\"},{\"portId\":\"assistant\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"<history>\\n<user>\\n<assistant>\",\"fileTypeName\":\"Template\",\"key\":240,\"location\":\"7062 755.8630000000003\",\"editorPosition\":[918,39,712,140],\"group\":352},\n{\"label\":\"Alex Chat\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"\\n[Human to Alex] prepare me a warm tea in a glass and put it on the tray\\n\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":241,\"location\":\"7420 756.402\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> [Human to Alex] prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":242,\"location\":\"7422 905.6629999999996\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"Add user> header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":243,\"location\":\"7062 905.8630000000003\",\"editorPosition\":[918,39,712,140],\"group\":352},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":245,\"location\":\"5180 866.9090000000023\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":246,\"location\":\"5180 716.9090000000023\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":247,\"location\":\"4630 866.9090000000023\",\"group\":349},\n{\"label\":\"a coke in a glass on the tray\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"serve me a coka-cola in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":248,\"location\":\"4850 866.9090000000023\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"Capital germany\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"What is the capital of Germany ?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":249,\"location\":\"4850 716.9090000000023\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"[Alex to Ropa] Please prepare a warm tea in a glass and place it on the tray.\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 140\",\"in\":[{\"portId\":\"in\"}],\"key\":250,\"location\":\"10362 756.1680000000006\",\"group\":352},\n{\"label\":\"Alex\\nResponse\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [Alex to Ropa] Please prepare a warm tea in a glass and place it on the tray.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":251,\"location\":\"9572 655.8630000000003\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"Alex Role Selector\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"alexToHuman\"},{\"portId\":\"alexToRopa\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\n\\nconst toRopa = '[Alex to Ropa] ';\\nconst idx = value.indexOf(toRopa);\\nif( idx != -1 ) {\\n  Engine_fireOutput( nodeData, 'alexToRopa', value );\\n} else {\\n  Engine_fireOutput( nodeData, 'alexToHuman', value );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":252,\"location\":\"9872 654.762999999998\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":352},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":253,\"location\":\"10360 610\",\"group\":352},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":256,\"location\":\"8120 560\",\"editorPosition\":[1931,690,693,527],\"group\":352,\"color\":\"LightPink\"},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":257,\"location\":\"9222 655.8630000000003\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":352},\n{\"label\":\"Alex\\nResponse\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[Alex to Ropa] Please prepare a warm tea in a glass and place it on the tray.\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":258,\"location\":\"8922 655.8630000000003\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":352},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":170,\"location\":\"9730 1043.147\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":352},\n{\"label\":\"[Alex to Ropa] Please prepare a warm tea in a glass and place it on the tray.\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 140\",\"in\":[{\"portId\":\"in\"}],\"key\":171,\"location\":\"7041.896 2343.504000000001\",\"group\":362},\n{\"label\":\"a warm tea in a cup on the tray\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":172,\"location\":\"4850 1011.6040000000002\",\"editorPosition\":[432,797,400,350],\"group\":349,\"color\":\"Violet\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":174,\"location\":\"4630 1011.6040000000002\",\"group\":349},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":175,\"location\":\"5180 1011.6040000000002\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"[Human to Alex] prepare me a warm tea in a glass and put it on the tray\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 150\",\"in\":[{\"portId\":\"in\"}],\"key\":176,\"location\":\"6970 1170\",\"group\":352},\n{\"label\":\"\\n[Human to Alex] prepare me a warm tea in a glass and put it on the tray\\n\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1210 330\",\"in\":[{\"portId\":\"in\"}],\"key\":177,\"location\":\"10360 1019.2070000000012\",\"group\":352},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":179,\"location\":\"4630 716.9090000000023\",\"group\":349},\n{\"label\":\"Roca makes a Plan from Alex request\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1530 30\",\"key\":244,\"location\":\"6721.896000000001 3197.8050000000003\",\"group\":363},\n{\"label\":\"Create Ropa Feedback Prompt\",\"category\":\"AIFlow_Template\",\"size\":\"330 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"state\"},{\"portId\":\"request\"},{\"portId\":\"feedback\"},{\"portId\":\"plan\"},{\"portId\":\"index\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"feedback,state,plan,index,request\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"In order to fullfill the request: \\n<request>\\nThis plan was executed by Roco until line <index>:\\n<plan>\\nThe environment state at this step is:\\n<state>\\nRoco give now this feedback:\\n<feedback>\\nPlease make the smallest modification of the plan.\\nDo not modify the first <index> lines of the plan. \\nCopy the first <index> lines of the plan and add \\nyour modification to the plan to make the plan fullfil \\nthe request.\\nModified plan:\",\"fileTypeName\":\"Template\",\"key\":215,\"location\":\"7121.896000000001 3597.8050000000003\",\"editorPosition\":[918,39,712,140],\"group\":363},\n{\"label\":\"Feedback\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Ropa] Error: cannot put mug_1 microwave_1 because both hands are empty.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":232,\"location\":\"6650 3770\",\"editorPosition\":[51,1987,930,156],\"group\":363},\n{\"label\":\"Current Plan Index\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":11,\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":284,\"location\":\"6650 4020\",\"editorPosition\":[1797,1952,193,66],\"group\":363},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"onCompute\":\"AIFlowDSL_LLM\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":true}],\"fileTypeName\":\"LLM\",\"key\":292,\"location\":\"8532 645.8630000000003\",\"group\":352},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"onCompute\":\"AIFlowDSL_LLM\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":295,\"location\":\"8491.896 2003.5040000000008\",\"group\":362},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"onCompute\":\"AIFlowDSL_LLM\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":298,\"location\":\"8681.896 3441.567000000001\",\"group\":363},\n{\"label\":\"New Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\",\\n      \\\"pitcher_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"tea_bag_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0.1,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.9,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"mug_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":294,\"location\":\"5220 3680\",\"editorPosition\":[1208,387,400,350],\"group\":356},\n{\"label\":\"Initial Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [],\\n    \\\"perif\\\": []\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":345,\"location\":\"5221.896 3397.577\",\"editorPosition\":[1735,35,425,1463],\"group\":356,\"color\":\"#ccffcc\"},\n{\"label\":\"User Request Selection\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 70\",\"key\":348,\"location\":\"4640 518.9520000000001\",\"group\":349},\n{\"label\":\"User Input\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":349,\"location\":\"4610 830.0004345703126\",\"font\":\"175px sans-serif\"},\n{\"label\":\"[Alex] Decision on LLM answer or Robot Request\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":352,\"location\":\"6499.999932584347 790.3964345703125\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Environment State\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"660 70\",\"key\":355,\"location\":\"5215.688 3293.0320000000024\",\"group\":356},\n{\"label\":\"Environment\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":356,\"location\":\"5168.103515625 3497.2503505859386\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Plan\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 mug_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 mug_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 tray_1\\n[Ropa to Roco] gaze microwave_1\\n[Ropa to Roco] open_door microwave_1\\n[Ropa to Roco] set_temperature microwave_1 20\\n[Ropa to Roco] set_power microwave_1 on\\n[Ropa to Roco] start_cooking microwave_1\\n[Ropa to Roco] wait 10\\n[Ropa to Roco] stop_cooking microwave_1\\n[Ropa to Roco] close_door microwave_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] get mug_1 hand_right\\n[Ropa to Roco] put mug_1 glass_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] put glass_1 tray_1\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] put tea_bag_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 table_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] put pitcher_1 table_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":361,\"location\":\"10501.896 3457.6050000000005\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"[TRAVI] Reformulate request into \\nsteps with environment name_id\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":362,\"location\":\"6549.999515625 2080.000434570313\",\"font\":\"175px sans-serif\"},\n{\"label\":\"[ROPA] Translate sequence of\\nsteps into a robot plan\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":363,\"location\":\"6488 3814.5979345703126\",\"font\":\"175px sans-serif\"},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":344,\"location\":\"10160 3789.7999999999993\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":363},\n{\"label\":\"[Travi to Ropa] Please take the tea bag from table_1 and insert it into a mug_1.  Then, pour water from pitcher_1 (at 90 degrees) into the mug_1 until it is full.  Finally, heat up the mug_1 in the microwave_1 (at 20 degrees).  When the tea is warm, pour it into the glass_1 and place the glass_1 on the tray_1.  Please ensure that all objects are returned to their original positions.\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1220 320\",\"in\":[{\"portId\":\"in\"}],\"key\":357,\"location\":\"7130 4050\",\"group\":363},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":359,\"location\":\"8551.896 2169.642\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":362},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":346,\"location\":\"4490 2690.152\",\"group\":153,\"color\":\"#ccffcc\"},\n{\"label\":\"Engine Code 1.3\",\"color\":\"orange\",\"size\":\"290 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/27.js\",\"key\":115,\"location\":\"8930 -1610\",\"isIncludeScript\":true,\"editorPosition\":[4720,25,539,1661]},\n{\"label\":\"BP\",\"category\":\"AIFlow_BreakPoint\",\"size\":\"80 80\",\"in\":[{\"portId\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":114,\"location\":\"10360 440\",\"group\":352},\n{\"label\":\"BP\",\"category\":\"AIFlow_BreakPoint\",\"size\":\"80 80\",\"in\":[{\"portId\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":117,\"location\":\"10430 2090\"},\n{\"label\":\"Execution Engine\",\"category\":\"Hierarchy_Engine\",\"size\":\"240 120\",\"isFile\":true,\"fileType\":\"application/html\",\"fileContent\":\"//var event, obj, nodeData;\\nvar o = Object.assign( {}, nodeData );\\no.fileContent='';\\nvar nodeStr = JSON.stringify( o );\\nhtml = `\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Reset\\\" )'>Reset</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Run\\\" )'>Run</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Step\\\" )'>Step</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Pause\\\" )'>Pause</button><br>\\n`\",\"buttons\":[{\"name\":\"Reset\",\"checked\":true},{\"name\":\"Run\",\"checked\":true},{\"name\":\"Step\",\"checked\":false},{\"name\":\"Pause\",\"checked\":false}],\"rows\":[{\"name\":\"isAutostart\",\"value\":\"false\"},{\"name\":\"isStepByStep\",\"value\":\"true\",\"valueChanged\":true},{\"name\":\"runTimeout\",\"value\":\"0.1\",\"valueChanged\":\"true\"},{\"name\":\"isStepByStepDeepFirst\",\"value\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isNodePersistencyUsed\",\"value\":\"true\"}],\"key\":118,\"location\":\"5490 2810\",\"isLocalDiv\":true,\"editorPosition\":[686,319,236,180]},\n{\"label\":\"BP\",\"category\":\"AIFlow_BreakPoint\",\"size\":\"80 80\",\"in\":[{\"portId\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":119,\"location\":\"11020 3270\",\"group\":363},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":156,\"location\":\"5140 -1620\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":157,\"location\":\"5140 -1550\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"260 80\",\"color\":\"SkyBlue\",\"rows\":[{\"name\":\"Name\",\"value\":\"SMILE LLM-Based Planner\",\"valueChanged\":true},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"@getDate()\"},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frankonello\"}],\"key\":158,\"location\":\"5440 -1640\"},\n{\"label\":\"Execution Engine\\n(Link)\",\"color\":\"yellow\",\"size\":\"250 240\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//var event, obj, nodeData;\\nvar o = Object.assign( {}, nodeData );\\no.fileContent='';\\nvar nodeStr = JSON.stringify( o );\\nhtml = `\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Reset\\\" )'>Reset</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Run\\\" )'>Run</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Step\\\" )'>Step</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Pause\\\" )'>Pause</button><br>\\n`\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":161,\"location\":\"5200 2870\",\"linkToKey\":118},\n{\"label\":\"Init Env\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":153,\"location\":\"4320 2639.9999345703127\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Initialize Environment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 70\",\"key\":162,\"location\":\"4350 2600.457\",\"group\":153},\n{\"label\":\"User Input\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"360 70\",\"key\":164,\"location\":\"4770 618.9520000000001\",\"group\":349,\"fontColor\":\"Red\"},\n{\"label\":\"Alex System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"680 70\",\"key\":165,\"location\":\"7910 470\",\"fontColor\":\"Red\"},\n{\"label\":\"TRAVI System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 70\",\"key\":167,\"location\":\"7680 1917.1060000000002\",\"fontColor\":\"Red\",\"group\":362},\n{\"label\":\"ROPA System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 70\",\"key\":169,\"location\":\"8190 3220\",\"fontColor\":\"Red\",\"group\":363},\n{\"label\":\"Break Point to \\n[alexToRopa]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"90 30\",\"key\":178,\"location\":\"10130 700\",\"fontColor\":\"Red\",\"group\":352},\n{\"label\":\"Break Point to [out]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"120 30\",\"key\":181,\"location\":\"10170 2021.3180000000002\",\"fontColor\":\"Red\",\"group\":362},\n{\"label\":\"Break Point to [ropaToRoco]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"120 30\",\"key\":183,\"location\":\"10320 3400\",\"fontColor\":\"Red\",\"group\":363},\n{\"label\":\"User\",\"category\":\"Pictures_Basic\",\"size\":\"160 340\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/woman.png\",\"key\":166,\"location\":\"10300.998 -2265.727\",\"group\":289},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"220 340\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/robot.png\",\"key\":168,\"location\":\"10910.998 -2275.727\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":180,\"location\":\"11030.998 -2075.727\",\"label\":\"TRAVI\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":184,\"location\":\"10840.998 -2235.727\",\"label\":\"ALEX\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":187,\"location\":\"11030.998 -1985.727\",\"label\":\"ROPA\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":189,\"location\":\"11030.998 -1895.7269999999999\",\"label\":\"ROCO\",\"group\":289,\"color\":\"Gray\"},\n{\"label\":\"Alex is the full robot, able to listen to users\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"450 30\",\"key\":191,\"location\":\"11010.998 -2235.727\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":193,\"location\":\"10840.998 -2155.727\",\"label\":\"Condition\",\"group\":289},\n{\"label\":\"If question is about knowledge\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"320 40\",\"key\":197,\"location\":\"10510.998 -2135.727\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":199,\"location\":\"10700.998 -2075.727\",\"label\":\"LLM Knowledge\",\"group\":289},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"120 100\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/speaker.png\",\"key\":209,\"location\":\"10580.998 -1885.7269999999999\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_PointLeftCenter\",\"size\":\"150 40\",\"key\":212,\"location\":\"10700.998 -1975.727\",\"label\":\"Answer\",\"group\":289},\n{\"label\":\"It will directly answer\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"210 40\",\"key\":217,\"location\":\"10560.998 -2025.727\",\"group\":289},\n{\"label\":\"If question is about something to do\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"390 40\",\"key\":234,\"location\":\"11020.998 -2135.727\",\"group\":289},\n{\"label\":\"It will first translate the question into the objects id it knows in the environment\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":254,\"location\":\"11210.998 -2075.727\",\"group\":289},\n{\"label\":\"It will then generate a plan composed of command executable by its API\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":260,\"location\":\"11210.998 -1985.727\",\"group\":289},\n{\"label\":\"It will then send command of the plan to the robot\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":262,\"location\":\"11210 -1890\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":279,\"location\":\"11030 -1720\",\"label\":\"Condition\",\"group\":289},\n{\"label\":\"If plan is successfully executed,\\nit will start to listen again\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"330 50\",\"key\":282,\"location\":\"11210 -1740\",\"group\":289},\n{\"label\":\"If plan fail at any step,\\nit will replan it again\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"230 50\",\"key\":287,\"location\":\"10740.998 -1765.7269999999999\",\"group\":289},\n{\"label\":\"System Flow\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":289,\"location\":\"10219.999953125 -2160.000095703125\"},\n{\"label\":\"Clear Label of Message Nodes\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isLocal\",\"value\":\"false\",\"unit\":\"unit1\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Test if clean only local group labels:\\n// - isLocal = true => clean only labels in the group we are in\\n// - isLocal = false => clean all labels that are in any group\\nconst isLocal = Engine_getProperty( nodeData, 'isLocal', false );\\n// Group test function\\nconst testGroup = (g)=> ( isLocal? g == nodeData.group: g != undefined );\\n\\n// Get all message nodes (except big plan)\\nconst dataList = appData.me.getNodeListIf( modelId, \\n                                           (d)=> d.category == 'AIFlow_Message' &&\\n                                           testGroup( d.group ) );\\nfor( const data of dataList ) {\\n  setNodeDataField( data.key, 'label', '' );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":186,\"location\":\"-2560 -260\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":190,\"location\":\"2250 1959.9\",\"editorPosition\":[1606,107,758,253],\"color\":\"LightPink\"},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":194,\"location\":\"2250 2149.9\",\"editorPosition\":[1403,916,540,328],\"color\":\"LightPink\"},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n\\n\\nEach time you (Ropa) receive a  for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":208,\"location\":\"2250 2329.9\",\"editorPosition\":[1132,245,1003,1812],\"color\":\"LightPink\"},\n{\"label\":\"User Request\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":216,\"location\":\"2260 2520\",\"editorPosition\":[432,797,400,350],\"color\":\"Violet\"},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":235,\"location\":\"5180 1141.658\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"Experiment Dispatcher\",\"category\":\"AIFlow_Component\",\"size\":\"280 170\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"alexPrompt\"},{\"portId\":\"traviPrompt\"},{\"portId\":\"ropaPrompt\"},{\"portId\":\"userPrompt\"},{\"portId\":\"environmentState\"},{\"portId\":\"startApplication\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const inV = Engine_getInput( nodeData, 'in', {} );\\n  \\n  if( inV.env && inV.alex && inV.travi && inV.ropa && inV.user ) {\\n    // Propagete selected templates\\n    Engine_fireOutput( nodeData, 'alexPrompt',  inV.alex );\\n    Engine_fireOutput( nodeData, 'traviPrompt', inV.travi );\\n    Engine_fireOutput( nodeData, 'ropaPrompt',  inV.ropa );\\n    Engine_fireOutput( nodeData, 'userPrompt',  inV.user );\\n    \\n    Engine_fireOutput( nodeData, 'environmentState', inV.env );\\n    \\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'startApplication' );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":261,\"location\":\"1580 2090\",\"editorPosition\":[1745,1593,570,981]},\n{\"label\":\"Initial Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [],\\n    \\\"perif\\\": []\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":210,\"location\":\"2240 2719.9\",\"editorPosition\":[1735,35,425,1463],\"color\":\"#ccffcc\"},\n{\"label\":\"001 RobotAPIPrompt\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"JavaScript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/48.js\",\"key\":301,\"location\":\"-1231.301 1359.658\",\"group\":319,\"editorPosition\":[1606,19,681,1061]},\n{\"label\":\"AlexPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/49.js\",\"key\":303,\"location\":\"-1231.301 1442.158\",\"editorPosition\":[3112,14,760,535],\"group\":231},\n{\"label\":\"TraviPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/50.js\",\"key\":305,\"location\":\"-1231.301 1502.158\",\"editorPosition\":[3112,554,759,295],\"group\":231},\n{\"label\":\"RopaPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/51.js\",\"key\":309,\"location\":\"-1231.301 1562.158\",\"editorPosition\":[3006,961,772,993],\"group\":231},\n{\"label\":\"UserPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/52.js\",\"key\":311,\"location\":\"-1231.301 1622.158\",\"editorPosition\":[3200,1964,674,414],\"group\":231},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":312,\"location\":\"2251.8959999999997 905\",\"editorPosition\":[1606,107,758,253],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":313,\"location\":\"2251.8959999999997 1065\",\"editorPosition\":[1403,916,540,328],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n* This command allows Roco to open the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] open_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object-with-door> can only be opened if it is closed\\n  \\n* This command allows Roco to close the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] close_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object-with-door> can only be closed if it is opened\\n  \\n* This command allows Roco to take an <object-to-be-taken> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> hand_right\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-taken>\\n  - [Roco to Ropa] <object-to-be-taken> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object-to-be-taken> can only be taken if the hand is empty\\n  \\n* This command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-put, destination-object>\\n  - [Roco to Ropa] <object-to-be-put> cannot be put because <reason of failure>\\n  constraints:\\n  - <object-to-be-put> can only be put somewhere if it is in the hand\\n  - <object-to-be-put> can be put on a <destination-object> that has a flat surface\\n  - <object-to-be-put> can be put in a <destination-object> that is a container\\n  \\n* This command allows Roco to pour the liquid of a <object-to-pour-from> into \\n  a <object-to-pour-into>:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-pour-from, object-to-pour-into>\\n  - [Roco to Ropa] <object-to-pour-into> cannot be filled because <reason of failure>\\n  constraints:\\n  - <object-to-pour-from> and <object-to-pour-into> must be containers\\n  - <object-to-pour-from> and <object-to-pour-into> must be held in different hands\\n  \\n* This command allows Roco to screw an <object-to-screw_top_of> to open or \\n  close it using an empty hand:\\n  command syntax: \\n  - [Ropa to Roco] screw <object-to-screw_top_of>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-screw_top_of>\\n  - [Roco to Ropa] <object-to-screw_top_of> cannot be opened because <reason of failure>\\n  constraints:\\n  - <object-to-screw_top_of> must be a bottle\\n  - <object-to-screw_top_of> must be held in a hand and the other hand must be empty\\n  \\n* This command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-look-at>\\n  - [Roco to Ropa] <object-to-look-at> is incorrect or do not exist.\\n  constraints:\\n  - <object-to-look-at> must be a valid name\\n  \\n\\nEach time you (Ropa) receive a <JSON description> for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":314,\"location\":\"2251.8959999999997 1205\",\"editorPosition\":[1132,245,1003,1812],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"a warm tea in a cup on the tray\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":315,\"location\":\"2251.8959999999997 1355\",\"editorPosition\":[432,797,400,350],\"color\":\"Violet\",\"group\":317},\n{\"label\":\"Initial Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n    ],\\n    \\\"perif\\\": [\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":316,\"location\":\"2241.8959999999997 1535\",\"editorPosition\":[1735,35,425,1463],\"color\":\"#ccffcc\",\"group\":317},\n{\"label\":\"Original Prompts\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":317,\"location\":\"2189.9995156249997 1220\"},\n{\"label\":\"RobotAPIPromptList\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":319,\"location\":\"-1251.301 1362.158\",\"group\":231},\n{\"label\":\"Experiment Collector\",\"category\":\"AIFlow_Component\",\"size\":\"300 230\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"resetExperiment\"},{\"portId\":\"nextExperiment\"},{\"portId\":\"environmentStateList\"},{\"portId\":\"robotAIPromptList\"},{\"portId\":\"alexPromptList\"},{\"portId\":\"traviPromptList\"},{\"portId\":\"ropaPromptList\"},{\"portId\":\"userPromptList\"},{\"portId\":\"schedule\"}],\"out\":[{\"portId\":\"out\"},{\"portId\":\"endOfSchedule\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"nextExperiment\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'resetExperiment' ) {\\n  Engine_set( nodeData, 'step', 0 );\\n}\\n\\nif( name == 'experimentDone' ) {\\n  triggerNextExperiment();\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  triggerNextExperiment();\\n}\\n\\n\\nfunction triggerNextExperiment() {\\n  const step = Engine_get( nodeData, 'step', 0 );\\n  if( step == -1 ) { // Avoid triggers after end of experiments\\n    return;\\n  }\\n\\n  const schedule = Engine_getInput( nodeData, 'schedule', {} );\\n  \\n  const env            = Engine_getInput( nodeData, 'environmentStateList', \\\"{}\\\" );\\n  const robotAPIPrompt = Engine_getInput( nodeData, 'robotAIPromptList', {} );\\n  const alexList       = Engine_getInput( nodeData, 'alexPromptList', {} );\\n  const traviList      = Engine_getInput( nodeData, 'traviPromptList', {} );\\n  const ropaList       = Engine_getInput( nodeData, 'ropaPromptList', {} );\\n  const userList       = Engine_getInput( nodeData, 'userPromptList', {});\\n  \\n  if( step < schedule.length ) {\\n    const task = schedule[step];\\n    const id = task.id;\\n    \\n    // Check if this is an end task\\n    if( task.isEnd ) {\\n      terminateExperiments();\\n      return;\\n    }\\n    \\n    const alex = alexList[task.alex];\\n    const travi = traviList[task.travi];\\n    const ropa = Engine_applyTemplate( ropaList[task.ropa], { robotAPIPrompt } );\\n    const user = userList[task.user];\\n    \\n    if( env && alex && travi && ropa && user ) {\\n      // Define a new output\\n      const out = { id, env, alex, travi, ropa, user };\\n      \\n      log( 'out', out ); \\n      Engine_fireOutput( nodeData, 'out', out );\\n    } else {\\n      console.warn( `The task ${step} in the schedule is not correct` );\\n    }\\n    \\n    // Move to the next step\\n    Engine_set( nodeData, 'step', step+1 );\\n  } else {\\n    terminateExperiments();\\n  }\\n}\\nfunction terminateExperiments() {\\n  alert( ' Experiment Schedule Completed ' );\\n  // Restart the scheduler\\n  Engine_set( nodeData, 'step', -1 );\\n  Engine_fireOutput( nodeData, 'endOfSchedule' );\\n}\\nfunction log( name, data ) {\\n  if( name == 'out' ) {\\n    const m = 10;\\n    const str = `id: ${data.id} `+\\n                `env: #keys = ${Object.keys(data.env).length} `+\\n                `alex: ${data.alex.substring( 0, m )}...  `+\\n                `travi: ${data.travi.substring( 0, m )}...  `+\\n                `ropa: ${data.ropa.substring( 0, m )}...  `+\\n                `user: ${data.user.substring( 0, m )}...`;\\n    console.log( 'Exp Collector: ', str );\\n  } else {\\n    console.log( 'Exp Collector: ', name, JSON.stringify( data, null, 2 ) );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":327,\"location\":\"-340 2090\",\"editorPosition\":[1235,18,658,1231]},\n{\"label\":\"Experiment Schedule\",\"category\":\"AIFlow_Data\",\"size\":\"250 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[\\n  { \\\"id\\\": 1,    \\\"env\\\": \\\"001 EnvironmentState\\\", \\\"api\\\": \\\"001 RobotAPIPrompt\\\", \\\"alex\\\": \\\"001 Basic\\\", \\\"travi\\\": \\\"001 Basic\\\", \\\"ropa\\\": \\\"001 Basic\\\", \\\"user\\\": \\\"001 warm tea\\\" },\\n  { \\\"id\\\": 2,    \\\"env\\\": \\\"001 EnvironmentState\\\", \\\"api\\\": \\\"001 RobotAPIPrompt\\\", \\\"alex\\\": \\\"001 Basic\\\", \\\"travi\\\": \\\"001 Basic\\\", \\\"ropa\\\": \\\"001 Basic\\\", \\\"user\\\": \\\"002 cola\\\" },\\n  { \\\"id\\\": 3,    \\\"env\\\": \\\"001 EnvironmentState\\\", \\\"api\\\": \\\"001 RobotAPIPrompt\\\", \\\"alex\\\": \\\"001 Basic\\\", \\\"travi\\\": \\\"001 Basic\\\", \\\"ropa\\\": \\\"001 Basic\\\", \\\"user\\\": \\\"003 capital Germany\\\" },\\n  { \\\"isEnd\\\": true }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":333,\"location\":\"-1210 2776.737\",\"editorPosition\":[-5163,578,1315,127]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":335,\"location\":\"-3260 2740.637\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":281,\"location\":\"-3260 2370.637\"},\n{\"label\":\"001 EnvironmentState\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n   \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n    ],\\n    \\\"perif\\\": [\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', JSON.stringify( json, null, 2 ) );\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":290,\"location\":\"-1230 1966.737\",\"editorPosition\":[384,519,579,965]},\n{\"label\":\"EnvironmentStateList\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":300,\"location\":\"-1241.301 1222.158\",\"group\":231},\n{\"label\":\"001 EnvironmentState\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"JavaScript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/47.json\",\"key\":302,\"location\":\"-1221.301 1219.658\",\"group\":300,\"editorPosition\":[35,1091,360,1492]},\n{\"label\":\"001 RobotAPIPrompt\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n  '001 RobotAPIPrompt':\\n  \\n`* This command allows Roco to open the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] open_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object-with-door> can only be opened if it is closed\\n  \\n* This command allows Roco to close the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] close_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object-with-door> can only be closed if it is opened\\n  \\n* This command allows Roco to take an <object-to-be-taken> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> hand_right\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-taken>\\n  - [Roco to Ropa] <object-to-be-taken> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object-to-be-taken> can only be taken if the hand is empty\\n  \\n* This command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-put, destination-object>\\n  - [Roco to Ropa] <object-to-be-put> cannot be put because <reason of failure>\\n  constraints:\\n  - <object-to-be-put> can only be put somewhere if it is in the hand\\n  - <object-to-be-put> can be put on a <destination-object> that has a flat surface\\n  - <object-to-be-put> can be put in a <destination-object> that is a container\\n  \\n* This command allows Roco to pour the liquid of a <object-to-pour-from> into \\n  a <object-to-pour-into>:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-pour-from, object-to-pour-into>\\n  - [Roco to Ropa] <object-to-pour-into> cannot be filled because <reason of failure>\\n  constraints:\\n  - <object-to-pour-from> and <object-to-pour-into> must be containers\\n  - <object-to-pour-from> and <object-to-pour-into> must be held in different hands\\n  \\n* This command allows Roco to screw an <object-to-screw_top_of> to open or \\n  close it using an empty hand:\\n  command syntax: \\n  - [Ropa to Roco] screw <object-to-screw_top_of>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-screw_top_of>\\n  - [Roco to Ropa] <object-to-screw_top_of> cannot be opened because <reason of failure>\\n  constraints:\\n  - <object-to-screw_top_of> must be a bottle\\n  - <object-to-screw_top_of> must be held in a hand and the other hand must be empty\\n  \\n* This command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-look-at>\\n  - [Roco to Ropa] <object-to-look-at> is incorrect or do not exist.\\n  constraints:\\n  - <object-to-look-at> must be a valid name`,\\n  \\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":334,\"location\":\"-1230 2102.259847498308\",\"editorPosition\":[16,1520,811,1444]},\n{\"label\":\"AlexPromptList\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n  '001 Basic': \\n\\n`Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":337,\"location\":\"-1230 2226.737\",\"editorPosition\":[-3837,12,617,793]},\n{\"label\":\"TraviPromptList\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n    \\n  '001 Basic':\\n  \\n`You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":339,\"location\":\"-1230 2346.737\",\"editorPosition\":[2938,12,647,309]},\n{\"label\":\"RopaPromptList\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n  \\n  '001 Basic':\\n  \\n  `Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n<robotAPIPrompt>\\n\\nEach time you (Ropa) receive a <JSON description> for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":341,\"location\":\"-1230 2476.737\",\"editorPosition\":[7712,326,726,462]},\n{\"label\":\"UserPromptList\",\"category\":\"AIFlow_Component\",\"size\":\"270 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n    '001 warm tea': 'prepare me a warm tea in a glass and put it on the tray',\\n  '002 cola': 'serve me a coka-cola in a glass and put it on the tray',\\n  '003 capital Germany': 'What is the capital of Germany ?',\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":343,\"location\":\"-1230 2606.737\",\"editorPosition\":[6320,402,736,165]},\n{\"label\":\"Original Data\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":231,\"location\":\"-1330.00021875 1389.999796875\"},\n{\"label\":\"Blink On Input\",\"category\":\"AIFlow_Component\",\"size\":\"500 80\",\"color\":\"gray\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":307,\"location\":\"-2390 2670.737\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Propagate On Trigger\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"trigger\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"trigger\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  // Get input value\\n  const inV = Engine_getInput( nodeData, 'in', {} );\\n  \\n  // Generate an output trigger\\n  Engine_fireOutput( nodeData, 'out', inV );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":310,\"location\":\"3360 1440\",\"editorPosition\":[260,386,661,231]},\n{\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 140\",\"in\":[{\"portId\":\"in\"}],\"key\":320,\"location\":\"3751.896 1430\",\"label\":\"prepare me a warm tea in a glass and put it on the tray\",\"group\":286},\n{\"label\":\"Blink On Input\",\"category\":\"AIFlow_Component\",\"size\":\"880 80\",\"color\":\"gray\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":293,\"location\":\"3750 1540\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Generate Empty String\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', '' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":297,\"location\":\"3350 1570\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"1) Feed Templates to \\nExperiment Controller\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 160\",\"key\":304,\"location\":\"-3260 2240.737\",\"color\":\"Gold\"},\n{\"label\":\"3) Start/Next Experiment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"840 100\",\"key\":318,\"location\":\"-3260 2640.737\",\"color\":\"Gold\"},\n{\"label\":\"Blink On Input\",\"category\":\"AIFlow_Component\",\"size\":\"500 80\",\"color\":\"gray\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":308,\"location\":\"-2370 2220\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"2) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"500 100\",\"key\":321,\"location\":\"-2370 2310\",\"color\":\"Gold\"},\n{\"label\":\"5) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"500 90\",\"key\":325,\"location\":\"-2390 2750.737\",\"color\":\"Gold\"},\n{\"label\":\"4) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 90\",\"key\":322,\"location\":\"3750 1620\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":340,\"location\":\"4130 1139.9\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Set Boolean\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"true\"},{\"portId\":\"false\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":350,\"location\":\"-2960 1889.9\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":366,\"location\":\"-3260 1830.6370000000002\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":368,\"location\":\"-3260 1960.6370000000002\",\"color\":\"red\"},\n{\"label\":\"0) Enable or Disable Gate to the System\\n- True: enable (system on)\\n- False: disable (no system)\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1370 280\",\"key\":291,\"location\":\"-3260 1640.737\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":328,\"location\":\"2880 1970\",\"editorPosition\":[2401,1602,486,402]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":351,\"location\":\"2880 2160\",\"editorPosition\":[1917,1600,478,397]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":365,\"location\":\"2870 2340\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":369,\"location\":\"2890 2729.9\",\"editorPosition\":[917,1406,506,391]},\n{\"label\":\"Setup Instructions: \\n1) Reload the Model (always)\\n     and clean all labels\\n\\n\\n-] Enable/Disable TRAVI\\n\\n\\n\\n\\n\\n-] Enable/Disable ROPA\\n\\n\\n\\n\\n-] Enable/Disable ROCO\\n\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1150 1600\",\"key\":299,\"location\":\"-4560 320\",\"color\":\"PowderBlue\"},\n{\"label\":\"Group New\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":286,\"location\":\"3699.999515625 1430\"},\n{\"label\":\"Experiment Statistics\",\"category\":\"AIFlow_Component\",\"size\":\"280 170\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"errorMessage\"},{\"portId\":\"taskEvaluation\"},{\"portId\":\"saveStatistics\"}],\"out\":[{\"portId\":\"out\"},{\"portId\":\"nextExperiment\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'errorMessage' ) {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  const currId = Engine_get( nodeData, 'currId' );\\n  \\n  if( currId != undefined ) {\\n    report[currId].replanLog.push( { state: 'error', msg: value } );\\n  } else {\\n    debugger\\n    console.error( 'Experiment Report id undefined' );\\n  }\\n}\\nif( name == 'taskEvaluation' ) {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  const currId = Engine_get( nodeData, 'currId' );\\n  \\n  if( currId != undefined ) {\\n    const state = ( value.startsWith( 'Success' )? 'Success': 'Error' );\\n    report[currId].replanLog.push( { state, msg: value } );\\n  } else {\\n    debugger\\n    console.error( 'Experiment Report id undefined' );\\n  }\\n  setTimeout( ()=> Engine_fireOutput( nodeData, 'nextExperiment' ), 500 ); // 0.5s\\n}\\n\\nif( name == 'saveStatistics' ) {\\n  logReport();\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  const currId = value.id;\\n  \\n  report[currId] = {\\n    replanLog: [],\\n  };\\n  \\n  Engine_set( nodeData, 'currId', currId );\\n  Engine_fireOutput( nodeData, 'out', value );\\n}\\n\\n\\nfunction logReport() {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  console.log( JSON.stringify( report, null, 2 ) );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":326,\"location\":\"940 2090\",\"editorPosition\":[1920,27,655,918]},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"1620 720\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/1-Introduction-MS2/Slide7.PNG\",\"key\":342,\"location\":\"11010 -910\"},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":367,\"location\":\"11030 -1810.1999999999998\",\"label\":\"ROBI\",\"group\":289,\"color\":\"Gray\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":360,\"location\":\"6260 3479.9\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":374,\"location\":\"-3260 420\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":375,\"location\":\"-3260 550\",\"color\":\"red\"},\n{\"label\":\"Set Boolean\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"true\"},{\"portId\":\"false\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":376,\"location\":\"-2940 489.79999999999995\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"-2) Enable/Disable ROPA\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 100\",\"key\":370,\"location\":\"-3270 320\",\"color\":\"Gold\"},\n{\"label\":\"Set Boolean\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"true\"},{\"portId\":\"false\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":378,\"location\":\"-2950 889.6999999999999\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":379,\"location\":\"-3270 950\",\"color\":\"red\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":380,\"location\":\"-3270 820\"},\n{\"label\":\"-1) Enable/Disable ROCO\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 100\",\"key\":382,\"location\":\"-3270 710\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":384,\"location\":\"5440 5429.799999999999\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"-3) Enable/Disable TRAVI\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 100\",\"key\":390,\"location\":\"-3270 -80\",\"color\":\"Gold\"},\n{\"label\":\"Set Boolean\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"true\"},{\"portId\":\"false\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":391,\"location\":\"-2940 89.8\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":392,\"location\":\"-3260 150\",\"color\":\"red\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":393,\"location\":\"-3260 20\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":395,\"location\":\"6230 2249.9\",\"editorPosition\":[2893,1205,533,386]},\n{\"label\":\"Load Model\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_loadModel();\\nEngine_initNodeStatus();\\n\\nEngine_fireOutput( nodeData, 'out' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":373,\"location\":\"-2920 -260\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":381,\"location\":\"-3270 -260.1\"},\n{\"label\":\"Blink On Input\",\"category\":\"AIFlow_Component\",\"size\":\"530 80\",\"color\":\"gray\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":296,\"location\":\"-2220 -260\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"-4) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"530 90\",\"key\":306,\"location\":\"-2220 -180\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":398,\"location\":\"-2370 80\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":400,\"location\":\"-2370 480\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":402,\"location\":\"-2360 880\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":404,\"location\":\"-2400 1880\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":324,\"location\":\"-5420 -29.69500000000005\"},\n{\"label\":\"Reset Experiment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 90\",\"key\":347,\"location\":\"-5420 -119.69500000000005\",\"color\":\"Gold\"},\n{\"label\":\"Command Dispatcher\",\"category\":\"AIFlow_Component\",\"size\":\"240 110\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"plan\"},{\"portId\":\"nextCommand\"},{\"portId\":\"planFailed\"},{\"portId\":\"isReplaned\"}],\"out\":[{\"portId\":\"command\"},{\"portId\":\"commandIdx\"},{\"portId\":\"planResult\"},{\"portId\":\"taskEvaluation\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"plan\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'nextCommand' ) {\\n  const cIdx = Engine_get( nodeData, 'cIdx', -1 );\\n  Engine_set( nodeData, 'cIdx', cIdx+1 );\\n  fireCommand();\\n}\\n\\nif( name == 'planFailed' ) {\\n  const errorMsg = `The user request could not be executed. Please inform the human.`;\\n  const msg = `[Roco to Alex] ${errorMsg}`;\\n  Engine_fireOutput( nodeData, 'planResult', msg );\\n  Engine_fireOutput( nodeData, 'taskEvaluation', 'Error: '+errorMsg );\\n}\\n\\nif( name == 'planFailed' ) {\\n  Engine_set( nodeData, 'isReplaned', true );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const plan = Engine_getInput( nodeData, 'plan', '' );\\n  const commandList = plan.split( '\\\\n' );\\n  \\n  Engine_set( nodeData, 'commandList', commandList );\\n  const isReplaned = Engine_set( nodeData, 'isReplaned', false );\\n  if( !isReplaned  ) {\\n    Engine_set( nodeData, 'cIdx', 0 );\\n  } else {\\n    Engine_set( nodeData, 'isReplaned', false );\\n  }\\n  // Fire first command\\n  fireCommand();\\n}\\n\\n\\nfunction fireCommand() {\\n  const commandList = Engine_get( nodeData, 'commandList', [] );\\n  const cIdx = Engine_get( nodeData, 'cIdx', 0 );\\n  \\n  if( cIdx < commandList.length ) {\\n    \\n    // Get plan command, like: [Ropa to Roco] gaze glass_1\\n    const planCommand = commandList[cIdx];\\n    \\n    // Get simulator command, like: gaze glass_1\\n    const idx = planCommand.indexOf( '] ' );\\n    const simCommand = planCommand.substring( idx+2 );\\n    \\n    // Create a command for the robot: [Roco to Robi] gaze glass_1\\n    const command = '[Roco to Robi] '+simCommand;\\n    // Send command\\n    Engine_fireOutput( nodeData, 'commandIdx', cIdx );\\n    Engine_fireOutput( nodeData, 'command', command );\\n  } else {\\n    const successMsg = `Request has been executed successfully. Please inform the human.`;\\n    const msg = `[Roco to Alex] ${successMsg}`;\\n    Engine_fireOutput( nodeData, 'planResult', msg );\\n    Engine_fireOutput( nodeData, 'planEvaluation', 'Success: '+successMsg );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":372,\"location\":\"6700 5450\",\"fileType\":\"text/javascript\",\"editorPosition\":[1125,1787,690,997],\"group\":427},\n{\"label\":\"Command\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Robi] gaze table_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":383,\"location\":\"7122 5456.504\",\"editorPosition\":[1735,35,425,1463],\"group\":427},\n{\"label\":\"Command Checker\",\"category\":\"AIFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"envState\"},{\"portId\":\"command\"}],\"out\":[{\"portId\":\"simCommand\"},{\"portId\":\"errorMessage\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"command\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n//debugger\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// Parse the state\\nif( name == 'envState' ) {\\n  const envState = JSON.parse( Engine_getInput( nodeData, 'envState', '{}' ) );\\n  Engine_set( nodeData, 'state', envState );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const info = checkIfCommandIsValid( value );\\n  if( info.isValid ) {\\n    Engine_fireOutput( nodeData, 'simCommand', info.command );\\n  } else {\\n    Engine_fireOutput( nodeData, 'errorMessage', info.errorMsg );\\n  }\\n}\\n\\n// TODO: Test 2 strategies: \\n// Strategy1: just give an error stating the reason of failure\\n// Strategy2: same as 1 + suggest a command to do or a reasonning to apply\\n// Also check object affordances for each command\\n// Abstract commands like open instead of screw or open_door to get minimal \\n//   representation for different abstraction level\\n\\nfunction checkIfCommandIsValid( value ) {\\n  const toRobi = '[Roco to Robi] ';\\n  const toRoco = '[Robi to Roco] ';\\n  const idx = value.indexOf(toRobi);\\n  let errorMsg = '';\\n  let isValid = true;\\n  let command = '';\\n  \\n  if( idx != -1 ) {\\n    command = value.substring( idx + toRobi.length ).trim();\\n    if( command ) {\\n      isValid = true;\\n    } else {\\n      isValid = false;\\n      errorMsg = `${toRoco}Error: no command received.`;\\n    }\\n  } else {\\n    isValid = false;\\n    errorMsg = `${toRoco}Error: wrong command syntax. The command must have the syntax: ${toRobi}<command>.`;\\n  }\\n  const tokenList = command.split( ' ' );\\n  if( tokenList && isValid ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    const objectName2 = tokenList[2] || '';\\n    let handName = objectName2;\\n    \\n      // // Check if parameters are valid\\n      // if( objectName1 ) {\\n      //   if( !isObjectExist( objectName1 ) ) {\\n      //     errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n      //     isValid = false;\\n      //   }\\n      // }\\n      // if( objectName2 ) {\\n      //   if( !isObjectExist( objectName2 ) ) {\\n      //     errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} does not exist in environment state.`;\\n      //     isValid = false;\\n      //   }\\n      // }\\n      // if( !handName ) {\\n      //   handName = getEmptyHand();\\n      // } else if( !isHandName( handName) ) {\\n      //   errorMsg = `${toRoco}Error: ${handName} is not a correct name for a hand.`;\\n      //   isValid = false;\\n      // }\\n    \\n    if( isValid ) {\\n      // Check if commandName is valid\\n      switch( commandName ) {    \\n        case 'put':\\n          if( isBothHandEmpty() ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because both hands are empty.`;\\n            isValid = false;\\n          } else if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectInOneHand( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;         \\n          } else if( !isObjectExist( objectName2 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( isObjectOpenable( objectName2 ) && !isObjecOpened( objectName2 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} is not opened.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'get':\\n          if( isBothHandFull() ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because both hands are already full with objects.`;\\n            isValid = false;\\n          } else if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectExist( handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not the name of a hand.`;\\n            isValid = false;         \\n          } else if( !isHandEmpty( handName ) ) {\\n            const objectInHand = getObjectInHand( handName );\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} already contains ${objectInHand}.`;\\n            isValid = false;\\n          } else if( isObjectOpenable( getHolderObject( objectName1 ) ) && !isObjecOpened( getHolderObject( objectName1 ) ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} is not opened.`;\\n            isValid = false;\\n          } else {\\n            command = `get ${objectName1} table_1 ${handName}`;\\n            isValid = true;\\n          }\\n          break;\\n        case 'pour':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectInOneHand( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;\\n          } else if( !isObjectPourable( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} do not contain a liquid.`;\\n            isValid = false;\\n          } else if( !isObjectExist( objectName2 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( isObjectOpenable( getHolderObject( objectName2 ) ) ) {\\n            const holder = getHolderObject( objectName2 );\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} is inside ${holder}.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'screw':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectInOneHand( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;\\n          } else if( !isOneHandEmpty() ) {\\n            const busyHand = getHandNotHoldingObject( objectName1 );\\n            const objectInHand = getObjectInHand( busyHand );\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${busyHand} is not free it holds ${objectInHand}.`;\\n            isValid = false;\\n          } else if( !isObjectOpenable( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not an object you can open by screwing it.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'open_door':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectOpenable( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no door to open.`;\\n            isValid = false;\\n          } else if( isObjectOpened( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is already opened.`;\\n            isValid = false;\\n          } else if( !isHandEmpty( handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not empty.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'close_door':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectOpenable( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no door to close.`;\\n            isValid = false;\\n          } else if( !isObjectOpened( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is already closed.`;\\n            isValid = false;\\n          } else if( !isHandEmpty( handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not empty.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'finger_push':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectPowerable() ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no button to power on or off.`;\\n            isValid = false;\\n          } \\n          break;\\n        case 'gaze':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          }\\n          break;\\n        default:\\n          errorMsg = `${toRoco}Error: ${command} does not exist in the robot API.`;\\n          isValid = false;\\n          break;\\n      }\\n    }\\n  }\\n  return( { command, isValid, errorMsg } );\\n}\\n\\nfunction isObjectExist( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName] != undefined );\\n}\\nfunction isHandName( handName ) {\\n  return ( ( handName == 'hand_right' ) || ( handName == 'hand_left' ) );\\n}\\nfunction isHandEmpty( handName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[handName].holdsObject.length == 0 );\\n}\\nfunction isOneHandEmpty() {\\n  return ( isHandEmpty( 'hand_right' ) || isHandEmpty( 'hand_left' ) );\\n}\\nfunction isBothHandEmpty() {\\n  return ( isHandEmpty( 'hand_right' ) && isHandEmpty( 'hand_left' ) );\\n}\\nfunction isBothHandFull() {\\n  return ( !isHandEmpty( 'hand_right' ) && !isHandEmpty( 'hand_left' ) );\\n}\\nfunction isObjectInHand( handName, objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[handName].holdsObject.includes( objectName ) );\\n}\\nfunction isObjectInOneHand( objectName ) {\\n  return( isObjectInHand( 'hand_right', objectName ) || isObjectInHand( 'hand_left', objectName ) );\\n}\\nfunction isObjectOpenable( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].closure != undefined );\\n}\\nfunction isObjectOpened( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].closure == 'opened'? true: false );\\n}\\nfunction isObjectPowerable( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].power != undefined );\\n}\\nfunction isObjectPoweredOn( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].power == 'on'? true: false );\\n}\\nfunction isObjectPourable( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].holdsLiquid != undefined );\\n}\\nfunction getEmptyHand() {\\n  if( isHandEmpty( 'hand_right' ) ) {\\n    return( 'hand_right' );\\n  } else if( isHandEmpty( 'hand_left' ) ) {\\n    return( 'hand_left' );\\n  } else {\\n    return( '' );\\n  }\\n}\\nfunction getHandNotHoldingObject( objectName ) {\\n  if( isObjectInHand( 'hand_right', objectName ) ) {\\n    return( 'hand_left' );\\n  } else if ( isObjectInHand( 'hand_left', objectName ) ) {\\n    return( 'hand_right' );\\n  } else {\\n    return( '' );\\n  }\\n}\\nfunction getObjectInHand( handName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[handName].holdsObject[0] );\\n}\\nfunction getHolderObject( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].isHoldByObject[0] );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":389,\"location\":\"7532 5446.003999999998\",\"editorPosition\":[-1084,-5,1063,1292],\"group\":427},\n{\"label\":\"[Roco to Robi] gaze table_1\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1400 70\",\"in\":[{\"portId\":\"in\"}],\"key\":403,\"location\":\"7982 5042.031\",\"group\":427},\n{\"label\":\"Simulator of Simulator\",\"category\":\"AIFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"simCommand\"}],\"out\":[{\"portId\":\"successSimCommand\"},{\"portId\":\"errorMessage\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const simCommand = Engine_getInput( nodeData, 'simCommand', '' );\\n  \\n  const feedback = execSimulatorCommand( simCommand );\\n  if( feedback.startsWith( 'Success' ) ) {\\n    Engine_fireOutput( nodeData, 'successSimCommand', simCommand );\\n  } else {\\n    Engine_fireOutput( nodeData, 'feedback', feedback );\\n  }\\n}\\n\\nfunction execSimulatorCommand( command ) {\\n  return( 'Success' );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":388,\"location\":\"8072 5431.830999999999\",\"editorPosition\":[2261,424,400,350],\"group\":427},\n{\"label\":\"Update Environment State\",\"category\":\"AIFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"oldState\"},{\"portId\":\"simCommand\"}],\"out\":[{\"portId\":\"newState\"},{\"portId\":\"commandFeedback\"},{\"portId\":\"errorMessage\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"simCommand\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// Parse the state\\nif( name == 'oldState' ) {\\n  const state = JSON.parse( Engine_getInput( nodeData, 'oldState', '{}' ) );\\n  Engine_set( nodeData, 'state', state );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const command = Engine_getInput( nodeData, 'simCommand', '' ); \\n  const state = Engine_get( nodeData, 'state', {} );\\n  \\n  const feedback = updateEnvironmentState( command );\\n  \\n  const toRoco = '[Robi to Roco] ';\\n  const commandFeedback = `${toRoco}${feedback}`;\\n  const newState = JSON.stringify( state, null, 2 );\\n  //console.log(newState);\\n  if( feedback.startsWith( 'Success' ) ) {\\n    Engine_fireOutput( nodeData, 'commandFeedback', commandFeedback );\\n    Engine_fireOutput( nodeData, 'newState', newState );\\n  } else {\\n    Engine_fireOutput( nodeData, 'errorMessage', feedback );\\n  }\\n}\\n\\nfunction updateEnvironmentState( command ) {\\n  // Default response\\n  let response = `Error: I don't know how to exectuete \\\"${command}\\\"`;\\n  \\n  tokenList = command.split( ' ' );\\n  if( tokenList ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    let objectName2 = tokenList[2] || '';\\n    let handName = tokenList[3] || '';\\n    \\n    // Check if parameters are valid\\n    if( objectName1 ) {\\n      if( !isObjectExist( objectName1 ) ) {\\n        response = `Error: cannot ${commandName} because ${objectName1} does not exist in environment state.`;\\n      }\\n    }\\n    if( objectName2 ) {\\n      if( !isObjectExist( objectName2 ) ) {\\n        response = `Error: cannot ${commandName} because ${objectName2} does not exist in environment state.`;\\n      }\\n    }\\n    if( !handName ) {\\n      if( !isHandName( handName) ) {\\n        response = `Error: ${handName} is not a correct name for a hand.`;\\n      }\\n    }\\n    \\n    switch( commandName ) {\\n      case 'get':\\n        getObjectInHand( handName, objectName1 );\\n        response = `Success: ${objectName1} is in ${handName}.`;\\n        break;\\n      case 'put':\\n        if( isObjectInHand( 'hand_right', objectName1 ) ) {\\n          objectName2 = putObjectOnObject( 'hand_right', objectName2 );\\n        } else if( isObjectInHand( 'hand_left', objectName1 ) ) {\\n          objectName2 = putObjectOnObject( 'hand_left', objectName2 );\\n        }\\n        response = `Success: ${objectName1} is in/on ${objectName2}.`;\\n        break;\\n      case 'gaze':\\n        gazeAtObject( objectName1 );\\n        response = `Success:  ${objectName1} is gazed at.`;\\n        break;\\n      case 'open_door':\\n        setClosure( objectName1, 'opened' );\\n        response = `Success: ${objectName1} is opened.`;\\n        break;\\n      case 'close_door':\\n        setClosure( objectName1, 'closed' );\\n        response = `Success: ${objectName1} is closed.`;\\n        break;\\n      case 'finger_push':\\n        if( isObjectPoweredOn( objectName1 ) ) {\\n          setPower( objectName1, 'off' );\\n          response = `Success: ${objectName1} is switched on.`;\\n        } else {\\n          setPower( objectName1, 'on' );\\n          response = `Success: ${objectName1} is switched off.`;\\n        }\\n        break;\\n      case 'pour':\\n        const liquid = getLiquidInObject( objectName1 );\\n        const level = pourObject( objectName1, objectName2 );\\n        if( level > 0 ) {\\n          response = `Success: Poured ${level} litter of ${liquid} from ${objectName1} into ${objectName2}.`;\\n        } else {\\n          response = `Error: ${objectName1} is empty.`;\\n        }\\n        break;\\n      case 'screw':\\n        if( isObjectOpened( objectName1 ) ) {\\n          setClosure( objectName1, 'closed' );\\n          response = `Success: ${objectName1} is closed.`;\\n        } else {\\n          setClosure( objectName1, 'opened' );\\n          response = `Success: ${objectName1} is opened.`;\\n        }\\n        break;\\n    }\\n  }\\n  return( response );\\n}\\nfunction isObjectExist( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName] != undefined );\\n}\\nfunction isHandName( handName ) {\\n  return ( ( handName == 'hand_right' ) || ( handName == 'hand_left' ) );\\n}\\nfunction isHandEmpty( handName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[handName].holdsObject.length == 0 );\\n}\\nfunction isBothHandEmpty() {\\n  return ( isHandEmpty( 'hand_right' ) && isHandEmpty( 'hand_left' ) );\\n}\\nfunction isObjectInHand( handName, objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[handName].holdsObject.includes( objectName ) );\\n}\\nfunction isObjectOpened( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].closure == 'opened'? true: false );\\n}\\nfunction setClosure( objectName, status ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  state[objectName].closure = status;\\n}\\nfunction isObjectPoweredOn( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].power == 'on'? true: false );\\n}\\nfunction setPower( objectName, status ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  state[objectName].power = status;\\n}\\nfunction pourObject( fromName, toName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  if( state[fromName].fillLevel >= 0 ) {\\n    state[toName].fillLevel = Math.min( state[toName].volume, state[fromName].fillLevel );\\n    state[fromName].fillLevel -= state[toName].fillLevel;\\n    state[fromName].fillLevel = Math.max( 0, state[fromName].fillLevel );\\n    return( state[toName].fillLevel );\\n  }\\n}\\nfunction getLiquidInObject( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  return( state[objectName].holdsLiquid[0] );\\n}\\nfunction getObjectInHand( handName, objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  // Hand now holds objectName \\n  state[handName].holdsObject.push( objectName );\\n  // ObjectName is now holded by hand\\n  const previousHolder = state[objectName].isHoldByObject.shift();\\n  state[objectName].isHoldByObject.push( handName );\\n  // previousHolder does not hold objectName anymore\\n  let objectList = state[previousHolder].holdsObject;\\n  state[previousHolder].holdsObject = objectList.filter( (d)=> d != objectName );\\n}\\nfunction putObjectOnObject( handName, containerName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  containerName = containerName || 'table_1';\\n  console.log('putObjectOnObject', handName, containerName);\\n  // Hand now holds nothing \\n  const objectName = state[handName].holdsObject.shift();\\n  // ObjectName is now holded by containerName\\n  state[objectName].isHoldByObject.shift();\\n  state[objectName].isHoldByObject.push( containerName );\\n  // containerName now holds objectName \\n  state[containerName].holdsObject.push( objectName );\\n  return( containerName );\\n}\\nfunction gazeAtObject( objectName ) {\\n  const state = Engine_get( nodeData, 'state', {} );\\n  state.gaze.fovea = [objectName];\\n  // Get parent object\\n  const parent = state[objectName].isHoldByObject;\\n  state.gaze.perif = state[parent[0]].holdsObject;\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":405,\"location\":\"8662 5431.830999999999\",\"editorPosition\":[4027,24,666,1642],\"group\":427},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"320 240\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"fileServer/pictures/SMILESimulator.png\",\"key\":422,\"location\":\"8202 5402.031\",\"group\":427},\n{\"label\":\"Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\",\\n      \\\"pitcher_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"tea_bag_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0.1,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 0.9,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"mug_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":408,\"location\":\"9192 5411.830999999999\",\"editorPosition\":[1735,35,425,1463],\"group\":427},\n{\"label\":\"New State\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":410,\"location\":\"9192 5332.031\",\"color\":\"LightYellow\",\"group\":427},\n{\"label\":\"Check for Replan on Error\",\"category\":\"AIFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"errorMessage\"},{\"portId\":\"commandIdx\"},{\"portId\":\"resetReplan\"}],\"out\":[{\"portId\":\"replanError\"},{\"portId\":\"replanIndex\"},{\"portId\":\"planFailed\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"errorMessage\",\"unit\":\"\",\"valueChanged\":\"true\"},{\"name\":\"maxReplanCount\",\"value\":\"10\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'resetReplan' ) {\\n  Engine_set( nodeData, 'replanCount', 0 );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const errorMessage = Engine_getInput( nodeData, 'errorMessage', '' );\\n  const commandIdx = Engine_getInput( nodeData, 'commandIdx', '' );\\n  const replanCount = Engine_get( nodeData, 'replanCount', 0 );\\n  const maxReplanCount = Engine_getProperty( nodeData, 'maxReplanCount', 0 );\\n  \\n  if( replanCount < maxReplanCount ) {\\n    // Lets try to replan\\n    Engine_set( nodeData, 'replanCount', replanCount+1 );\\n    \\n    let msg = errorMessage;\\n    const idx = errorMessage.indexOf( '] ' );\\n    if( idx != -1 ) {\\n      msg = '[Roco to Ropa] '+errorMessage.substring( idx+2 );\\n    }\\n    Engine_fireOutput( nodeData, 'replanIndex', commandIdx+1);\\n    Engine_fireOutput( nodeData, 'replanError', msg );\\n  } else {\\n    // Too many replan, infor user about failure\\n    Engine_fireOutput( nodeData, 'planFailed' );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":412,\"location\":\"9352 5700.768999999999\",\"editorPosition\":[3080,2226,673,333],\"group\":427},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 70\",\"in\":[{\"portId\":\"in\"}],\"key\":425,\"location\":\"10022 5742.031\",\"group\":427},\n{\"label\":\"[ROCO] Execute plan and in case of error ask to replan\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":427,\"location\":\"6530 5781.0154999999995\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Trigger Next Command\",\"category\":\"AIFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  setTimeout( ()=> Engine_fireOutput( nodeData, 'out' ), 500 ); // 0.5s\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":413,\"location\":\"9572 5412.031\",\"editorPosition\":[3080,2226,673,333],\"group\":427},\n{\"label\":\"Next Cmd\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":423,\"location\":\"9572 5332.031\",\"color\":\"MediumBlue\",\"group\":427},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1880 70\",\"in\":[{\"portId\":\"in\"}],\"key\":377,\"location\":\"7262 5860.969\",\"group\":427},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2400 70\",\"in\":[{\"portId\":\"in\"}],\"key\":401,\"location\":\"10022 5652.031\",\"group\":427},\n{\"label\":\"->planResult\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":385,\"location\":\"7262 5790.969\",\"color\":\"Lavender\",\"group\":427},\n{\"label\":\"->errorMessage\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"250 60\",\"key\":417,\"location\":\"10022 5580.969\",\"color\":\"Lavender\",\"group\":427},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1870 70\",\"in\":[{\"portId\":\"in\"}],\"key\":394,\"location\":\"7272 6020.969\",\"group\":427},\n{\"label\":\"->taskEvaluation\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"300 60\",\"key\":420,\"location\":\"7272 5950.969\",\"color\":\"Lavender\",\"group\":427},\n{\"label\":\"->index\",\"category\":\"TextLabels_Size2\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"160 60\",\"key\":432,\"location\":\"10032 5814.656\",\"color\":\"Lavender\",\"group\":427},\n{\"label\":\"Plan\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 mug_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 mug_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 tray_1\\n[Ropa to Roco] gaze microwave_1\\n[Ropa to Roco] open_door microwave_1\\n[Ropa to Roco] set_temperature microwave_1 20\\n[Ropa to Roco] set_power microwave_1 on\\n[Ropa to Roco] start_cooking microwave_1\\n[Ropa to Roco] wait 10\\n[Ropa to Roco] stop_cooking microwave_1\\n[Ropa to Roco] close_door microwave_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] get mug_1 hand_right\\n[Ropa to Roco] put mug_1 glass_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] put glass_1 tray_1\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] put tea_bag_1 table_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 table_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] put pitcher_1 table_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":435,\"location\":\"6630 3640\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":236,\"location\":\"-3250 3140\"},\n{\"label\":\"-4) Reload Model and Clean Labels\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1220 100\",\"key\":255,\"location\":\"-3270 -360\",\"color\":\"Gold\"},\n{\"label\":\"Experiments Executor\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"4950 90\",\"key\":263,\"location\":\"-1270 -550\",\"color\":\"LightSalmon\"},\n{\"label\":\"Robot Control System\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"7400 90\",\"key\":265,\"location\":\"4530 -540\",\"color\":\"Thistle\"},\n{\"label\":\"Configurations\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"3060 90\",\"key\":267,\"location\":\"-4570 -550\",\"color\":\"LightSteelBlue\"},\n{\"label\":\"+2) Manual Log Results\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"960 90\",\"key\":270,\"location\":\"-3240 3040\",\"color\":\"Gold\"},\n{\"label\":\"Execution Instructions: \\n\\n-] Enable/Disable Experiment Executor communication to System\\n\\n\\n\\n1) Initialize Templates\\n\\n\\n\\n\\n2) Start Experiment\\n\\n\\n\\n-] Generate Statistics Logs\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1150 1600\",\"key\":264,\"location\":\"-4560 2390\",\"color\":\"PowderBlue\"},\n{\"label\":\"It will execute the commands\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":268,\"location\":\"11210 -1810\"},\n{\"label\":\"Sequencer\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out1\"},{\"portId\":\"out2\"},{\"portId\":\"out3\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"timeInterval\",\"value\":\"3\",\"unit\":\"seconds\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst ti = Engine_getProperty( nodeData, 'timeInterval', 1 );\\nconst outCount = nodeData.out.length;\\n// Start sequencesr\\ntriggerNextOut( 0 );\\n\\nfunction triggerNextOut( index ) {\\n  if( index < outCount ) {\\n    const outPortName = nodeData.out[index].portId;\\n    Engine_fireOutput( nodeData, outPortName );\\n    \\n    // Plan the next step\\n    setTimeout( ()=> triggerNextOut( index+1 ), ti*1000 );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":266,\"location\":\"-5150 -269.69500000000005\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Clear Label of Message Nodes\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isLocal\",\"value\":\"true\",\"unit\":\"unit1\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Test if clean only local group labels:\\n// - isLocal = true => clean only labels in the group we are in\\n// - isLocal = false => clean all labels that are in any group\\nconst isLocal = Engine_getProperty( nodeData, 'isLocal', false );\\n// Group test function\\nconst testGroup = (g)=> ( isLocal? g == nodeData.group: g != undefined );\\n\\n// Get all message nodes (except big plan)\\nconst dataList = appData.me.getNodeListIf( modelId, \\n                                           (d)=> d.category == 'AIFlow_Message' &&\\n                                           testGroup( d.group ) );\\nfor( const data of dataList ) {\\n  setNodeDataField( data.key, 'label', '' );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":271,\"location\":\"6702 5120.969\",\"editorPosition\":[564,1974,693,325],\"group\":427},\n{\"label\":\"Pass Trough\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', value );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":269,\"location\":\"-1820 2370\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Pass Trough\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', value );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":273,\"location\":\"-2790 2740\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":275,\"location\":\"-5420 -269.69500000000005\"},\n{\"label\":\"---- AutoStart ----\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"570 100\",\"key\":272,\"location\":\"-5420 -379.69500000000005\",\"color\":\"Gold\"},\n{\"label\":\"Status\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"240 100\",\"key\":276,\"location\":\"-2400 1970\",\"color\":\"Gold\"},\n{\"label\":\"Status\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"240 100\",\"key\":278,\"location\":\"-2360 970\",\"color\":\"Gold\"},\n{\"label\":\"Status\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"240 100\",\"key\":283,\"location\":\"-2370 570\",\"color\":\"Gold\"},\n{\"label\":\"Status\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"240 100\",\"key\":288,\"location\":\"-2370 170\",\"color\":\"Gold\"},\n{\"label\":\"Roco Input\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Alex] The user request could not be executed. Please inform the human.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":274,\"location\":\"6630 1019.9\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"Add user> header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":277,\"location\":\"7060 1019.9\",\"editorPosition\":[918,39,712,140]},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2260 70\",\"in\":[{\"portId\":\"in\"}],\"key\":259,\"location\":\"9410 6520\",\"group\":427},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2250 70\",\"in\":[{\"portId\":\"in\"}],\"key\":280,\"location\":\"9420 6420\",\"group\":427},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2240 70\",\"in\":[{\"portId\":\"in\"}],\"key\":285,\"location\":\"9430 6320\",\"group\":427},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":329,\"location\":\"6660 5670\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":331,\"location\":\"6290 5529.9\",\"color\":\"#ccffcc\"},\n{\"label\":\"Data\",\"category\":\"AIFlow_DataSend\",\"size\":\"180 80\",\"buttons\":[{\"name\":\"Send\",\"checked\":false}],\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Ropa] Error: cannot put mug_1 microwave_1 because both hands are empty.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":330,\"location\":\"6600 3890\",\"group\":363}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":201,\"to\":200,\"points\":[7492.357914062501,3397.8050000000003,7502.357914062501,3397.8050000000003,7529.999515625001,3501.567000000001,7539.999515625001,3501.567000000001],\"key\":-124,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":205,\"to\":204,\"points\":[8192.3579140625,3501.567000000001,8202.3579140625,3501.567000000001,8209.999515625,3501.367,8219.999515625,3501.367],\"key\":-129,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":200,\"to\":205,\"points\":[7812.357914062501,3501.567000000001,7822.357914062501,3501.567000000001,7839.999515625001,3501.567000000001,7849.999515625001,3501.567000000001],\"key\":-130},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":206,\"to\":203,\"points\":[9642.3579140625,3451.567000000001,9652.3579140625,3451.567000000001,9669.999515625,3451.367,9679.999515625,3451.367],\"key\":-131,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":207,\"to\":206,\"points\":[9302.3579140625,3451.567000000001,9312.3579140625,3451.567000000001,9319.999515625,3451.567000000001,9329.999515625,3451.567000000001],\"key\":-132},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":298,\"to\":207,\"points\":[9005.9165078125,3451.567000000001,9015.9165078125,3451.567000000001,9019.999515625,3451.567000000001,9029.999515625,3451.567000000001],\"key\":-136},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":211,\"to\":298,\"points\":[8490.4619140625,3320,8500.4619140625,3320,8596.440921875,3421.567000000001,8606.440921875,3421.567000000001],\"key\":-138},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":218,\"to\":295,\"points\":[8342.3579140625,1999.7420000000002,8352.3579140625,1999.7420000000002,8406.440921875,1983.5040000000008,8416.440921875,1983.5040000000008],\"key\":-144},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":222,\"to\":220,\"points\":[9782.3579140625,2018.809000000001,9792.3579140625,2018.809000000001,9809.999515625,2018.409000000001,9819.999515625,2018.409000000001],\"key\":-147},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":223,\"to\":222,\"points\":[9472.3579140625,2018.809000000001,9482.3579140625,2018.809000000001,9499.999515625,2018.809000000001,9509.999515625,2018.809000000001],\"key\":-148,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":224,\"to\":223,\"points\":[9132.3579140625,2018.809000000001,9142.3579140625,2018.809000000001,9149.999515625,2018.809000000001,9159.999515625,2018.809000000001],\"key\":-149},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":295,\"to\":224,\"points\":[8815.9165078125,2013.5040000000008,8825.9165078125,2013.5040000000008,8849.999515625,2018.809000000001,8859.999515625,2018.809000000001],\"key\":-150},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":227,\"to\":226,\"points\":[8052.3579140625,2153.504000000001,8062.3579140625,2153.504000000001,8069.999515625,2153.2039999999997,8079.999515625,2153.2039999999997],\"key\":-152,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":228,\"to\":227,\"points\":[7652.3579140625,2153.504000000001,7662.3579140625,2153.504000000001,7699.999515625,2153.504000000001,7709.999515625,2153.504000000001],\"key\":-153},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":229,\"to\":228,\"points\":[7352.3579140625,2153.504000000001,7362.3579140625,2153.504000000001,7369.999515625,2153.504000000001,7379.999515625,2153.504000000001],\"key\":-154,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":229,\"points\":[5906.1499140625,3496.7720000000013,5916.1499140625,3496.7720000000013,5990,3460,5990,2150,6964.1997109375,2143.504000000001,6974.1997109375,2143.504000000001],\"key\":-156},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"assistant\",\"from\":238,\"to\":240,\"points\":[6862.4619140625,705.8630000000003,6872.4619140625,705.8630000000003,6922,755.8630000000003,6975.751953125,755.8630000000003,6985.751953125,755.8630000000003],\"key\":-163},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":240,\"to\":241,\"points\":[7372.4619140625,755.8630000000003,7382.4619140625,755.8630000000003,7378.103515625,756.402,7388.103515625,756.402],\"key\":-165,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"history\",\"from\":241,\"to\":240,\"points\":[7660.4619140625,756.402,7670.4619140625,756.402,7670,656.402,6952,655.8630000000003,6952,735.8630000000003,6975.751953125,735.8630000000003,6985.751953125,735.8630000000003],\"key\":-166},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":243,\"to\":242,\"points\":[7372.4619140625,905.8630000000003,7382.4619140625,905.8630000000003,7380.103515625,905.6629999999996,7390.103515625,905.6629999999996],\"key\":-167,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":241,\"to\":177,\"points\":[7660.4619140625,756.402,7670.4619140625,756.402,10150,756.402,10318.103515625,1019.2070000000012,10328.103515625,1019.2070000000012],\"key\":-169},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":245,\"to\":239,\"points\":[5490.4619140625,866.9090000000023,5500.4619140625,866.9090000000023,5608.103515625,860,5618.103515625,860],\"key\":-170,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":248,\"to\":245,\"points\":[5090.4619140625,866.9090000000023,5100.4619140625,866.9090000000023,5138.103515625,866.9090000000023,5148.103515625,866.9090000000023],\"key\":-171},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":246,\"to\":239,\"points\":[5490.4619140625,716.9090000000023,5500.4619140625,716.9090000000023,5608.103515625,860,5618.103515625,860],\"key\":-172,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":249,\"to\":246,\"points\":[5090.4619140625,716.9090000000023,5100.4619140625,716.9090000000023,5138.103515625,716.9090000000023,5148.103515625,716.9090000000023],\"key\":-173},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToHuman\",\"toPort\":\"in\",\"from\":252,\"to\":238,\"points\":[10218.599609375,644.762999999998,10228.599609375,644.762999999998,10272,605.8630000000003,10271.999932584351,501.4681159915863,6521.999932584347,501.4681159915863,6521.999932584347,651.4681159915863,6580.103515625,705.8630000000003,6590.103515625,705.8630000000003],\"key\":-177},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":251,\"to\":252,\"points\":[9812.4619140625,655.8630000000003,9822.4619140625,655.8630000000003,9830.103515625,654.762999999998,9840.103515625,654.762999999998],\"key\":-179},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":257,\"to\":251,\"points\":[9502.4619140625,655.8630000000003,9512.4619140625,655.8630000000003,9530.103515625,655.8630000000003,9540.103515625,655.8630000000003],\"key\":-180,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":292,\"to\":258,\"points\":[8856.0205078125,655.8630000000003,8866.0205078125,655.8630000000003,8880.103515625,655.8630000000003,8890.103515625,655.8630000000003],\"key\":-181},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":256,\"to\":292,\"points\":[8360.4619140625,560,8370.4619140625,560,8446.544921875,625.8630000000003,8456.544921875,625.8630000000003],\"key\":-183},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":258,\"to\":257,\"points\":[9162.4619140625,655.8630000000003,9172.4619140625,655.8630000000003,9180.103515625,655.8630000000003,9190.103515625,655.8630000000003],\"key\":-184},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":201,\"points\":[5906.1499140625,3496.7720000000013,5916.1499140625,3496.7720000000013,6010,3470,6090,3390,7104.199710937501,3387.8050000000003,7114.199710937501,3387.8050000000003],\"key\":-187},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":239,\"to\":176,\"points\":[5890.4619140625,860,5900.4619140625,860,6000,1170,6928.103515625,1170,6938.103515625,1170],\"key\":-162},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":239,\"to\":243,\"points\":[5890.4619140625,860,5900.4619140625,860,6000,910,7020.103515625,905.8630000000003,7030.103515625,905.8630000000003],\"key\":-164},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":239,\"to\":240,\"points\":[5890.4619140625,860,5900.4619140625,860,6000,780,6975.751953125,775.8630000000003,6985.751953125,775.8630000000003],\"key\":-189},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToHuman\",\"toPort\":\"in\",\"from\":252,\"to\":253,\"points\":[10218.599609375,644.762999999998,10228.599609375,644.762999999998,10318.103515625,610,10328.103515625,610],\"key\":-190},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToAlex\",\"toPort\":\"in\",\"from\":202,\"to\":213,\"points\":[10406.4892578125,3339.5000000000005,10416.4892578125,3339.5000000000005,10530,3340,10850,3410,10918.103515625,3370,10928.103515625,3370],\"key\":-194},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":253,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10150,1000,10230,716.402,10318.103515625,610,10328.103515625,610],\"key\":-176},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":250,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10170,1020,10240,786.402,10320.103515625,756.1680000000006,10330.103515625,756.1680000000006],\"key\":-178},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":171,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10150,1080,10150,1220,10350,1220,10350,2500,6950,2500,6950,2370,6999.999515625,2343.504000000001,7009.999515625,2343.504000000001],\"key\":-203},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":172,\"to\":175,\"points\":[5090.4619140625,1011.6040000000002,5100.4619140625,1011.6040000000002,5138.103515625,1011.6040000000002,5148.103515625,1011.6040000000002],\"key\":-205},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":175,\"to\":239,\"points\":[5490.4619140625,1011.6040000000002,5500.4619140625,1011.6040000000002,5608.103515625,860,5618.103515625,860],\"key\":-206,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":179,\"to\":249,\"points\":[4750.4619140625,716.9090000000023,4760.4619140625,716.9090000000023,4808.103515625,716.9090000000023,4818.103515625,716.9090000000023],\"key\":-185},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":174,\"to\":172,\"points\":[4750.4619140625,1011.6040000000002,4760.4619140625,1011.6040000000002,4808.103515625,1011.6040000000002,4818.103515625,1011.6040000000002],\"key\":-204},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":247,\"to\":248,\"points\":[4750.4619140625,866.9090000000023,4760.4619140625,866.9090000000023,4808.103515625,866.9090000000023,4818.103515625,866.9090000000023],\"key\":-200},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"feedback\",\"from\":232,\"to\":215,\"points\":[6940.4619140625,3770,6950.4619140625,3770,7034.075687500001,3597.8050000000003,7044.075687500001,3597.8050000000003],\"key\":-224},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":215,\"to\":200,\"points\":[7492.357914062501,3597.8050000000003,7502.357914062501,3597.8050000000003,7529.999515625001,3501.567000000001,7539.999515625001,3501.567000000001],\"key\":-220,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":177,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10160,1040,10318.103515625,1019.2070000000012,10328.103515625,1019.2070000000012],\"key\":-229},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"index\",\"from\":284,\"to\":215,\"points\":[6940.4619140625,4020,6950.4619140625,4020,7034.075687500001,3637.8050000000003,7044.075687500001,3637.8050000000003],\"key\":-261},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":345,\"to\":233,\"points\":[5512.3579140625,3397.577,5522.3579140625,3397.577,5573.791515625,3496.7720000000013,5583.791515625,3496.7720000000013],\"key\":-326},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":215,\"points\":[5906.1499140625,3496.7720000000013,5916.1499140625,3496.7720000000013,6010,3500,6090,3560,7034.075687500001,3557.8050000000003,7044.075687500001,3557.8050000000003],\"key\":-343},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":230,\"to\":171,\"points\":[6892.3579140625,2249.742,6902.3579140625,2249.742,6999.999515625,2343.504000000001,7009.999515625,2343.504000000001],\"key\":-345},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":230,\"to\":229,\"points\":[6892.3579140625,2249.742,6902.3579140625,2249.742,6964.1997109375,2163.504000000001,6974.1997109375,2163.504000000001],\"key\":-346},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":344,\"to\":214,\"points\":[10451.3447265625,3789.7999999999993,10461.3447265625,3789.7999999999993,10840,3800,10840,3880,10918.103515625,3880,10928.103515625,3880],\"key\":-366},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":344,\"to\":213,\"points\":[10451.3447265625,3789.7999999999993,10461.3447265625,3789.7999999999993,10840,3770,10840,3450,10918.103515625,3370,10928.103515625,3370],\"key\":-367},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":203,\"to\":202,\"points\":[9952.3579140625,3451.367,9962.3579140625,3451.367,10028.103515625,3349.5000000000005,10038.103515625,3349.5000000000005],\"key\":-368},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":204,\"to\":344,\"points\":[8492.3579140625,3501.367,8502.3579140625,3501.367,8790,3500,8790,3790,10118.103515625,3789.7999999999993,10128.103515625,3789.7999999999993],\"key\":-369},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":204,\"to\":298,\"points\":[8492.3579140625,3501.367,8502.3579140625,3501.367,8596.440921875,3461.567000000001,8606.440921875,3461.567000000001],\"key\":-370},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":226,\"to\":359,\"points\":[8352.3579140625,2153.2039999999997,8362.3579140625,2153.2039999999997,8509.999515625,2169.642,8519.999515625,2169.642],\"key\":-351},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":226,\"to\":295,\"points\":[8352.3579140625,2153.2039999999997,8362.3579140625,2153.2039999999997,8406.440921875,2023.5040000000008,8416.440921875,2023.5040000000008],\"key\":-354},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":359,\"to\":219,\"points\":[8843.2407265625,2169.642,8853.2407265625,2169.642,10429.999515625,2169.742,10439.999515625,2169.742],\"key\":-362},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":359,\"to\":357,\"points\":[8843.2407265625,2169.642,8853.2407265625,2169.642,9020,2420,9020,3650,7050,3660,7050,4000,7088.103515625,4050,7098.103515625,4050],\"key\":-363},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":195,\"to\":357,\"points\":[6942.357914062501,3477.504999999999,6952.357914062501,3477.504999999999,6990,3580,6990,4010,7088.103515625,4050,7098.103515625,4050],\"key\":-364},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":195,\"to\":201,\"points\":[6942.357914062501,3477.504999999999,6952.357914062501,3477.504999999999,7104.199710937501,3407.8050000000003,7114.199710937501,3407.8050000000003],\"key\":-374},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":195,\"to\":215,\"points\":[6942.357914062501,3477.504999999999,6952.357914062501,3477.504999999999,7034.075687500001,3577.8050000000003,7044.075687500001,3577.8050000000003],\"key\":-375},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":242,\"to\":170,\"points\":[7662.4619140625,905.6629999999996,7672.4619140625,905.6629999999996,9500,916.402,9688.103515625,1043.147,9698.103515625,1043.147],\"key\":-376},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":242,\"to\":292,\"points\":[7662.4619140625,905.6629999999996,7672.4619140625,905.6629999999996,7830,666.402,8446.544921875,665.8630000000003,8456.544921875,665.8630000000003],\"key\":-377},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":346,\"to\":345,\"points\":[4610.4619140625,2690.152,4620.4619140625,2690.152,4860,2740,4860,3400,5179.999515625,3397.577,5189.999515625,3397.577],\"key\":-387},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":346,\"to\":361,\"points\":[4610.4619140625,2690.152,4620.4619140625,2690.152,10360,2700,10360,3460,10459.999515625,3457.6050000000005,10469.999515625,3457.6050000000005],\"key\":-388},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":294,\"to\":233,\"points\":[5510.4619140625,3680,5520.4619140625,3680,5573.791515625,3496.7720000000013,5583.791515625,3496.7720000000013],\"key\":-339},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToRopa\",\"toPort\":\"in\",\"from\":252,\"to\":250,\"points\":[10218.599609375,664.762999999998,10228.599609375,664.762999999998,10320.103515625,756.1680000000006,10330.103515625,756.1680000000006],\"key\":-126},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToRopa\",\"toPort\":\"in\",\"from\":252,\"to\":395,\"points\":[10218.599609375,664.762999999998,10228.599609375,664.762999999998,10260,1010,10260,1300,6120,1300,6120,2240,6171.751953125,2239.9,6181.751953125,2239.9],\"key\":-133},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":220,\"to\":219,\"points\":[10132.3579140625,2018.409000000001,10142.3579140625,2018.409000000001,10429.999515625,2169.742,10439.999515625,2169.742],\"key\":-134,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":220,\"to\":360,\"points\":[10132.3579140625,2018.409000000001,10142.3579140625,2018.409000000001,10200,2670,6200,2670,6201.751953125,3469.9,6211.751953125,3469.9],\"key\":-137,\"color\":\"LightSeaGreen\"},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":193,\"to\":199,\"points\":[10881.063878428937,-2135.4789305308213,10811.932121571062,-2095.9750694691784],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-140},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":184,\"to\":193,\"points\":[10916.498,-2215.227,10916.498,-2176.227],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-135},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":199,\"to\":212,\"points\":[10776.498,-2055.227,10776.498,-1996.2269999999996],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-143},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":193,\"to\":180,\"points\":[10964.399430041809,-2135.532765545532,11057.871283395754,-2096.1270000000004],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-151},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":180,\"to\":187,\"points\":[11106.498,-2055.227,11106.498,-2006.2269999999999],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-155},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":187,\"to\":189,\"points\":[11106.498,-1965.2269999999999,11106.498,-1916.2269999999999],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-157},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":189,\"to\":367,\"points\":[11106.258788990612,-1875.2269999999999,11105.739211009388,-1830.6999999999998],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-158},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":279,\"to\":184,\"points\":[11173.952400466145,-1705.8241844543365,11270.998,-1685.7269999999999,11800.998,-1685.527,11800.998,-2275.527,11120.998,-2275.527,10991.998,-2250.420887530562],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-159},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":279,\"to\":187,\"points\":[11037.964804770154,-1703.9819950857948,10960.998,-1685.7269999999999,10960.998,-1985.7269999999999,11030.998,-1985.7269999999999],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-160},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":212,\"to\":184,\"points\":[10777.42047725329,-1955.2275054824277,10780.998,-1875.7269999999999,10470.998,-1875.7269999999999,10470.998,-2235.727,10840.998,-2235.727],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-161},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":328,\"to\":256,\"points\":[3160.4619140625,1970,3170.4619140625,1970,3200,1970,3210,570,8078.103515625,560,8088.103515625,560],\"key\":-174,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":351,\"to\":218,\"points\":[3160.4619140625,2160,3170.4619140625,2160,5490,2160,5490,2000,8059.999515625,1999.7420000000002,8069.999515625,1999.7420000000002],\"key\":-175,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":365,\"to\":211,\"points\":[3150.4619140625,2340,3160.4619140625,2340,3200,2340,3200,3320,8208.103515625,3320,8218.103515625,3320],\"key\":-182,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":235,\"to\":239,\"points\":[5490.4619140625,1141.658,5500.4619140625,1141.658,5608.103515625,860,5618.103515625,860],\"key\":-186,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":216,\"to\":310,\"points\":[2500.4619140625,2520,2510.4619140625,2520,2790,2520,2790,1430,3289.3173828125,1430,3299.3173828125,1430],\"key\":-188,\"color\":\"LightCoral\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":190,\"points\":[1990.73046875,2040,2000.73046875,2040,2170,2040,2208.103515625,1959.9,2218.103515625,1959.9],\"key\":-191},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"traviPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":194,\"points\":[1990.73046875,2060,2000.73046875,2060,2180,2060,2208.103515625,2149.9,2218.103515625,2149.9],\"key\":-192},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":208,\"points\":[1990.73046875,2080,2000.73046875,2080,2150,2080,2208.103515625,2329.9,2218.103515625,2329.9],\"key\":-193},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"userPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":216,\"points\":[1990.73046875,2100,2000.73046875,2100,2120,2100,2218.103515625,2520,2228.103515625,2520],\"key\":-195},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"environmentState\",\"toPort\":\"in\",\"from\":261,\"to\":210,\"points\":[1990.73046875,2120,2000.73046875,2120,2090,2120,2198.103515625,2719.9,2208.103515625,2719.9],\"key\":-197},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"schedule\",\"from\":333,\"to\":327,\"points\":[-919.5380859375,2776.737,-909.5380859375,2776.737,-780,2170.737,-502.5166015625,2170,-492.5166015625,2170],\"key\":-199},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"userPromptList\",\"from\":343,\"to\":327,\"points\":[-919.5380859375,2606.737,-909.5380859375,2606.737,-790,2150.737,-502.5166015625,2150,-492.5166015625,2150],\"key\":-201},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"ropaPromptList\",\"from\":341,\"to\":327,\"points\":[-909.5380859375,2476.737,-899.5380859375,2476.737,-810,2130.737,-502.5166015625,2130,-492.5166015625,2130],\"key\":-202},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"traviPromptList\",\"from\":339,\"to\":327,\"points\":[-909.5380859375,2346.737,-899.5380859375,2346.737,-830,2110.737,-502.5166015625,2110,-492.5166015625,2110],\"key\":-207},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"alexPromptList\",\"from\":337,\"to\":327,\"points\":[-909.5380859375,2226.737,-899.5380859375,2226.737,-840,2090.737,-502.5166015625,2090,-492.5166015625,2090],\"key\":-208},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"robotAIPromptList\",\"from\":334,\"to\":327,\"points\":[-909.5380859375,2102.259847498308,-899.5380859375,2102.259847498308,-850,2070.737,-502.5166015625,2070,-492.5166015625,2070],\"key\":-209},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"environmentStateList\",\"from\":290,\"to\":327,\"points\":[-909.5380859375,1966.737,-899.5380859375,1966.737,-850,2050.737,-502.5166015625,2050,-492.5166015625,2050],\"key\":-210},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"nextExperiment\",\"from\":273,\"to\":327,\"points\":[-2509.5380859375,2740,-2499.5380859375,2740,-2480,2740,-2480,2870,-580,2870,-580,2030,-502.5166015625,2030,-492.5166015625,2030],\"key\":-213},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":333,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1400,2460.737,-1251.896484375,2776.737,-1241.896484375,2776.737],\"key\":-198},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":343,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1390,2430.737,-1271.896484375,2606.737,-1261.896484375,2606.737],\"key\":-214},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":341,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1380,2400.737,-1271.896484375,2476.737,-1261.896484375,2476.737],\"key\":-215},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":339,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1380,2370.737,-1271.896484375,2346.737,-1261.896484375,2346.737],\"key\":-216},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":337,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1390,2340.737,-1272.896484375,2226.737,-1271.896484375,2226.737,-1261.896484375,2226.737],\"key\":-217},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":334,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1400,2310.737,-1271.896484375,2102.259847498308,-1261.896484375,2102.259847498308],\"key\":-218},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":290,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1410,2280.737,-1271.896484375,1966.737,-1261.896484375,1966.737],\"key\":-219},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"startApplication\",\"toPort\":\"in\",\"from\":261,\"to\":307,\"points\":[1990.73046875,2140,2000.73046875,2140,2070,2140,2070,2830,-2430,2830,-2431.896484375,2670.737,-2421.896484375,2670.737],\"key\":-222},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":320,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3709.999515625,1430,3719.999515625,1430],\"key\":-223,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":293,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3708.103515625,1540,3718.103515625,1540],\"key\":-225,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"startApplication\",\"toPort\":\"trigger\",\"from\":261,\"to\":310,\"points\":[1990.73046875,2140,2000.73046875,2140,2150,2020,2150,1810,2820,1810,2820,1450,3289.3173828125,1450,3299.3173828125,1450],\"key\":-226},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":297,\"to\":320,\"points\":[3630.4619140625,1570,3640.4619140625,1570,3709.999515625,1430,3719.999515625,1430],\"key\":-228,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":297,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1430,2260,-1250,1820,-180,1770,-50,1600,2740,1620,2740,1570,3308.103515625,1570,3318.103515625,1570],\"key\":-230},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":269,\"to\":308,\"points\":[-1539.5380859375,2370,-1529.5380859375,2370,-1450,2240,-1450,2150,-2410,2150,-2411.896484375,2220,-2401.896484375,2220],\"key\":-232},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":190,\"to\":328,\"points\":[2490.4619140625,1959.9,2500.4619140625,1959.9,2821.751953125,1960,2831.751953125,1960],\"key\":-233},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":194,\"to\":351,\"points\":[2490.4619140625,2149.9,2500.4619140625,2149.9,2821.751953125,2150,2831.751953125,2150],\"key\":-234,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":208,\"to\":365,\"points\":[2490.4619140625,2329.9,2500.4619140625,2329.9,2811.751953125,2330,2821.751953125,2330],\"key\":-235,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":210,\"to\":369,\"points\":[2530.4619140625,2719.9,2540.4619140625,2719.9,2831.751953125,2719.9,2841.751953125,2719.9],\"key\":-236,\"color\":\"#ccffcc\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":340,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3740,1130,4070.751953125,1130,4071.751953125,1129.9,4081.751953125,1129.9],\"key\":-241,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":340,\"to\":235,\"points\":[4410.4619140625,1139.9,4420.4619140625,1139.9,5138.103515625,1141.658,5148.103515625,1141.658],\"key\":-240,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":340,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-220,1670,-190,1620,2760,1640,2760,1150,4071.751953125,1149.9,4081.751953125,1149.9],\"key\":-244},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":328,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1690,-180,1640,2630,1660,2700,1980,2821.751953125,1980,2831.751953125,1980],\"key\":-247},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":351,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1710,-172.37881499583682,1658.7029711273585,2620,1680,2730,2170,2821.751953125,2170,2831.751953125,2170],\"key\":-248},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":365,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1730,-170,1680,2610,1700,2750,2350,2811.751953125,2350,2821.751953125,2350],\"key\":-249},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":369,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-200,1750,-154.75109121645937,1693.4499570930984,2594.49897316846,1715.484658371211,2813.1510519010144,2742.6397843523805,2831.751953125,2739.9,2841.751953125,2739.9],\"key\":-250},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToRoco\",\"toPort\":\"in\",\"from\":202,\"to\":214,\"points\":[10406.4892578125,3359.5000000000005,10416.4892578125,3359.5000000000005,10470,3530,10850,3530,10850,3870,10918.103515625,3880,10928.103515625,3880],\"key\":-254},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToRoco\",\"toPort\":\"in\",\"from\":202,\"to\":361,\"points\":[10406.4892578125,3359.5000000000005,10416.4892578125,3359.5000000000005,10459.999515625,3457.6050000000005,10469.999515625,3457.6050000000005],\"key\":-256},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":327,\"to\":326,\"points\":[77.5166015625,2080,87.5166015625,2080,660,2080,660,2060,817.9453125,2060,827.9453125,2060],\"key\":-258,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":326,\"to\":261,\"points\":[1338.2685546875,2080,1348.2685546875,2080,1538.103515625,2090,1548.103515625,2090],\"key\":-221,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"endOfSchedule\",\"toPort\":\"saveStatistics\",\"from\":327,\"to\":326,\"points\":[77.5166015625,2100,87.5166015625,2100,660,2100,660,2120,817.9453125,2120,827.9453125,2120],\"key\":-263},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":367,\"to\":279,\"points\":[11105.5,-1789.6999999999998,11105.5,-1740.5],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-265},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextExperiment\",\"toPort\":\"nextExperiment\",\"from\":326,\"to\":327,\"points\":[1338.2685546875,2100,1348.2685546875,2100,1380,2100,1380,1950,-530,1950,-530,2010,-502.5166015625,2030,-492.5166015625,2030],\"key\":-266},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":360,\"to\":195,\"points\":[6540.4619140625,3479.9,6550.4619140625,3479.9,6609.999515625001,3477.504999999999,6619.999515625001,3477.504999999999],\"key\":-267,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":374,\"to\":376,\"points\":[-3139.5380859375,420,-3129.5380859375,420,-3000.572265625,479.79999999999995,-2990.572265625,479.79999999999995],\"key\":-268},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":375,\"to\":376,\"points\":[-3139.5380859375,550,-3129.5380859375,550,-3000.572265625,499.79999999999995,-2990.572265625,499.79999999999995],\"key\":-269},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":376,\"to\":360,\"points\":[-2659.5380859375,489.79999999999995,-2649.5380859375,489.79999999999995,-2360,400,-1680,400,-1680,3880,6145.395412517533,3876.942589377504,6140.054559675014,3491.30674765824,6201.751953125,3489.9,6211.751953125,3489.9],\"key\":-271},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":379,\"to\":378,\"points\":[-3149.5380859375,950,-3139.5380859375,950,-3010.572265625,899.6999999999999,-3000.572265625,899.6999999999999],\"key\":-272},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":380,\"to\":378,\"points\":[-3149.5380859375,820,-3139.5380859375,820,-3010.572265625,879.6999999999999,-3000.572265625,879.6999999999999],\"key\":-273},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":378,\"to\":384,\"points\":[-2669.5380859375,889.6999999999999,-2659.5380859375,889.6999999999999,-2370,800,-1650,800,-1650,5440,5381.751953125,5439.799999999999,5391.751953125,5439.799999999999],\"key\":-275},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":392,\"to\":391,\"points\":[-3139.5380859375,150,-3129.5380859375,150,-3000.572265625,99.8,-2990.572265625,99.8],\"key\":-276},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":393,\"to\":391,\"points\":[-3139.5380859375,20,-3129.5380859375,20,-3000.572265625,79.8,-2990.572265625,79.8],\"key\":-277},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":395,\"to\":230,\"points\":[6510.4619140625,2249.9,6520.4619140625,2249.9,6559.999515625,2249.742,6569.999515625,2249.742],\"key\":-278,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":391,\"to\":395,\"points\":[-2659.5380859375,89.8,-2649.5380859375,89.8,-2370,0,-1580,0,-1580,90,6040,90,6040,2260,6171.751953125,2259.9,6181.751953125,2259.9],\"key\":-279},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":381,\"to\":373,\"points\":[-3149.5380859375,-260.1,-3139.5380859375,-260.1,-2961.896484375,-260,-2951.896484375,-260],\"key\":-280},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":366,\"to\":350,\"points\":[-3139.5380859375,1830.6370000000002,-3129.5380859375,1830.6370000000002,-3020.572265625,1879.9,-3010.572265625,1879.9],\"key\":-242},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":368,\"to\":350,\"points\":[-3139.5380859375,1960.6370000000002,-3129.5380859375,1960.6370000000002,-3020.572265625,1899.9,-3010.572265625,1899.9],\"key\":-245},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":373,\"to\":186,\"points\":[-2639.5380859375,-260,-2629.5380859375,-260,-2601.896484375,-260,-2591.896484375,-260],\"key\":-227,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":391,\"to\":398,\"points\":[-2659.5380859375,89.8,-2649.5380859375,89.8,-2428.248046875,90,-2418.248046875,90],\"key\":-246,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":373,\"to\":296,\"points\":[-2639.5380859375,-260,-2629.5380859375,-260,-2580,-160,-2280,-160,-2261.896484375,-260,-2251.896484375,-260],\"key\":-281,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":376,\"to\":400,\"points\":[-2659.5380859375,489.79999999999995,-2649.5380859375,489.79999999999995,-2428.248046875,490,-2418.248046875,490],\"key\":-251},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":378,\"to\":402,\"points\":[-2669.5380859375,889.6999999999999,-2659.5380859375,889.6999999999999,-2418.248046875,890,-2408.248046875,890],\"key\":-252},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":404,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-2458.248046875,1890,-2448.248046875,1890],\"key\":-282},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"resetExperiment\",\"from\":324,\"to\":327,\"points\":[-5299.5380859375,-29.69500000000005,-5289.5380859375,-29.69500000000005,-650,-690,-650,2010,-502.5166015625,2010,-492.5166015625,2010],\"key\":-283},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"command\",\"toPort\":\"in\",\"from\":372,\"to\":383,\"points\":[7052.0546875,5420,7062.0546875,5420,7080.103515625,5456.504,7090.103515625,5456.504],\"key\":-286},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"command\",\"from\":383,\"to\":389,\"points\":[7412.4619140625,5456.504,7422.4619140625,5456.504,7439.53125,5456.003999999998,7449.53125,5456.003999999998],\"key\":-287},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":383,\"to\":403,\"points\":[7412.4619140625,5456.504,7422.4619140625,5456.504,7420,5040,7940.103515625,5042.031,7950.103515625,5042.031],\"key\":-290},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":389,\"to\":412,\"points\":[7889.365234375,5456.003999999998,7899.365234375,5456.003999999998,7972,5680.969,9234.634765625,5680.768999999999,9244.634765625,5680.768999999999],\"key\":-315},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":388,\"to\":412,\"points\":[8482.26171875,5441.830999999999,8492.26171875,5441.830999999999,8602,5662.031,9202,5662.031,9234.634765625,5680.768999999999,9244.634765625,5680.768999999999],\"key\":-316},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"errorMessage\",\"from\":405,\"to\":412,\"points\":[9055.951171875,5451.830999999999,9065.951171875,5451.830999999999,9132,5452.031,9234.634765625,5680.768999999999,9244.634765625,5680.768999999999],\"key\":-317},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"commandIdx\",\"toPort\":\"commandIdx\",\"from\":372,\"to\":412,\"points\":[7052.0546875,5440,7062.0546875,5440,7222,5706.504,9234.634765625,5700.768999999999,9244.634765625,5700.768999999999],\"key\":-318},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":408,\"to\":413,\"points\":[9482.4619140625,5411.830999999999,9492.4619140625,5411.830999999999,9530.103515625,5412.031,9540.103515625,5412.031],\"key\":-295},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":413,\"to\":329,\"points\":[9862.4619140625,5412.031,9872.4619140625,5412.031,9912,5412.031,9912,6090.969,6542,6090.969,6542,5532.781,6601.751953125,5660,6611.751953125,5660],\"key\":-298},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planResult\",\"toPort\":\"in\",\"from\":372,\"to\":377,\"points\":[7052.0546875,5460,7062.0546875,5460,7220.103515625,5860.969,7230.103515625,5860.969],\"key\":-291},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planFailed\",\"toPort\":\"planFailed\",\"from\":412,\"to\":372,\"points\":[9696.1650390625,5720.768999999999,9706.1650390625,5720.768999999999,9762,5722.031,9762,6080.969,6552,6080.969,6552,5528.754,6577.958984375,5460,6587.958984375,5460],\"key\":-292},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planResult\",\"toPort\":\"resetReplan\",\"from\":372,\"to\":412,\"points\":[7052.0546875,5460,7062.0546875,5460,7202,5720.969,9234.634765625,5720.768999999999,9244.634765625,5720.768999999999],\"key\":-305},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"in\",\"from\":412,\"to\":401,\"points\":[9696.1650390625,5680.768999999999,9706.1650390625,5680.768999999999,9980.103515625,5652.031,9990.103515625,5652.031],\"key\":-306},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanIndex\",\"toPort\":\"in\",\"from\":412,\"to\":425,\"points\":[9696.1650390625,5700.768999999999,9706.1650390625,5700.768999999999,9980.103515625,5742.031,9990.103515625,5742.031],\"key\":-309},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"simCommand\",\"toPort\":\"simCommand\",\"from\":389,\"to\":388,\"points\":[7889.365234375,5436.003999999998,7899.365234375,5436.003999999998,7954.6484375,5431.830999999999,7964.6484375,5431.830999999999],\"key\":-296},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"successSimCommand\",\"toPort\":\"simCommand\",\"from\":388,\"to\":405,\"points\":[8482.26171875,5421.830999999999,8492.26171875,5421.830999999999,8544.6484375,5441.830999999999,8554.6484375,5441.830999999999],\"key\":-300},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"newState\",\"toPort\":\"in\",\"from\":405,\"to\":408,\"points\":[9055.951171875,5411.830999999999,9065.951171875,5411.830999999999,9150.103515625,5411.830999999999,9160.103515625,5411.830999999999],\"key\":-301},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"taskEvaluation\",\"toPort\":\"in\",\"from\":372,\"to\":394,\"points\":[7052.0546875,5480,7062.0546875,5480,7230.103515625,6020.969,7240.103515625,6020.969],\"key\":-304},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":361,\"to\":384,\"points\":[10792.3579140625,3457.6050000000005,10802.3579140625,3457.6050000000005,10800,4390,5390,4390,5381.751953125,5419.799999999999,5391.751953125,5419.799999999999],\"key\":-270},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"envState\",\"from\":233,\"to\":389,\"points\":[5906.1499140625,3496.7720000000013,5916.1499140625,3496.7720000000013,5980,3570,5980,4590,7430,4590,7439.53125,5436.003999999998,7449.53125,5436.003999999998],\"key\":-307},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"in\",\"from\":412,\"to\":330,\"points\":[9696.1650390625,5680.768999999999,9706.1650390625,5680.768999999999,9720,5460,10060,5460,10060,4460,6540,4460,6540,3770,6558.103515625,3890,6568.103515625,3890],\"key\":-308},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanIndex\",\"toPort\":\"in\",\"from\":412,\"to\":284,\"points\":[9696.1650390625,5700.768999999999,9706.1650390625,5700.768999999999,9750,5480,10090,5480,10090,4430,6610,4430,6608.103515625,4020,6618.103515625,4020],\"key\":-310},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"planResult\",\"toPort\":\"in\",\"from\":372,\"to\":274,\"points\":[7052.0546875,5460,7062.0546875,5460,7050,4710,6450,4710,6450,1020,6520,1020,6588.103515625,1019.9,6598.103515625,1019.9],\"key\":-311},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"plan\",\"from\":435,\"to\":215,\"points\":[6920.4619140625,3640,6930.4619140625,3640,7033.075687500001,3617.8050000000003,7034.075687500001,3617.8050000000003,7044.075687500001,3617.8050000000003],\"key\":-313},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":361,\"to\":435,\"points\":[10792.3579140625,3457.6050000000005,10802.3579140625,3457.6050000000005,10820,3470,10820,4480,6510,4480,6510,3640,6588.103515625,3640,6598.103515625,3640],\"key\":-314},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":408,\"to\":294,\"points\":[9482.4619140625,5411.830999999999,9492.4619140625,5411.830999999999,9440,5170,9440,4530,5180,4530,5177.103515625,3680,5178.103515625,3680,5188.103515625,3680],\"key\":-319},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"oldState\",\"from\":233,\"to\":405,\"points\":[5906.1499140625,3496.7720000000013,5916.1499140625,3496.7720000000013,6000,3550,6000,4570,8540,4560,8544.6484375,5421.830999999999,8554.6484375,5421.830999999999],\"key\":-320},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"errorMessage\",\"from\":412,\"to\":326,\"points\":[9696.1650390625,5680.768999999999,9706.1650390625,5680.768999999999,9870,5660,9870,6180,730,6180,730,2080,816.15234375,2080,817.9453125,2080,827.9453125,2080],\"key\":-259},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"saveStatistics\",\"from\":236,\"to\":326,\"points\":[-3129.5380859375,3140,-3119.5380859375,3140,820,3140,817.9453125,2120,827.9453125,2120],\"key\":-211},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out1\",\"toPort\":\"in\",\"from\":266,\"to\":373,\"points\":[-4861.751953125,-289.69500000000005,-4851.751953125,-289.69500000000005,-3360,-640,-3360,-190,-2960,-190,-2961.896484375,-260,-2951.896484375,-260],\"key\":-212},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":384,\"to\":271,\"points\":[5720.4619140625,5429.799999999999,5730.4619140625,5429.799999999999,6657.103515625,5100,6660.103515625,5120.969,6670.103515625,5120.969],\"key\":-237,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"plan\",\"from\":384,\"to\":372,\"points\":[5720.4619140625,5429.799999999999,5730.4619140625,5429.799999999999,6566.958984375,5421.511999999999,6577.958984375,5420,6587.958984375,5420],\"key\":-238},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":269,\"points\":[-3139.5380859375,2370.637,-3129.5380859375,2370.637,-1861.896484375,2370,-1851.896484375,2370],\"key\":-231},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out2\",\"toPort\":\"in\",\"from\":266,\"to\":269,\"points\":[-4861.751953125,-269.69500000000005,-4851.751953125,-269.69500000000005,-3380,-640,-3370,2450,-1860,2450,-1862.896484375,2370,-1861.896484375,2370,-1851.896484375,2370],\"key\":-239},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":335,\"to\":273,\"points\":[-3139.5380859375,2740.637,-3129.5380859375,2740.637,-2831.896484375,2740,-2821.896484375,2740],\"key\":-243},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out3\",\"toPort\":\"in\",\"from\":266,\"to\":273,\"points\":[-4861.751953125,-249.69500000000005,-4851.751953125,-249.69500000000005,-3400,-640,-3390,2850,-2830,2850,-2831.896484375,2740,-2821.896484375,2740],\"key\":-253},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":275,\"to\":266,\"points\":[-5299.5380859375,-269.69500000000005,-5289.5380859375,-269.69500000000005,-5191.896484375,-269.69500000000005,-5181.896484375,-269.69500000000005],\"key\":-255},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToHuman\",\"toPort\":\"taskEvaluation\",\"from\":252,\"to\":326,\"points\":[10218.599609375,644.762999999998,10228.599609375,644.762999999998,10260,600,10260,520,6420,520,6420,1850,780,1860,783.8103472711866,2102.4955667145564,817.9453125,2100,827.9453125,2100],\"key\":-257},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":274,\"to\":277,\"points\":[6870.4619140625,1019.9,6880.4619140625,1019.9,7018.103515625,1019.9,7028.103515625,1019.9],\"key\":-260},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":277,\"to\":242,\"points\":[7370.4619140625,1019.9,7380.4619140625,1019.9,7380.103515625,905.6629999999996,7390.103515625,905.6629999999996],\"key\":-262,\"color\":\"#ff8093\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":369,\"to\":345,\"points\":[3170.4619140625,2729.9,3180.4619140625,2729.9,3180,3430,5158.481282916418,3427.5050928225946,5179.999515625,3397.577,5189.999515625,3397.577],\"key\":-196,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":389,\"to\":259,\"points\":[7889.365234375,5456.003999999998,7899.365234375,5456.003999999998,9368.103515625,6520,9378.103515625,6520],\"key\":-264},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":388,\"to\":280,\"points\":[8482.26171875,5441.830999999999,8492.26171875,5441.830999999999,9378.103515625,6420,9388.103515625,6420],\"key\":-274},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorMessage\",\"toPort\":\"in\",\"from\":405,\"to\":285,\"points\":[9055.951171875,5451.830999999999,9065.951171875,5451.830999999999,9388.103515625,6320,9398.103515625,6320],\"key\":-284},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"nextCommand\",\"from\":331,\"to\":372,\"points\":[6410.4619140625,5529.9,6420.4619140625,5529.9,6577.958984375,5440,6587.958984375,5440],\"key\":-285},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":330,\"to\":232,\"points\":[6820.4619140625,3890,6830.4619140625,3890,6608.103515625,3770,6618.103515625,3770],\"key\":-288},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"replanError\",\"toPort\":\"isReplaned\",\"from\":412,\"to\":372,\"points\":[9696.1650390625,5680.768999999999,9706.1650390625,5680.768999999999,9820,5540,6570,5540,6572.4733015210495,5486.176422991315,6577.958984375,5480,6587.958984375,5480],\"key\":-289}\n]}"
}