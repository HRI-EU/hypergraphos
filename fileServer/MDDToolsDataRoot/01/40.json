{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "PicturesDSL"
  ],
  "view": {
    "scale": 2.4178786253642586,
    "position": [
      -1820.4800658459399,
      -953.0242175999497
    ],
    "isGridOn": false
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":0,\"location\":\"-1240 -390\"},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":1,\"location\":\"-1240 -480\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"rows\":[{\"name\":\"Name\",\"value\":\"HyperGraph\",\"valueChanged\":\"true\"},{\"name\":\"Version\",\"value\":\"3.0\",\"valueChanged\":\"true\"},{\"name\":\"Date\",\"value\":\"15 July 2023\",\"valueChanged\":true},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frankonello\"}],\"key\":2,\"location\":\"-990 -480\"},\n{\"label\":\"HyperGraph 3.0.2\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1009 88\",\"key\":3,\"location\":\"-740 -430\"},\n{\"label\":\"index.html\",\"color\":\"lightsalmon\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"HTML\",\"fileType\":\"text/html\",\"fileURL\":\"/fileServer/01/41.html\",\"key\":5,\"location\":\"-440 1577.5\",\"group\":10,\"editorPosition\":[3111,440,607,1020]},\n{\"label\":\"System Status: [Generation...Done]\\nDirs: 4 - Files: 2 - Nodes: 16\",\"category\":\"CodeFlow_Button\",\"color\":\"YellowGreen\",\"size\":\"476 120\",\"buttons\":[{\"name\":\"Generate\",\"checked\":true},{\"name\":\"Deploy\",\"checked\":true},{\"name\":\"Start\",\"checked\":true},{\"name\":\"Stop\",\"checked\":false}],\"rows\":[{\"name\":\"isOverwrite\",\"value\":\"true\",\"valueChanged\":\"true\"},{\"name\":\"scriptPath\",\"value\":\"HyperGraphRoot/3.0/AppRoot/system\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var event, obj, nodeData;\\n//console.log( 'NodeData Info: '+JSON.stringify( nodeData ) );\\n//console.log( 'Button Label: '+obj.data.name );\\n//console.log( 'Button Status: '+obj.data.checked );\\n\\nlet script = '';\\nlet params = '';\\nconst scriptPath = getProperty( 'scriptPath' );\\nconst g = getMainGraph();\\nlet onLoaded = function(){};\\n\\nswitch( obj.data.name ) {\\n  case 'Generate':\\n    setNodeDataField( nodeData, 'label', 'System Status: [Generating...]' );\\n    const onGenerated = function( msg ) {\\n      setNodeDataField( nodeData, 'label', 'System Status: [Generation...Done]\\\\n'+msg );\\n    }\\n    generationRoot( nodeData, onGenerated );\\n    break;\\n  case 'Deploy':\\n    const modelFileURL = getMainGraphURL();\\n    const deployKey = nodeData.key;\\n    \\n    script = `generateSystemLib.js`;\\n    params = `modelFileURL=${modelFileURL}&deployKey=${deployKey}`;\\n    const onLoaded = function( msg ) {\\n      setNodeDataField( nodeData, 'label', 'System Status: [DEPLOYED]\\\\n'+msg );\\n    }\\n    break;\\n  case 'Start':\\n    script = 'serverManager';\\n    params = 'start '+scriptPath;\\n    setNodeDataField( nodeData, 'label', 'System Status: [STARTED]' );\\n    break;\\n  case 'Stop':\\n    script = 'serverManager';\\n    params = 'stop '+scriptPath;\\n    setNodeDataField( nodeData, 'label', 'System Status: [STOPPED]' );\\n    break;\\n}\\n\\nif( script ) {\\n  const cmd = `${script}${( params? '?'+params: '')}`;\\n  executeScript( cmd, onLoaded );\\n}\\n\\nfunction getProperty( name ) {\\n  const rows2 = [ ...nodeData.rows ];\\n  for( const row of rows2 ) {\\n    if( row.name == name ) {\\n      return( row.value );\\n    }\\n  }\\n  return( '' );\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":6,\"location\":\"250 1310\",\"editorPosition\":[40,954,665,1055]},\n{\"label\":\"HyperGraphRoot/3.0\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":7,\"location\":\"-521.5 1510.525390625\"},\n{\"label\":\"AppRoot\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":8,\"location\":\"-501 1533.68359375\",\"group\":7},\n{\"label\":\"system\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":9,\"location\":\"-480.5 1556.841796875\",\"group\":8},\n{\"label\":\"client\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":10,\"location\":\"-460 1580\",\"group\":9},\n{\"label\":\"GenerationRoot Library\",\"color\":\"orange\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"\\nfunction generationRoot( startNodeData, onGenerated ) {\\n  console.log( 'Generating...' );\\n  \\n  // Setup graph information\\n  if( !graphData.startNodeData ) {\\n    // Generation Info\\n    graphData.startNodeData = startNodeData;\\n    graphData.onGenerated = onGenerated;\\n    // Initialize graph info\\n    graphData.g = getMainGraph();\\n    graphData.modelId = 'main';\\n  }\\n\\n  // Info already set, let's start\\n  startGeneration();\\n}\\nfunction startGeneration() {\\n  // Initialize tempalte generator\\n  if( !graphData.lbg ) {\\n    graphData.lbg = new LineBlockGenerator();\\n  }\\n  \\n  // Reset counters\\n  graphData.count = {\\n    fileCount: 0,\\n    dirCount: 0,\\n    nodeCount: 0,\\n  };\\n  \\n  // Initialize model navigation\\n  const model = graphData.g.getJSONModel();\\n  graphData.me = new ModelExplorer();\\n  graphData.me.setJSONModel( graphData.modelId, model );\\n  \\n  // Initialize Template Manager\\n  graphData.lb = new LineBlockGenerator();\\n  \\n  // Get deployment node\\n  graphData.isOverwrite = graphData.me.getProperty( graphData.modelId, \\n                                                    graphData.startNodeData, \\n                                                    'isOverwrite', null, true );\\n  \\n  // Get output link from name port\\n  const outDataList = graphData.me.getNodeListFanOutByNodeKey( graphData.modelId, \\n                                                               graphData.startNodeData.key );\\n\\n  // Loop over out nodes\\n  for( const outData of outDataList ) {\\n    // Count dir\\n    ++graphData.count.dirCount;\\n    // Generate group\\n    generateGroup( outData );\\n  }\\n    \\n  // Simulation of done\\n  setTimeout( generationDone, 2*1000 );\\n}\\nfunction generationDone() {\\n  if( graphData.onGenerated ) {\\n    const msg = `Dirs: ${graphData.count.dirCount} - `+\\n                `Files: ${graphData.count.fileCount} - `+\\n                `Nodes: ${graphData.count.nodeCount}`;\\n    graphData.onGenerated( msg );\\n  }\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":12,\"location\":\"1170 1120\",\"isIncludeScript\":true,\"editorPosition\":[15,785,592,1289]},\n{\"label\":\"startServer.sh\",\"color\":\"gray\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Shell\",\"fileType\":\"application/x-shellscript\",\"fileURL\":\"/fileServer/01/38.sh\",\"key\":17,\"location\":\"-159 1550\",\"group\":9},\n{\"label\":\"HyperGraph 3.0 Base\",\"category\":\"CodeFlow_FeatureOnOff\",\"size\":\"338 40\",\"color\":\"RebeccaPurple\",\"buttons\":[{\"name\":\"\",\"checked\":false,\"color\":\"green\"}],\"key\":22,\"location\":\"430 -177.47499999999997\",\"group\":23},\n{\"label\":\"Releases & Features\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":23,\"location\":\"-390 -69.99999999999997\"},\n{\"label\":\"Main App Page\",\"category\":\"CodeFlow_Feature\",\"size\":\"363 40\",\"color\":\"RebeccaPurple\",\"buttons\":[{\"name\":\"\",\"checked\":false,\"color\":\"green\"}],\"key\":26,\"location\":\"850 -217.47499999999997\",\"group\":23},\n{\"label\":\"GenerateNodes Library\",\"color\":\"orange\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"\\nfunction generateGroup( gData ) {\\n  const gDataKey = gData.key;\\n  const dataList = graphData.me.getNodeListIf( graphData.modelId, \\n                                             (d)=> d.group == gDataKey );\\n  for( const data of dataList ) {\\n    if( data.isGroup ) {\\n      // Count dir\\n      ++graphData.count.dirCount;\\n      // Generate group\\n      generateGroup( data );\\n    } else if( data.category.startsWith( 'Hierarchy_CodeIn' ) ) {\\n      // Generate File\\n      \\n      traverseNode( data );\\n    }\\n  }\\n}\\nfunction traverseNode( data ) {\\n  // Get input link into data node\\n  const inDataList = graphData.me.getNodeListFanInByNodeKey( graphData.modelId,\\n                                                             data.key );\\n  // Loop over in nodes\\n  for( const inData of inDataList ) {\\n    if( Engine_isNodeEnabled( inData ) ) {\\n      traverseNode( inData );\\n    }\\n  }\\n  \\n  const isFile = ( data.category.startsWith( 'Hierarchy_CodeIn') );\\n  if( isFile ) {\\n    // Count file\\n    ++graphData.count.fileCount;\\n  } else {\\n    // Count nodes\\n    ++graphData.count.nodeCount;\\n  }\\n  \\n  // Execute doCompute\\n  console.log( 'doCompute [', data.key, ']', data.label || data.category );\\n  Engine_doCompute( data );\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":19,\"location\":\"1170 1260\",\"isIncludeScript\":true,\"editorPosition\":[1474,451,611,723]},\n{\"label\":\"Diagram Div\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"isFile\":true,\"fileTypeName\":\"HTML\",\"fileType\":\"text/html\",\"key\":24,\"location\":\"-3170 2216.937\",\"group\":84,\"fileContent\":\"<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0 - Diagram Test</title>\\n  \\n  <!--[# Begin include #]-->\\n  <!--GoJS Editor Includes-->\\n  <script type='text/javascript' src='/library/gojs/2.3.3/go.js'></script>\\n  <script type='text/javascript' src='/library/gojs/PolylineLinkingTool.js'></script>\\n  <script type='text/javascript' src='/library/gojs/SnapLinkReshapingTool.js'></script>\\n  <script type='text/javascript' src='/library/gojs/InGroupClickCreatingTool.js'></script>\\n  <!--End-->\\n  <!--[# End include #]-->\\n<body>\\n</body>\\n  <!--[# Begin body #]-->\\n  <!--[# Begin section #]-->\\n  <!--div id=\\\"diagram\\\" class='diagramDiv' ondrop=\\\"dropHandler(event)\\\" ondragover=\\\"dragOverHandler(event)\\\"-->\\n  <div id=\\\"diagram\\\" class='diagramDiv'>\\n  </div>\\n  <!--[# End section #]-->\\n  <!--[# End body #]-->\\n</html>\",\"editorPosition\":[439,182,683,568]},\n{\"label\":\"Window Div\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"isFile\":true,\"fileTypeName\":\"HTML\",\"fileType\":\"text/html\",\"key\":27,\"location\":\"-3180 2406.937\",\"group\":84,\"fileContent\":\"<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0 - Window Test</title>\\n<body>\\n</body>\\n  <!--[# Begin body #]-->\\n  <div id='mainDiv'>\\n    <!--div id=\\\"editorjs\\\"></div-->\\n  </div>\\n  <!--[# End body #]-->\\n</html>\",\"editorPosition\":[439,182,683,568]},\n{\"label\":\"Old Status Div (all in one source)\",\"category\":\"CodeFlow_Code\",\"size\":\"189 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"isFile\":true,\"fileTypeName\":\"HTML\",\"fileType\":\"text/html\",\"key\":29,\"location\":\"-3659 1720\",\"group\":84,\"fileContent\":\"<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0 - Status Test</title>\\n  <style>\\n    /*[# Begin style #]*/\\n    #system-status {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      box-sizing: border-box;\\n      border: 10px;\\n      border-style: solid;\\n      border-color: rgba(125, 125, 125, 0.6);\\n      z-index: 100;\\n      pointer-events: none;\\n    }\\n    #system-status.default {\\n      border-color: rgba(125, 125, 125, 0.6);\\n    }\\n    #system-status.error {\\n      border-color: rgba(255, 0, 0, 0.6);\\n    }\\n     #system-status.warning {\\n      border-color: rgba(255, 221, 0, 0.6);\\n    }\\n    #system-status.saved {\\n      animation-name: saved;\\n      animation-duration: 2s;\\n    }\\n    @keyframes saved {\\n      from { border-color: rgba(123, 255, 0, 0.6); }\\n      to { border-color: rgba(125, 125, 125, 0.6); }\\n    }\\n    /*[# End style #]*/\\n  </style>\\n  <script>\\n    const m = {\\n      mddStatus: null,\\n      status: {\\n        isReadOnly: false,\\n      },\\n    };\\n    \\n    function _init() {\\n      m.mddStatus = document.getElementById( 'system-status' );\\n    }\\n    function setToogleSystemReadOnly() {\\n      m.status.isReadOnly = !m.status.isReadOnly;\\n      m.mddStatus.style['border-style'] = ( m.status.isReadOnly? 'dashed': 'solid' );\\n    }\\n    function setSystemNeedSave() {\\n      if( !m.status.isReadOnly ) {\\n        m.mddStatus.className = 'warning';\\n      }\\n    }\\n    function setSystemSaved() {\\n      if( !m.status.isReadOnly ) {\\n        m.mddStatus.className = 'saved';\\n      }\\n    }\\n    function setSystemError() {\\n      if( !m.status.isReadOnly ) {\\n        m.mddStatus.className = 'error';\\n      }\\n    }\\n    function setSystemDefault() {\\n      if( !m.status.isReadOnly ) {\\n        m.mddStatus.className = 'default';\\n      }\\n    }\\n    /* Begin Simulation Code */\\n    function setEditorChanged() {\\n      setSystemNeedSave();\\n      setTimeout( setSystemSaved, 1*1000 );\\n    }\\n    /* End Simulation Code */\\n  </script>\\n<body onload=\\\"_init()\\\">\\n  <!--[# Begin body #]-->\\n  <div id=\\\"system-status\\\"></div>\\n  <!--[# End body #]-->\\n  <br><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"setEditorChanged()\\\">Simulate EditorChanged</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"setSystemError()\\\">Simulate Error Status</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"setSystemDefault()\\\">Simulate Default Status</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"setToogleSystemReadOnly()\\\">Simulate Toogle ReadOnly</button><br>\\n</body>\\n</html>\",\"editorPosition\":[1171,68,720,1880]},\n{\"label\":\"ContextMenu Div\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"isFile\":true,\"fileTypeName\":\"HTML\",\"fileType\":\"text/html\",\"key\":31,\"location\":\"-3170 2616.937\",\"group\":84,\"fileContent\":\"<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0 - Context Menu Test</title>\\n<body>\\n</body>\\n  <!--[# Begin body #]-->\\n  <div id=\\\"contextMenuContainer\\\" style=\\\"position: relative; z-index: 10000;\\\">\\n  </div>\\n  <!--[# End body #]-->\\n</html>\",\"editorPosition\":[1394,1061,412,950]},\n{\"label\":\"\",\"category\":\"CodeFlow_Merge\",\"color\":\"white\",\"rows\":[],\"in\":[{\"portId\":\"in0\"},{\"portId\":\"in1\"},{\"portId\":\"in2\"},{\"portId\":\"in3\"}],\"out\":[{\"portId\":\"out\"}],\"key\":34,\"location\":\"-2110 2843.934\",\"group\":80},\n{\"label\":\"Nodes DoCompute\",\"color\":\"Coral\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"\\nfunction CodeFlow_Code_doCompute( data ) {\\n  console.log( 'Code Compute' );\\n  \\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  // Make sure all input have a value\\n  Engine_setInputDefault( data, null );\\n  \\n  // Process template\\n  graphData.lbg.setLanguage( 'text' );\\n  const template = data.fileContent;\\n  graphData.lbg.setTemplate( template );\\n  graphData.lbg.process( ni.input );\\n  \\n  // Generate all outputs\\n  const outNameList = Engine_getOutputNameList( data, true );\\n  for( const outName of outNameList ) {\\n    const value = graphData.lbg.extractLineBlock( outName, true ); // Trim indentation\\n    Engine_fireOutput( data, outName, value );\\n  }\\n}\\nfunction CodeFlow_Merge_doCompute( data ) {\\n  console.log( 'Merge Compute' );\\n  \\n  const value = [];\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  // Get list of input names\\n  const inNameList = Engine_getInputNameList( data );\\n  for( const inName of inNameList ) {\\n    if( ni.input[inName] ) {\\n      value.push( ...ni.input[inName] );\\n    }\\n  }\\n  \\n  Engine_fireOutput( data, 'out', value );\\n}\\nfunction Hierarchy_CodeInFile_doCompute( data ) {\\n  console.log( 'CodeInFile Compute' );\\n  \\n  if( Engine_isInputConnected( data ) ) {\\n    // Make sure all input have a value\\n    Engine_setInputDefault( data, '' );\\n    // Get input value\\n    const value = Engine_getInput( data, '*', '' );\\n    // Get a copy of the data (avoid changing original data)\\n    const dataCopy = getNodeData( data.key, true );\\n    // Set file content to be saved\\n    dataCopy.fileContent = ( Array.isArray( value )? value.join( '\\\\n' ): value );\\n    saveNodeContent( dataCopy, ()=> console.log( '***Data Saved***' ) );\\n  }\\n}\\nfunction Hierarchy_CodeInGraph_doCompute( data ) {\\n  Hierarchy_CodeInFile_doCompute( data );\\n}\\n\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":28,\"location\":\"1170 1400\",\"isIncludeScript\":true,\"editorPosition\":[1478,1183,603,875]},\n{\"label\":\"Engine Base Library\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Base Library\\n//------------------------------\\n\\n// Initialize Engine\\nif( !graphData.nodeInstance ) {\\n  // Persistent link data for nodes\\n  graphData.nodeInstance = {};\\n  graphData.engineInstance = {\\n    currNodeSelectionKey: -1, // Animation\\n  };\\n}\\n\\n//------------------------------\\n// Engine Base Library\\n//------------------------------\\nfunction Engine_getNodeInstance( data ) {\\n  // If node not existing => create it\\n  if( !graphData.nodeInstance[data.key] ) {\\n    graphData.nodeInstance[data.key] = {\\n      property: {},\\n      input: {},\\n      inputState: {},\\n      output: {},\\n      isCompute: false,\\n    };\\n  }\\n  // Return node instance\\n  return( graphData.nodeInstance[data.key] );\\n}\\nfunction Engine_isNodeEnabled( data ) {\\n  let result = true;\\n  if( data.group != undefined ) {\\n    const gData = graphData.me.getNode( graphData.me.modelId, data.group );\\n    result = ( gData && ( gData.color.toLowerCase() == 'green' ) );\\n  }\\n  return( result );\\n}\\nfunction Engine_getInputLinkDataList( data, name ) {\\n  const result = [];\\n  const pushInDataList = ()=> {\\n    // Get input link from port name\\n    const inDataList = graphData.me.getLinkListFanInByNodeKey( graphData.modelId, \\n                                                     data.key,\\n                                                     name );\\n    for( const inData of inDataList ) {\\n      if( Engine_isNodeEnabled( inData ) ) {\\n        result.push( inData );\\n      }\\n    }\\n  };\\n  \\n  // Check if name exist\\n  if( data.in ) {\\n    for( const inInfo of data.in ) {\\n      if( inInfo.portId == name ) {\\n        pushInDataList();\\n        break;\\n      }\\n    }\\n  } else {\\n    name = undefined;  // No input name in this case\\n    pushInDataList();\\n  }\\n  return( result );\\n}\\nfunction Engine_getOutputLinkDataList( data, name ) {\\n  const result = [];\\n  const pushOutDataList = ()=> {\\n    // Get output link from port name\\n    const outDataList = graphData.me.getLinkListFanOutByNodeKey( graphData.modelId,\\n                                                    data.key,\\n                                                    name );\\n    for( const outData of outDataList ) {\\n      if( Engine_isNodeEnabled( outData ) ) {\\n        result.push( outData );\\n      }\\n    }\\n  };\\n  \\n  // Check if name exist\\n  if( data.out ) {\\n    for( const outInfo of data.out ) {\\n      if( outInfo.portId == name ) {\\n        pushOutDataList();\\n        break;\\n      }\\n    } \\n  } else {\\n    name = undefined; // No input name in this case\\n    pushOutDataList();\\n  }\\n  return( result );\\n}\\nfunction Engine_fetchInputs( data ) {\\n  const storeValue = ( data, fromInName, toInName, defaultValue )=> {\\n    const inLinkList = graphData.me.getLinkListFanInByNodeKey( graphData.modelId,\\n                                                            data.key,\\n                                                            fromInName );\\n    for( const inLink of inLinkList ) {\\n      // Get source node\\n      const outData = graphData.me.getNode( graphData.me.modelId, inLink.from );\\n      \\n      if( Engine_isNodeEnabled( outData ) ) {\\n        const value = Engine_getOutput( outData, inLink.fromPort, defaultValue );\\n        Engine_setInput( data, toInName, value );\\n        break;\\n      }\\n    }\\n  }\\n  // Loop over all connected inputs\\n  const inNameList = Engine_getInputNameList( data, true );\\n  // Case of component with input ports\\n  if( inNameList.length ) {\\n    for( const inName of inNameList ) {\\n      // Store in input inName the first enabled link value comming into it\\n      storeValue( data, inName, inName, null );\\n    }\\n  } else {\\n    // Case of component without input ports\\n    // Store in input '*' the first enabled link value comming into it\\n    storeValue( data, undefined, '*', undefined );\\n  }\\n}\\nfunction Engine_isInputConnected( data, name ) {\\n  // Get input link list\\n  const list = Engine_getInputLinkDataList( data, name );\\n  // If input is connected\\n  return( list && list.length )\\n}\\nfunction Engine_isOutputConnected( data, name ) {\\n  // Get output link list\\n  const list = Engine_getOutputLinkDataList( data, name );\\n  // If output is connected\\n  return( list && list.length )\\n}\\nfunction Engine_getInputNameList( data, isOnlyConnected ) {\\n  const result = []\\n  if( data.in ) {\\n    for( const inInfo of data.in ) {\\n      const name = inInfo.portId;\\n      // If we want only connected one => skip unconnected one\\n      if( ( isOnlyConnected != undefined ) && isOnlyConnected ) {\\n        if( !Engine_isInputConnected( data, name ) ) {\\n          continue;\\n        }\\n      }\\n      result.push( name );\\n    }\\n  }\\n  return( result );\\n}\\nfunction Engine_getOutputNameList( data, isOnlyConnected ) {\\n  const result = []\\n  if( data.out ) {\\n    for( const outInfo of data.out ) {\\n      const name = outInfo.portId;\\n      // If we want only connected one => skip unconnected one\\n      if( ( isOnlyConnected != undefined ) && isOnlyConnected ) {\\n        if( !Engine_isOutputConnected( data, name ) ) {\\n          continue;\\n        }\\n      }\\n      result.push( name );\\n    }\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":30,\"location\":\"1560 1120\",\"isIncludeScript\":true,\"editorPosition\":[1577,611,1080,1444]},\n{\"label\":\"Engine Base API\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Base API\\n//------------------------------\\nfunction Engine_get( data, name, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Set default value if property did not exist\\n  if( ni.property[name] == undefined ) {\\n    ni.property[name] = defaultValue;\\n  }\\n  // Return property value\\n  return( ni.property[name] );\\n}\\nfunction Engine_set( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Set property value\\n  ni.property[name] = value;\\n}\\nfunction Engine_getInput( data, name, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Update default value\\n  if( ni.input[name] == undefined ) {\\n    ni.input[name] = defaultValue;\\n  }\\n  return( ni.input[name] );\\n}\\nfunction Engine_setInput( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  \\n  // Update value\\n  ni.input[name] = value;\\n  // Update state\\n  if( !ni.inputState[name] ) {\\n    ni.inputState[name] = {};\\n  }\\n  ni.inputState[name].isNew = true;\\n}\\nfunction Engine_setInputDefault( data, defaultValue ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  // Get list of input names\\n  const inNameList = Engine_getInputNameList( data );\\n  for( const inName of inNameList ) {\\n    if( ni.input[inName] == undefined ) {\\n      ni.input[inName] = defaultValue;\\n    }\\n  }\\n}\\nfunction Engine_getLanguage( data ) {\\n  let result = 'text';\\n  if( data.fileType ) {\\n    const [format, language] = data.fileType.split( '/' );\\n    result = language;\\n  }\\n  return( result );\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":33,\"location\":\"1560 1400\",\"isIncludeScript\":true,\"editorPosition\":[3268,773,528,1240]},\n{\"label\":\"Engine Compute Library\",\"color\":\"tan\",\"size\":\"286 111\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//------------------------------\\n// Engine Compute Library\\n//------------------------------\\nfunction Engine_getOutput( data, name, defaultValue ) {\\n  let result = defaultValue;\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  if( ni.output[name] != undefined ) {\\n    result = ni.output[name];\\n  }\\n  return( result );\\n}\\nfunction Engine_getComputeBarrier( data ) {\\n  let result = [];\\n  const cb = graphData.me.getProperty( graphData.modelId, \\n                                       data,\\n                                       'computeBarrier',\\n                                       null );\\n  if( cb ) {\\n    result = cb.split( ',' ).map( n => n.trim() );\\n  } else {\\n    result = Engine_getInputNameList( data );\\n  }\\n  return( result );\\n}\\nfunction Engine_updateInput( data, name, value ) {\\n  // Get node instance\\n  const ni = Engine_getNodeInstance( data );\\n  // If doCompute just executed => reset inputs isNew state\\n  if( ni.isCompute ) {\\n    for( const inName in ni.inputState ) {\\n      ni.inputState[inName].isNew = false;\\n    }\\n  }\\n  \\n  // Set new input value\\n  Engine_setInput( data, name, value );\\n  \\n  let isCompute = true;\\n  // Get input names for barrier\\n  const inNameList = Engine_getComputeBarrier( data );\\n  for( const inName of inNameList ) {\\n    if( Engine_isInputConnected( data, inName ) ) {\\n      let isNewInput = false;\\n      if( ni.inputState[inName] ) {\\n        isNewInput = ni.inputState[inName].isNew;\\n      }\\n      isCompute &&= isNewInput;\\n      // Short cirtuit computation\\n      if( !isCompute ) {\\n        break;\\n      }\\n    }\\n  }\\n  // Update compute status\\n  ni.isCompute = isCompute;\\n}\\nfunction Engine_fireOutput( data, name, value ) {\\n  // Fire only connected outputs\\n  if( Engine_isOutputConnected( data, name ) ) {\\n    // Get node instance\\n    const ni = Engine_getNodeInstance( data );\\n    \\n    // Save output\\n    ni.output[name] = value;\\n  }\\n}\\nfunction Engine_doCompute( data ) {\\n  if( globalThis[ `${data.category}_doCompute`] ) {\\n    // Get all input values\\n    Engine_fetchInputs( data );\\n    // Execute compute fungion\\n    globalThis[ `${data.category}_doCompute`]( data );\\n  } else {\\n    console.log( 'Compute not found for', data.category );\\n  }\\n}\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":36,\"location\":\"1560 1260\",\"isIncludeScript\":true,\"editorPosition\":[1379,958,704,1069]},\n{\"label\":\"Main Web Page\",\"category\":\"CodeFlow_Code\",\"size\":\"180 164\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[{\"portId\":\"header\"},{\"portId\":\"style\"},{\"portId\":\"include\"},{\"portId\":\"scriptOnLoad\"},{\"portId\":\"script\"},{\"portId\":\"body\"}],\"out\":[{\"portId\":\"source\"}],\"isFile\":true,\"fileTypeName\":\"HTML\",\"fileType\":\"text/html\",\"key\":40,\"location\":\"-974.635 1545.5\",\"group\":41,\"fileContent\":\"<!--[# Begin source #]-->\\n<!--\\n<!--[# Insert header #]-->\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0</title>\\n  \\n  <!-- List here all styles -->\\n  <style>\\n    body {\\n      background-color: #3c3c3c;\\n      overflow: hidden;\\n      margin: 0;\\n    }\\n    /*[# Insert style #]*/\\n  </style>\\n  \\n  <!-- List here all includes -->\\n  <!--[# Insert include #]-->\\n  \\n  <!-- List here all scripts -->\\n  <script>\\n    //------------------------\\n    // Initialization on load\\n    //------------------------\\n    function HyperGraph_init() {\\n      const el = document.getElementById( 'projectName' );\\n      const text = el.innerText;\\n      el.innerText = text+' re-Loaded!';\\n      //[# Insert scriptOnLoad #]\\n    }\\n    \\n    //------------------------\\n    // List here all functions\\n    //------------------------\\n    //[# Insert script #]\\n  </script>\\n<body onload=\\\"HyperGraph_init()\\\">\\n  <!--[# Begin body #]-->\\n  <h1 id=\\\"projectName\\\">HyperGraph 3.0</h1>\\n  <!--[# End body #]-->\\n</body>\\n</html>\\n<!--[# End source #]-->\",\"editorPosition\":[782,1272,426,788]},\n{\"label\":\"Main App Page\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":41,\"location\":\"-1425.5228474983078 1488.438576250846\",\"color\":\"gray\",\"colorSwap\":\"green\"},\n{\"label\":\"Test Pages\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":44,\"location\":\"-1380.0002421875 830.938076250846\",\"color\":\"gray\",\"colorSwap\":\"green\"},\n{\"label\":\"Basic Main Page Elements\",\"category\":\"CodeFlow_Feature\",\"size\":\"361 40\",\"color\":\"RebeccaPurple\",\"buttons\":[{\"name\":\"\",\"checked\":false,\"color\":\"green\"}],\"key\":39,\"location\":\"850 -100\",\"group\":23},\n{\"label\":\"System Test: [Generation...Done]\\nDirs: 1 - Files: 2 - Nodes: 4\",\"category\":\"CodeFlow_Button\",\"color\":\"YellowGreen\",\"size\":\"412 120\",\"buttons\":[{\"name\":\"Generate\",\"checked\":true}],\"rows\":[],\"isFile\":true,\"fileContent\":\"var event, obj, nodeData;\\n//console.log( 'NodeData Info: '+JSON.stringify( nodeData ) );\\n//console.log( 'Button Label: '+obj.data.name );\\n//console.log( 'Button Status: '+obj.data.checked );\\n\\nconst g = getMainGraph();\\n\\nswitch( obj.data.name ) {\\n  case 'Generate':\\n    setNodeDataField( nodeData, 'label', 'System Test: [Generating...]' );\\n    const onGenerated = function( msg ) {\\n      setNodeDataField( nodeData, 'label', 'System Test: [Generation...Done]\\\\n'+msg );\\n    }\\n    \\n    generationRoot( nodeData, onGenerated );\\n    break;\\n}\\n\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":45,\"location\":\"-280 460\",\"editorPosition\":[40,954,665,1055]},\n{\"label\":\"GeneratorsConfig.js\",\"color\":\"Olive\",\"size\":\"282 103\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/library/Generators/3.10/lib/GeneratorsConfig.js\",\"key\":42,\"location\":\"1170 700\",\"isIncludeScript\":true},\n{\"label\":\"LineBlockGenerator.js\",\"color\":\"Olive\",\"size\":\"279 101\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/library/Generators/3.10/lib/LineBlockGenerator.js\",\"key\":46,\"location\":\"1170 810\",\"isIncludeScript\":true},\n{\"label\":\"Diagram Div Link\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":48,\"location\":\"-1360 840\",\"group\":44,\"fileContent\":\"<!--[# Begin html #]-->\\n<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0 - Diagram Test</title>\\n  \\n  <!--[# Begin include #]-->\\n  <!--GoJS Editor Includes-->\\n  <script type='text/javascript' src='/library/gojs/2.3.3/go.js'></script>\\n  <script type='text/javascript' src='/library/gojs/PolylineLinkingTool.js'></script>\\n  <script type='text/javascript' src='/library/gojs/SnapLinkReshapingTool.js'></script>\\n  <script type='text/javascript' src='/library/gojs/InGroupClickCreatingTool.js'></script>\\n  <!--End-->\\n  <!--[# End include #]-->\\n<body>\\n</body>\\n  <!--[# Begin body #]-->\\n  <!--div id=\\\"diagram\\\" class='diagramDiv' ondrop=\\\"dropHandler(event)\\\" ondragover=\\\"dragOverHandler(event)\\\"-->\\n  <div id=\\\"diagram\\\" class='diagramDiv'>\\n  </div>\\n  <!--[# End body #]-->\\n</html>\\n<!--[# End html #]-->\",\"editorPosition\":[439,182,683,568],\"linkToKey\":24},\n{\"label\":\"Window Div Link\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":50,\"location\":\"-1350 980\",\"group\":44,\"fileContent\":\"<!--[# Begin html #]-->\\n<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0 - Window Test</title>\\n<body>\\n</body>\\n  <!--[# Begin body #]-->\\n  <div id='mainDiv'>\\n    <!--div id=\\\"editorjs\\\"></div-->\\n  </div>\\n  <!--[# End body #]-->\\n</html>\\n<!--[# End html #]-->\",\"editorPosition\":[439,182,683,568],\"linkToKey\":27},\n{\"label\":\"ContextMenu Div Link\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":52,\"location\":\"-1350 1100\",\"group\":44,\"fileContent\":\"<!--[# Begin html #]-->\\n<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0 - Context Menu Test</title>\\n<body>\\n</body>\\n  <!--[# Begin body #]-->\\n  <div id=\\\"contextMenuContainer\\\" style=\\\"position: relative; z-index: 10000;\\\">\\n  </div>\\n  <!--[# End body #]-->\\n</html>\\n<!--[# End html #]-->\\n\",\"editorPosition\":[439,182,683,568],\"linkToKey\":31},\n{\"label\":\"Main Web Page Link\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"out\":[{\"portId\":\"html\"}],\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":54,\"location\":\"-915.5519999999999 1078.124\",\"group\":44,\"fileContent\":\"<!--[# Begin html #]-->\\n<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: MDDTools Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0</title>\\n  \\n  <!-- List here all includes -->\\n  <!--[# Insert include #]-->\\n  \\n  <!-- List here all styles -->\\n  <style>\\n    body {\\n      background-color: gray;\\n      overflow: hidden;\\n      margin: 0;\\n    }\\n    <!--[# Insert style #]-->\\n  </style>\\n  \\n  <!-- List here all scripts -->\\n  <!--[# Insert script #]-->\\n<body>\\n <h1>HyperGraph 3.0</h1>\\n <!--[# Insert body #]-->\\n</body>\\n</html>\\n<!--[# End html #]-->\",\"editorPosition\":[2121,994,669,426],\"linkToKey\":40},\n{\"label\":\"index.html (Link)\",\"color\":\"lightsalmon\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"fileURL\":\"/fileServer/01/41.html\",\"key\":43,\"location\":\"-585.5519999999999 1088.124\",\"group\":44,\"linkToKey\":5},\n{\"label\":\"MindFusion: https://mindfusion.eu/index.html\\nDraw2D: https://github.com/freegroup/draw2d\\nReact Diagrams: https://github.com/projectstorm/react-diagrams\\nTiny FlowChart: http://flowchart.js.org/\\nArbor: http://arborjs.org/\\nTiny Graph Dracula: https://www.graphdracula.net/\\nMicro Graph: https://github.com/lizhongit/ugraph/tree/master\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1350 350\",\"key\":49,\"location\":\"2145.3006584593986 316.2216626892555\"},\n{\"label\":\"Diagram Libraries\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1560 30\",\"key\":51,\"location\":\"2145.3006584593986 66.22166268925548\"},\n{\"label\":\"https://github.com/aralroca/default-composer/tree/main\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1120 30\",\"key\":53,\"location\":\"2165.3006584593986 -533.7783373107445\"},\n{\"label\":\"For default values of big Objects\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2010 30\",\"key\":55,\"location\":\"2165.3006584593986 -643.7783373107445\"},\n{\"label\":\"https://www.cssscript.com/free-javascripts/\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"870 30\",\"key\":56,\"location\":\"2155.3006584593986 -63.77833731074452\"},\n{\"label\":\"API for javascript widget\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1560 30\",\"key\":57,\"location\":\"2155.3006584593986 -173.77833731074452\"},\n{\"label\":\"API for streaming ChatGPT\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1560 30\",\"key\":58,\"location\":\"2155.3006584593986 -403.7783373107445\"},\n{\"label\":\"https://autocode.com/autocode/threads/introducing-streaming-chatgpt-api-and-webgpt-announcements-128cdcae/\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2450 30\",\"key\":59,\"location\":\"2155.3006584593986 -293.7783373107445\"},\n{\"label\":\"Status Div\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"peachpuff\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"source\"},{\"portId\":\"section\"}],\"isFile\":true,\"fileTypeName\":\"CSS\",\"fileType\":\"text/css\",\"key\":69,\"location\":\"-3200 1618.062\",\"fileContent\":\"/*[# Begin source #]*/\\n/*[# Begin section #]*/\\n#system-status {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n  border: 10px;\\n  border-style: solid;\\n  border-color: rgba(125, 125, 125, 0.6);\\n  z-index: 100;\\n  pointer-events: none;\\n}\\n#system-status.loading {\\n  border-color: rgba(30, 144, 255, 0.6);\\n}\\n#system-status.default {\\n  border-color: rgba(125, 125, 125, 0.6);\\n}\\n #system-status.error {\\n  border-color: rgba(255, 0, 0, 0.6);\\n}\\n#system-status.warning {\\n  border-color: rgba(255, 221, 0, 0.6);\\n}\\n#system-status.saved {\\n  animation-name: saved;\\n  animation-duration: 2s;\\n}\\n@keyframes saved {\\n  from { border-color: rgba(123, 255, 0, 0.6); }\\n  to { border-color: rgba(125, 125, 125, 0.6); }\\n}\\n/*[# End section #]*/\\n/*[# End source #]*/\",\"group\":84,\"editorPosition\":[16,759,440,611]},\n{\"label\":\"Status Div\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"orange\",\"rows\":[],\"in\":[{\"portId\":\"persistentFields\"},{\"portId\":\"transientFields\"}],\"out\":[{\"portId\":\"source\"},{\"portId\":\"scriptOnLoad\"},{\"portId\":\"declaration\"},{\"portId\":\"section\"}],\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":71,\"location\":\"-3200 1738.162\",\"fileContent\":\"//[# Begin source #]\\n//[# Begin declaration #]\\nconst hgRoot = {\\n  status: {\\n    persistent: {\\n      isReadOnly: false,\\n      //[# Insert persistentFields #]\\n    },\\n    transient: {\\n      divStatus: null,\\n      //[# Insert transientFields #]\\n    },\\n  },\\n};\\n//[# End declaration #]\\n\\nfunction State_init() {\\n  //[# Begin scriptOnLoad #]\\n  State_set( 'divStatus', document.getElementById( 'system-status' ) );\\n  //[# End scriptOnLoad #]\\n}\\n//[# Begin section #]\\nfunction State_set( name, value ) {\\n  if( hgRoot.status.persistent[name] !== undefined ) {\\n    hgRoot.status.persistent[name] = value;\\n  } else if( hgRoot.status.transient[name] !== undefined ){\\n    hgRoot.status.transient[name] = value;\\n  } else {\\n    console.error( `Error: field ${name} not found in state` );\\n  }\\n}\\nfunction State_get( name ) {\\n  if( hgRoot.status.persistent[name] !== undefined ) {\\n    return( hgRoot.status.persistent[name] );\\n  } else if( hgRoot.status.transient[name] !== undefined ) {\\n    return( hgRoot.status.transient[name] );\\n  } else {\\n    console.error( `Error: field ${name} not found in state` );\\n  }\\n}\\nfunction State_toogleReadOnly() {\\n  const ro = !State_get( 'isReadOnly' );\\n  State_set( 'isReadOnly', ro );\\n  const divStatus = State_get( 'divStatus' );\\n  divStatus.style['border-style'] = ( ro? 'dashed': 'solid' );\\n}\\nfunction State_setError() {\\n  const divStatus = State_get( 'divStatus' );\\n  divStatus.className = 'error';\\n}\\nfunction State_setReady() {\\n  const divStatus = State_get( 'divStatus' );\\n  divStatus.className = 'default';\\n}\\nfunction State_setLoading() {\\n  const divStatus = State_get( 'divStatus' );\\n  divStatus.className = 'loading';\\n}\\nfunction State_setNeedSave() {\\n  if( !State_get( 'isReadOnly' ) ) {\\n    const divStatus = State_get( 'divStatus' );\\n    divStatus.className = 'warning';\\n  }\\n}\\nfunction State_setSaved() {\\n  if( !State_get( 'isReadOnly' ) ) {\\n    const divStatus = State_get( 'divStatus' );\\n  divStatus.className = 'saved';\\n  }\\n}\\n//[# End section #]\\n\\nfunction State_setEditorChanged() {\\n  if( !State_get( 'isReadOnly' ) ) {\\n    State_setNeedSave();\\n    setTimeout( State_setSaved, 1*1000 );\\n  }\\n}\\n//[# End source #]\",\"group\":84,\"editorPosition\":[487,32,584,1304]},\n{\"label\":\"Status Div\",\"category\":\"CodeFlow_Code\",\"size\":\"180 140\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"source\"},{\"portId\":\"style\"},{\"portId\":\"include\"},{\"portId\":\"scriptOnLoad\"},{\"portId\":\"script\"},{\"portId\":\"body\"},{\"portId\":\"section\"}],\"isFile\":true,\"fileTypeName\":\"HTML\",\"fileType\":\"text/html\",\"key\":74,\"location\":\"-3200 1879.95\",\"fileContent\":\"<!--[# Begin source #]-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <!--[# Begin include #]-->\\n  <!--[# End include #]-->\\n  <style>\\n    /*[# Begin style #]*/\\n    /*[# End style #]*/\\n  </style>\\n  <script>\\n    <!--[# Begin script #]-->\\n    <!--[# End script #]-->\\n  </script>\\n</head>\\n<body>\\n  <!--[# Begin body #]-->\\n  <script>\\n    // Set initialization function\\n    document.body.onload = State_init;\\n  </script>\\n  <!--[# Begin section #]-->\\n  <div id=\\\"system-status\\\"></div>\\n  <!--[# End section #]-->\\n  <br><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_setEditorChanged()\\\">Simulate EditorChanged</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_setLoading()\\\">Simulate EditorLoading</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_setError()\\\">Simulate Error Status</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_setReady()\\\">Simulate Ready Status</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_toogleReadOnly()\\\">Simulate Toogle ReadOnly</button><br>\\n  <!--[# End body #]-->\\n</body>\\n</html>\\n<!--[# End source #]-->\",\"group\":84,\"editorPosition\":[20,1422,676,653]},\n{\"label\":\"Web Page\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[{\"portId\":\"style\"},{\"portId\":\"script\"},{\"portId\":\"body\"}],\"out\":[{\"portId\":\"source\"}],\"isFile\":true,\"fileTypeName\":\"HTML\",\"fileType\":\"text/html\",\"key\":77,\"location\":\"-1305.552 556.8761525016921\",\"fileContent\":\"<!--[# Begin source #]-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>Test WebPage</title>\\n  <style>\\n    /*[# Insert style #]*/\\n  </style>\\n  <script>\\n    /*[# Insert script #]*/\\n  </script>\\n<body>\\n  <!--[# Insert body #]-->\\n</body>\\n</html>\\n<!--[# End source #]-->\",\"group\":44},\n{\"label\":\"File Header\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"yellow\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"source\"}],\"isFile\":true,\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":79,\"location\":\"-1405.5228474983078 1394.377152501692\",\"fileContent\":\"[# Begin source #]\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph <moduleName>\\nDate: 10.07.2020\\n=============================================================================\\n[# End source #]\",\"group\":41,\"editorPosition\":[1093,929,651,216]},\n{\"label\":\"Test Pages\",\"category\":\"CodeFlow_Feature\",\"size\":\"358 40\",\"color\":\"RebeccaPurple\",\"buttons\":[{\"name\":\"\",\"checked\":false,\"color\":\"green\"}],\"key\":81,\"location\":\"20 77.47500000000002\",\"group\":23},\n{\"label\":\"HyperGraph 3.0 Test\",\"category\":\"CodeFlow_FeatureOnOff\",\"size\":\"338 40\",\"color\":\"RebeccaPurple\",\"buttons\":[{\"name\":\"\",\"checked\":false,\"color\":\"green\"}],\"key\":83,\"location\":\"-370 77.47500000000002\",\"group\":23},\n{\"label\":\"Status Div Page\",\"color\":\"lightsalmon\",\"size\":\"213 89\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>Test WebPage</title>\\n  <style>\\n    #system-status {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      box-sizing: border-box;\\n      border: 10px;\\n      border-style: solid;\\n      border-color: rgba(125, 125, 125, 0.6);\\n      z-index: 100;\\n      pointer-events: none;\\n    }\\n    #system-status.loading {\\n      border-color: rgba(30, 144, 255, 0.6);\\n    }\\n    #system-status.default {\\n      border-color: rgba(125, 125, 125, 0.6);\\n    }\\n     #system-status.error {\\n      border-color: rgba(255, 0, 0, 0.6);\\n    }\\n    #system-status.warning {\\n      border-color: rgba(255, 221, 0, 0.6);\\n    }\\n    #system-status.saved {\\n      animation-name: saved;\\n      animation-duration: 2s;\\n    }\\n    @keyframes saved {\\n      from { border-color: rgba(123, 255, 0, 0.6); }\\n      to { border-color: rgba(125, 125, 125, 0.6); }\\n    }\\n  </style>\\n  <script>\\n    //[# Begin declaration #]\\n    const hgRoot = {\\n      status: {\\n        persistent: {\\n          isReadOnly: false,\\n        },\\n        transient: {\\n          divStatus: null,\\n        },\\n      },\\n    };\\n    //[# End declaration #]\\n\\n    function State_init() {\\n      //[# Begin initialization #]\\n      State_set( 'divStatus', document.getElementById( 'system-status' ) );\\n      //[# End initialization #]\\n    }\\n    //[# Begin function #]\\n    function State_set( name, value ) {\\n      if( hgRoot.status.persistent[name] !== undefined ) {\\n        hgRoot.status.persistent[name] = value;\\n      } else if( hgRoot.status.transient[name] !== undefined ){\\n        hgRoot.status.transient[name] = value;\\n      } else {\\n        console.error( `Error: field ${name} not found in state` );\\n      }\\n    }\\n    function State_get( name ) {\\n      if( hgRoot.status.persistent[name] !== undefined ) {\\n        return( hgRoot.status.persistent[name] );\\n      } else if( hgRoot.status.transient[name] !== undefined ) {\\n        return( hgRoot.status.transient[name] );\\n      } else {\\n        console.error( `Error: field ${name} not found in state` );\\n      }\\n    }\\n    function State_toogleReadOnly() {\\n      const ro = !State_get( 'isReadOnly' );\\n      State_set( 'isReadOnly', ro );\\n      const divStatus = State_get( 'divStatus' );\\n      divStatus.style['border-style'] = ( ro? 'dashed': 'solid' );\\n    }\\n    function State_setError() {\\n      const divStatus = State_get( 'divStatus' );\\n      divStatus.className = 'error';\\n    }\\n    function State_setReady() {\\n      const divStatus = State_get( 'divStatus' );\\n      divStatus.className = 'default';\\n    }\\n    function State_setLoading() {\\n      const divStatus = State_get( 'divStatus' );\\n      divStatus.className = 'loading';\\n    }\\n    function State_setNeedSave() {\\n      if( !State_get( 'isReadOnly' ) ) {\\n        const divStatus = State_get( 'divStatus' );\\n        divStatus.className = 'warning';\\n      }\\n    }\\n    function State_setSaved() {\\n      if( !State_get( 'isReadOnly' ) ) {\\n        const divStatus = State_get( 'divStatus' );\\n      divStatus.className = 'saved';\\n      }\\n    }\\n    //[# End function #]\\n\\n    function State_setEditorChanged() {\\n      if( !State_get( 'isReadOnly' ) ) {\\n        State_setNeedSave();\\n        setTimeout( State_setSaved, 1*1000 );\\n      }\\n    }\\n  </script>\\n<body>\\n  <script>\\n    // Set initialization function\\n    document.body.onload = State_init;\\n  </script>\\n  <div id=\\\"system-status\\\"></div>\\n  <br><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_setEditorChanged()\\\">Simulate EditorChanged</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_setLoading()\\\">Simulate EditorLoading</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_setError()\\\">Simulate Error Status</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_setReady()\\\">Simulate Ready Status</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"State_toogleReadOnly()\\\">Simulate Toogle ReadOnly</button><br>\\n</body>\\n</html>\",\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":85,\"location\":\"-850 560\",\"group\":44},\n{\"label\":\"Status Div\",\"category\":\"CodeFlow_Code\",\"size\":\"180 100\",\"color\":\"lightsalmon\",\"rows\":[],\"in\":[],\"out\":[{\"portId\":\"include\"},{\"portId\":\"script\"},{\"portId\":\"style\"},{\"portId\":\"body\"}],\"isFile\":true,\"fileTypeName\":\"Web Page\",\"fileType\":\"application/html\",\"key\":61,\"location\":\"-1360 710\",\"group\":44,\"fileContent\":\"<!--\\n=============================================================================\\nLicensed Materials - Property of Frank Joublin and Antonio Ceravola.\\n(C) Copyright Frank Joublin and Antonio Ceravola. 2021, All Rights Reserved.\\nFrance Government Users Restricted Rights - Use, duplication or disclosure\\nrestricted by GSA ADP Schedule Contract with Frank Joublin and Antonio Ceravola.\\n=============================================================================\\nModule: HyperGraph Main Web Frontend\\nDate: 10.07.2020\\n=============================================================================\\n-->\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta charset='utf-8'>\\n  <title>HyperGraph 3.0 - Status Test</title>\\n  <style>\\n    /*[# Begin style #]*/\\n    #system-status {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      box-sizing: border-box;\\n      border: 10px;\\n      border-style: solid;\\n      border-color: rgba(125, 125, 125, 0.6);\\n      z-index: 100;\\n      pointer-events: none;\\n    }\\n    #system-status.default {\\n      border-color: rgba(125, 125, 125, 0.6);\\n    }\\n    #system-status.error {\\n      border-color: rgba(255, 0, 0, 0.6);\\n    }\\n     #system-status.warning {\\n      border-color: rgba(255, 221, 0, 0.6);\\n    }\\n    #system-status.saved {\\n      animation-name: saved;\\n      animation-duration: 2s;\\n    }\\n    @keyframes saved {\\n      from { border-color: rgba(123, 255, 0, 0.6); }\\n      to { border-color: rgba(125, 125, 125, 0.6); }\\n    }\\n    /*[# End style #]*/\\n  </style>\\n  <script>\\n    const m = {\\n      mddStatus: null,\\n      status: {\\n        isReadOnly: false,\\n      },\\n    };\\n    \\n    function _init() {\\n      m.mddStatus = document.getElementById( 'system-status' );\\n    }\\n    function setToogleSystemReadOnly() {\\n      m.status.isReadOnly = !m.status.isReadOnly;\\n      m.mddStatus.style['border-style'] = ( m.status.isReadOnly? 'dashed': 'solid' );\\n    }\\n    function setSystemNeedSave() {\\n      if( !m.status.isReadOnly ) {\\n        m.mddStatus.className = 'warning';\\n      }\\n    }\\n    function setSystemSaved() {\\n      if( !m.status.isReadOnly ) {\\n        m.mddStatus.className = 'saved';\\n      }\\n    }\\n    function setSystemError() {\\n      if( !m.status.isReadOnly ) {\\n        m.mddStatus.className = 'error';\\n      }\\n    }\\n    function setSystemDefault() {\\n      if( !m.status.isReadOnly ) {\\n        m.mddStatus.className = 'default';\\n      }\\n    }\\n    /* Begin Simulation Code */\\n    function setEditorChanged() {\\n      setSystemNeedSave();\\n      setTimeout( setSystemSaved, 1*1000 );\\n    }\\n    /* End Simulation Code */\\n  </script>\\n<body onload=\\\"_init()\\\">\\n  <!--[# Begin body #]-->\\n  <div id=\\\"system-status\\\"></div>\\n  <!--[# End body #]-->\\n  <br><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"setEditorChanged()\\\">Simulate EditorChanged</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"setSystemError()\\\">Simulate Error Status</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"setSystemDefault()\\\">Simulate Default Status</button><br>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  <button onclick=\\\"setToogleSystemReadOnly()\\\">Simulate Toogle ReadOnly</button><br>\\n</body>\\n</html>\",\"editorPosition\":[25,376,694,1688],\"linkToKey\":29},\n{\"label\":\"\",\"category\":\"CodeFlow_Merge\",\"color\":\"white\",\"rows\":[],\"in\":[{\"portId\":\"declaration\"},{\"portId\":\"function\"}],\"out\":[{\"portId\":\"out\"}],\"key\":62,\"location\":\"-1890 2453.984\",\"group\":80},\n{\"label\":\"\",\"category\":\"CodeFlow_Merge\",\"color\":\"white\",\"rows\":[],\"in\":[{\"portId\":\"in0\"}],\"out\":[{\"portId\":\"out\"}],\"key\":64,\"location\":\"-2110 2257.978\",\"group\":80},\n{\"label\":\"JS Declaration\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"149 30\",\"key\":66,\"location\":\"-2160 2217.978\",\"group\":80},\n{\"label\":\"\",\"category\":\"CodeFlow_Merge\",\"color\":\"white\",\"rows\":[],\"in\":[{\"portId\":\"in0\"}],\"out\":[{\"portId\":\"out\"}],\"key\":68,\"location\":\"-2110 2537.978\",\"group\":80},\n{\"label\":\"JS Section\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"119 30\",\"key\":72,\"location\":\"-2160 2497.978\",\"group\":80},\n{\"label\":\"JS Script\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"103 30\",\"key\":75,\"location\":\"-1920 2413.984\",\"group\":80},\n{\"label\":\"HTML Section\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"147 30\",\"key\":78,\"location\":\"-2160 2783.934\",\"group\":80},\n{\"label\":\"\",\"category\":\"CodeFlow_Merge\",\"color\":\"white\",\"rows\":[],\"in\":[{\"portId\":\"in0\"}],\"out\":[{\"portId\":\"out\"}],\"key\":82,\"location\":\"-2110 1977.978\",\"group\":80},\n{\"label\":\"JS ScriptOnLoad\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"171 30\",\"key\":86,\"location\":\"-2170 1937.978\",\"group\":80},\n{\"label\":\"\",\"category\":\"CodeFlow_Merge\",\"color\":\"white\",\"rows\":[],\"in\":[{\"portId\":\"in0\"}],\"out\":[{\"portId\":\"out\"}],\"key\":88,\"location\":\"-2110 1417.978\",\"group\":80},\n{\"label\":\"CSS Style\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"115 30\",\"key\":90,\"location\":\"-2140 1377.978\",\"group\":80},\n{\"label\":\"\",\"category\":\"CodeFlow_Merge\",\"color\":\"white\",\"rows\":[],\"in\":[{\"portId\":\"in0\"}],\"out\":[{\"portId\":\"out\"}],\"key\":70,\"location\":\"-2110 1697.978\",\"group\":80},\n{\"label\":\"HTML Include\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"171 30\",\"key\":76,\"location\":\"-2170 1657.978\",\"group\":80},\n{\"label\":\"Main App Page Interface\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":80,\"location\":\"-2200 2119.999994140625\",\"color\":\"gray\",\"colorSwap\":\"green\"},\n{\"label\":\"Basic Main Page Elements\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":84,\"location\":\"-3679 2119.9995\",\"color\":\"gray\",\"colorSwap\":\"green\"},\n{\"label\":\"Main App Page Interface\",\"category\":\"CodeFlow_Feature\",\"size\":\"364 40\",\"color\":\"RebeccaPurple\",\"buttons\":[{\"name\":\"\",\"checked\":false,\"color\":\"green\"}],\"key\":92,\"location\":\"850 -157.47499999999997\",\"group\":23}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":6,\"to\":7,\"points\":[250,1311.8146816454578,83.5,1313.0841963259986],\"key\":-1,\"color\":\"YellowGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"Feature\",\"toPort\":\"Feature\",\"from\":22,\"to\":26,\"points\":[719.5,-197.47499999999997,840,-217.47499999999997,850,-217.47499999999997],\"key\":-2,\"color\":\"RebeccaPurple\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"source\",\"toPort\":\"\",\"from\":40,\"to\":5,\"points\":[-731.6144921875,1545.5,-721.6144921875,1545.5,-439.99816140459853,1569.7176071457923],\"key\":-3,\"color\":\"lightsalmon\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"body\",\"toPort\":\"in1\",\"from\":24,\"to\":34,\"points\":[-2924.634765625,2246.937,-2914.634765625,2246.937,-2159.6826171875,2833.934,-2149.6826171875,2833.934],\"key\":-5,\"color\":\"lightsalmon\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"body\",\"toPort\":\"in2\",\"from\":27,\"to\":34,\"points\":[-2934.634765625,2436.937,-2924.634765625,2436.937,-2159.6826171875,2853.934,-2149.6826171875,2853.934],\"key\":-6,\"color\":\"lightsalmon\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"body\",\"toPort\":\"in3\",\"from\":31,\"to\":34,\"points\":[-2924.634765625,2646.937,-2914.634765625,2646.937,-2159.6826171875,2873.934,-2149.6826171875,2873.934],\"key\":-7,\"color\":\"lightsalmon\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"section\",\"toPort\":\"in0\",\"from\":74,\"to\":34,\"points\":[-2915.7314453125,1939.95,-2905.7314453125,1939.95,-2159.6826171875,2813.934,-2149.6826171875,2813.934],\"key\":-9,\"color\":\"lightsalmon\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"body\",\"from\":34,\"to\":40,\"points\":[-2029.5380859375,2843.934,-2019.5380859375,2843.934,-1088.9035546875,1595.5,-1078.9035546875,1595.5],\"key\":-8,\"color\":\"white\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"Feature\",\"toPort\":\"Feature\",\"from\":22,\"to\":39,\"points\":[654.1014575593027,-157.47499999999997,840,-100,850,-100],\"key\":-15,\"color\":\"RebeccaPurple\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"source\",\"toPort\":\"style\",\"from\":69,\"to\":77,\"points\":[-2954.6416015625,1608.062,-2944.6416015625,1608.062,-1370.0002421875,536.8761525016921,-1360.0002421875,536.8761525016921],\"key\":-10,\"color\":\"peachpuff\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"source\",\"toPort\":\"script\",\"from\":71,\"to\":77,\"points\":[-2915.7314453125,1708.162,-2905.7314453125,1708.162,-1370.0002421875,556.8761525016921,-1360.0002421875,556.8761525016921],\"key\":-11,\"color\":\"orange\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"body\",\"toPort\":\"body\",\"from\":74,\"to\":77,\"points\":[-2915.7314453125,1919.95,-2905.7314453125,1919.95,-1370.0002421875,576.8761525016921,-1360.0002421875,576.8761525016921],\"key\":-12,\"color\":\"lightsalmon\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"Feature\",\"toPort\":\"Feature\",\"from\":83,\"to\":81,\"points\":[-32,69.46552132701424,10,77.47500000000002,20,77.47500000000002],\"key\":-13,\"color\":\"RebeccaPurple\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"Feature\",\"toPort\":\"Feature\",\"from\":83,\"to\":39,\"points\":[-76.68293775190324,57.47500000000002,840,-100,850,-100],\"key\":-14,\"color\":\"RebeccaPurple\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"\",\"toPort\":\"\",\"from\":45,\"to\":44,\"points\":[-280,460.82013751773536,-384.0519999999999,461.2343945516936],\"key\":-16,\"color\":\"YellowGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"source\",\"toPort\":\"\",\"from\":77,\"to\":85,\"points\":[-1062.5314921875,556.8761525016921,-1052.5314921875,556.8761525016921,-849.9999745389213,558.9201370095811],\"key\":-17,\"color\":\"lightsalmon\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"source\",\"toPort\":\"header\",\"from\":79,\"to\":40,\"points\":[-1162.5023396858078,1394.377152501692,-1152.5023396858078,1394.377152501692,-1088.9035546875,1495.5,-1078.9035546875,1495.5],\"key\":-18,\"color\":\"yellow\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"declaration\",\"from\":64,\"to\":62,\"points\":[-2029.5380859375,2257.978,-2019.5380859375,2257.978,-1989.4892578125,2443.984,-1979.4892578125,2443.984],\"key\":-19,\"color\":\"white\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"declaration\",\"toPort\":\"in0\",\"from\":71,\"to\":64,\"points\":[-2915.7314453125,1748.162,-2905.7314453125,1748.162,-2159.6826171875,2257.978,-2149.6826171875,2257.978],\"key\":-20,\"color\":\"orange\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"function\",\"from\":68,\"to\":62,\"points\":[-2029.5380859375,2537.978,-2019.5380859375,2537.978,-1989.4892578125,2463.984,-1979.4892578125,2463.984],\"key\":-21,\"color\":\"white\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"section\",\"toPort\":\"in0\",\"from\":71,\"to\":68,\"points\":[-2915.7314453125,1768.162,-2905.7314453125,1768.162,-2159.6826171875,2537.978,-2149.6826171875,2537.978],\"key\":-22,\"color\":\"orange\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"script\",\"from\":62,\"to\":40,\"points\":[-1809.5380859375,2453.984,-1799.5380859375,2453.984,-1088.9035546875,1575.5,-1078.9035546875,1575.5],\"key\":-23,\"color\":\"white\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"scriptOnLoad\",\"toPort\":\"in0\",\"from\":71,\"to\":82,\"points\":[-2915.7314453125,1728.162,-2905.7314453125,1728.162,-2159.6826171875,1977.978,-2149.6826171875,1977.978],\"key\":-24,\"color\":\"lightsalmon\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"scriptOnLoad\",\"from\":82,\"to\":40,\"points\":[-2029.5380859375,1977.978,-2019.5380859375,1977.978,-1088.9035546875,1555.5,-1078.9035546875,1555.5],\"key\":-25,\"color\":\"white\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"style\",\"from\":88,\"to\":40,\"points\":[-2029.5380859375,1417.978,-2019.5380859375,1417.978,-1088.9035546875,1515.5,-1078.9035546875,1515.5],\"key\":-26,\"color\":\"white\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"section\",\"toPort\":\"in0\",\"from\":69,\"to\":88,\"points\":[-2954.6416015625,1628.062,-2944.6416015625,1628.062,-2159.6826171875,1417.978,-2149.6826171875,1417.978],\"key\":-27,\"color\":\"peachpuff\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"include\",\"from\":70,\"to\":40,\"points\":[-2029.5380859375,1697.978,-2019.5380859375,1697.978,-1088.9035546875,1535.5,-1078.9035546875,1535.5],\"key\":-28,\"color\":\"white\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"Feature\",\"toPort\":\"Feature\",\"from\":22,\"to\":92,\"points\":[768,-163.45010373443978,840,-157.47499999999997,850,-157.47499999999997],\"key\":-29,\"color\":\"RebeccaPurple\"}\n]}"
}