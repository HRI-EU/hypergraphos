{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "ConnectorsDSL",
    "PicturesDSL",
    "TreeDSL",
    "KanbanDSL",
    "AIFlowDSL"
  ],
  "view": {
    "scale": 0.2618830860875381,
    "position": [
      2640.2745522945693,
      -3667.9235244338365
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":0,\"location\":\"4830.041400580876 -377.2476525467516\"},\n{\"label\":\"AIFlow DSL Test 1\",\"category\":\"TextLabels_Size5\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1560 30\",\"key\":1,\"location\":\"5010 -1200\"},\n{\"label\":\"...\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"940 30\",\"key\":3,\"location\":\"5670 -260\"},\n{\"label\":\"Text to JSON\",\"category\":\"AIFlow_Text2JSON\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_Text2JSON\",\"fileTypeName\":\"Converter\",\"key\":4,\"location\":\"5980 -550\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":5,\"location\":\"5330 -550\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"140 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"Hi\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"Hello! How can I assist you today?\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"2+2=?\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":6,\"location\":\"6330 -610\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"150 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"user> Hi\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":7,\"location\":\"5050 -370\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"160 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"Hi\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"Hello! How can I assist you today?\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"2+2=?\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"2+2 = 4.\\\"\\n  },\\n  {\\n    \\\"role\\\": \\\"user\\\",\\n    \\\"content\\\": \\\"\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":8,\"location\":\"5070.041400580876 -617.2476525467516\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Execution Engine\",\"category\":\"Hierarchy_Engine\",\"size\":\"240 80\",\"rows\":[{\"name\":\"isAutostart\",\"value\":\"false\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isNodePersistencyUsed\",\"value\":\"true\"}],\"key\":10,\"location\":\"5170.041400580876 -1007.2476525467516\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"180 80\",\"color\":\"SkyBlue\",\"rows\":[{\"name\":\"Name\",\"value\":\"tbd\",\"valueChanged\":true},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"@getDate()\"},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frankonello\"}],\"key\":11,\"location\":\"4940.041400580876 -1037.2476525467516\"},\n{\"label\":\"Simple ChatGPT with AI DSL\",\"category\":\"TextLabels_Size3\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"620 50\",\"key\":13,\"location\":\"4780.041400580876 -737.2476525467516\"},\n{\"label\":\"API Keys\",\"category\":\"AIFlow_Param\",\"size\":\"460 80\",\"rows\":[{\"name\":\"ChatGPT\",\"value\":\"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\"}],\"key\":15,\"location\":\"5670.041400580876 -1017.2476525467516\"},\n{\"label\":\"Data\",\"category\":\"AIFlow_DataSend\",\"size\":\"180 80\",\"buttons\":[{\"name\":\"Send\",\"checked\":true}],\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"user> Hi\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"key\":16,\"location\":\"5680.041400580876 -547.2476525467516\",\"editorPosition\":[1580,115,400,350],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}]},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":18,\"location\":\"4740 -1240\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":20,\"location\":\"4740 -1160\"},\n{\"label\":\"Engine Code 1.2\",\"color\":\"orange\",\"size\":\"180 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/00/90.js\",\"key\":24,\"location\":\"6650 -600\",\"isIncludeScript\":true,\"editorPosition\":[1979,45,747,2158]},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n//debugger\\n// Check input port\\nformatInput( nodeData, name, value );\\n// switch( name ) {\\n//   case 'system': {\\n//     Engine_setInput( nodeData, 'system', value );\\n//   }\\n//   break;\\n  \\n//   case 'inHistory': {\\n//     Engine_setInput( nodeData, 'inHistory', value );\\n//   }\\n//   break;\\n  \\n//   case 'user': {\\n//     Engine_setInput( nodeData, 'inHistory', value );\\n//   break;\\n// }\\n\\nconst systemValue = Engine_getInput( nodeData, 'system', [] );\\nconst inHistoryValue = Engine_getInput( nodeData, 'inHistory', null );\\nconst userValue = Engine_getInput( nodeData, 'user', null );\\nif( ( inHistoryValue == undefined && userValue ) ||\\n    ( inHistoryValue && userValue ) ) {\\n  \\n  // Merge all input array into a single message\\n  const messages = [];\\n  const history = [];\\n  if( inHistoryValue )\\n    history.push( ...inHistoryValue );\\n  if( userValue )\\n    history.push( ...userValue );\\n  if( systemValue )\\n    messages.push( ...systemValue );\\n  if( history )\\n    messages.push( ...history );\\n\\n  // Ask chatGPT\\n  appData.chatGPT.getResponse( messages, (response)=>{\\n    const defaultIsJSON = typeof( userValue ) == 'object';\\n    const isJSON = Engine_get( nodeData, 'isJSON', defaultIsJSON );\\n    \\n    const outValue = formatResponse( history, isJSON, response );\\n    Engine_fireOutput( nodeData, 'outHistory', outValue );\\n    const assistantValue = formatResponse( [], isJSON, response )\\n    Engine_fireOutput( nodeData, 'assistant', assistantValue );\\n  });\\n  // Clean inputs\\n  Engine_clearInputs( nodeData, [ 'inHistory', 'user' ] );\\n}\\n\\nfunction formatInput( nodedata, name, value ) {\\n    // Format input value\\n    let isJSON = false;\\n    // Input value is an oject or an array\\n    if( typeof( value ) == 'object' ) {\\n      isJSON = true;\\n      // Input value is not an array\\n      if( !Array.isArray( value ) ) {\\n        value = [value];\\n      } \\n    } else {\\n      // Input value is a string\\n      value = [ { role: name, content: value } ];\\n    }\\n    Engine_set( nodeData, 'isJSON', isJSON );\\n    // Save formatted input value\\n    Engine_setInput( nodeData, name, value );\\n}\\nfunction formatResponse( value, isJSON, response ) {\\n  let outValue  = null;\\n  const isvalueEmpty = ( value.length == 0 );\\n\\n  if( isJSON ) {\\n    value.push( { \\\"role\\\": \\\"assistant\\\", \\\"content\\\":response} );\\n    if( !isvalueEmpty ) {\\n      value.push( { \\\"role\\\": \\\"user\\\", \\\"content\\\":\\\"\\\"} );\\n    }\\n    // outValue = JSON.stringify( value, null, 2 );\\n    outValue = value;\\n  \\n  // Case of a string response\\n  } else {\\n    if( value.startsWith( 'user>' ) ) {\\n      if( !response.startsWith( 'assistant>' ) ) {\\n        response = 'assistant> '+response;\\n      }\\n    }\\n    if( !isvalueEmpty ) {\\n      outValue = value + '\\\\n\\\\n' + response + '\\\\n\\\\nuser> ';\\n    } else {\\n      outValue = response;\\n    }\\n  }\\n  return( outValue );\\n}\",\"fileTypeName\":\"LLM\",\"fileType\":\"text/javascript\",\"key\":48,\"location\":\"4680 -610\",\"editorPosition\":[565,48,551,1169]},\n{\"label\":\"Data\",\"category\":\"AIFlow_Data\",\"size\":\"140 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\\"role\\\":\\\"user\\\",\\\"content\\\":\\\"Hi\\\"}\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":50,\"location\":\"5070 -490\",\"editorPosition\":[820,791,400,350]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":51,\"location\":\"4630 -500.1\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":0,\"to\":7,\"points\":[4950.503314643376,-377.2476525467516,4960.503314643376,-377.2476525467516,5008.103515625,-370,5018.103515625,-370],\"key\":-1},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":5,\"to\":16,\"points\":[5610.4619140625,-550,5620.4619140625,-550,5638.144916205876,-547.2476525467516,5648.144916205876,-547.2476525467516],\"key\":-3,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":4,\"to\":6,\"points\":[6260.4619140625,-550,6270.4619140625,-550,6288.103515625,-610,6298.103515625,-610],\"key\":-4,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":8,\"to\":5,\"points\":[5270.503314643376,-617.2476525467516,5280.503314643376,-617.2476525467516,5288.103515625,-550,5298.103515625,-550],\"key\":-5},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"outHistory\",\"toPort\":\"in\",\"from\":48,\"to\":8,\"points\":[5004.0205078125,-620,5014.0205078125,-620,5028.144916205876,-617.2476525467516,5038.144916205876,-617.2476525467516],\"key\":-6},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":7,\"to\":16,\"points\":[5240.4619140625,-370,5250.4619140625,-370,5390,-370,5638.144916205876,-547.2476525467516,5648.144916205876,-547.2476525467516],\"key\":-7},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":16,\"to\":4,\"points\":[5900.503314643376,-547.2476525467516,5910.503314643376,-547.2476525467516,5938.103515625,-550,5948.103515625,-550],\"key\":-8},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":6,\"to\":48,\"points\":[6510.4619140625,-610,6520.4619140625,-610,6510.041400580876,-687.2476525467516,4590.041400580876,-687.2476525467516,4590.041400580876,-587.2476525467516,4594.544921875,-590,4604.544921875,-590],\"key\":-9},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":51,\"to\":50,\"points\":[4750.4619140625,-500.1,4760.4619140625,-500.1,5028.103515625,-490,5038.103515625,-490],\"key\":-45},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":50,\"to\":5,\"points\":[5250.4619140625,-490,5260.4619140625,-490,5288.103515625,-550,5298.103515625,-550],\"key\":-46},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"\",\"from\":5,\"to\":3,\"points\":[5610.4619140625,-550,5620.4619140625,-550,5630,-260,5670,-260],\"key\":-47}\n]}"
}