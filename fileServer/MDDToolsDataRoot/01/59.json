{
  "dslNameList": [
    "DefaultDSL",
    "HierarchyDSL",
    "ThinkingDSL",
    "TextLabelsDSL",
    "CodeFlowDSL",
    "ConnectorsDSL",
    "PicturesDSL",
    "TreeDSL",
    "KanbanDSL",
    "AIFlowDSL"
  ],
  "view": {
    "scale": 0.18550206113401257,
    "position": [
      -3409.9710691823893,
      -2187.28959765625
    ],
    "isGridOn": true
  },
  "model": "{ \"class\": \"GraphLinksModel\",\n  \"copiesArrays\": true,\n  \"copiesArrayObjects\": true,\n  \"copiesKey\": false,\n  \"linkKeyProperty\": \"key\",\n  \"linkFromPortIdProperty\": \"fromPort\",\n  \"linkToPortIdProperty\": \"toPort\",\n  \"nodeDataArray\": [\n{\"label\":\"API Keys\",\"category\":\"AIFlow_Param\",\"size\":\"460 80\",\"rows\":[{\"name\":\"ChatGPT\",\"value\":\"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\"}],\"key\":18,\"location\":\"8370 -1120\"},\n{\"label\":\"SMILE Planner v2.2\",\"category\":\"TextLabels_Size6\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2480 120\",\"key\":20,\"location\":\"5830 -1040\",\"font\":\"250px sans-serif\"},\n{\"label\":\"Request\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Travi to Ropa] Take the cola_bottle_1 from the table_1 and open it. Take the glass_1 from the table_1 and hold it under the bottle to pour the coca-cola into the glass. Then, put the glass_1 on the tray_1.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":195,\"location\":\"6651.896000000001 3477.504999999999\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"Ropa User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"In order to fullfill the request: \\n[Travi to Ropa] Take the cola_bottle_1 from the table_1 and open it. Take the glass_1 from the table_1 and hold it under the bottle to pour the coca-cola into the glass. Then, put the glass_1 on the tray_1.\\nThe environment state at this step is:\\n{\\\"gaze\\\":{\\\"fovea\\\":[],\\\"perif\\\":[]},\\\"hand_left\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"hand_right\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"lab\\\":{\\\"holdsObject\\\":[\\\"table_1\\\"]},\\\"table_1\\\":{\\\"type\\\":\\\"table\\\",\\\"color\\\":\\\"gray\\\",\\\"holdsObject\\\":[\\\"fridge_1\\\",\\\"microwave_1\\\",\\\"toaster_1\\\",\\\"plate_1\\\",\\\"glass_1\\\",\\\"mug_1\\\",\\\"cola_bottle_1\\\",\\\"tea_bag_1\\\",\\\"pitcher_1\\\",\\\"pitcher_2\\\",\\\"tray_1\\\"],\\\"isHoldByObject\\\":[\\\"lab\\\"]},\\\"fridge_1\\\":{\\\"type\\\":\\\"fridge\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"on\\\",\\\"temperature\\\":\\\"-5 degree\\\"},\\\"microwave_1\\\":{\\\"type\\\":\\\"microwave\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"toaster_1\\\":{\\\"type\\\":\\\"toaster\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"plate_1\\\":{\\\"type\\\":\\\"plate\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObjectF\\\":[\\\"toast_1\\\"],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\"},\\\"toast_1\\\":{\\\"type\\\":\\\"bread slice\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"plate_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"preparation\\\":\\\"raw\\\"},\\\"cola_bottle_1\\\":{\\\"type\\\":\\\"bottle\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.5,\\\"fillLevel\\\":0.5,\\\"holdsLiquid\\\":[\\\"coca-cola\\\"]},\\\"glass_1\\\":{\\\"type\\\":\\\"glass\\\",\\\"color\\\":\\\"transparent\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"mug_1\\\":{\\\"type\\\":\\\"mug\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"pitcher_1\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"blue\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"90 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"water\\\"]},\\\"pitcher_2\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"80 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"coffee\\\"]},\\\"tray_1\\\":{\\\"type\\\":\\\"tray\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]},\\\"tea_bag_1\\\":{\\\"type\\\":\\\"tea bag\\\",\\\"color\\\":\\\"brown\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]}}\\nGive a full plan at once.\\nPlan:\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":200,\"location\":\"7571.896000000001 3501.567000000001\",\"editorPosition\":[1298,840,405,318],\"group\":363},\n{\"label\":\"Create Ropa Request Prompt\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"state\"},{\"portId\":\"request\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"request,state\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"In order to fullfill the request: \\n<request>\\nThe environment state at this step is:\\n<state>\\nGive a full plan at once.\\nPlan:\",\"fileTypeName\":\"Template\",\"key\":201,\"location\":\"7181.896000000001 3397.8050000000003\",\"editorPosition\":[918,39,712,140],\"group\":363},\n{\"label\":\"Ropa Role Selector\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"ropaToAlex\"},{\"portId\":\"ropaToRoco\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n//Engine_fireOutput( nodeData, 'clear', '' );\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\nvalue = value.replace(/<br>/g, \\\"\\\");\\n\\nconst toRoco = '[Ropa to Roco] ';\\nconst idx = value.indexOf(toRoco);\\nif( idx != -1 ) {\\n  Engine_fireOutput( nodeData, 'ropaToRoco', value );\\n} else {\\n  Engine_fireOutput( nodeData, 'ropaToAlex', value );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":202,\"location\":\"10070 3349.5000000000005\",\"fileType\":\"text/javascript\",\"editorPosition\":[2798,2071,498,301],\"group\":363},\n{\"label\":\"Ropa Plan\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] open cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":203,\"location\":\"9711.896 3451.367\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> In order to fullfill the request: \\n[Travi to Ropa] Take the cola_bottle_1 from the table_1 and open it. Take the glass_1 from the table_1 and hold it under the bottle to pour the coca-cola into the glass. Then, put the glass_1 on the tray_1.\\nThe environment state at this step is:\\n{\\\"gaze\\\":{\\\"fovea\\\":[],\\\"perif\\\":[]},\\\"hand_left\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"hand_right\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"lab\\\":{\\\"holdsObject\\\":[\\\"table_1\\\"]},\\\"table_1\\\":{\\\"type\\\":\\\"table\\\",\\\"color\\\":\\\"gray\\\",\\\"holdsObject\\\":[\\\"fridge_1\\\",\\\"microwave_1\\\",\\\"toaster_1\\\",\\\"plate_1\\\",\\\"glass_1\\\",\\\"mug_1\\\",\\\"cola_bottle_1\\\",\\\"tea_bag_1\\\",\\\"pitcher_1\\\",\\\"pitcher_2\\\",\\\"tray_1\\\"],\\\"isHoldByObject\\\":[\\\"lab\\\"]},\\\"fridge_1\\\":{\\\"type\\\":\\\"fridge\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"on\\\",\\\"temperature\\\":\\\"-5 degree\\\"},\\\"microwave_1\\\":{\\\"type\\\":\\\"microwave\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"toaster_1\\\":{\\\"type\\\":\\\"toaster\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"plate_1\\\":{\\\"type\\\":\\\"plate\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObjectF\\\":[\\\"toast_1\\\"],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\"},\\\"toast_1\\\":{\\\"type\\\":\\\"bread slice\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"plate_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"preparation\\\":\\\"raw\\\"},\\\"cola_bottle_1\\\":{\\\"type\\\":\\\"bottle\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.5,\\\"fillLevel\\\":0.5,\\\"holdsLiquid\\\":[\\\"coca-cola\\\"]},\\\"glass_1\\\":{\\\"type\\\":\\\"glass\\\",\\\"color\\\":\\\"transparent\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"mug_1\\\":{\\\"type\\\":\\\"mug\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"pitcher_1\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"blue\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"90 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"water\\\"]},\\\"pitcher_2\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"80 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"coffee\\\"]},\\\"tray_1\\\":{\\\"type\\\":\\\"tray\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]},\\\"tea_bag_1\\\":{\\\"type\\\":\\\"tea bag\\\",\\\"color\\\":\\\"brown\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]}}\\nGive a full plan at once.\\nPlan:\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":204,\"location\":\"8251.896 3501.367\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"Add user> header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":205,\"location\":\"7881.896000000001 3501.567000000001\",\"editorPosition\":[918,39,712,140],\"group\":363},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":206,\"location\":\"9361.896 3451.567000000001\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":363},\n{\"label\":\"Ropa Plan\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[Ropa to Roco] gaze table_1\\\\n[Ropa to Roco] gaze cola_bottle_1\\\\n[Ropa to Roco] get cola_bottle_1 hand_left\\\\n[Ropa to Roco] open cola_bottle_1\\\\n[Ropa to Roco] gaze glass_1\\\\n[Ropa to Roco] get glass_1 hand_right\\\\n[Ropa to Roco] gaze cola_bottle_1\\\\n[Ropa to Roco] pour cola_bottle_1 glass_1\\\\n[Ropa to Roco] put glass_1 tray_1\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":207,\"location\":\"9061.896 3451.567000000001\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":363},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n\\n\\nEach time you (Ropa) receive a  for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":211,\"location\":\"8250 3320\",\"editorPosition\":[-6887,15,751,1974],\"group\":363,\"color\":\"LightPink\"},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":213,\"location\":\"10951.896 3407.8050000000003\",\"group\":363},\n{\"label\":\"[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] open cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put glass_1 tray_1\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1050 870\",\"in\":[{\"portId\":\"in\"}],\"key\":214,\"location\":\"10960 3880\",\"group\":363},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":218,\"location\":\"8101.896 1999.7420000000002\",\"editorPosition\":[490,662,645,222],\"group\":362,\"color\":\"LightPink\"},\n{\"label\":\"[Travi to Ropa] Take the cola_bottle_1 from the table_1 and open it. Take the glass_1 from the table_1 and hold it under the bottle to pour the coca-cola into the glass. Then, put the glass_1 on the tray_1.\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1220 320\",\"in\":[{\"portId\":\"in\"}],\"key\":219,\"location\":\"10471.896 2169.742\",\"group\":362},\n{\"label\":\"Remove assistant>\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\nEngine_fireOutput( nodeData, 'out', value );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":220,\"location\":\"9851.896 2018.409000000001\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":362},\n{\"label\":\"Travi translate Alex request in term of existing objects\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1930 70\",\"key\":221,\"location\":\"6620 1797.1060000000002\",\"group\":362},\n{\"label\":\"Request\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [Travi to Ropa] Take the cola_bottle_1 from the table_1 and open it. Take the glass_1 from the table_1 and hold it under the bottle to pour the coca-cola into the glass. Then, put the glass_1 on the tray_1.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":222,\"location\":\"9541.896 2018.809000000001\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":223,\"location\":\"9191.896 2018.809000000001\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":362},\n{\"label\":\"Request\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[Travi to Ropa] Take the cola_bottle_1 from the table_1 and open it. Take the glass_1 from the table_1 and hold it under the bottle to pour the coca-cola into the glass. Then, put the glass_1 on the tray_1.\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":224,\"location\":\"8891.896 2018.809000000001\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":362},\n{\"label\":\"User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> This is the environment state:\\n{\\\"gaze\\\":{\\\"fovea\\\":[],\\\"perif\\\":[]},\\\"hand_left\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"hand_right\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"lab\\\":{\\\"holdsObject\\\":[\\\"table_1\\\"]},\\\"table_1\\\":{\\\"type\\\":\\\"table\\\",\\\"color\\\":\\\"gray\\\",\\\"holdsObject\\\":[\\\"fridge_1\\\",\\\"microwave_1\\\",\\\"toaster_1\\\",\\\"plate_1\\\",\\\"glass_1\\\",\\\"mug_1\\\",\\\"cola_bottle_1\\\",\\\"tea_bag_1\\\",\\\"pitcher_1\\\",\\\"pitcher_2\\\",\\\"tray_1\\\"],\\\"isHoldByObject\\\":[\\\"lab\\\"]},\\\"fridge_1\\\":{\\\"type\\\":\\\"fridge\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"on\\\",\\\"temperature\\\":\\\"-5 degree\\\"},\\\"microwave_1\\\":{\\\"type\\\":\\\"microwave\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"toaster_1\\\":{\\\"type\\\":\\\"toaster\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"plate_1\\\":{\\\"type\\\":\\\"plate\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObjectF\\\":[\\\"toast_1\\\"],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\"},\\\"toast_1\\\":{\\\"type\\\":\\\"bread slice\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"plate_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"preparation\\\":\\\"raw\\\"},\\\"cola_bottle_1\\\":{\\\"type\\\":\\\"bottle\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.5,\\\"fillLevel\\\":0.5,\\\"holdsLiquid\\\":[\\\"coca-cola\\\"]},\\\"glass_1\\\":{\\\"type\\\":\\\"glass\\\",\\\"color\\\":\\\"transparent\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"mug_1\\\":{\\\"type\\\":\\\"mug\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"pitcher_1\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"blue\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"90 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"water\\\"]},\\\"pitcher_2\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"80 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"coffee\\\"]},\\\"tray_1\\\":{\\\"type\\\":\\\"tray\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]},\\\"tea_bag_1\\\":{\\\"type\\\":\\\"tea bag\\\",\\\"color\\\":\\\"brown\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]}}\\nThis is Alex request: \\n[Alex to Ropa] Please serve a coca-cola in a glass and put it on the tray.\\nPlease simply translate the request as decribed before \\nstarting with [Travi to Ropa].\\nVerify that your translation contains only names existing \\nin the environment state keys and no extra explanations\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":226,\"location\":\"8111.896 2153.2039999999997\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"Add user> header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":227,\"location\":\"7741.896 2153.504000000001\",\"editorPosition\":[918,39,712,140],\"group\":362},\n{\"label\":\"Ropa User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"This is the environment state:\\n{\\\"gaze\\\":{\\\"fovea\\\":[],\\\"perif\\\":[]},\\\"hand_left\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"hand_right\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"lab\\\":{\\\"holdsObject\\\":[\\\"table_1\\\"]},\\\"table_1\\\":{\\\"type\\\":\\\"table\\\",\\\"color\\\":\\\"gray\\\",\\\"holdsObject\\\":[\\\"fridge_1\\\",\\\"microwave_1\\\",\\\"toaster_1\\\",\\\"plate_1\\\",\\\"glass_1\\\",\\\"mug_1\\\",\\\"cola_bottle_1\\\",\\\"tea_bag_1\\\",\\\"pitcher_1\\\",\\\"pitcher_2\\\",\\\"tray_1\\\"],\\\"isHoldByObject\\\":[\\\"lab\\\"]},\\\"fridge_1\\\":{\\\"type\\\":\\\"fridge\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"on\\\",\\\"temperature\\\":\\\"-5 degree\\\"},\\\"microwave_1\\\":{\\\"type\\\":\\\"microwave\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"toaster_1\\\":{\\\"type\\\":\\\"toaster\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"plate_1\\\":{\\\"type\\\":\\\"plate\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObjectF\\\":[\\\"toast_1\\\"],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\"},\\\"toast_1\\\":{\\\"type\\\":\\\"bread slice\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"plate_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"preparation\\\":\\\"raw\\\"},\\\"cola_bottle_1\\\":{\\\"type\\\":\\\"bottle\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.5,\\\"fillLevel\\\":0.5,\\\"holdsLiquid\\\":[\\\"coca-cola\\\"]},\\\"glass_1\\\":{\\\"type\\\":\\\"glass\\\",\\\"color\\\":\\\"transparent\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"mug_1\\\":{\\\"type\\\":\\\"mug\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"pitcher_1\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"blue\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"90 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"water\\\"]},\\\"pitcher_2\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"80 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"coffee\\\"]},\\\"tray_1\\\":{\\\"type\\\":\\\"tray\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]},\\\"tea_bag_1\\\":{\\\"type\\\":\\\"tea bag\\\",\\\"color\\\":\\\"brown\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]}}\\nThis is Alex request: \\n[Alex to Ropa] Please serve a coca-cola in a glass and put it on the tray.\\nPlease simply translate the request as decribed before \\nstarting with [Travi to Ropa].\\nVerify that your translation contains only names existing \\nin the environment state keys and no extra explanations\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":228,\"location\":\"7411.896 2153.504000000001\",\"editorPosition\":[1298,840,405,318],\"group\":362},\n{\"label\":\"Create Ropa User Prompt\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"state\"},{\"portId\":\"request\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"request\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"This is the environment state:\\n<state>\\nThis is Alex request: \\n<request>\\nPlease simply translate the request as decribed before \\nstarting with [Travi to Ropa].\\nVerify that your translation contains only names existing \\nin the environment state keys and no extra explanations\",\"fileTypeName\":\"Template\",\"key\":229,\"location\":\"7041.896 2153.504000000001\",\"editorPosition\":[918,39,712,140],\"group\":362},\n{\"label\":\"Request\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Alex to Ropa] Please serve a coca-cola in a glass and put it on the tray.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":230,\"location\":\"6601.896 2249.742\",\"editorPosition\":[1606,107,758,253],\"group\":362},\n{\"label\":\"Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\\"gaze\\\":{\\\"fovea\\\":[],\\\"perif\\\":[]},\\\"hand_left\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"hand_right\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"lab\\\":{\\\"holdsObject\\\":[\\\"table_1\\\"]},\\\"table_1\\\":{\\\"type\\\":\\\"table\\\",\\\"color\\\":\\\"gray\\\",\\\"holdsObject\\\":[\\\"fridge_1\\\",\\\"microwave_1\\\",\\\"toaster_1\\\",\\\"plate_1\\\",\\\"glass_1\\\",\\\"mug_1\\\",\\\"cola_bottle_1\\\",\\\"tea_bag_1\\\",\\\"pitcher_1\\\",\\\"pitcher_2\\\",\\\"tray_1\\\"],\\\"isHoldByObject\\\":[\\\"lab\\\"]},\\\"fridge_1\\\":{\\\"type\\\":\\\"fridge\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"on\\\",\\\"temperature\\\":\\\"-5 degree\\\"},\\\"microwave_1\\\":{\\\"type\\\":\\\"microwave\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"toaster_1\\\":{\\\"type\\\":\\\"toaster\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"plate_1\\\":{\\\"type\\\":\\\"plate\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObjectF\\\":[\\\"toast_1\\\"],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\"},\\\"toast_1\\\":{\\\"type\\\":\\\"bread slice\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"plate_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"preparation\\\":\\\"raw\\\"},\\\"cola_bottle_1\\\":{\\\"type\\\":\\\"bottle\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.5,\\\"fillLevel\\\":0.5,\\\"holdsLiquid\\\":[\\\"coca-cola\\\"]},\\\"glass_1\\\":{\\\"type\\\":\\\"glass\\\",\\\"color\\\":\\\"transparent\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"mug_1\\\":{\\\"type\\\":\\\"mug\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"pitcher_1\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"blue\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"90 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"water\\\"]},\\\"pitcher_2\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"80 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"coffee\\\"]},\\\"tray_1\\\":{\\\"type\\\":\\\"tray\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]},\\\"tea_bag_1\\\":{\\\"type\\\":\\\"tea bag\\\",\\\"color\\\":\\\"brown\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]}}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":233,\"location\":\"5615.688 3496.972000000001\",\"editorPosition\":[1735,35,425,1463],\"group\":356},\n{\"label\":\"Alex decide to answer by its own or to delegate to the robot\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"2090 70\",\"key\":237,\"location\":\"6540 386.40200000000004\",\"group\":352},\n{\"label\":\"Assistant Input\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Alex to Human] The capital of Germany is Berlin.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":238,\"location\":\"6622 705.8630000000003\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"User Input\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] What is the capital of Germany ?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":239,\"location\":\"5650 866.9090000000023\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"Add history\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"history\"},{\"portId\":\"assistant\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"user\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"<history>\\n<user>\\n<assistant>\",\"fileTypeName\":\"Template\",\"key\":240,\"location\":\"7062 755.8630000000003\",\"editorPosition\":[918,39,712,140],\"group\":352},\n{\"label\":\"Alex Chat\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"\\n[Human to Alex] prepare me a warm tea in a glass and put it on the tray\\n\\n[Human to Alex] serve me a coka-cola in a glass and put it on the tray\\n\\n[Human to Alex] What is the capital of Germany ?\\n\\n[Human to Alex] prepare me a warm tea in a glass and put it on the tray\\n[Alex to Human] The capital of Germany is Berlin.\\n[Human to Alex] serve me a coka-cola in a glass and put it on the tray\\n[Alex to Human] The capital of Germany is Berlin.\\n[Human to Alex] What is the capital of Germany ?\\n[Alex to Human] The capital of Germany is Berlin.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":241,\"location\":\"7420 756.402\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"User Prompt\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"user> [Human to Alex] What is the capital of Germany ?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":242,\"location\":\"7422 905.6629999999996\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"Add user> header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"user> <in>\",\"fileTypeName\":\"Template\",\"key\":243,\"location\":\"7062 905.8630000000003\",\"editorPosition\":[918,39,712,140],\"group\":352},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":245,\"location\":\"5180 866.9090000000023\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":246,\"location\":\"5180 716.9090000000023\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":247,\"location\":\"4630 866.9090000000023\",\"group\":349},\n{\"label\":\"a coke in a glass on the tray\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"serve me a coka-cola in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":248,\"location\":\"4850 866.9090000000023\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"Capital germany\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"What is the capital of Germany ?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":249,\"location\":\"4850 716.9090000000023\",\"editorPosition\":[1606,107,758,253],\"group\":349},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 140\",\"in\":[{\"portId\":\"in\"}],\"key\":250,\"location\":\"10362 756.1680000000006\",\"group\":352},\n{\"label\":\"Alex\\nResponse\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"assistant> [Alex to Human] The capital of Germany is Berlin.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":251,\"location\":\"9572 655.8630000000003\",\"editorPosition\":[1606,107,758,253],\"group\":352},\n{\"label\":\"Alex Role Selector\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"alexToHuman\"},{\"portId\":\"alexToRopa\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nconst assistant = \\\"assistant> \\\";\\nvalue = value.substring(assistant.length);\\n\\nconst toRopa = '[Alex to Ropa] ';\\nconst idx = value.indexOf(toRopa);\\nif( idx != -1 ) {\\n  Engine_fireOutput( nodeData, 'alexToRopa', value );\\n} else {\\n  Engine_fireOutput( nodeData, 'alexToHuman', value );\\n}\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":252,\"location\":\"9872 654.862999999998\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":352},\n{\"label\":\"[Alex to Human] The capital of Germany is Berlin.\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":253,\"location\":\"10362 651.1680000000006\",\"group\":352},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":256,\"location\":\"8120 560\",\"editorPosition\":[1931,690,693,527],\"group\":352,\"color\":\"LightPink\"},\n{\"label\":\"JSON to Text\",\"category\":\"AIFlow_JSON2Text\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"onCompute\":\"AIFlowDSL_JSON2Text\",\"fileTypeName\":\"Converter\",\"key\":257,\"location\":\"9222 655.8630000000003\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"group\":352},\n{\"label\":\"Alex\\nResponse\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"isFile\":true,\"fileContent\":\"[\\n  {\\n    \\\"role\\\": \\\"assistant\\\",\\n    \\\"content\\\": \\\"[Alex to Human] The capital of Germany is Berlin.\\\"\\n  }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"fileServer/pictures/JSON_Data.png\",\"key\":258,\"location\":\"8922 655.8630000000003\",\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"editorPosition\":[1126,828,400,350],\"group\":352},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":170,\"location\":\"9730 1043.147\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":352},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 140\",\"in\":[{\"portId\":\"in\"}],\"key\":171,\"location\":\"7041.896 2343.504000000001\",\"group\":362},\n{\"label\":\"a warm tea in a cup on the tray\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":172,\"location\":\"4850 1011.6040000000002\",\"editorPosition\":[432,797,400,350],\"group\":349,\"color\":\"Violet\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":174,\"location\":\"4630 1011.6040000000002\",\"group\":349},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":175,\"location\":\"5180 1011.6040000000002\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"[Human to Alex] What is the capital of Germany ?\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 150\",\"in\":[{\"portId\":\"in\"}],\"key\":176,\"location\":\"6972 1055.8630000000003\",\"group\":352},\n{\"label\":\"\\n[Human to Alex] prepare me a warm tea in a glass and put it on the tray\\n\\n[Human to Alex] serve me a coka-cola in a glass and put it on the tray\\n\\n[Human to Alex] What is the capital of Germany ?\\n\\n[Human to Alex] prepare me a warm tea in a glass and put it on the tray\\n[Alex to Human] The capital of Germany is Berlin.\\n[Human to Alex] serve me a coka-cola in a glass and put it on the tray\\n[Alex to Human] The capital of Germany is Berlin.\\n[Human to Alex] What is the capital of Germany ?\\n[Alex to Human] The capital of Germany is Berlin.\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1210 330\",\"in\":[{\"portId\":\"in\"}],\"key\":177,\"location\":\"10360 1019.2070000000012\",\"group\":352},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":179,\"location\":\"4630 716.9090000000023\",\"group\":349},\n{\"label\":\"Roco try execute each command from the plan\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1610 60\",\"key\":196,\"location\":\"4850 5054.037\",\"group\":364},\n{\"label\":\"Roca makes a Plan from Alex request\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1530 30\",\"key\":244,\"location\":\"6721.896000000001 3197.8050000000003\",\"group\":363},\n{\"label\":\"Plan Executor\",\"category\":\"AIFlow_Component\",\"size\":\"240 160\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"plan\"},{\"portId\":\"feedback\"}],\"out\":[{\"portId\":\"rocoToAlex\"},{\"portId\":\"rocoToRopa\"},{\"portId\":\"rocoToRobi\"},{\"portId\":\"outIndex\"},{\"portId\":\"errorReached\"},{\"portId\":\"successReached\"},{\"portId\":\"tooManyReplan\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"feedback\",\"unit\":\"\",\"valueChanged\":true},{\"name\":\"maxReplan\",\"value\":\"0\",\"unit\":\"unit1\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n//debugger\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const plan = Engine_getInput( nodeData, 'plan', '' );\\n  const feedback = Engine_getInput( nodeData, 'feedback', '' );\\n  let counter = Engine_get( nodeData, 'commandIndex', 0 );\\n  const maxReplan = Engine_getProperty( nodeData, 'maxReplan', 0 );\\n  \\n  const replanCount = Engine_get( nodeData, 'replanCount', 0 );\\n  \\n  if( feedback ) {\\n    Engine_set( nodeData, 'commandIndex', counter );\\n    if( plan ) {\\n      const isReplan = execute( plan, feedback, counter);\\n      if( isReplan ) {\\n        if( replanCount < maxReplan ) {\\n          Engine_set( nodeData, 'replanCount', replanCount+1 );\\n        } else {\\n          Engine_fireOutput( nodeData, 'tooManyReplan' );\\n        }\\n      }\\n    }\\n  }\\n}\\nfunction execute( plan, feedback, cmdIndex ) {\\n  let isReplan = false;\\n  const commandList = plan.split('\\\\n');\\n  const toRocoStr = '[Ropa to Roco] ';\\n  const errorStr = '[Robi to Roco] Error:';\\n  let isErrorFound = ( feedback.startsWith( errorStr ) );\\n  \\n  if( isErrorFound ) {\\n    ////////////////////////////////\\n    // Tell ROPA to Replan\\n    ////////////////////////////////\\n    // Flag that we need a replan due to error\\n    isReplan = true;\\n    \\n    // Propagate error\\n    const errorMessage = feedback.slice('[Roco to Ropa] Error:'.length).trim();\\n    Engine_fireOutput( nodeData, 'errorReached', errorMessage );\\n    \\n    // Take replan actions\\n    let msg = '';\\n    if( cmdIndex == 0 )  {\\n    \\n      Engine_set( nodeData, 'commandIndex', cmdIndex );\\n      const lastCommand = '';\\n      \\n      msg = `[Roco to Ropa] Error: ${errorMessage}`;\\n    } else if( cmdIndex > 0 ) {\\n    \\n      cmdIndex--;\\n      Engine_set( nodeData, 'commandIndex', cmdIndex );\\n      \\n      const lastCommand = commandList[cmdIndex].slice( toRocoStr.length );\\n      const errorMessage = feedback.slice('[Roco to Ropa] Error:'.length).trim();\\n      msg = `[Roco to Ropa] Error: ${errorMessage}`;\\n    }\\n    \\n    Engine_fireOutput( nodeData, 'rocoToRopa', msg );\\n    Engine_fireOutput( nodeData, 'outIndex', ''+cmdIndex );\\n    \\n  } else if( cmdIndex >= 0 && cmdIndex < commandList.length-1 ) {\\n    ////////////////////////////////\\n    // Tell ROBI to Execute Command\\n    ////////////////////////////////\\n    \\n    const command = commandList[cmdIndex].slice( toRocoStr.length );\\n    cmdIndex++;\\n    Engine_set( nodeData, 'commandIndex', cmdIndex );\\n    const msg = `[Roco to Robi] ${command}`;\\n    Engine_fireOutput( nodeData, 'rocoToRobi', msg );\\n    Engine_fireOutput( nodeData, 'outIndex', ''+cmdIndex );\\n    \\n  } else if( cmdIndex >= commandList.length ) {\\n    ////////////////////////////////\\n    // Tell ALEX that Plan is Fully Executed\\n    ////////////////////////////////\\n    \\n    cmdIndex = 0;\\n    Engine_set( nodeData, 'commandIndex', cmdIndex );\\n    const msg = `[Roco to Alex] Plan has been executed successfully.`;\\n    Engine_fireOutput( nodeData, 'rocoToAlex', msg );\\n    Engine_fireOutput( nodeData, 'outIndex', ''+cmdIndex );\\n    \\n    Engine_fireOutput( nodeData, 'successReached', errorMessage );\\n  }\\n  \\n  return( isReplan );\\n}\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":265,\"location\":\"5950 5669.699999999999\",\"fileType\":\"text/javascript\",\"editorPosition\":[5522,1059,824,1516],\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":272,\"location\":\"6540 5908.114\",\"group\":364},\n{\"label\":\"feedback\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Robi to Roco] Error: cannot put pitcher_1 microwave_1 because both hands are empty.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":273,\"location\":\"5550 5900\",\"editorPosition\":[1606,107,758,253],\"group\":364},\n{\"label\":\"feedback ok\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Robi to Roco] Command executed with success\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":283,\"location\":\"5200 5900\",\"editorPosition\":[1606,107,758,253],\"group\":364},\n{\"label\":\"Plan\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Ropa to Roco] get pitcher_1 hand_left\\n[Ropa to Roco] gaze microwave_1\\n[Ropa to Roco] open_door microwave_1\\n[Ropa to Roco] put pitcher_1 microwave_1 hand_left\\n[Ropa to Roco] close_door microwave_1\\n[Ropa to Roco] set_temperature microwave_1 90\\n[Ropa to Roco] set_timer microwave_1 2\\n[Ropa to Roco] start microwave_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put mug_1 table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] set_timer memo 1\\n[Ropa to Roco] put tea_bag_1 mug_1\\n[Ropa to Roco] start memo\\n[Ropa to Roco] set_timer memo 60\\n[Ropa to Roco] wait memo\\n[Ropa to Roco] gaze tray_1\\n[Ropa to Roco] get tray_1 hand_left\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] set_timer memo 1\\n[Ropa to Roco] wait memo\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] remove tea_bag_1\\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 mug_1\\n[Ropa to Roco] put pitcher_1 microwave_1 hand_left\\n[Ropa to Roco] set_temperature microwave_1 20\\n[Ropa to Roco] set_timer memo 1\\n[Ropa to Roco] start memo\\n[Ropa to Roco] gaze tray_1\\n[Ropa to Roco] get tray_1 hand_left\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] get mug_1 hand_right\\n[Ropa to Roco] put mug_1 tray_1\\n[Ropa to Roco] set_timer memo 1\\n[Ropa to Roco] wait memo\\n[Ropa to Roco] gaze tray_1\\n[Ropa to Roco] put tray_1 table_1.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":270,\"location\":\"5190 5670\",\"editorPosition\":[1606,107,758,253],\"group\":364},\n{\"label\":\"Create Ropa Feedback Prompt\",\"category\":\"AIFlow_Template\",\"size\":\"330 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"state\"},{\"portId\":\"request\"},{\"portId\":\"feedback\"},{\"portId\":\"plan\"},{\"portId\":\"index\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"feedback,state,plan,index,request\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"In order to fullfill the request: \\n<request>\\nThis plan was executed by Roco until line <index>:\\n<plan>\\nThe environment state at this step is:\\n<state>\\nRoco give now this feedback:\\n<feedback>\\nPlease make the smallest modification of the plan.\\nDo not modify the first <index> lines of the plan. \\nCopy the first <index> lines of the plan and add \\nyour modification to the plan to make the plan fullfil \\nthe request.\\nModified plan:\",\"fileTypeName\":\"Template\",\"key\":215,\"location\":\"7121.896000000001 3597.8050000000003\",\"editorPosition\":[918,39,712,140],\"group\":363},\n{\"label\":\"Feedback\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Ropa] Error: cannot put pitcher_1 microwave_1 because both hands are empty.\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":232,\"location\":\"6651.896000000001 3697.8050000000003\",\"editorPosition\":[51,1987,930,156],\"group\":363},\n{\"label\":\"Current Plan Index\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"5\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":284,\"location\":\"6651.896000000001 3847.8050000000003\",\"editorPosition\":[1797,1952,193,66],\"group\":363},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1050 560\",\"in\":[{\"portId\":\"in\"}],\"key\":267,\"location\":\"6530 5179.885\",\"group\":364},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"onCompute\":\"AIFlowDSL_LLM\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":292,\"location\":\"8532 645.8630000000003\",\"group\":352},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"onCompute\":\"AIFlowDSL_LLM\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":295,\"location\":\"8491.896 2003.5040000000008\",\"group\":362},\n{\"label\":\"OpenAI GPT\",\"category\":\"AIFlow_LLM\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"onCompute\":\"AIFlowDSL_LLM\",\"in\":[{\"portId\":\"system\"},{\"portId\":\"inHistory\"},{\"portId\":\"user\"}],\"out\":[{\"portId\":\"outHistory\"},{\"portId\":\"assistant\"}],\"rows\":[{\"name\":\"model\",\"value\":\"gpt-3.5-turbo-0301\",\"unit\":\"\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"maxConcurency\",\"value\":\"5\",\"unit\":\"\"},{\"name\":\"maxRetry\",\"value\":\"3\",\"unit\":\"\"},{\"name\":\"timeOut\",\"value\":\"4\",\"unit\":\"s\"},{\"name\":\"computeBarrier\",\"value\":\"inHistory,user\"}],\"fileTypeName\":\"LLM\",\"key\":298,\"location\":\"8681.896 3441.567000000001\",\"group\":363},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":329,\"location\":\"6540 5988.114\",\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":330,\"location\":\"6521.896 5614.342000000002\",\"group\":364},\n{\"label\":\"Command Checker\",\"category\":\"AIFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"state\"},{\"portId\":\"command\"}],\"out\":[{\"portId\":\"simCommand\"},{\"portId\":\"feedback\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"command\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n//debugger\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nvar state = JSON.parse(Engine_getInput( nodeData, 'state', '{}' ));\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const info = checkIfCommandIsValid( value );\\n  if( info.isValid ) {\\n    Engine_fireOutput( nodeData, 'simCommand', info.command );\\n  } else {\\n    Engine_fireOutput( nodeData, 'feedback', info.errorMsg );\\n  }\\n}\\n\\n// TODO: Test 2 strategies: \\n// Strategy1: just give an error stating the reason of failure\\n// Strategy2: same as 1 + suggest a command to do or a reasonning to apply\\n// Also check object affordances for each command\\n// Abstract commands like open instead of screw or open_door to get minimal \\n//   representation for different abstraction level\\n\\nfunction checkIfCommandIsValid( value ) {\\n  const toRobi = '[Roco to Robi] ';\\n  const toRoco = '[Robi to Roco] ';\\n  const idx = value.indexOf(toRobi);\\n  let errorMsg = '';\\n  let isValid = true;\\n  let command = '';\\n  if( idx != -1 ) {\\n    command = value.substring( idx + toRobi.length ).trim();\\n    if( command ) {\\n      isValid = true;\\n    } else {\\n      isValid = false;\\n      errorMsg = `${toRoco}Error: no command received.`;\\n    }\\n  } else {\\n    isValid = false;\\n    errorMsg = `${toRoco}Error: wrong command syntax. The command must have the syntax: ${toRobi}<command>.`;\\n  }\\n  const tokenList = command.split( ' ' );\\n  if( tokenList && isValid ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    const objectName2 = tokenList[2] || '';\\n    let handName = objectName2;\\n    \\n    // Check if parameters are valid\\n    if( objectName1 ) {\\n      if( !isObjectExist( objectName1 ) ) {\\n        errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n        isValid = false;\\n      }\\n    }\\n    if( objectName2 ) {\\n      if( !isObjectExist( objectName2 ) ) {\\n        errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} does not exist in environment state.`;\\n        isValid = false;\\n      }\\n    }\\n    if( !handName ) {\\n      handName = getEmptyHand();\\n    }\\n    \\n    if( isValid ) {\\n      // Check if commandName is valid\\n      switch( commandName ) {    \\n        case 'put':\\n          if( isBothHandEmpty() ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because both hands are empty.`;\\n            isValid = false;\\n          } else if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectInOneHand( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;         \\n          } else if( !isObjectExist( objectName2 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} does not exist in environment state.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'get':\\n          if( isBothHandFull() ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because both hands are already full with objects.`;\\n            isValid = false;\\n          } else if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectExist( handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not the name of a hand.`;\\n            isValid = false;         \\n          } else if( !isHandEmpty( handName ) ) {\\n            const objectInHand = getObjectInHand( handName );\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} already contains ${objectInHand}.`;\\n            isValid = false;\\n          } else {\\n            command = `get ${objectName1} table_1 ${handName}`;\\n            isValid = true;\\n          }\\n          break;\\n        case 'poor':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectInOneHand( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;\\n          } else if( !isObjectPourable( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} do not contain a liquid.`;\\n            isValid = false;\\n          } else if( !isObjectExist( objectName2 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName2} does not exist in environment state.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'screw':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectInOneHand( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not in a hand.`;\\n            isValid = false;\\n          } else if( !isOneHandEmpty() ) {\\n            const busyHand = getHandNotHoldingObject( objectName1 );\\n            const objectInHand = getObjectInHand( busyHand );\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${busyHand} is not free it holds ${objectInHand}.`;\\n            isValid = false;\\n          } else if( !isObjectOpenable( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is not an object you can open by screwing it.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'open_door':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectOpenable( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no door to open.`;\\n            isValid = false;\\n          } else if( isObjectOpened( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is already opened.`;\\n            isValid = false;\\n          } else if( !isHandEmpty( handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not empty.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'close_door':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectOpenable( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no door to close.`;\\n            isValid = false;\\n          } else if( !isObjectOpened( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} is already closed.`;\\n            isValid = false;\\n          } else if( !isHandEmpty( handName ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${handName} is not empty.`;\\n            isValid = false;\\n          }\\n          break;\\n        case 'finger_push':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          } else if( !isObjectPowerable() ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} has no button to power on or off.`;\\n            isValid = false;\\n          } \\n          break;\\n        case 'gaze':\\n          if( !isObjectExist( objectName1 ) ) {\\n            errorMsg = `${toRoco}Error: cannot ${command} because ${objectName1} does not exist in environment state.`;\\n            isValid = false;\\n          }\\n          break;\\n      }\\n    }\\n  }\\n  return( { command, isValid, errorMsg } );\\n}\\n\\nfunction isObjectExist( objectName ) {\\n  return( state[objectName] != undefined );\\n}\\nfunction isHandEmpty( handName ) {\\n  return( state[handName].holdsObject.length == 0 );\\n}\\nfunction isOneHandEmpty() {\\n  return ( isHandEmpty( 'hand_right' ) || isHandEmpty( 'hand_left' ) );\\n}\\nfunction isBothHandEmpty() {\\n  return ( isHandEmpty( 'hand_right' ) && isHandEmpty( 'hand_left' ) );\\n}\\nfunction isBothHandFull() {\\n  return ( !isHandEmpty( 'hand_right' ) && !isHandEmpty( 'hand_left' ) );\\n}\\nfunction isObjectInHand( handName, objectName ) {\\n  return( state[handName].holdsObject.includes( objectName ) );\\n}\\nfunction isObjectInOneHand( objectName ) {\\n  return( isObjectInHand( 'hand_right', objectName ) || isObjectInHand( 'hand_left', objectName ) );\\n}\\nfunction isObjectOpenable( objectName ) {\\n  return( state[objectName].closure != undefined );\\n}\\nfunction isObjectOpened( objectName ) {\\n  return( state[objectName].closure == 'opened'? true: false );\\n}\\nfunction isObjectPowerable( objectName ) {\\n  return( state[objectName].power != undefined );\\n}\\nfunction isObjectPoweredOn( objectName ) {\\n  return( state[objectName].power == 'on'? true: false );\\n}\\nfunction isObjectPourable( objectName ) {\\n  return( state[objectName].holdsLiquid != undefined );\\n}\\nfunction getEmptyHand() {\\n  if( isHandEmpty( 'hand_right' ) ) {\\n    return( 'hand_right' );\\n  } else if( isHandEmpty( 'hand_left' ) ) {\\n    return( 'hand_left' );\\n  } else {\\n    return( '' );\\n  }\\n}\\nfunction getHandNotHoldingObject( objectName ) {\\n  if( isObjectInHand( 'hand_right', objectName ) ) {\\n    return( 'hand_left' );\\n  } else if ( isObjectInHand( 'hand_left', objectName ) ) {\\n    return( 'hand_right' );\\n  } else {\\n    return( '' );\\n  }\\n}\\nfunction getObjectInHand( handName ) {\\n  return( state[objectName].holdsObject[0] );\\n}\\n\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":255,\"location\":\"8811.896 5724.142000000002\",\"editorPosition\":[1357,1125,970,1461],\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 150\",\"in\":[{\"portId\":\"in\"}],\"key\":263,\"location\":\"6540 5788.114\",\"group\":364},\n{\"label\":\"Simulator of Simulator\",\"category\":\"AIFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"simCommand\"}],\"out\":[{\"portId\":\"simFeedback\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nconst inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const feedback = 'Success';\\n  Engine_fireOutput( nodeData, 'simFeedback', feedback );\\n}\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":225,\"location\":\"9710 5509.799999999999\",\"editorPosition\":[2261,424,400,350],\"group\":364},\n{\"label\":\"Simulator Command\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"open_door microwave_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":236,\"location\":\"9290 5740\",\"editorPosition\":[1735,35,425,1463],\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":266,\"location\":\"9311.896 5964.342000000002\",\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":268,\"location\":\"10400 5550\",\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1900 70\",\"in\":[{\"portId\":\"in\"}],\"key\":271,\"location\":\"9310 6040\",\"group\":364},\n{\"label\":\"Update Environment State\",\"category\":\"AIFlow_Component\",\"size\":\"250 100\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"oldState\"},{\"portId\":\"simCommand\"},{\"portId\":\"simFeedback\"}],\"out\":[{\"portId\":\"newState\"},{\"portId\":\"feedback\"},{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"simFeedback\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\nvar state = JSON.parse( Engine_getInput( nodeData, 'oldState', '{}' ) );\\nvar command = Engine_getInput( nodeData, 'simCommand', '' );\\nvar simFeedback = Engine_getInput( nodeData, 'simFeedback', '' );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  const toRoco = '[Robi to Roco] ';\\n  if( simFeedback == 'Success' ) {\\n    simFeedback = updateEnvironmentState( command );\\n  } \\n  const feedback = `${toRoco}${simFeedback}`;\\n  let newState = JSON.stringify( state, null, 2 );\\n  console.log(newState);\\n  Engine_fireOutput( nodeData, 'feedback', feedback );\\n  Engine_fireOutput( nodeData, 'newState', newState );\\n}\\n\\nfunction updateEnvironmentState( command ) {\\n  tokenList = command.split( ' ' );\\n  if( tokenList ) {\\n    const commandName = tokenList[0] || '';\\n    const objectName1 = tokenList[1] || '';\\n    let objectName2 = tokenList[2] || '';\\n    let handName = tokenList[3] || '';\\n    switch( commandName ) {\\n      case 'get':\\n        getObjectInHand( handName, objectName1 );\\n        response = `Success: ${objectName1} is in ${handName}.`;\\n        break;\\n      case 'put':\\n        if( isObjectInHand( 'hand_right', objectName1 ) ) {\\n          objectName2 = putObjectOnObject( 'hand_right', objectName2 );\\n        } else if( isObjectInHand( 'hand_left', objectName1 ) ) {\\n          objectName2 = putObjectOnObject( 'hand_left', objectName2 );\\n        }\\n        response = `Success: ${objectName1} is in/on ${objectName2}.`;\\n        break;\\n      case 'gaze':\\n        gazeAtObject( objectName1 );\\n        response = `Success:  ${objectName1} is gazed at.`;\\n        break;\\n      case 'open_door':\\n        setClosure( objectName1, 'opened' );\\n        response = `Success: ${objectName1} is opened.`;\\n        break;\\n      case 'close_door':\\n        setClosure( objectName1, 'closed' );\\n        response = `Success: ${objectName1} is closed.`;\\n        break;\\n      case 'finger_push':\\n        if( isObjectPoweredOn( objectName1 ) ) {\\n          setPower( objectName1, 'off' );\\n          response = `Success: ${objectName1} is switched on.`;\\n        } else {\\n          setPower( objectName1, 'on' );\\n          response = `Success: ${objectName1} is switched off.`;\\n        }\\n        break;\\n      case 'pour':\\n        const liquid = getLiquidInObject( objectName1 );\\n        const level = pourObject( objectName1, objectName2 );\\n        if( level > 0 ) {\\n          response = `Success: Poured ${level} litter of ${liquid} from ${objectName1} into ${objectName2}.`;\\n        } else {\\n          response = `Error: ${objectName1} is empty.`;\\n        }\\n        break;\\n      case 'screw':\\n        if( isObjectOpened( objectName1 ) ) {\\n          setClosure( objectName1, 'closed' );\\n          response = `Success: ${objectName1} is closed.`;\\n        } else {\\n          setClosure( objectName1, 'opened' );\\n          response = `Success: ${objectName1} is opened.`;\\n        }\\n        break;\\n    }\\n  }\\n  return( response );\\n}\\nfunction isHandEmpty( handName ) {\\n  return( state[handName].holdsObject.length == 0 );\\n}\\nfunction isBothHandEmpty() {\\n  return ( isHandEmpty( 'hand_right' ) && isHandEmpty( 'hand_left' ) );\\n}\\nfunction isObjectInHand( handName, objectName ) {\\n  return( state[handName].holdsObject.includes( objectName ) );\\n}\\nfunction isObjectOpened( objectName ) {\\n  return( state[objectName].closure == 'opened'? true: false );\\n}\\nfunction setClosure( objectName, status ) {\\n  state[objectName].closure = status;\\n}\\nfunction isObjectPoweredOn( objectName ) {\\n  return( state[objectName].power == 'on'? true: false );\\n}\\nfunction setPower( objectName, status ) {\\n  state[objectName].power = status;\\n}\\nfunction pourObject( fromName, toName ) {\\n  if( state[fromName].fillLevel >= 0 ) {\\n    state[toName].fillLevel = Math.min( state[toName].volume, state[fromName].fillLevel );\\n    state[fromName].fillLevel -= state[toName].fillLevel;\\n    state[fromName].fillLevel = Math.max( 0, state[fromName].fillLevel );\\n    return( state[toName].fillLevel );\\n  }\\n}\\nfunction getLiquidInObject( objectName ) {\\n  return( state[objectName].holdsLiquid[0] );\\n}\\nfunction getObjectInHand( handName, objectName ) {\\n  // Hand now holds objectName \\n  state[handName].holdsObject.push( objectName );\\n  // ObjectName is now holded by hand\\n  const previousHolder = state[objectName].isHoldByObject.shift();\\n  state[objectName].isHoldByObject.push( handName );\\n  // previousHolder does not hold objectName anymore\\n  let objectList = state[previousHolder].holdsObject;\\n  state[previousHolder].holdsObject = objectList.filter( (d)=> d != objectName );\\n}\\nfunction putObjectOnObject( handName, containerName ) {\\n  containerName = containerName || 'table_1';\\n  console.log('putObjectOnObject', handName, containerName);\\n  // Hand now holds nothing \\n  const objectName = state[handName].holdsObject.shift();\\n  // ObjectName is now holded by containerName\\n  state[objectName].isHoldByObject.shift();\\n  state[objectName].isHoldByObject.push( containerName );\\n  // containerName now holds objectName \\n  state[containerName].holdsObject.push( objectName );\\n  return( containerName );\\n}\\nfunction gazeAtObject( objectName ) {\\n  state.gaze.fovea = [objectName];\\n  // Get parent object\\n  const parent = state[objectName].isHoldByObject;\\n  state.gaze.perif = state[parent[0]].holdsObject;\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":280,\"location\":\"10740 5740\",\"editorPosition\":[3755,995,765,1517],\"group\":364},\n{\"label\":\"Simulator Feedback\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Success\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":288,\"location\":\"10320 5820\",\"editorPosition\":[1735,35,425,1463],\"group\":364},\n{\"label\":\"New Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"pitcher_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":294,\"location\":\"5220 3680\",\"editorPosition\":[1208,387,400,350],\"group\":356},\n{\"label\":\"Initial Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\\"gaze\\\":{\\\"fovea\\\":[],\\\"perif\\\":[]},\\\"hand_left\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"hand_right\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"lab\\\":{\\\"holdsObject\\\":[\\\"table_1\\\"]},\\\"table_1\\\":{\\\"type\\\":\\\"table\\\",\\\"color\\\":\\\"gray\\\",\\\"holdsObject\\\":[\\\"fridge_1\\\",\\\"microwave_1\\\",\\\"toaster_1\\\",\\\"plate_1\\\",\\\"glass_1\\\",\\\"mug_1\\\",\\\"cola_bottle_1\\\",\\\"tea_bag_1\\\",\\\"pitcher_1\\\",\\\"pitcher_2\\\",\\\"tray_1\\\"],\\\"isHoldByObject\\\":[\\\"lab\\\"]},\\\"fridge_1\\\":{\\\"type\\\":\\\"fridge\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"on\\\",\\\"temperature\\\":\\\"-5 degree\\\"},\\\"microwave_1\\\":{\\\"type\\\":\\\"microwave\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"toaster_1\\\":{\\\"type\\\":\\\"toaster\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"plate_1\\\":{\\\"type\\\":\\\"plate\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObjectF\\\":[\\\"toast_1\\\"],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\"},\\\"toast_1\\\":{\\\"type\\\":\\\"bread slice\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"plate_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"preparation\\\":\\\"raw\\\"},\\\"cola_bottle_1\\\":{\\\"type\\\":\\\"bottle\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.5,\\\"fillLevel\\\":0.5,\\\"holdsLiquid\\\":[\\\"coca-cola\\\"]},\\\"glass_1\\\":{\\\"type\\\":\\\"glass\\\",\\\"color\\\":\\\"transparent\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"mug_1\\\":{\\\"type\\\":\\\"mug\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"pitcher_1\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"blue\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"90 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"water\\\"]},\\\"pitcher_2\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"80 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"coffee\\\"]},\\\"tray_1\\\":{\\\"type\\\":\\\"tray\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]},\\\"tea_bag_1\\\":{\\\"type\\\":\\\"tea bag\\\",\\\"color\\\":\\\"brown\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]}}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":345,\"location\":\"5221.896 3397.577\",\"editorPosition\":[1735,35,425,1463],\"group\":356,\"color\":\"#ccffcc\"},\n{\"label\":\"User Request Selection\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 70\",\"key\":348,\"location\":\"4640 518.9520000000001\",\"group\":349},\n{\"label\":\"User Input\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":349,\"location\":\"4610 830.0004345703126\",\"font\":\"175px sans-serif\"},\n{\"label\":\"[Alex] Decision on LLM answer or Robot Request\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":352,\"location\":\"6499.999932584347 759.9999345703131\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Environment State\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"660 70\",\"key\":355,\"location\":\"5215.688 3293.0320000000024\",\"group\":356},\n{\"label\":\"Environment\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":356,\"location\":\"5168.103515625 3486.211434570314\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Pass Through\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"},{\"portId\":\"event\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'event' );\\nEngine_fireOutput( nodeData, 'out', value );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":358,\"location\":\"4810 5680\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":364},\n{\"label\":\"Plan\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] open cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":361,\"location\":\"10501.896 3457.8050000000003\",\"editorPosition\":[1606,107,758,253],\"group\":363},\n{\"label\":\"[TRAVI] Reformulate request into \\nsteps with environment name_id\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":362,\"location\":\"6549.999515625 2080.000434570313\",\"font\":\"175px sans-serif\"},\n{\"label\":\"[ROPA] Translate sequence of\\nsteps into a robot plan\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":363,\"location\":\"6599.999515625001 3731.0979345703126\",\"font\":\"175px sans-serif\"},\n{\"label\":\"[ROCO] Execute plan and in case of error ask to replan\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":364,\"location\":\"4758.103515625 5812.4425\",\"font\":\"175px sans-serif\"},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":264,\"location\":\"6520 5518.013999999999\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":364},\n{\"label\":\"Command\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[Roco to Robi] put pitcher_1 microwave_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":274,\"location\":\"8260 5678.114\",\"editorPosition\":[1735,35,425,1463],\"group\":364},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":278,\"location\":\"6500 6088.114\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":364},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":332,\"location\":\"5960 5900\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":364},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":344,\"location\":\"10160 3789.7999999999993\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":363},\n{\"label\":\"[Travi to Ropa] Take the cola_bottle_1 from the table_1 and open it. Take the glass_1 from the table_1 and hold it under the bottle to pour the coca-cola into the glass. Then, put the glass_1 on the tray_1.\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1220 320\",\"in\":[{\"portId\":\"in\"}],\"key\":357,\"location\":\"7130 4050\",\"group\":363},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":359,\"location\":\"8551.896 2169.642\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":362},\n{\"label\":\"clear\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"Ivory\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"clear\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_fireOutput( nodeData, 'clear', '' );\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"\",\"key\":275,\"location\":\"5200 5520\",\"fileType\":\"text/javascript\",\"editorPosition\":[1242,669,655,184],\"group\":364},\n{\"label\":\"Robot Client\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"message\"}],\"out\":[{\"portId\":\"feedback\"},{\"portId\":\"status\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"wsURL\",\"value\":\"localhost:35000\",\"unit\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\nEngine_set( nodeData, 'command', value );\\n\\n\\n//--------------------------------\\n// Communication with robot server\\n//--------------------------------\\nfunction sendCommand() {\\n  // Value is the command supposed to be send to the robot client\\n  ws.send( value );\\n}\\n\\n// Instanciate websocket only one time\\nvar ws = Engine_get( nodeData, 'ws', null );\\nif( !ws ) {\\n  ws = newWS( sendCommand );\\n  Engine_set( nodeData, 'ws', ws );\\n} else {\\n  checkSocketState( ws, sendCommand );\\n}\\n\\nfunction newWS( onConnected  ) {\\n  const wsURL = appData.me.getProperty( modelId, nodeData, 'wsURL' );\\n  let ws = null;\\n  ws = new WebSocket( `ws://${wsURL}/` );\\n  if( ws ) {\\n    ws.onmessage = (event)=> {\\n      const msg = event.data;\\n      Engine_fireOutput( nodeData, 'status', 'Received response' );\\n      if( msg == 'Success' ) {\\n        Engine_fireOutput( nodeData, 'feedback', msg );\\n      }\\n    };\\n    ws.onopen = (event)=> {\\n      Engine_fireOutput( nodeData, 'status', 'Open websocket' );\\n      if( onConnected ) {\\n        onConnected();\\n      } \\n    };\\n    ws.onclose = (event)=> {\\n      ws = null;\\n      Engine_set( nodeData, 'ws', ws );\\n      Engine_fireOutput( nodeData, 'status', 'Server not running' );\\n    };\\n    ws.onerror = (event)=> {\\n      Engine_fireOutput( nodeData, 'status', 'Error' );\\n    };\\n    checkSocketState( ws );\\n  }\\n  return( ws );\\n}\\nfunction checkSocketState( ws, onConnected ) {\\n  console.log( 'readyState:', ws.readyState );\\n  switch( ws.readyState ){\\n    case 0: // CONNECTING: Socket has been created. The connection is not yet open.\\n      Engine_fireOutput( nodeData, 'status', 'Connecting to websocket' );\\n      break;\\n    case 1: // OPEN: The connection is open and ready to communicate.\\n      Engine_fireOutput( nodeData, 'status', 'Opened websocket' );\\n      if( onConnected ) {\\n        onConnected();\\n      }\\n      break;\\n    case 2: // CLOSING: The connection is in the process of closing.\\n      Engine_fireOutput( nodeData, 'status', 'Closing websocket' );\\n      break;\\n    case 3: // CLOSED: The connection is closed or couldn't be opened.\\n      Engine_fireOutput( nodeData, 'status', 'Server not running' );\\n      break;\\n  }\\n}\\n\",\"fileTypeName\":\"Component\",\"iconURL\":\"/fileServer/pictures/Robot_Server.png\",\"key\":269,\"location\":\"9710 5400\",\"fileType\":\"text/javascript\",\"editorPosition\":[1148,114,805,1528],\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":277,\"location\":\"10400 5410\",\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":285,\"location\":\"10390 5210\"},\n{\"label\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n      \\\"pitcher_1\\\"\\n    ],\\n    \\\"perif\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"810 9500\",\"in\":[{\"portId\":\"in\"}],\"key\":331,\"location\":\"12610 3120\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":346,\"location\":\"4490 2690.152\",\"group\":153,\"color\":\"#ccffcc\"},\n{\"label\":\"Engine Code 1.3\",\"color\":\"orange\",\"size\":\"290 140\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/27.js\",\"key\":115,\"location\":\"8960 -1090\",\"isIncludeScript\":true,\"editorPosition\":[2629,811,648,1794]},\n{\"label\":\"BP\",\"category\":\"AIFlow_BreakPoint\",\"size\":\"80 80\",\"in\":[{\"portId\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":114,\"location\":\"10370 563.1469999999999\",\"group\":352},\n{\"label\":\"BP\",\"category\":\"AIFlow_BreakPoint\",\"size\":\"80 80\",\"in\":[{\"portId\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":117,\"location\":\"10430 2090\"},\n{\"label\":\"Execution Engine\",\"category\":\"Hierarchy_Engine\",\"size\":\"240 120\",\"isFile\":true,\"fileType\":\"application/html\",\"fileContent\":\"//var event, obj, nodeData;\\nvar o = Object.assign( {}, nodeData );\\no.fileContent='';\\nvar nodeStr = JSON.stringify( o );\\nhtml = `\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Reset\\\" )'>Reset</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Run\\\" )'>Run</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Step\\\" )'>Step</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Pause\\\" )'>Pause</button><br>\\n`\",\"buttons\":[{\"name\":\"Reset\",\"checked\":true},{\"name\":\"Run\",\"checked\":true},{\"name\":\"Step\",\"checked\":false},{\"name\":\"Pause\",\"checked\":false}],\"rows\":[{\"name\":\"isAutostart\",\"value\":\"false\"},{\"name\":\"isStepByStep\",\"value\":\"true\",\"valueChanged\":true},{\"name\":\"runTimeout\",\"value\":\"0.1\",\"valueChanged\":\"true\"},{\"name\":\"isStepByStepDeepFirst\",\"value\":\"true\"},{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"isNodePersistencyUsed\",\"value\":\"true\"}],\"key\":118,\"location\":\"5490 2810\",\"isLocalDiv\":true,\"editorPosition\":[686,319,236,180]},\n{\"label\":\"BP\",\"category\":\"AIFlow_BreakPoint\",\"size\":\"80 80\",\"in\":[{\"portId\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":119,\"location\":\"11020 3270\",\"group\":363},\n{\"label\":\"BP\",\"category\":\"AIFlow_BreakPoint\",\"size\":\"80 80\",\"in\":[{\"portId\":\"in\"}],\"isFile\":true,\"fileType\":\"text/javascript\",\"fileContent\":\"var event, obj, nodeData;\\n\\nEngine_doPause();\",\"key\":121,\"location\":\"11290 5740\",\"group\":364},\n{\"label\":\"Slide 7\",\"category\":\"CodeFlow_Button\",\"size\":\"654 64\",\"color\":\"YellowGreen\",\"buttons\":[{\"name\":\"Next\",\"checked\":false},{\"name\":\"Prev\",\"checked\":true}],\"isFile\":true,\"fileContent\":\"var event, obj, nodeData;\\n//console.log( 'NodeData Info: '+JSON.stringify( nodeData ) );\\n//console.log( 'Button Label: '+obj.data.name );\\n//console.log( 'Button Status: '+obj.data.checked );\\n\\nnavigateToSlide( obj.data.name, nodeData.label );\\n\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":141,\"location\":\"7560 -550\",\"editorPosition\":[733,952,608,550]},\n{\"label\":\"\",\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_BigComment\",\"size\":\"650 380\",\"key\":155,\"location\":\"7560 -310\"},\n{\"label\":\"Model\",\"size\":\"180 60\",\"category\":\"Hierarchy_Model\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphModel$\",\"key\":156,\"location\":\"7620 -280\"},\n{\"label\":\"Selection\",\"size\":\"180 60\",\"category\":\"Hierarchy_Selection\",\"isFile\":true,\"fileType\":\"text/json\",\"isSystem\":\"$GraphSelection$\",\"key\":157,\"location\":\"7620 -210\"},\n{\"label\":\"Graph Info\",\"category\":\"Hierarchy_GraphInfo\",\"size\":\"260 80\",\"color\":\"SkyBlue\",\"rows\":[{\"name\":\"Name\",\"value\":\"SMILE LLM-Based Planner\",\"valueChanged\":true},{\"name\":\"Version\",\"value\":\"1.0\"},{\"name\":\"Date\",\"value\":\"@getDate()\"},{\"name\":\"Path\",\"value\":\"./\"},{\"name\":\"Authors\",\"value\":\"Frankonello\"}],\"key\":158,\"location\":\"7920 -300\"},\n{\"label\":\"GWW 2023 Demo\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"620 120\",\"key\":159,\"location\":\"7580 -440\"},\n{\"label\":\"Execution Engine\\n(Link)\",\"color\":\"yellow\",\"size\":\"250 240\",\"category\":\"Hierarchy_CodeInGraph\",\"isFile\":true,\"fileContent\":\"//var event, obj, nodeData;\\nvar o = Object.assign( {}, nodeData );\\no.fileContent='';\\nvar nodeStr = JSON.stringify( o );\\nhtml = `\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Reset\\\" )'>Reset</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Run\\\" )'>Run</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Step\\\" )'>Step</button><br>\\n<button style='width:100%;height:40px;' onclick='Engine_executeAction( ${nodeStr}, \\\"Pause\\\" )'>Pause</button><br>\\n`\",\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"key\":161,\"location\":\"5200 2870\",\"linkToKey\":118},\n{\"label\":\"Init Env\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":153,\"location\":\"4320 2639.9999345703127\",\"font\":\"175px sans-serif\"},\n{\"label\":\"Initialize Environment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 70\",\"key\":162,\"location\":\"4350 2600.457\",\"group\":153},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"320 240\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"fileServer/pictures/SMILESimulator.png\",\"key\":154,\"location\":\"9830 5320\"},\n{\"label\":\"User Input\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"360 70\",\"key\":164,\"location\":\"4770 618.9520000000001\",\"group\":349,\"fontColor\":\"Red\"},\n{\"label\":\"Alex System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"680 70\",\"key\":165,\"location\":\"7910 470\",\"fontColor\":\"Red\"},\n{\"label\":\"TRAVI System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 70\",\"key\":167,\"location\":\"7680 1917.1060000000002\",\"fontColor\":\"Red\",\"group\":362},\n{\"label\":\"ROPA System Prompt\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"750 70\",\"key\":169,\"location\":\"8190 3220\",\"fontColor\":\"Red\",\"group\":363},\n{\"label\":\"Break Point to \\n[alexToRopa]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"90 30\",\"key\":178,\"location\":\"10130 700\",\"fontColor\":\"Red\",\"group\":352},\n{\"label\":\"Break Point to [out]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"120 30\",\"key\":181,\"location\":\"10170 2021.3180000000002\",\"fontColor\":\"Red\",\"group\":362},\n{\"label\":\"Break Point to [ropaToRoco]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"120 30\",\"key\":183,\"location\":\"10320 3400\",\"fontColor\":\"Red\",\"group\":363},\n{\"label\":\"Break Point to [feedback]\",\"category\":\"TextLabels_Size0\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"150 30\",\"key\":185,\"location\":\"11010 5790\",\"fontColor\":\"Red\",\"group\":364},\n{\"label\":\"User\",\"category\":\"Pictures_Basic\",\"size\":\"160 340\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/woman.png\",\"key\":166,\"location\":\"10330.998 -1745.727\",\"group\":289},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"220 340\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/robot.png\",\"key\":168,\"location\":\"10940.998 -1755.727\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":180,\"location\":\"11060.998 -1555.727\",\"label\":\"TRAVI\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":184,\"location\":\"10870.998 -1715.727\",\"label\":\"ALEX\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":187,\"location\":\"11060.998 -1465.727\",\"label\":\"ROPA\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":189,\"location\":\"11060.998 -1375.7269999999999\",\"label\":\"ROCO\",\"group\":289,\"color\":\"Gray\"},\n{\"label\":\"Alex is the full robot, able to listen to users\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"450 30\",\"key\":191,\"location\":\"11040.998 -1715.727\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":193,\"location\":\"10870.998 -1635.727\",\"label\":\"Condition\",\"group\":289},\n{\"label\":\"If question is about knowledge\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"320 40\",\"key\":197,\"location\":\"10540.998 -1615.727\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RoundedRectangleCenter\",\"size\":\"150 40\",\"key\":199,\"location\":\"10730.998 -1555.727\",\"label\":\"LLM Knowledge\",\"group\":289},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"120 100\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/speaker.png\",\"key\":209,\"location\":\"10610.998 -1365.7269999999999\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_PointLeftCenter\",\"size\":\"150 40\",\"key\":212,\"location\":\"10730.998 -1455.727\",\"label\":\"Answer\",\"group\":289},\n{\"label\":\"It will directly answer\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"210 40\",\"key\":217,\"location\":\"10590.998 -1505.727\",\"group\":289},\n{\"label\":\"If question is about something to do\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"390 40\",\"key\":234,\"location\":\"11050.998 -1615.727\",\"group\":289},\n{\"label\":\"It will first translate the question into the objects id it knows in the environment\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":254,\"location\":\"11240.998 -1555.727\",\"group\":289},\n{\"label\":\"It will then generate a plan composed of command executable by its API\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":260,\"location\":\"11240.998 -1465.727\",\"group\":289},\n{\"label\":\"It will then execute the plan\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"410 40\",\"key\":262,\"location\":\"11240 -1370\",\"group\":289},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_HexagoneCenter\",\"size\":\"150 40\",\"key\":279,\"location\":\"11060 -1200\",\"label\":\"Condition\",\"group\":289},\n{\"label\":\"If plan is successfully executed,\\nit will start to listen again\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"330 50\",\"key\":282,\"location\":\"11240 -1220\",\"group\":289},\n{\"label\":\"If plan fail at any step,\\nit will replan it again\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"230 50\",\"key\":287,\"location\":\"10770.998 -1245.7269999999999\",\"group\":289},\n{\"label\":\"System Flow\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":289,\"location\":\"10249.999953125 -1640.000095703125\"},\n{\"label\":\"Clear Label of Message Nodes\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Get all message nodes (except big plan)\\nconst dataList = appData.me.getNodeListIf( modelId, \\n                                           (d)=> d.category == 'AIFlow_Message' &&\\n                                           d.group != undefined );\\nfor( const data of dataList ) {\\n  setNodeDataField( data.key, 'label', '' );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":186,\"location\":\"-2560 -260\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":190,\"location\":\"2250 1959.9\",\"editorPosition\":[1606,107,758,253],\"color\":\"LightPink\"},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":194,\"location\":\"2250 2149.9\",\"editorPosition\":[1403,916,540,328],\"color\":\"LightPink\"},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n\\n\\nEach time you (Ropa) receive a  for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":208,\"location\":\"2250 2329.9\",\"editorPosition\":[1132,245,1003,1812],\"color\":\"LightPink\"},\n{\"label\":\"User Request\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"What is the capital of Germany ?\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":216,\"location\":\"2260 2520\",\"editorPosition\":[432,797,400,350],\"color\":\"Violet\"},\n{\"label\":\"Add [Human to Alex] header\",\"category\":\"AIFlow_Template\",\"size\":\"270 100\",\"color\":\"#ff8093\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"[Human to Alex] <in>\",\"fileTypeName\":\"Template\",\"key\":235,\"location\":\"5180 1141.658\",\"editorPosition\":[918,39,712,140],\"group\":349},\n{\"label\":\"Experiment Dispatcher\",\"category\":\"AIFlow_Component\",\"size\":\"280 170\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"alexPrompt\"},{\"portId\":\"traviPrompt\"},{\"portId\":\"ropaPrompt\"},{\"portId\":\"userPrompt\"},{\"portId\":\"environmentState\"},{\"portId\":\"startApplication\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const inV = Engine_getInput( nodeData, 'in', {} );\\n  \\n  if( inV.env && inV.alex && inV.travi && inV.ropa && inV.user ) {\\n    // Propagete selected templates\\n    Engine_fireOutput( nodeData, 'alexPrompt',  inV.alex );\\n    Engine_fireOutput( nodeData, 'traviPrompt', inV.travi );\\n    Engine_fireOutput( nodeData, 'ropaPrompt',  inV.ropa );\\n    Engine_fireOutput( nodeData, 'userPrompt',  inV.user );\\n    \\n    Engine_fireOutput( nodeData, 'environmentState', inV.env );\\n    \\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'startApplication' );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":261,\"location\":\"1580 2090\",\"editorPosition\":[1745,1593,570,981]},\n{\"label\":\"Initial Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\\"gaze\\\":{\\\"fovea\\\":[],\\\"perif\\\":[]},\\\"hand_left\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"hand_right\\\":{\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[]},\\\"lab\\\":{\\\"holdsObject\\\":[\\\"table_1\\\"]},\\\"table_1\\\":{\\\"type\\\":\\\"table\\\",\\\"color\\\":\\\"gray\\\",\\\"holdsObject\\\":[\\\"fridge_1\\\",\\\"microwave_1\\\",\\\"toaster_1\\\",\\\"plate_1\\\",\\\"glass_1\\\",\\\"mug_1\\\",\\\"cola_bottle_1\\\",\\\"tea_bag_1\\\",\\\"pitcher_1\\\",\\\"pitcher_2\\\",\\\"tray_1\\\"],\\\"isHoldByObject\\\":[\\\"lab\\\"]},\\\"fridge_1\\\":{\\\"type\\\":\\\"fridge\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"on\\\",\\\"temperature\\\":\\\"-5 degree\\\"},\\\"microwave_1\\\":{\\\"type\\\":\\\"microwave\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"toaster_1\\\":{\\\"type\\\":\\\"toaster\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"power\\\":\\\"off\\\",\\\"temperature\\\":\\\"20 degree\\\"},\\\"plate_1\\\":{\\\"type\\\":\\\"plate\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObjectF\\\":[\\\"toast_1\\\"],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\"},\\\"toast_1\\\":{\\\"type\\\":\\\"bread slice\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"plate_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"preparation\\\":\\\"raw\\\"},\\\"cola_bottle_1\\\":{\\\"type\\\":\\\"bottle\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"closure\\\":\\\"closed\\\",\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.5,\\\"fillLevel\\\":0.5,\\\"holdsLiquid\\\":[\\\"coca-cola\\\"]},\\\"glass_1\\\":{\\\"type\\\":\\\"glass\\\",\\\"color\\\":\\\"transparent\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"mug_1\\\":{\\\"type\\\":\\\"mug\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"20 degree\\\",\\\"volume\\\":0.1,\\\"fillLevel\\\":0,\\\"holdsLiquid\\\":[]},\\\"pitcher_1\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"blue\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"90 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"water\\\"]},\\\"pitcher_2\\\":{\\\"type\\\":\\\"pitcher\\\",\\\"color\\\":\\\"black\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"],\\\"temperature\\\":\\\"80 degree\\\",\\\"volume\\\":1,\\\"fillLevel\\\":1,\\\"holdsLiquid\\\":[\\\"coffee\\\"]},\\\"tray_1\\\":{\\\"type\\\":\\\"tray\\\",\\\"color\\\":\\\"white\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]},\\\"tea_bag_1\\\":{\\\"type\\\":\\\"tea bag\\\",\\\"color\\\":\\\"brown\\\",\\\"holdsObject\\\":[],\\\"isHoldByObject\\\":[\\\"table_1\\\"]}}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":210,\"location\":\"2240 2719.9\",\"editorPosition\":[1735,35,425,1463],\"color\":\"#ccffcc\"},\n{\"label\":\"001 RobotAPIPrompt\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"JavaScript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/48.js\",\"key\":301,\"location\":\"-931.3009999999999 1130.395\",\"group\":319,\"editorPosition\":[1606,19,681,1061]},\n{\"label\":\"AlexPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/49.js\",\"key\":303,\"location\":\"-931.3009999999999 1212.895\",\"editorPosition\":[3112,14,760,535],\"group\":231},\n{\"label\":\"TraviPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/50.js\",\"key\":305,\"location\":\"-931.3009999999999 1272.895\",\"editorPosition\":[3112,554,759,295],\"group\":231},\n{\"label\":\"RopaPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/51.js\",\"key\":309,\"location\":\"-931.3009999999999 1332.895\",\"editorPosition\":[3006,961,772,993],\"group\":231},\n{\"label\":\"UserPromptList\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"Javascript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/52.js\",\"key\":311,\"location\":\"-931.3009999999999 1392.895\",\"editorPosition\":[3200,1964,674,414],\"group\":231},\n{\"label\":\"System Prompt\\nfor Alex\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":312,\"location\":\"2251.8959999999997 905\",\"editorPosition\":[1606,107,758,253],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"System Prompt\\nfor Travi\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":313,\"location\":\"2251.8959999999997 1065\",\"editorPosition\":[1403,916,540,328],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"System Prompt\\nfor Ropa\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n* This command allows Roco to open the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] open_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object-with-door> can only be opened if it is closed\\n  \\n* This command allows Roco to close the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] close_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object-with-door> can only be closed if it is opened\\n  \\n* This command allows Roco to take an <object-to-be-taken> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> hand_right\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-taken>\\n  - [Roco to Ropa] <object-to-be-taken> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object-to-be-taken> can only be taken if the hand is empty\\n  \\n* This command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-put, destination-object>\\n  - [Roco to Ropa] <object-to-be-put> cannot be put because <reason of failure>\\n  constraints:\\n  - <object-to-be-put> can only be put somewhere if it is in the hand\\n  - <object-to-be-put> can be put on a <destination-object> that has a flat surface\\n  - <object-to-be-put> can be put in a <destination-object> that is a container\\n  \\n* This command allows Roco to pour the liquid of a <object-to-pour-from> into \\n  a <object-to-pour-into>:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-pour-from, object-to-pour-into>\\n  - [Roco to Ropa] <object-to-pour-into> cannot be filled because <reason of failure>\\n  constraints:\\n  - <object-to-pour-from> and <object-to-pour-into> must be containers\\n  - <object-to-pour-from> and <object-to-pour-into> must be held in different hands\\n  \\n* This command allows Roco to screw an <object-to-screw_top_of> to open or \\n  close it using an empty hand:\\n  command syntax: \\n  - [Ropa to Roco] screw <object-to-screw_top_of>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-screw_top_of>\\n  - [Roco to Ropa] <object-to-screw_top_of> cannot be opened because <reason of failure>\\n  constraints:\\n  - <object-to-screw_top_of> must be a bottle\\n  - <object-to-screw_top_of> must be held in a hand and the other hand must be empty\\n  \\n* This command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-look-at>\\n  - [Roco to Ropa] <object-to-look-at> is incorrect or do not exist.\\n  constraints:\\n  - <object-to-look-at> must be a valid name\\n  \\n\\nEach time you (Ropa) receive a <JSON description> for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":314,\"location\":\"2251.8959999999997 1205\",\"editorPosition\":[1132,245,1003,1812],\"color\":\"LightPink\",\"group\":317},\n{\"label\":\"a warm tea in a cup on the tray\",\"category\":\"AIFlow_Data\",\"size\":\"200 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"prepare me a warm tea in a glass and put it on the tray\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":315,\"location\":\"2251.8959999999997 1355\",\"editorPosition\":[432,797,400,350],\"color\":\"Violet\",\"group\":317},\n{\"label\":\"Initial Environement State\",\"category\":\"AIFlow_Data\",\"size\":\"250 100\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"{\\n  \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n    ],\\n    \\\"perif\\\": [\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  }\\n}\",\"fileTypeName\":\"Text\",\"fileType\":\"text/text\",\"iconURL\":\"fileServer/pictures/Text_Data.png\",\"key\":316,\"location\":\"2241.8959999999997 1535\",\"editorPosition\":[1735,35,425,1463],\"color\":\"#ccffcc\",\"group\":317},\n{\"label\":\"Original Prompts\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":317,\"location\":\"2189.9995156249997 1220\"},\n{\"label\":\"RobotAPIPromptList\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":319,\"location\":\"-951.3009999999999 1132.895\",\"group\":231},\n{\"label\":\"Experiment Collector\",\"category\":\"AIFlow_Component\",\"size\":\"300 230\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"resetExperiment\"},{\"portId\":\"nextExperiment\"},{\"portId\":\"environmentStateList\"},{\"portId\":\"robotAIPromptList\"},{\"portId\":\"alexPromptList\"},{\"portId\":\"traviPromptList\"},{\"portId\":\"ropaPromptList\"},{\"portId\":\"userPromptList\"},{\"portId\":\"schedule\"}],\"out\":[{\"portId\":\"out\"},{\"portId\":\"endOfSchedule\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"nextExperiment\",\"valueChanged\":\"true\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'resetExperiment' ) {\\n  Engine_set( nodeData, 'step', 0 );\\n}\\n\\nif( name == 'experimentDone' ) {\\n  triggerNextExperiment();\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  triggerNextExperiment();\\n}\\n\\n\\nfunction triggerNextExperiment() {\\n  const step = Engine_get( nodeData, 'step', 0 );\\n  const schedule = Engine_getInput( nodeData, 'schedule', {} );\\n  \\n  const env            = Engine_getInput( nodeData, 'environmentStateList', \\\"{}\\\" );\\n  const robotAPIPrompt = Engine_getInput( nodeData, 'robotAIPromptList', {} );\\n  const alexList       = Engine_getInput( nodeData, 'alexPromptList', {} );\\n  const traviList      = Engine_getInput( nodeData, 'traviPromptList', {} );\\n  const ropaList       = Engine_getInput( nodeData, 'ropaPromptList', {} );\\n  const userList       = Engine_getInput( nodeData, 'userPromptList', {});\\n  \\n  if( step < schedule.length ) {\\n    const task = schedule[step];\\n    const id = task.id;\\n    \\n    const alex = alexList[task.alex];\\n    const travi = traviList[task.travi];\\n    const ropa = Engine_applyTemplate( ropaList[task.ropa], { robotAPIPrompt } );\\n    const user = userList[task.user];\\n    \\n    if( env && alex && travi && ropa && user ) {\\n      // Define a new output\\n      const out = { id, env, alex, travi, ropa, user };\\n      \\n      log( 'out', out ); \\n      Engine_fireOutput( nodeData, 'out', out );\\n    } else {\\n      console.warn( `The task ${step} in the schedule is not correct` );\\n    }\\n    \\n    // Move to the next step\\n    Engine_set( nodeData, 'step', step+1 );\\n  } else {\\n    alert( ' Experiment Schedule Completed ' );\\n    // Restart the scheduler\\n    Engine_set( nodeData, 'step', 0 );\\n    Engine_fireOutput( nodeData, 'endOfSchedule' );\\n  }\\n}\\nfunction log( name, data ) {\\n  if( name == 'out' ) {\\n    const m = 10;\\n    const str = `env: #keys = ${Object.keys(data.env).length} `+\\n                `alex: ${data.alex.substring( 0, m )}...  `+\\n                `travi: ${data.travi.substring( 0, m )}...  `+\\n                `ropa: ${data.ropa.substring( 0, m )}...  `+\\n                `user: ${data.user.substring( 0, m )}...`;\\n    console.log( 'Exp Collector: ', str );\\n  } else {\\n    console.log( 'Exp Collector: ', name, JSON.stringify( data, null, 2 ) );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":327,\"location\":\"-340 2090\",\"editorPosition\":[357,1594,736,981]},\n{\"label\":\"Experiment Schedule\",\"category\":\"AIFlow_Data\",\"size\":\"250 80\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"[\\n  { \\\"id\\\": 1,    \\\"env\\\": \\\"001 EnvironmentState\\\", \\\"api\\\": \\\"001 RobotAPIPrompt\\\", \\\"alex\\\": \\\"001 Basic\\\", \\\"travi\\\": \\\"001 Basic\\\", \\\"ropa\\\": \\\"001 Basic\\\", \\\"user\\\": \\\"001 warm tea\\\" },\\n  { \\\"id\\\": 2,    \\\"env\\\": \\\"001 EnvironmentState\\\", \\\"api\\\": \\\"001 RobotAPIPrompt\\\", \\\"alex\\\": \\\"001 Basic\\\", \\\"travi\\\": \\\"001 Basic\\\", \\\"ropa\\\": \\\"001 Basic\\\", \\\"user\\\": \\\"002 cola\\\" },\\n  { \\\"id\\\": 3,    \\\"env\\\": \\\"001 EnvironmentState\\\", \\\"api\\\": \\\"001 RobotAPIPrompt\\\", \\\"alex\\\": \\\"001 Basic\\\", \\\"travi\\\": \\\"001 Basic\\\", \\\"ropa\\\": \\\"001 Basic\\\", \\\"user\\\": \\\"003 capital Germany\\\" }\\n]\",\"fileTypeName\":\"JSON\",\"fileType\":\"text/json\",\"iconURL\":\"/fileServer/pictures/JSON_Data.png\",\"key\":333,\"location\":\"-1210 2776.737\",\"editorPosition\":[5727,209,1320,108]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":335,\"location\":\"-3260 2740.737\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":281,\"location\":\"-3260 2370.737\"},\n{\"label\":\"001 EnvironmentState\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n   \\\"gaze\\\": {\\n    \\\"fovea\\\": [\\n    ],\\n    \\\"perif\\\": [\\n    ]\\n  },\\n  \\\"hand_left\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"hand_right\\\": {\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": []\\n  },\\n  \\\"lab\\\": {\\n    \\\"holdsObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"table_1\\\": {\\n    \\\"type\\\": \\\"table\\\",\\n    \\\"color\\\": \\\"gray\\\",\\n    \\\"holdsObject\\\": [\\n      \\\"fridge_1\\\",\\n      \\\"microwave_1\\\",\\n      \\\"toaster_1\\\",\\n      \\\"plate_1\\\",\\n      \\\"glass_1\\\",\\n      \\\"mug_1\\\",\\n      \\\"cola_bottle_1\\\",\\n      \\\"tea_bag_1\\\",\\n      \\\"pitcher_1\\\",\\n      \\\"pitcher_2\\\",\\n      \\\"tray_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"lab\\\"\\n    ]\\n  },\\n  \\\"fridge_1\\\": {\\n    \\\"type\\\": \\\"fridge\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"on\\\",\\n    \\\"temperature\\\": \\\"-5 degree\\\"\\n  },\\n  \\\"microwave_1\\\": {\\n    \\\"type\\\": \\\"microwave\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toaster_1\\\": {\\n    \\\"type\\\": \\\"toaster\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"power\\\": \\\"off\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"plate_1\\\": {\\n    \\\"type\\\": \\\"plate\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObjectF\\\": [\\n      \\\"toast_1\\\"\\n    ],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\"\\n  },\\n  \\\"toast_1\\\": {\\n    \\\"type\\\": \\\"bread slice\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"plate_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"preparation\\\": \\\"raw\\\"\\n  },\\n  \\\"cola_bottle_1\\\": {\\n    \\\"type\\\": \\\"bottle\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"closure\\\": \\\"closed\\\",\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.5,\\n    \\\"fillLevel\\\": 0.5,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coca-cola\\\"\\n    ]\\n  },\\n  \\\"glass_1\\\": {\\n    \\\"type\\\": \\\"glass\\\",\\n    \\\"color\\\": \\\"transparent\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"mug_1\\\": {\\n    \\\"type\\\": \\\"mug\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"20 degree\\\",\\n    \\\"volume\\\": 0.1,\\n    \\\"fillLevel\\\": 0,\\n    \\\"holdsLiquid\\\": []\\n  },\\n  \\\"pitcher_1\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"blue\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"90 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"water\\\"\\n    ]\\n  },\\n  \\\"pitcher_2\\\": {\\n    \\\"type\\\": \\\"pitcher\\\",\\n    \\\"color\\\": \\\"black\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ],\\n    \\\"temperature\\\": \\\"80 degree\\\",\\n    \\\"volume\\\": 1,\\n    \\\"fillLevel\\\": 1,\\n    \\\"holdsLiquid\\\": [\\n      \\\"coffee\\\"\\n    ]\\n  },\\n  \\\"tray_1\\\": {\\n    \\\"type\\\": \\\"tray\\\",\\n    \\\"color\\\": \\\"white\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n  \\\"tea_bag_1\\\": {\\n    \\\"type\\\": \\\"tea bag\\\",\\n    \\\"color\\\": \\\"brown\\\",\\n    \\\"holdsObject\\\": [],\\n    \\\"isHoldByObject\\\": [\\n      \\\"table_1\\\"\\n    ]\\n  },\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', JSON.stringify( json ) );\\n\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":290,\"location\":\"-1230 1966.737\",\"editorPosition\":[384,519,579,965]},\n{\"label\":\"EnvironmentStateList\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":300,\"location\":\"-941.3009999999999 992.895\",\"group\":231},\n{\"label\":\"001 EnvironmentState\",\"color\":\"orange\",\"size\":\"240 35\",\"category\":\"Hierarchy_CodeInFile\",\"isFile\":true,\"fileTypeName\":\"JavaScript\",\"fileType\":\"text/javascript\",\"fileURL\":\"/fileServer/01/47.json\",\"key\":302,\"location\":\"-921.3009999999999 990.395\",\"group\":300,\"editorPosition\":[35,1091,360,1492]},\n{\"label\":\"001 RobotAPIPrompt\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n  '001 RobotAPIPrompt':\\n  \\n`* This command allows Roco to open the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] open_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be open because <reason of failure>\\n  constraints:\\n  - only the following objects can be opened: oven, fridge, microwave\\n  - <object-with-door> can only be opened if it is closed\\n  \\n* This command allows Roco to close the door of an <object-with-door>:\\n  command syntax: [Ropa to Roco] close_door <object-with-door> \\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-with-door>\\n  - [Roco to Ropa] <object-with-door> cannot be closed because <reason of failure>\\n  constraints:\\n  - only the following objects can be closed: oven, fridge, microwave\\n  - <object-with-door> can only be closed if it is opened\\n  \\n* This command allows Roco to take an <object-to-be-taken> with one of his hand:\\n  command syntax: \\n  - [Ropa to Roco] get <object-to-be-taken> hand_left\\n  - [Ropa to Roco] get <object-to-be-taken> hand_right\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-taken>\\n  - [Roco to Ropa] <object-to-be-taken> cannot be taken because <reason of failure>\\n  constraints:\\n  - only the following objects can be taken: small and solid objects \\n  - <object-to-be-taken> can only be taken if the hand is empty\\n  \\n* This command allows Roco to put an <object-to-be-put> which is in one of its\\n  hand in or on a <destination-object>:\\n  command syntax: \\n  - [Ropa to Roco] put <object-to-be-put> <destination-object>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-be-put, destination-object>\\n  - [Roco to Ropa] <object-to-be-put> cannot be put because <reason of failure>\\n  constraints:\\n  - <object-to-be-put> can only be put somewhere if it is in the hand\\n  - <object-to-be-put> can be put on a <destination-object> that has a flat surface\\n  - <object-to-be-put> can be put in a <destination-object> that is a container\\n  \\n* This command allows Roco to pour the liquid of a <object-to-pour-from> into \\n  a <object-to-pour-into>:\\n  command syntax: \\n  - [Ropa to Roco] pour <object-to-pour-from> <object-to-pour-into>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-pour-from, object-to-pour-into>\\n  - [Roco to Ropa] <object-to-pour-into> cannot be filled because <reason of failure>\\n  constraints:\\n  - <object-to-pour-from> and <object-to-pour-into> must be containers\\n  - <object-to-pour-from> and <object-to-pour-into> must be held in different hands\\n  \\n* This command allows Roco to screw an <object-to-screw_top_of> to open or \\n  close it using an empty hand:\\n  command syntax: \\n  - [Ropa to Roco] screw <object-to-screw_top_of>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-screw_top_of>\\n  - [Roco to Ropa] <object-to-screw_top_of> cannot be opened because <reason of failure>\\n  constraints:\\n  - <object-to-screw_top_of> must be a bottle\\n  - <object-to-screw_top_of> must be held in a hand and the other hand must be empty\\n  \\n* This command make Roco look at an <object-to-look-at>:\\n  command syntax: \\n  - [Ropa to Roco] gaze <object-to-look-at>\\n  result syntax:\\n  - [Roco to Ropa] <JSON description of object-to-look-at>\\n  - [Roco to Ropa] <object-to-look-at> is incorrect or do not exist.\\n  constraints:\\n  - <object-to-look-at> must be a valid name`,\\n  \\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":334,\"location\":\"-1230 2102.259847498308\",\"editorPosition\":[16,1520,811,1444]},\n{\"label\":\"AlexPromptList\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n  '001 Basic': \\n\\n`Take the role of an AI assistant called \\\"Alex\\\". You should assist a human user. \\nThe human works in a lab where there is a table with various objects and devices \\nand a rolling robot platform equiped with two arms and hands.\\n\\nYou (Alex) can communicate with the robot planner called \\\"Ropa\\\" and it will \\nrespond to you. When you (Alex) receive a request from the human, classify \\nthis request into:\\n\\n1) request you know how to answer like any questions that are not involving \\n   physical presence in the real world.\\n2) request you do not know how to answer but that could be done by the robot, \\n   like serving drinks, cooking food, searching for objects in the lab or \\n   anything that needs access to the real world.\\n\\nIf the request is of type 1) then answer directly to the human. \\nUse the syntax: [Alex to Human] <message>\\nIf the request is of type 2) then send the request to Ropa without further \\nexplanation. Use the syntax: [Alex to Ropa] <request>\\n\\nWhen you (Alex) communicate with Ropa or the human you must use the following syntax:\\n- [Alex to Human] <message> when you (Alex) want to say something to the human.\\n- [Alex to Ropa] <request> when you (Alex) want to request the robot planner \\n                 (Ropa) to do something for you (Alex).\\n\\nIn order to keep the dialog easy understandable, you (Alex) only communicate \\nwith one receiver at a time.\\nYou (Alex) do not answer in place of Ropa or the human. \\nThis means that you (Alex) never ever send a message starting \\nwith [Ropa to Alex] or [Human to Alex].`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":337,\"location\":\"-1230 2226.737\",\"editorPosition\":[2295,12,639,563]},\n{\"label\":\"TraviPromptList\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n    \\n  '001 Basic':\\n  \\n`You are Travi a request translator between a human and a robot.\\nAlex is the human that send human understandable request to a robot called \\nRopa that has 2 hands.\\n\\nYour role, Travi, is to reformulate Alex request using exclusively names of \\nobjects available in the environment like table_1, mug_1,... \\nUsing theory of mind, your knowledge of physics and common sense, try to \\nreformulate the request that Alex send to Ropa so that the result of the \\nactions by the robot Ropa would make sense for the human.\\nUse only likely solutions. for examble, a tray is likely used to present or\\ntransport other objects, glass or mug are likely used to serve beverages,...`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":339,\"location\":\"-1230 2346.737\",\"editorPosition\":[2938,12,647,309]},\n{\"label\":\"RopaPromptList\",\"category\":\"AIFlow_Component\",\"size\":\"280 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n  \\n  '001 Basic':\\n  \\n  `Take the role of a Robot planner called \\\"Ropa\\\". You should assist a machine \\ncalled Alex. Alex will send you a request in natural language and your mission \\nis to transform this request into a plan for a robot controller called \\\"Roco\\\" \\nto execute. A plan is a list of commands that Roco can execute because they \\nfollow the syntax of a strict API. You (Ropa) can use an external memory \\ncalled \\\"Memo\\\" to store or recall information about objects.\\nThe commands available to communicate to Memo are also described in the API.\\n\\nList of commands of the API:\\n<robotAPIPrompt>\\n\\nEach time you (Ropa) receive a <JSON description> for an object it is \\nautomatically stored in Memo so that you can recall it later.\\n\\nYou (Ropa) do not answer in place of Roco. This means that you (Ropa) \\nnever ever send a message starting with [Roco to Ropa] or [Alex to Ropa].\\n\\nExample 1: \\nRequest: [Alex to Ropa] prepare a fresh glass of coca-cola'\\n\\nPlan you have to send at once to Roco in example 1:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze cola_bottle_1\\n[Ropa to Roco] get cola_bottle_1 hand_left\\n[Ropa to Roco] screw cola_bottle_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right \\n[Ropa to Roco] pour cola_bottle_1 glass_1\\n[Ropa to Roco] put cola_bottle_1 table_1\\n[Ropa to Roco] gaze fridge_1\\n[Ropa to Roco] open_door fridge_1\\n[Ropa to Roco] put glass_1 fridge_1\\n[Ropa to Roco] close_door fridge_1\\n\\nExample 2: \\nRequest: [Alex to Ropa] prepare a tea in a mug'\\n\\nPlan you have to send at once to Roco in example 2:\\n[Ropa to Roco] gaze table_1\\n[Ropa to Roco] gaze tea_bag_1\\n[Ropa to Roco] get tea_bag_1 hand_right\\n[Ropa to Roco] gaze mug_1\\n[Ropa to Roco] put tea_bag_1 glass_1 \\n[Ropa to Roco] gaze pitcher_1\\n[Ropa to Roco] get pitcher_1 hand_right\\n[Ropa to Roco] pour pitcher_1 glass_1\\n[Ropa to Roco] put pitcher_1 table_1\\n[Ropa to Roco] gaze glass_1\\n[Ropa to Roco] get glass_1 hand_right\\n[Ropa to Roco] put glass_1 tray_1`,\\n\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":341,\"location\":\"-1230 2476.737\",\"editorPosition\":[3017,292,726,462]},\n{\"label\":\"UserPromptList\",\"category\":\"AIFlow_Component\",\"size\":\"270 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n/////////////////////////////////////////////////\\n\\nconst json = {\\n    '001 warm tea': 'prepare me a warm tea in a glass and put it on the tray',\\n  '002 cola': 'serve me a coka-cola in a glass and put it on the tray',\\n  '003 capital Germany': 'What is the capital of Germany ?',\\n};\\n\\n/////////////////////////////////////////////////\\n// Generate an output trigger\\nEngine_fireOutput( nodeData, 'out', json );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":343,\"location\":\"-1230 2606.737\",\"editorPosition\":[1555,31,736,165]},\n{\"label\":\"Original Data\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":231,\"location\":\"-1030.00021875 1160.736796875\"},\n{\"label\":\"Blink On Input\",\"category\":\"AIFlow_Component\",\"size\":\"500 80\",\"color\":\"gray\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":307,\"location\":\"-2390 2670.737\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Propagate On Trigger\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"trigger\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"trigger\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  // Get input value\\n  const inV = Engine_getInput( nodeData, 'in', {} );\\n  \\n  // Generate an output trigger\\n  Engine_fireOutput( nodeData, 'out', inV );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":310,\"location\":\"3360 1440\",\"editorPosition\":[260,386,661,231]},\n{\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 140\",\"in\":[{\"portId\":\"in\"}],\"key\":320,\"location\":\"3751.896 1430\",\"label\":\"What is the capital of Germany ?\",\"group\":286},\n{\"label\":\"Blink On Input\",\"category\":\"AIFlow_Component\",\"size\":\"880 80\",\"color\":\"gray\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":293,\"location\":\"3750 1540\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"Clear All Labels\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', '' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":297,\"location\":\"3350 1570\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"1) Feed Templates to \\nExperiment Controller\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 160\",\"key\":304,\"location\":\"-3260 2240.737\",\"color\":\"Gold\"},\n{\"label\":\"3) Next Experiment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"790 100\",\"key\":318,\"location\":\"-3260 2640.737\",\"color\":\"Gold\"},\n{\"label\":\"Blink On Input\",\"category\":\"AIFlow_Component\",\"size\":\"500 80\",\"color\":\"gray\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":308,\"location\":\"-2410 2220.737\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"2) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"500 100\",\"key\":321,\"location\":\"-2410 2310.737\",\"color\":\"Gold\"},\n{\"label\":\"4) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"500 90\",\"key\":325,\"location\":\"-2390 2750.737\",\"color\":\"Gold\"},\n{\"label\":\"6) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 90\",\"key\":322,\"location\":\"3750 1620\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":340,\"location\":\"4130 1139.9\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Set Boolean\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"true\"},{\"portId\":\"false\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":350,\"location\":\"-2960 1889.9\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":366,\"location\":\"-3260 1830.6370000000002\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":368,\"location\":\"-3260 1960.6370000000002\",\"color\":\"red\"},\n{\"label\":\"0) Enable or Disable Gate to the System\\n- True: enable (system on)\\n- False: disable (no system)\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1370 280\",\"key\":291,\"location\":\"-3260 1640.737\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":328,\"location\":\"2880 1970\",\"editorPosition\":[2401,1602,486,402]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":351,\"location\":\"2880 2160\",\"editorPosition\":[1917,1600,478,397]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":365,\"location\":\"2870 2340\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":369,\"location\":\"2890 2730\",\"editorPosition\":[917,1406,506,391]},\n{\"label\":\"Instructions: \\n\\n1) Enable/Disable Scheduler communication to Application\\n\\n\\n\\n\\n\\n2) Initialize Templates\\n\\n\\n\\n3) Start Experiment\\n\\n\\n\\n4) Start Application\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1150 1580\",\"key\":299,\"location\":\"-4430 2330.737\",\"color\":\"PowderBlue\"},\n{\"label\":\"Group New\",\"category\":\"Group_BasicGroup\",\"isGroup\":true,\"key\":286,\"location\":\"3699.999515625 1430\"},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":323,\"location\":\"6580 6470\",\"group\":364},\n{\"label\":\"Experiment Statistics\",\"category\":\"AIFlow_Component\",\"size\":\"280 170\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"errorMessage\"},{\"portId\":\"successMessage\"},{\"portId\":\"tooManyReplan\"},{\"portId\":\"saveStatistics\"}],\"out\":[{\"portId\":\"out\"},{\"portId\":\"nextExperiment\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\n\\nif( name == 'errorMessage' ) {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  const currId = Engine_get( nodeData, 'currId' );\\n  \\n  if( currId != undefined ) {\\n    report[currId].replanLog.push( { state: 'error', msg: value } );\\n  } else {\\n    console.error( 'Experiment Report id undefined' );\\n  }\\n}\\nif( name == 'successMessage' ) {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  const currId = Engine_get( nodeData, 'currId' );\\n  \\n  if( currId != undefined ) {\\n    report[currId].replanLog.push( { state: 'success', msg: value } );\\n  } else {\\n    console.error( 'Experiment Report id undefined' );\\n  }\\n}\\n\\nif( name == 'tooManyReplan' ) {\\n  // Request for the next experiment\\n  //setInterval( ()=> Engine_fireOutput( nodeData, 'nextExperiment' ), 1*1000 );\\n}\\n\\nif( name == 'saveStatistics' ) {\\n  logReport();\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  const currId = value.id;\\n  \\n  report[currId] = {\\n    replanLog: [],\\n  };\\n  \\n  \\n  alert( 'New task id: '+currId );\\n  //setInterval( ()=> Engine_fireOutput( nodeData, 'out', value ), 0 );\\n  Engine_fireOutput( nodeData, 'out', value );\\n}\\n\\n\\nfunction logReport() {\\n  const report = Engine_get( nodeData, 'report', {} );\\n  console.log( JSON.stringify( report, null, 2 ) );\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":326,\"location\":\"940 2090\",\"editorPosition\":[1096,1594,639,882]},\n{\"label\":\"Final State Error\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"600 60\",\"key\":338,\"location\":\"6590 6380\"},\n{\"label\":\"Final State Success\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"710 60\",\"key\":353,\"location\":\"6600 6600\",\"group\":364},\n{\"label\":\"\",\"category\":\"AIFlow_Message\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"1430 70\",\"in\":[{\"portId\":\"in\"}],\"key\":354,\"location\":\"6590 6690\",\"group\":364},\n{\"label\":\"\",\"category\":\"Pictures_Basic\",\"size\":\"1620 720\",\"isFile\":true,\"fileTypeName\":\"Image\",\"fileType\":\"image/png\",\"fileURL\":\"/fileServer/pictures/1-Introduction-MS2/Slide7.PNG\",\"key\":342,\"location\":\"11045 -390\"},\n{\"tag\":\"tag\",\"type\":\"type\",\"category\":\"Thinking_RectangleCenter\",\"size\":\"150 40\",\"key\":367,\"location\":\"11060 -1290.1999999999998\",\"label\":\"ROBI\",\"group\":289,\"color\":\"Gray\"},\n{\"label\":\"Execute steps of the plan\",\"category\":\"TextLabels_Size1\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"330 30\",\"key\":371,\"location\":\"11230 -1420\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":360,\"location\":\"6260 3479.9\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":374,\"location\":\"-3260 420\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":375,\"location\":\"-3260 550\",\"color\":\"red\"},\n{\"label\":\"Set Boolean\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"true\"},{\"portId\":\"false\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":376,\"location\":\"-2940 489.79999999999995\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"-2) Enable/Disable ROPA\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 100\",\"key\":370,\"location\":\"-3270 320\",\"color\":\"Gold\"},\n{\"label\":\"Set Boolean\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"true\"},{\"portId\":\"false\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":378,\"location\":\"-2950 889.6999999999999\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":379,\"location\":\"-3270 950\",\"color\":\"red\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":380,\"location\":\"-3270 820\"},\n{\"label\":\"-1) Enable/Disable ROCO\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"880 100\",\"key\":382,\"location\":\"-3270 710\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"red\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":384,\"location\":\"4410 5679.9\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"-3) Enable/Disable TRAVI\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"860 100\",\"key\":390,\"location\":\"-3270 -80\",\"color\":\"Gold\"},\n{\"label\":\"Set Boolean\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"true\"},{\"portId\":\"false\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_fireOutput( nodeData, 'out', ( name == 'true' ) );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":391,\"location\":\"-2940 89.8\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":392,\"location\":\"-3260 150\",\"color\":\"red\"},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":393,\"location\":\"-3260 20\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":395,\"location\":\"6230 2249.9\",\"editorPosition\":[2893,1205,533,386]},\n{\"label\":\"Load Model\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"LightSeaGreen\",\"in\":[{\"portId\":\"in\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nEngine_loadModel();\\nEngine_initNodeStatus();\\n\\nEngine_fireOutput( nodeData, 'out' );\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":373,\"location\":\"-2930 -260.20000000000005\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":381,\"location\":\"-3270 -260.1\"},\n{\"label\":\"Blink On Input\",\"category\":\"AIFlow_Component\",\"size\":\"500 80\",\"color\":\"gray\",\"in\":[{\"portId\":\"in\"}],\"out\":[],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\nshowEvent( 5 );\\n\\nfunction showEvent( count ) {\\n  const map = {\\n    'red': 'green',\\n    'green': 'red',\\n  }\\n  const color = ( nodeData.color == 'gray'? 'red': map[nodeData.color] );\\n  setNodeDataField( nodeData.key, 'color', color );\\n  if( count > 0 ) {\\n    setTimeout( ()=> showEvent( count-1 ), 500 );\\n  } else {\\n    setNodeDataField( nodeData.key, 'color', 'gray'  );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":296,\"location\":\"-2220 -260\",\"editorPosition\":[260,386,661,231]},\n{\"label\":\"4) Get blinking\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"500 90\",\"key\":306,\"location\":\"-2220 -180\",\"color\":\"Gold\"},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":398,\"location\":\"-2370 80\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":400,\"location\":\"-2370 480\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"red\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":402,\"location\":\"-2360 880\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"Gate Input\",\"category\":\"AIFlow_Component\",\"size\":\"240 80\",\"color\":\"yellowgreen\",\"in\":[{\"portId\":\"in\"},{\"portId\":\"gate\"}],\"out\":[{\"portId\":\"out\"}],\"rows\":[{\"name\":\"isPersistent\",\"value\":\"false\"},{\"name\":\"computeBarrier\",\"value\":\"in\",\"unit\":\"\",\"valueChanged\":true}],\"isFile\":true,\"fileContent\":\"var nodeData, name, value;\\n\\n// Update input values\\nvar inState = Engine_updateInput( nodeData, name, value );\\nif( name == 'gate' ) {\\n  // Set color\\n  const color = ( value? 'yellowgreen': 'red' );\\n  setNodeDataField( nodeData.key, 'color', color );\\n}\\n\\n// True if all inputs arrived\\nif( inState.isCompute ) {\\n  \\n  // Get gate value\\n  const defState = ( nodeData.color != 'red' ); // True if color different than red\\n  const gate = Engine_getInput( nodeData, 'gate', defState );\\n  \\n  // Generate ouptut if gate on\\n  if( gate && name == 'in' ) {\\n    // Generate an output trigger\\n    Engine_fireOutput( nodeData, 'out', value );\\n  }\\n}\",\"fileTypeName\":\"Component\",\"fileType\":\"text/javascript\",\"iconURL\":\"\",\"key\":404,\"location\":\"-2370 1880\",\"editorPosition\":[939,656,461,256]},\n{\"label\":\"\",\"category\":\"AIFlow_Start\",\"size\":\"80 80\",\"buttons\":[{\"name\":\"Start\",\"checked\":false}],\"out\":[{\"portId\":\"out\"}],\"key\":324,\"location\":\"-4350 1240\"},\n{\"label\":\"Reset Experiment\",\"category\":\"TextLabels_Size4\",\"alignment\":\"0 0.5 0 0\",\"alignmentFocus\":\"0 0.5 0 0\",\"size\":\"740 90\",\"key\":347,\"location\":\"-4350 1150\",\"color\":\"Gold\"}\n],\n  \"linkDataArray\": [\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":201,\"to\":200,\"points\":[7492.357914062501,3397.8050000000003,7502.357914062501,3397.8050000000003,7529.999515625001,3501.567000000001,7539.999515625001,3501.567000000001],\"key\":-124,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":205,\"to\":204,\"points\":[8192.3579140625,3501.567000000001,8202.3579140625,3501.567000000001,8209.999515625,3501.367,8219.999515625,3501.367],\"key\":-129,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":200,\"to\":205,\"points\":[7812.357914062501,3501.567000000001,7822.357914062501,3501.567000000001,7839.999515625001,3501.567000000001,7849.999515625001,3501.567000000001],\"key\":-130},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":206,\"to\":203,\"points\":[9642.3579140625,3451.567000000001,9652.3579140625,3451.567000000001,9669.999515625,3451.367,9679.999515625,3451.367],\"key\":-131,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":207,\"to\":206,\"points\":[9302.3579140625,3451.567000000001,9312.3579140625,3451.567000000001,9319.999515625,3451.567000000001,9329.999515625,3451.567000000001],\"key\":-132},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":298,\"to\":207,\"points\":[9005.9165078125,3451.567000000001,9015.9165078125,3451.567000000001,9019.999515625,3451.567000000001,9029.999515625,3451.567000000001],\"key\":-136},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":211,\"to\":298,\"points\":[8490.4619140625,3320,8500.4619140625,3320,8596.440921875,3421.567000000001,8606.440921875,3421.567000000001],\"key\":-138},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":218,\"to\":295,\"points\":[8342.3579140625,1999.7420000000002,8352.3579140625,1999.7420000000002,8406.440921875,1983.5040000000008,8416.440921875,1983.5040000000008],\"key\":-144},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":222,\"to\":220,\"points\":[9782.3579140625,2018.809000000001,9792.3579140625,2018.809000000001,9809.999515625,2018.409000000001,9819.999515625,2018.409000000001],\"key\":-147},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":223,\"to\":222,\"points\":[9472.3579140625,2018.809000000001,9482.3579140625,2018.809000000001,9499.999515625,2018.809000000001,9509.999515625,2018.809000000001],\"key\":-148,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":224,\"to\":223,\"points\":[9132.3579140625,2018.809000000001,9142.3579140625,2018.809000000001,9149.999515625,2018.809000000001,9159.999515625,2018.809000000001],\"key\":-149},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":295,\"to\":224,\"points\":[8815.9165078125,2013.5040000000008,8825.9165078125,2013.5040000000008,8849.999515625,2018.809000000001,8859.999515625,2018.809000000001],\"key\":-150},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":227,\"to\":226,\"points\":[8052.3579140625,2153.504000000001,8062.3579140625,2153.504000000001,8069.999515625,2153.2039999999997,8079.999515625,2153.2039999999997],\"key\":-152,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":228,\"to\":227,\"points\":[7652.3579140625,2153.504000000001,7662.3579140625,2153.504000000001,7699.999515625,2153.504000000001,7709.999515625,2153.504000000001],\"key\":-153},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":229,\"to\":228,\"points\":[7352.3579140625,2153.504000000001,7362.3579140625,2153.504000000001,7369.999515625,2153.504000000001,7379.999515625,2153.504000000001],\"key\":-154,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":229,\"points\":[5906.1499140625,3496.972000000001,5916.1499140625,3496.972000000001,5990,3460,5990,2150,6964.1997109375,2143.504000000001,6974.1997109375,2143.504000000001],\"key\":-156},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"assistant\",\"from\":238,\"to\":240,\"points\":[6862.4619140625,705.8630000000003,6872.4619140625,705.8630000000003,6922,755.8630000000003,6975.751953125,755.8630000000003,6985.751953125,755.8630000000003],\"key\":-163},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":240,\"to\":241,\"points\":[7372.4619140625,755.8630000000003,7382.4619140625,755.8630000000003,7378.103515625,756.402,7388.103515625,756.402],\"key\":-165,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"history\",\"from\":241,\"to\":240,\"points\":[7660.4619140625,756.402,7670.4619140625,756.402,7670,656.402,6952,655.8630000000003,6952,735.8630000000003,6975.751953125,735.8630000000003,6985.751953125,735.8630000000003],\"key\":-166},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":243,\"to\":242,\"points\":[7372.4619140625,905.8630000000003,7382.4619140625,905.8630000000003,7380.103515625,905.6629999999996,7390.103515625,905.6629999999996],\"key\":-167,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":241,\"to\":177,\"points\":[7660.4619140625,756.402,7670.4619140625,756.402,10150,756.402,10318.103515625,1019.2070000000012,10328.103515625,1019.2070000000012],\"key\":-169},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":245,\"to\":239,\"points\":[5490.4619140625,866.9090000000023,5500.4619140625,866.9090000000023,5608.103515625,866.9090000000023,5618.103515625,866.9090000000023],\"key\":-170,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":248,\"to\":245,\"points\":[5090.4619140625,866.9090000000023,5100.4619140625,866.9090000000023,5138.103515625,866.9090000000023,5148.103515625,866.9090000000023],\"key\":-171},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":246,\"to\":239,\"points\":[5490.4619140625,716.9090000000023,5500.4619140625,716.9090000000023,5608.103515625,866.9090000000023,5618.103515625,866.9090000000023],\"key\":-172,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":249,\"to\":246,\"points\":[5090.4619140625,716.9090000000023,5100.4619140625,716.9090000000023,5138.103515625,716.9090000000023,5148.103515625,716.9090000000023],\"key\":-173},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToHuman\",\"toPort\":\"in\",\"from\":252,\"to\":238,\"points\":[10218.599609375,644.862999999998,10228.599609375,644.862999999998,10272,605.8630000000003,10271.999932584351,501.4681159915863,6521.999932584347,501.4681159915863,6521.999932584347,651.4681159915863,6580.103515625,705.8630000000003,6590.103515625,705.8630000000003],\"key\":-177},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":251,\"to\":252,\"points\":[9812.4619140625,655.8630000000003,9822.4619140625,655.8630000000003,9830.103515625,654.862999999998,9840.103515625,654.862999999998],\"key\":-179},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":257,\"to\":251,\"points\":[9502.4619140625,655.8630000000003,9512.4619140625,655.8630000000003,9530.103515625,655.8630000000003,9540.103515625,655.8630000000003],\"key\":-180,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"assistant\",\"toPort\":\"in\",\"from\":292,\"to\":258,\"points\":[8856.0205078125,655.8630000000003,8866.0205078125,655.8630000000003,8880.103515625,655.8630000000003,8890.103515625,655.8630000000003],\"key\":-181},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"system\",\"from\":256,\"to\":292,\"points\":[8360.4619140625,560,8370.4619140625,560,8446.544921875,625.8630000000003,8456.544921875,625.8630000000003],\"key\":-183},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":258,\"to\":257,\"points\":[9162.4619140625,655.8630000000003,9172.4619140625,655.8630000000003,9180.103515625,655.8630000000003,9190.103515625,655.8630000000003],\"key\":-184},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":201,\"points\":[5906.1499140625,3496.972000000001,5916.1499140625,3496.972000000001,6010,3470,6090,3390,7104.199710937501,3387.8050000000003,7114.199710937501,3387.8050000000003],\"key\":-187},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":239,\"to\":176,\"points\":[5890.4619140625,866.9090000000023,5900.4619140625,866.9090000000023,6040,1060,6930.103515625,1055.8630000000003,6940.103515625,1055.8630000000003],\"key\":-162},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":239,\"to\":243,\"points\":[5890.4619140625,866.9090000000023,5900.4619140625,866.9090000000023,7020.103515625,905.8630000000003,7030.103515625,905.8630000000003],\"key\":-164},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":239,\"to\":240,\"points\":[5890.4619140625,866.9090000000023,5900.4619140625,866.9090000000023,6030,780,6975.751953125,775.8630000000003,6985.751953125,775.8630000000003],\"key\":-189},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToHuman\",\"toPort\":\"in\",\"from\":252,\"to\":253,\"points\":[10218.599609375,644.862999999998,10228.599609375,644.862999999998,10320.103515625,651.1680000000006,10330.103515625,651.1680000000006],\"key\":-190},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToAlex\",\"toPort\":\"in\",\"from\":202,\"to\":213,\"points\":[10406.4892578125,3339.5000000000005,10416.4892578125,3339.5000000000005,10530,3340,10850,3410,10909.999515625,3407.8050000000003,10919.999515625,3407.8050000000003],\"key\":-194},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":253,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10150,1000,10230,716.402,10320.103515625,651.1680000000006,10330.103515625,651.1680000000006],\"key\":-176},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":250,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10170,1020,10240,786.402,10320.103515625,756.1680000000006,10330.103515625,756.1680000000006],\"key\":-178},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":171,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10150,1080,10150,1220,10350,1220,10350,2500,6950,2500,6950,2370,6999.999515625,2343.504000000001,7009.999515625,2343.504000000001],\"key\":-203},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":172,\"to\":175,\"points\":[5090.4619140625,1011.6040000000002,5100.4619140625,1011.6040000000002,5138.103515625,1011.6040000000002,5148.103515625,1011.6040000000002],\"key\":-205},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":175,\"to\":239,\"points\":[5490.4619140625,1011.6040000000002,5500.4619140625,1011.6040000000002,5608.103515625,866.9090000000023,5618.103515625,866.9090000000023],\"key\":-206,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":179,\"to\":249,\"points\":[4750.4619140625,716.9090000000023,4760.4619140625,716.9090000000023,4808.103515625,716.9090000000023,4818.103515625,716.9090000000023],\"key\":-185},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":174,\"to\":172,\"points\":[4750.4619140625,1011.6040000000002,4760.4619140625,1011.6040000000002,4808.103515625,1011.6040000000002,4818.103515625,1011.6040000000002],\"key\":-204},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":247,\"to\":248,\"points\":[4750.4619140625,866.9090000000023,4760.4619140625,866.9090000000023,4808.103515625,866.9090000000023,4818.103515625,866.9090000000023],\"key\":-200},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rocoToRobi\",\"toPort\":\"in\",\"from\":265,\"to\":272,\"points\":[6317.61328125,5649.699999999999,6327.61328125,5649.699999999999,6498.103515625,5908.114,6508.103515625,5908.114],\"key\":-253},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":283,\"to\":273,\"points\":[5490.4619140625,5900,5500.4619140625,5900,5508.103515625,5900,5518.103515625,5900],\"key\":-255},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"feedback\",\"from\":232,\"to\":215,\"points\":[6942.357914062501,3697.8050000000003,6952.357914062501,3697.8050000000003,7034.075687500001,3597.8050000000003,7044.075687500001,3597.8050000000003],\"key\":-224},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":215,\"to\":200,\"points\":[7492.357914062501,3597.8050000000003,7502.357914062501,3597.8050000000003,7529.999515625001,3501.567000000001,7539.999515625001,3501.567000000001],\"key\":-220,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":170,\"to\":177,\"points\":[10021.3447265625,1043.147,10031.3447265625,1043.147,10160,1040,10318.103515625,1019.2070000000012,10328.103515625,1019.2070000000012],\"key\":-229},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"index\",\"from\":284,\"to\":215,\"points\":[6942.357914062501,3847.8050000000003,6952.357914062501,3847.8050000000003,7034.075687500001,3637.8050000000003,7044.075687500001,3637.8050000000003],\"key\":-261},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"outIndex\",\"toPort\":\"in\",\"from\":265,\"to\":329,\"points\":[6317.61328125,5669.699999999999,6327.61328125,5669.699999999999,6498.103515625,5988.114,6508.103515625,5988.114],\"key\":-211},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rocoToAlex\",\"toPort\":\"in\",\"from\":265,\"to\":330,\"points\":[6317.61328125,5609.699999999999,6327.61328125,5609.699999999999,6479.999515625,5614.342000000002,6489.999515625,5614.342000000002],\"key\":-212},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rocoToRopa\",\"toPort\":\"in\",\"from\":265,\"to\":263,\"points\":[6317.61328125,5629.699999999999,6327.61328125,5629.699999999999,6498.103515625,5788.114,6508.103515625,5788.114],\"key\":-231},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"feedback\",\"toPort\":\"in\",\"from\":255,\"to\":271,\"points\":[9169.2475625,5734.142000000002,9179.2475625,5734.142000000002,9268.103515625,6040,9278.103515625,6040],\"key\":-239},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"feedback\",\"toPort\":\"in\",\"from\":255,\"to\":273,\"points\":[9169.2475625,5734.142000000002,9179.2475625,5734.142000000002,9171.896,6174.342000000002,5490,6180,5490,5960,5508.103515625,5900,5518.103515625,5900],\"key\":-238},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"simCommand\",\"toPort\":\"in\",\"from\":255,\"to\":266,\"points\":[9169.2475625,5714.142000000002,9179.2475625,5714.142000000002,9269.999515625,5964.342000000002,9279.999515625,5964.342000000002],\"key\":-327},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"simCommand\",\"toPort\":\"in\",\"from\":255,\"to\":236,\"points\":[9169.2475625,5714.142000000002,9179.2475625,5714.142000000002,9248.103515625,5740,9258.103515625,5740],\"key\":-328},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":255,\"points\":[5906.1499140625,3496.972000000001,5916.1499140625,3496.972000000001,6000,3530,6000,4060,8640,4060,8640,5670,8719.42725,5714.142000000002,8729.42725,5714.142000000002],\"key\":-333},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"oldState\",\"from\":233,\"to\":280,\"points\":[5906.1499140625,3496.972000000001,5916.1499140625,3496.972000000001,5970,3550,5970,4100,10300,4100,10300,5720,10622.6484375,5720,10632.6484375,5720],\"key\":-334},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":345,\"to\":233,\"points\":[5512.3579140625,3397.577,5522.3579140625,3397.577,5573.791515625,3496.972000000001,5583.791515625,3496.972000000001],\"key\":-326},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"outIndex\",\"toPort\":\"in\",\"from\":265,\"to\":284,\"points\":[6317.61328125,5669.699999999999,6327.61328125,5669.699999999999,6460,5430,6460,3850,6609.999515625001,3847.8050000000003,6619.999515625001,3847.8050000000003],\"key\":-341},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rocoToRopa\",\"toPort\":\"in\",\"from\":265,\"to\":232,\"points\":[6317.61328125,5629.699999999999,6327.61328125,5629.699999999999,6440,5410,6440,3700,6609.999515625001,3697.8050000000003,6619.999515625001,3697.8050000000003],\"key\":-342},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"state\",\"from\":233,\"to\":215,\"points\":[5906.1499140625,3496.972000000001,5916.1499140625,3496.972000000001,6010,3500,6090,3560,7034.075687500001,3557.8050000000003,7044.075687500001,3557.8050000000003],\"key\":-343},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":361,\"to\":384,\"points\":[10792.3579140625,3457.8050000000003,10802.3579140625,3457.8050000000003,10800,4250,4300,4250,4300,5670,4351.751953125,5669.9,4361.751953125,5669.9],\"key\":-270},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":230,\"to\":171,\"points\":[6892.3579140625,2249.742,6902.3579140625,2249.742,6999.999515625,2343.504000000001,7009.999515625,2343.504000000001],\"key\":-345},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":230,\"to\":229,\"points\":[6892.3579140625,2249.742,6902.3579140625,2249.742,6964.1997109375,2163.504000000001,6974.1997109375,2163.504000000001],\"key\":-346},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":270,\"to\":267,\"points\":[5480.4619140625,5670,5490.4619140625,5670,6210,5520,6360,5280,6488.103515625,5179.885,6498.103515625,5179.885],\"key\":-340},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"plan\",\"from\":270,\"to\":265,\"points\":[5480.4619140625,5670,5490.4619140625,5670,5862.1796875,5659.699999999999,5872.1796875,5659.699999999999],\"key\":-348},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"plan\",\"from\":270,\"to\":215,\"points\":[5480.4619140625,5670,5490.4619140625,5670,6200,5500,6200,3620,7034.075687500001,3617.8050000000003,7044.075687500001,3617.8050000000003],\"key\":-349},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":264,\"to\":268,\"points\":[6811.3447265625,5518.013999999999,6821.3447265625,5518.013999999999,6880,5550,8540,5550,8630,5610,10230,5610,10358.103515625,5550,10368.103515625,5550],\"key\":-350},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"simCommand\",\"from\":236,\"to\":280,\"points\":[9580.4619140625,5740,9590.4619140625,5740,10240,5740,10622.6484375,5740,10632.6484375,5740],\"key\":-352},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rocoToRobi\",\"toPort\":\"in\",\"from\":265,\"to\":274,\"points\":[6317.61328125,5649.699999999999,6327.61328125,5649.699999999999,8218.103515625,5678.114,8228.103515625,5678.114],\"key\":-355},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"command\",\"from\":274,\"to\":255,\"points\":[8550.4619140625,5678.114,8560.4619140625,5678.114,8719.42725,5734.142000000002,8729.42725,5734.142000000002],\"key\":-356},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":278,\"to\":266,\"points\":[6791.3447265625,6088.114,6801.3447265625,6088.114,6850,6070,9060,6030,9269.999515625,5964.342000000002,9279.999515625,5964.342000000002],\"key\":-357},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":278,\"to\":271,\"points\":[6791.3447265625,6088.114,6801.3447265625,6088.114,6850,6100,9060,6100,9268.103515625,6040,9278.103515625,6040],\"key\":-358},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"event\",\"toPort\":\"in\",\"from\":358,\"to\":283,\"points\":[5105.248046875,5690,5115.248046875,5690,5158.103515625,5900,5168.103515625,5900],\"key\":-365},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":344,\"to\":214,\"points\":[10451.3447265625,3789.7999999999993,10461.3447265625,3789.7999999999993,10860,3830,10860,3880,10918.103515625,3880,10928.103515625,3880],\"key\":-366},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":344,\"to\":213,\"points\":[10451.3447265625,3789.7999999999993,10461.3447265625,3789.7999999999993,10840,3800,10840,3450,10909.999515625,3407.8050000000003,10919.999515625,3407.8050000000003],\"key\":-367},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":203,\"to\":202,\"points\":[9952.3579140625,3451.367,9962.3579140625,3451.367,10028.103515625,3349.5000000000005,10038.103515625,3349.5000000000005],\"key\":-368},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":204,\"to\":344,\"points\":[8492.3579140625,3501.367,8502.3579140625,3501.367,8790,3500,8790,3790,10118.103515625,3789.7999999999993,10128.103515625,3789.7999999999993],\"key\":-369},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":204,\"to\":298,\"points\":[8492.3579140625,3501.367,8502.3579140625,3501.367,8596.440921875,3461.567000000001,8606.440921875,3461.567000000001],\"key\":-370},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":332,\"to\":329,\"points\":[6251.3447265625,5900,6261.3447265625,5900,6498.103515625,5988.114,6508.103515625,5988.114],\"key\":-336},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":332,\"to\":272,\"points\":[6251.3447265625,5900,6261.3447265625,5900,6498.103515625,5908.114,6508.103515625,5908.114],\"key\":-371},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":332,\"to\":263,\"points\":[6251.3447265625,5900,6261.3447265625,5900,6498.103515625,5788.114,6508.103515625,5788.114],\"key\":-372},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":332,\"to\":330,\"points\":[6251.3447265625,5900,6261.3447265625,5900,6479.999515625,5614.342000000002,6489.999515625,5614.342000000002],\"key\":-373},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":332,\"to\":278,\"points\":[6251.3447265625,5900,6261.3447265625,5900,6458.103515625,6088.114,6468.103515625,6088.114],\"key\":-359},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":332,\"to\":264,\"points\":[6251.3447265625,5900,6261.3447265625,5900,6478.103515625,5518.013999999999,6488.103515625,5518.013999999999],\"key\":-361},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":226,\"to\":359,\"points\":[8352.3579140625,2153.2039999999997,8362.3579140625,2153.2039999999997,8509.999515625,2169.642,8519.999515625,2169.642],\"key\":-351},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":226,\"to\":295,\"points\":[8352.3579140625,2153.2039999999997,8362.3579140625,2153.2039999999997,8406.440921875,2023.5040000000008,8416.440921875,2023.5040000000008],\"key\":-354},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":359,\"to\":219,\"points\":[8843.2407265625,2169.642,8853.2407265625,2169.642,10429.999515625,2169.742,10439.999515625,2169.742],\"key\":-362},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":359,\"to\":357,\"points\":[8843.2407265625,2169.642,8853.2407265625,2169.642,9020,2420,9020,3650,7050,3660,7050,4000,7088.103515625,4050,7098.103515625,4050],\"key\":-363},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":195,\"to\":357,\"points\":[6942.357914062501,3477.504999999999,6952.357914062501,3477.504999999999,6990,3580,6990,4010,7088.103515625,4050,7098.103515625,4050],\"key\":-364},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":195,\"to\":201,\"points\":[6942.357914062501,3477.504999999999,6952.357914062501,3477.504999999999,7104.199710937501,3407.8050000000003,7114.199710937501,3407.8050000000003],\"key\":-374},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"request\",\"from\":195,\"to\":215,\"points\":[6942.357914062501,3477.504999999999,6952.357914062501,3477.504999999999,7034.075687500001,3577.8050000000003,7044.075687500001,3577.8050000000003],\"key\":-375},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":242,\"to\":170,\"points\":[7662.4619140625,905.6629999999996,7672.4619140625,905.6629999999996,9500,916.402,9688.103515625,1043.147,9698.103515625,1043.147],\"key\":-376},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"user\",\"from\":242,\"to\":292,\"points\":[7662.4619140625,905.6629999999996,7672.4619140625,905.6629999999996,7830,666.402,8446.544921875,665.8630000000003,8456.544921875,665.8630000000003],\"key\":-377},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":273,\"to\":332,\"points\":[5840.4619140625,5900,5850.4619140625,5900,5918.103515625,5900,5928.103515625,5900],\"key\":-360},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"feedback\",\"from\":273,\"to\":265,\"points\":[5840.4619140625,5900,5850.4619140625,5900,5862.1796875,5679.699999999999,5872.1796875,5679.699999999999],\"key\":-378},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":275,\"to\":267,\"points\":[5491.3447265625,5520,5501.3447265625,5520,6130,5520,6330,5260,6488.103515625,5179.885,6498.103515625,5179.885],\"key\":-379},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"feedback\",\"toPort\":\"in\",\"from\":269,\"to\":268,\"points\":[10027.8203125,5390,10037.8203125,5390,10130,5390,10358.103515625,5550,10368.103515625,5550],\"key\":-380},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"feedback\",\"toPort\":\"in\",\"from\":269,\"to\":288,\"points\":[10027.8203125,5390,10037.8203125,5390,10160,5440,10160,5790,10278.103515625,5820,10288.103515625,5820],\"key\":-381},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"status\",\"toPort\":\"in\",\"from\":269,\"to\":277,\"points\":[10027.8203125,5410,10037.8203125,5410,10358.103515625,5410,10368.103515625,5410],\"key\":-382},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"clear\",\"toPort\":\"in\",\"from\":264,\"to\":285,\"points\":[6811.3447265625,5518.013999999999,6821.3447265625,5518.013999999999,6880,5490,9280,5490,9350,5210,10348.103515625,5210,10358.103515625,5210],\"key\":-384},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"newState\",\"toPort\":\"in\",\"from\":280,\"to\":294,\"points\":[11069.3720703125,5720,11079.3720703125,5720,10900,4300,5050,4300,5050,3680,5178.103515625,3680,5188.103515625,3680],\"key\":-385},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":346,\"to\":345,\"points\":[4610.4619140625,2690.152,4620.4619140625,2690.152,4860,2740,4860,3400,5179.999515625,3397.577,5189.999515625,3397.577],\"key\":-387},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":346,\"to\":361,\"points\":[4610.4619140625,2690.152,4620.4619140625,2690.152,10360,2700,10360,3460,10459.999515625,3457.8050000000003,10469.999515625,3457.8050000000003],\"key\":-388},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"simFeedback\",\"from\":288,\"to\":280,\"points\":[10610.4619140625,5820,10620.4619140625,5820,10622.6484375,5760,10632.6484375,5760],\"key\":-389},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":294,\"to\":233,\"points\":[5510.4619140625,3680,5520.4619140625,3680,5573.791515625,3496.972000000001,5583.791515625,3496.972000000001],\"key\":-339},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"newState\",\"toPort\":\"in\",\"from\":280,\"to\":331,\"points\":[11069.3720703125,5720,11079.3720703125,5720,11120,5640,12510,5640,12510,3160,12568.103515625,3120,12578.103515625,3120],\"key\":-335},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":358,\"to\":275,\"points\":[5105.248046875,5670,5115.248046875,5670,5158.103515625,5520,5168.103515625,5520],\"key\":-338,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":358,\"to\":270,\"points\":[5105.248046875,5670,5115.248046875,5670,5148.103515625,5670,5158.103515625,5670],\"key\":-344,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"simCommand\",\"from\":236,\"to\":225,\"points\":[9580.4619140625,5740,9590.4619140625,5740,9592.6484375,5509.799999999999,9602.6484375,5509.799999999999],\"key\":-127},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToRopa\",\"toPort\":\"in\",\"from\":252,\"to\":250,\"points\":[10218.599609375,664.862999999998,10228.599609375,664.862999999998,10320.103515625,756.1680000000006,10330.103515625,756.1680000000006],\"key\":-126},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexToRopa\",\"toPort\":\"in\",\"from\":252,\"to\":395,\"points\":[10218.599609375,664.862999999998,10228.599609375,664.862999999998,10260,1010,10260,1300,6120,1300,6120,2240,6171.751953125,2239.9,6181.751953125,2239.9],\"key\":-133},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":220,\"to\":219,\"points\":[10132.3579140625,2018.409000000001,10142.3579140625,2018.409000000001,10429.999515625,2169.742,10439.999515625,2169.742],\"key\":-134,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":220,\"to\":360,\"points\":[10132.3579140625,2018.409000000001,10142.3579140625,2018.409000000001,10200,2670,6200,2670,6201.751953125,3469.9,6211.751953125,3469.9],\"key\":-137,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"feedback\",\"toPort\":\"in\",\"from\":280,\"to\":285,\"points\":[11069.3720703125,5740,11079.3720703125,5740,11270,5680,11270,5280,10310,5280,10310,5250,10348.103515625,5210,10358.103515625,5210],\"key\":-142},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"feedback\",\"toPort\":\"in\",\"from\":280,\"to\":273,\"points\":[11069.3720703125,5740,11079.3720703125,5740,11270,5850,11270,6200,5470,6200,5470,5960,5508.103515625,5900,5518.103515625,5900],\"key\":-145},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"rocoToAlex\",\"toPort\":\"in\",\"from\":265,\"to\":238,\"points\":[6317.61328125,5609.699999999999,6327.61328125,5609.699999999999,6400,5400,6400,1010,6580.103515625,705.8630000000003,6590.103515625,705.8630000000003],\"key\":-146},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":193,\"to\":199,\"points\":[10911.063878428937,-1615.4789305308216,10841.932121571062,-1575.9750694691784],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-140},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":184,\"to\":193,\"points\":[10946.498,-1695.227,10946.498,-1656.2269999999999],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-135},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":199,\"to\":212,\"points\":[10806.498,-1535.227,10806.498,-1476.2269999999999],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-143},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":193,\"to\":180,\"points\":[10994.399430041809,-1615.5327655455324,11087.871283395754,-1576.1270000000004],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-151},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":180,\"to\":187,\"points\":[11136.498,-1535.227,11136.498,-1486.227],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-155},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":187,\"to\":189,\"points\":[11136.498,-1445.2269999999999,11136.498,-1396.2269999999999],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-157},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":189,\"to\":367,\"points\":[11136.258788990612,-1355.2269999999999,11135.739211009388,-1310.6999999999998],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-158},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":279,\"to\":184,\"points\":[11203.952400466145,-1185.8241844543365,11300.998,-1165.7269999999999,11830.998,-1165.527,11830.998,-1755.527,11150.998,-1755.527,11021.998,-1730.4208875305624],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-159},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":279,\"to\":187,\"points\":[11067.964804770154,-1183.9819950857948,10990.998,-1165.7269999999999,10990.998,-1465.7269999999999,11060.998,-1465.7269999999999],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-160},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":212,\"to\":184,\"points\":[10807.42047725329,-1435.2275054824277,10810.998,-1355.7269999999999,10500.998,-1355.7269999999999,10500.998,-1715.727,10870.998,-1715.727],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-161},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":328,\"to\":256,\"points\":[3160.4619140625,1970,3170.4619140625,1970,3200,1970,3210,570,8078.103515625,560,8088.103515625,560],\"key\":-174,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":351,\"to\":218,\"points\":[3160.4619140625,2160,3170.4619140625,2160,5490,2160,5490,2000,8059.999515625,1999.7420000000002,8069.999515625,1999.7420000000002],\"key\":-175,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":365,\"to\":211,\"points\":[3150.4619140625,2340,3160.4619140625,2340,3200,2340,3200,3320,8208.103515625,3320,8218.103515625,3320],\"key\":-182,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":235,\"to\":239,\"points\":[5490.4619140625,1141.658,5500.4619140625,1141.658,5608.103515625,866.9090000000023,5618.103515625,866.9090000000023],\"key\":-186,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":216,\"to\":310,\"points\":[2500.4619140625,2520,2510.4619140625,2520,2790,2520,2790,1430,3289.3173828125,1430,3299.3173828125,1430],\"key\":-188,\"color\":\"LightCoral\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"alexPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":190,\"points\":[1990.73046875,2040,2000.73046875,2040,2170,2040,2208.103515625,1959.9,2218.103515625,1959.9],\"key\":-191},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"traviPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":194,\"points\":[1990.73046875,2060,2000.73046875,2060,2180,2060,2208.103515625,2149.9,2218.103515625,2149.9],\"key\":-192},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":208,\"points\":[1990.73046875,2080,2000.73046875,2080,2150,2080,2208.103515625,2329.9,2218.103515625,2329.9],\"key\":-193},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"userPrompt\",\"toPort\":\"in\",\"from\":261,\"to\":216,\"points\":[1990.73046875,2100,2000.73046875,2100,2120,2100,2218.103515625,2520,2228.103515625,2520],\"key\":-195},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":369,\"to\":345,\"points\":[3170.4619140625,2730,3180.4619140625,2730,3180,2730,3180,3500,5000,3500,5179.999515625,3397.577,5189.999515625,3397.577],\"key\":-196,\"color\":\"#ccffcc\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"environmentState\",\"toPort\":\"in\",\"from\":261,\"to\":210,\"points\":[1990.73046875,2120,2000.73046875,2120,2090,2120,2198.103515625,2719.9,2208.103515625,2719.9],\"key\":-197},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"schedule\",\"from\":333,\"to\":327,\"points\":[-919.5380859375,2776.737,-909.5380859375,2776.737,-780,2170.737,-502.5166015625,2170,-492.5166015625,2170],\"key\":-199},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"userPromptList\",\"from\":343,\"to\":327,\"points\":[-919.5380859375,2606.737,-909.5380859375,2606.737,-790,2150.737,-502.5166015625,2150,-492.5166015625,2150],\"key\":-201},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"ropaPromptList\",\"from\":341,\"to\":327,\"points\":[-909.5380859375,2476.737,-899.5380859375,2476.737,-810,2130.737,-502.5166015625,2130,-492.5166015625,2130],\"key\":-202},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"traviPromptList\",\"from\":339,\"to\":327,\"points\":[-909.5380859375,2346.737,-899.5380859375,2346.737,-830,2110.737,-502.5166015625,2110,-492.5166015625,2110],\"key\":-207},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"alexPromptList\",\"from\":337,\"to\":327,\"points\":[-909.5380859375,2226.737,-899.5380859375,2226.737,-840,2090.737,-502.5166015625,2090,-492.5166015625,2090],\"key\":-208},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"robotAIPromptList\",\"from\":334,\"to\":327,\"points\":[-909.5380859375,2102.259847498308,-899.5380859375,2102.259847498308,-850,2070.737,-502.5166015625,2070,-492.5166015625,2070],\"key\":-209},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"environmentStateList\",\"from\":290,\"to\":327,\"points\":[-909.5380859375,1966.737,-899.5380859375,1966.737,-850,2050.737,-502.5166015625,2050,-492.5166015625,2050],\"key\":-210},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"nextExperiment\",\"from\":335,\"to\":327,\"points\":[-3139.5380859375,2740.737,-3129.5380859375,2740.737,-2490,2740,-2490,2870,-580,2870,-580,2030,-502.5166015625,2030,-492.5166015625,2030],\"key\":-213},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":333,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-1400,2460.737,-1251.896484375,2776.737,-1241.896484375,2776.737],\"key\":-198},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":343,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-1390,2430.737,-1271.896484375,2606.737,-1261.896484375,2606.737],\"key\":-214},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":341,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-1380,2400.737,-1271.896484375,2476.737,-1261.896484375,2476.737],\"key\":-215},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":339,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-1380,2370.737,-1271.896484375,2346.737,-1261.896484375,2346.737],\"key\":-216},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":337,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-1390,2340.737,-1272.896484375,2226.737,-1271.896484375,2226.737,-1261.896484375,2226.737],\"key\":-217},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":334,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-1400,2310.737,-1271.896484375,2102.259847498308,-1261.896484375,2102.259847498308],\"key\":-218},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":290,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-1410,2280.737,-1271.896484375,1966.737,-1261.896484375,1966.737],\"key\":-219},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"startApplication\",\"toPort\":\"in\",\"from\":261,\"to\":307,\"points\":[1990.73046875,2140,2000.73046875,2140,2070,2140,2070,2890,-2430,2890,-2431.896484375,2670.737,-2421.896484375,2670.737],\"key\":-222},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":320,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3709.999515625,1430,3719.999515625,1430],\"key\":-223,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":293,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3708.103515625,1540,3718.103515625,1540],\"key\":-225,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"startApplication\",\"toPort\":\"trigger\",\"from\":261,\"to\":310,\"points\":[1990.73046875,2140,2000.73046875,2140,2150,2020,2150,1810,2820,1810,2820,1450,3289.3173828125,1450,3299.3173828125,1450],\"key\":-226},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":297,\"to\":320,\"points\":[3630.4619140625,1570,3640.4619140625,1570,3709.999515625,1430,3719.999515625,1430],\"key\":-228,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":297,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-1580,2270,-1410,1860,-180,1770,-50,1600,2740,1620,2740,1570,3308.103515625,1570,3318.103515625,1570],\"key\":-230},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":281,\"to\":308,\"points\":[-3139.5380859375,2370.737,-3129.5380859375,2370.737,-2490,2420.737,-2451.896484375,2220.737,-2441.896484375,2220.737],\"key\":-232},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":190,\"to\":328,\"points\":[2490.4619140625,1959.9,2500.4619140625,1959.9,2821.751953125,1960,2831.751953125,1960],\"key\":-233},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":194,\"to\":351,\"points\":[2490.4619140625,2149.9,2500.4619140625,2149.9,2821.751953125,2150,2831.751953125,2150],\"key\":-234,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":208,\"to\":365,\"points\":[2490.4619140625,2329.9,2500.4619140625,2329.9,2811.751953125,2330,2821.751953125,2330],\"key\":-235,\"color\":\"LightPink\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":210,\"to\":369,\"points\":[2530.4619140625,2719.9,2540.4619140625,2719.9,2831.751953125,2720,2841.751953125,2720],\"key\":-236,\"color\":\"#ccffcc\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":310,\"to\":340,\"points\":[3640.4619140625,1440,3650.4619140625,1440,3740,1130,4070.751953125,1130,4071.751953125,1129.9,4081.751953125,1129.9],\"key\":-241,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":340,\"to\":235,\"points\":[4410.4619140625,1139.9,4420.4619140625,1139.9,5138.103515625,1141.658,5148.103515625,1141.658],\"key\":-240,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":340,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-220,1670,-190,1620,2760,1640,2760,1150,4071.751953125,1149.9,4081.751953125,1149.9],\"key\":-244},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":328,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1690,-180,1640,2630,1660,2700,1980,2821.751953125,1980,2831.751953125,1980],\"key\":-247},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":351,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1710,-172.37881499583682,1658.7029711273585,2620,1680,2730,2170,2821.751953125,2170,2831.751953125,2170],\"key\":-248},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":365,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-210,1730,-170,1680,2610,1700,2750,2350,2811.751953125,2350,2821.751953125,2350],\"key\":-249},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":369,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-200,1750,-154.75109121645937,1693.4499570930984,2594.49897316846,1715.484658371211,2813.1510519010144,2742.6397843523805,2831.751953125,2740,2841.751953125,2740],\"key\":-250},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToRoco\",\"toPort\":\"in\",\"from\":202,\"to\":214,\"points\":[10406.4892578125,3359.5000000000005,10416.4892578125,3359.5000000000005,10500,3660,10750,3660,10750,3930,10880,3930,10918.103515625,3880,10928.103515625,3880],\"key\":-254},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"ropaToRoco\",\"toPort\":\"in\",\"from\":202,\"to\":361,\"points\":[10406.4892578125,3359.5000000000005,10416.4892578125,3359.5000000000005,10459.999515625,3457.8050000000003,10469.999515625,3457.8050000000003],\"key\":-256},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"simFeedback\",\"toPort\":\"in\",\"from\":225,\"to\":268,\"points\":[10064.2548828125,5509.799999999999,10074.2548828125,5509.799999999999,10358.103515625,5550,10368.103515625,5550],\"key\":-237},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"simFeedback\",\"toPort\":\"in\",\"from\":225,\"to\":288,\"points\":[10064.2548828125,5509.799999999999,10074.2548828125,5509.799999999999,10180,5540,10180,5780,10278.103515625,5820,10288.103515625,5820],\"key\":-243},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorReached\",\"toPort\":\"in\",\"from\":265,\"to\":323,\"points\":[6317.61328125,5689.699999999999,6327.61328125,5689.699999999999,6500,6470,6538.103515625,6470,6548.103515625,6470],\"key\":-257},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":327,\"to\":326,\"points\":[77.5166015625,2080,87.5166015625,2080,660,2080,660,2050,801.62109375,2050,811.62109375,2050],\"key\":-258,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"errorReached\",\"toPort\":\"errorMessage\",\"from\":265,\"to\":326,\"points\":[6317.61328125,5689.699999999999,6327.61328125,5689.699999999999,6400,6140,730,6140,730,2070,801.62109375,2070,811.62109375,2070],\"key\":-259},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"successReached\",\"toPort\":\"in\",\"from\":265,\"to\":354,\"points\":[6317.61328125,5709.699999999999,6327.61328125,5709.699999999999,6460,6690,6548.103515625,6690,6558.103515625,6690],\"key\":-260},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"successReached\",\"toPort\":\"successMessage\",\"from\":265,\"to\":326,\"points\":[6317.61328125,5709.699999999999,6327.61328125,5709.699999999999,6360,6120,760,6120,760,2090,801.62109375,2090,811.62109375,2090],\"key\":-262},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":326,\"to\":261,\"points\":[1338.2685546875,2080,1348.2685546875,2080,1538.103515625,2090,1548.103515625,2090],\"key\":-221,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"endOfSchedule\",\"toPort\":\"saveStatistics\",\"from\":327,\"to\":326,\"points\":[77.5166015625,2100,87.5166015625,2100,660,2100,660,2130,801.62109375,2130,811.62109375,2130],\"key\":-263},\n{\"text\":\"Reference\",\"color\":\"red\",\"category\":\"Connectors_LinkType1\",\"from\":367,\"to\":279,\"points\":[11135.5,-1269.6999999999998,11135.5,-1220.5],\"fromPort\":\"\",\"toPort\":\"\",\"key\":-265},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"tooManyReplan\",\"toPort\":\"tooManyReplan\",\"from\":265,\"to\":326,\"points\":[6317.61328125,5729.699999999999,6327.61328125,5729.699999999999,6339.310796171647,6088.571898399913,801.8705349438142,6082.269318643136,790,2110,801.62109375,2110,811.62109375,2110],\"key\":-264},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"nextExperiment\",\"toPort\":\"nextExperiment\",\"from\":326,\"to\":327,\"points\":[1338.2685546875,2100,1348.2685546875,2100,1380,2100,1380,1950,-530,1950,-530,2010,-502.5166015625,2030,-492.5166015625,2030],\"key\":-266},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":360,\"to\":195,\"points\":[6540.4619140625,3479.9,6550.4619140625,3479.9,6609.999515625001,3477.504999999999,6619.999515625001,3477.504999999999],\"key\":-267,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":374,\"to\":376,\"points\":[-3139.5380859375,420,-3129.5380859375,420,-3000.572265625,479.79999999999995,-2990.572265625,479.79999999999995],\"key\":-268},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":375,\"to\":376,\"points\":[-3139.5380859375,550,-3129.5380859375,550,-3000.572265625,499.79999999999995,-2990.572265625,499.79999999999995],\"key\":-269},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":376,\"to\":360,\"points\":[-2659.5380859375,489.79999999999995,-2649.5380859375,489.79999999999995,-2360,400,-1680,400,-1680,3880,6145.395412517533,3876.942589377504,6140.054559675014,3491.30674765824,6201.751953125,3489.9,6211.751953125,3489.9],\"key\":-271},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":379,\"to\":378,\"points\":[-3149.5380859375,950,-3139.5380859375,950,-3010.572265625,899.6999999999999,-3000.572265625,899.6999999999999],\"key\":-272},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":380,\"to\":378,\"points\":[-3149.5380859375,820,-3139.5380859375,820,-3010.572265625,879.6999999999999,-3000.572265625,879.6999999999999],\"key\":-273},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":384,\"to\":358,\"points\":[4690.4619140625,5679.9,4700.4619140625,5679.9,4768.103515625,5680,4778.103515625,5680],\"key\":-274,\"color\":\"red\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":378,\"to\":384,\"points\":[-2669.5380859375,889.6999999999999,-2659.5380859375,889.6999999999999,-2370,800,-1650,800,-1650,5690,4351.751953125,5689.9,4361.751953125,5689.9],\"key\":-275},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":392,\"to\":391,\"points\":[-3139.5380859375,150,-3129.5380859375,150,-3000.572265625,99.8,-2990.572265625,99.8],\"key\":-276},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":393,\"to\":391,\"points\":[-3139.5380859375,20,-3129.5380859375,20,-3000.572265625,79.8,-2990.572265625,79.8],\"key\":-277},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":395,\"to\":230,\"points\":[6510.4619140625,2249.9,6520.4619140625,2249.9,6559.999515625,2249.742,6569.999515625,2249.742],\"key\":-278,\"color\":\"yellowgreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":391,\"to\":395,\"points\":[-2659.5380859375,89.8,-2649.5380859375,89.8,-2370,0,-1580,0,-1580,90,6040,90,6040,2260,6171.751953125,2259.9,6181.751953125,2259.9],\"key\":-279},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":381,\"to\":373,\"points\":[-3149.5380859375,-260.1,-3139.5380859375,-260.1,-2971.896484375,-260.20000000000005,-2961.896484375,-260.20000000000005],\"key\":-280},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"true\",\"from\":366,\"to\":350,\"points\":[-3139.5380859375,1830.6370000000002,-3129.5380859375,1830.6370000000002,-3020.572265625,1879.9,-3010.572265625,1879.9],\"key\":-242},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"false\",\"from\":368,\"to\":350,\"points\":[-3139.5380859375,1960.6370000000002,-3129.5380859375,1960.6370000000002,-3020.572265625,1899.9,-3010.572265625,1899.9],\"key\":-245},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":373,\"to\":186,\"points\":[-2649.5380859375,-260.20000000000005,-2639.5380859375,-260.20000000000005,-2601.896484375,-260,-2591.896484375,-260],\"key\":-227,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":391,\"to\":398,\"points\":[-2659.5380859375,89.8,-2649.5380859375,89.8,-2428.248046875,90,-2418.248046875,90],\"key\":-246,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"in\",\"from\":373,\"to\":296,\"points\":[-2649.5380859375,-260.20000000000005,-2639.5380859375,-260.20000000000005,-2579.10163489588,-188.91927175840408,-2275.3075239336417,-192.34392366226894,-2261.896484375,-260,-2251.896484375,-260],\"key\":-281,\"color\":\"LightSeaGreen\"},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":376,\"to\":400,\"points\":[-2659.5380859375,489.79999999999995,-2649.5380859375,489.79999999999995,-2428.248046875,490,-2418.248046875,490],\"key\":-251},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":378,\"to\":402,\"points\":[-2669.5380859375,889.6999999999999,-2659.5380859375,889.6999999999999,-2418.248046875,890,-2408.248046875,890],\"key\":-252},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"gate\",\"from\":350,\"to\":404,\"points\":[-2679.5380859375,1889.9,-2669.5380859375,1889.9,-2428.248046875,1890,-2418.248046875,1890],\"key\":-282},\n{\"category\":\"CodeFlow_Code\",\"fromPort\":\"out\",\"toPort\":\"resetExperiment\",\"from\":324,\"to\":327,\"points\":[-4229.5380859375,1240,-4219.5380859375,1240,-1220,1240,-650,2010,-502.5166015625,2010,-492.5166015625,2010],\"key\":-283}\n]}"
}