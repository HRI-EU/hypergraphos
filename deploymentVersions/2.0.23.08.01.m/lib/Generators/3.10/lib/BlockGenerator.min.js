var window,generatorsConfig;class BlockGenerator{constructor(){this.template="",this.tagLen=2,this.blockExp=new RegExp(/\[#(.+)#\]/g),this.data={},this.output=""}setTemplate(t){this.template=t}getOutput(){return this.output.split("\n")}getOutputStr(){return this.output}process(t,e){this.data=t;let n=0;if(this.template){t=this.template.matchAll(this.blockExp);if(t){for(const l of t){var i=l.index,s=this._getColumn(this.template,i),r=l[1],r=this._getKeyValue(e,r),r=this._reIndent(r,0),r=this._reIndent(r,s);this.output=this.output+this.template.substring(n,i)+r,n=i+l[0].length}this.output=this.output+this.template.substring(n)}}}_getColumn(e,n){let i=n;if(e){let t=n;for(;0<=t&&"\n"!=e[t];)--t;i="\n"==e[t]?n-t-1:n}return i}_reIndent(t,e){var n,i,s=this._getIndent(t,null,!0);return e<s?(i=" ".repeat(n=s-e),t.replaceAll("\n"+i,"\n").substring(n)):s<e?(i=" ".repeat(e-s),t.replaceAll("\n","\n"+i)):t}_getIndent(e,n,i){i=!!i,-1!=n&&null!=n||(n=e.length-1);let s=0,r=1/0;if(e){let t="";for(;0<=n;){var l=e[n];if("\n"==l){if(t!=l){if(!i){s=n;break}if(s<r&&(r=s,(s=0)==r))break}}else" "==l?++s:"\t"==l?s+=2:s=0;t=l,--n}}return i&&((r==1/0||s<r)&&(r=s),s=r),s}_getKeyValue(t,e){return t?t(this.data,e):e in this.data?this.data[e]:""}}window||(module.exports=BlockGenerator);