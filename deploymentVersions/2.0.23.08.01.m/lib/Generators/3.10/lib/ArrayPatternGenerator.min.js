class BasicGenerator{constructor(){this.setDefaultParams()}setParams(e){this._setPlaceholderChar(e)}setDefaultParams(){this.pChar="%"}_setPlaceholderChar(e){this.pChar=e}_replacePlaceholder(r){var t=[];let l=0;if(r)for(let e=0;e<r.length;++e){var a=r[e];a==this.pChar&&e<r.length-1&&-1!="beif".indexOf(r[e+1])?(t.push(this.pChar+l++),++e):t.push(a)}return{line:t.join(""),placeholderCount:l}}_fillFromArray(e,a){var n=[],h=(e,r,t)=>{var l=[];t=void 0!==t?t:0;let a=e[0],n="",h=0;if(r)for(;h<r.length;){var i=a.indexOf(this.pChar+h),s=a.indexOf(this.pChar+"t");if(i==s&&-1==i)break;(-1==i?1/0:i)<(-1==s?1/0:s)?(a=a.replace(this.pChar+h,r[h]),n+=" ".repeat(t[h]-r[h].length),++h):(a=a.replace(this.pChar+"t",n),n="")}return l.push(a),l};if(1==e.length){var r=h(e,a[0]);n.push(r[0])}else{let t,l=0;for(let e=0;e<a.length;++e)if(0==e)l=a[e].length;else if(l!=a[e].length)return["Error: all data lines must have same length"];for(let r=0;r<a.length;++r){t=t||Array.from(new Array(l),()=>0);for(let e=0;e<a[r].length;++e)t[e]<a[r][e].length&&(t[e]=a[r][e].length)}var i=[e[0]],s=[e[1]],o=[e[2]];for(let r=0;r<a.length;++r){let e="";e=0==r?h(i,a[r],t):r==a.length-1?h(o,a[r],t):h(s,a[r],t),n.push(e[0])}}return n}_fillFromStringArray(e,t){var l=[],a=(e,r)=>{let t="";return null!=r&&(e=e[0],t=e.replace(this.pChar+0,r)),t};if(1==e.length){var r=a(e,t[0]);l.push(r)}else{var n=[e[0]],h=[e[1]],i=[e[2]];for(let r=0;r<t.length;++r){let e="";e=0==r?a(n,t[r]):r==t.length-1?a(i,t[r]):a(h,t[r]),l.push(e)}}return l}_findLineTemplateParts(e){var r,t,l,a=[];return e&&1==e.length&&((t=(e=e[0]).indexOf("§"))<(l=e.indexOf("§",t+1))?(r=e.substring(0,t),t=" "+e.substring(t+1,l)+" ",l=e.substring(l+1),a.push(r),a.push(t),a.push(l)):a.push(e)),a}}class LinePatternGenerator extends BasicGenerator{constructor(){super()}doReplace(e,r,t){t&&this._setPlaceholderChar(t);var l=e.parameterList,a=[];let n=0;if(r)for(const i of r){if(l[n]){let e=i;"string"==typeof i&&(e=[i]);var h=this._generateLinePattern([l[n]],e);a.push(h[0])}n<l.length-1?++n:n=0}e.setTemplate(a)}_generateLinePattern(l,a){var n=[];if(l&&1==l.length&&a){let e="",r="",t="";l=this._findLineTemplateParts(l);if(1==l.length){var h=this._replacePlaceholder(l[0]),h=this._fillFromArray([h.line],[a]);n.push(h[0])}else{if(l[0]&&0<(h=this._replacePlaceholder(l[0])).placeholderCount&&(i=a.splice(0,h.placeholderCount),h=this._fillFromArray([h.line],[i]),e=h[0]),l[2]&&0<(i=this._replacePlaceholder(l[2])).placeholderCount&&(h=a.splice(a.length-i.placeholderCount,a.length),i=this._fillFromArray([i.line],[h]),t=i[0]),l[1]&&0<a.length){var h=l[1],i=h.indexOf(this.pChar+"i")+2,l=h.indexOf(this.pChar+"i",i);let e="";i<l&&(e=h.substring(i,l));h=a.join(e);r=" "+h+" "}n.push(e+r+t)}}return n}}class ArrayPatternGenerator extends BasicGenerator{constructor(){super()}doReplace(e,r,t){t&&this._setPlaceholderChar(t);t=e.parameterList,t=this._generateBlockPattern(t,r);e.setTemplate(t)}_generateBlockPattern(e,r){let t=[];if(r&&e){var l=this._generateTemplateOneZero(e),a=r.length;if("string"==typeof r[0])for(const s in l){var n=l[s];if(n.isMySize(a,1)){t=this._fillFromStringArray(n.template,r);break}}else{var h=0<r.length?r[0].length:0;for(const o in l){var i=l[o];if(i.isMySize(a,h)){t=this._fillFromArray(i.template,r);break}}}}else t=["Error: data or template not defined correctly"];return t}_generateTemplateOneZero(e){let t="",l="",a=[],n=0,h=0;if(!(e&&2<=e.length))return{0:{template:["Error: Template must be composed of at least 2 lines"],isMySize:(e,r)=>!0}};{var i=3<=e.length?e.length-1:1,s=e[0],o=e[i],p=[],c=[],g=[];let r=!1;var f=Math.max(s.length,o.length);for(let e=0;e<f;++e){var u=e<s.length?s[e]:" ",d=e<o.length?o[e]:" ";p.push(r?d:u),g.push(r?u:d),r?(u!=d||" "==u&&" "==d)&&c.push(d):c.push(u),!r&&s[e]==this.pChar&&e<s.length-1&&"i"==s[e+1]&&(r=!0)}l=c.join("").replaceAll(/\§.*\§/g,"");var m=this._replacePlaceholder(l);n=m.placeholderCount,l=m.line,t=p.join("").replaceAll("§"," "),m=this._replacePlaceholder(t),h=m.placeholderCount,t=m.line,a=[e[0],g.join(""),e[e.length-1]];for(let e=0;e<a.length;++e){var v=a[e].replaceAll("§"," "),m=this._replacePlaceholder(v);a[e]=m.line}}return{0:{template:[l],isMySize:(e,r)=>e<=1&&r==n},1:{template:[t],isMySize:(e,r)=>1==e&&r==h},n:{template:a,isMySize:(e,r)=>e=>r==h}}}}var window;window||(module.exports={apg:new ArrayPatternGenerator,lpg:new LinePatternGenerator});