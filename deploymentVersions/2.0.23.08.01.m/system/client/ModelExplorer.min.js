class ModelExplorer{constructor(e,o){this.model={};this.indexNodeFieldNameList=["key","category","label","text"],this.indedLinkFieldNameList=["key","category","from","to","fromPort","toPort"]}setJSONModel(e,o){this.model[e]={jsonModel:o,objModel:null,indexModel:null},this._createModelIndex(e)}getProperty(e,o,n,t,d){t=t||"value";let i=o,l=d;if(i="object"!=typeof i?this.getNode(e,o):i)for(const r of i.rows)if(r.name==n){l=r[t];break}switch(l){case"true":l=!0;break;case"false":l=!1;break;default:isNaN(l)||(l=parseFloat(l))}return l}getNode(e,o){e=this._getId(e);let n=null;return n=e&&(e=this.model[e].indexModel.node.key[o])&&e.length?e[0]:n}getNodeIf(e,o,n){e=this._getId(e);let t=[];var d=this.model[e].objModel.nodeDataArray;if(e){for(const i of d)if(o(i)){if(null==n){t=i;break}t.push(i)}null!=n&&(t=t[n]||t[0])}return t}getNodeListIf(e,o){e=this._getId(e);var n=[],t=this.model[e].objModel.nodeDataArray;if(e)for(const d of t)o(d)&&n.push(d);return n}getNodeListFanInByNodeKey(e,o,n,t){var d=[];if(e=this._getId(e)){var i=[],l=this.model[e].indexModel.nodeKeyFanIn;if(l){if(n)for(const s of this.getLinkListFanInByNodeKey(e,o))s&&s.toPort==n&&i.push(s.from);else l[o]&&i.push(...l[o]);for(const a of i){var r=this.model[e].indexModel.node.key;r&&r[a]&&0<r[a].length&&(r=r[a][0],t&&!t(nodeData)||d.push(r))}}}return d}getNodeListFanOutByNodeKey(e,o,n){var t=[];if(e=this._getId(e)){var d=this.model[e].indexModel.nodeKeyFanOut;if(d){var i=[];if(n)for(const r of this.getLinkListFanOutByNodeKey(e,o))r&&r.fromPort==n&&i.push(r.to);else d[o]&&i.push(...d[o]);for(const s of i){var l=this.model[e].indexModel.node.key;l&&l[s]&&0<l[s].length&&(l=l[s][0],t.push(l))}}}return t}getNodeByFieldName(e,o,n,t){return this.getNodeListByFieldNameList(e,o,[n],t)[0]}getNodeListByFieldNameList(e,o,n,t){let d=[];if(e=this._getId(e)){var i=this.model[e].indexModel;for(const r of n)if(i.node[o]){var l=i.node[o][r];if(l)if(t)for(const s of l)t(s)&&d.push(s);else d=d.concat(l)}}return d}getLinkListFanInByNodeKey(e,o,n,t){let d=[];if(e=this._getId(e)){var i=this.model[e].indexModel.linkKeyOfNodeKeyFanIn;if(i&&i[o]){var i=i[o],l=this.model[e].indexModel.link.key;for(const s of i){var r=l[s];if(r)if(null!=n||t)for(const a of r)n&&a.toPort!=n||t&&!t(a)||d.push(a);else d=d.concat(r)}}}return d}getLinkListFanOutByNodeKey(e,o,n,t){let d=[];if(e=this._getId(e)){var i=this.model[e].indexModel.linkKeyOfNodeKeyFanOut;if(i&&i[o]){var i=i[o],l=this.model[e].indexModel.link.key;for(const s of i){var r=l[s];if(r)if(null!=n||t)for(const a of r)n&&a.fromPort!=n||t&&!t(a)||d.push(a);else d=d.concat(r)}}}return d}getMapValue(e,o,n){let t="";for(const d of o)if(n){if(n(e,d[0])){t=d[1];break}}else if(e==d[0]){t=d[1];break}return t}getLoopObjList(e,o,n,t){var d=[];if(o&&this[o]){o=this[o](e,n);if(o)for(const l of o){var i=t?new t(this,l):l;d.push(i)}}return d}getLoopObjListFromArray(e,o){var n=[];if(e)for(const d of e){var t=o?new o(this,d):d;n.push(t)}return n}_getId(e){let o=e;return e||0<(e=Object.keys(this.model)).length&&(o=e[0]),o}_createModelIndex(e){var o,n,t=this.model[e],e=JSON.parse(t.jsonModel);t.objModel=e,t.indexModel={node:{},link:{},nodeKeyFanInNodeKey:null,nodeKeyFanOutNodeKey:null,nodeKeyFanInLinkKey:null,nodeKeyFanOutLinkKey:null};for(const d of e.nodeDataArray)for(const i of this.indexNodeFieldNameList)this._createIndexFor(t.indexModel.node,i,d);for(const l of e.linkDataArray){t.indexModel.linkKeyOfNodeKeyFanIn||(t.indexModel.linkKeyOfNodeKeyFanIn={}),t.indexModel.linkKeyOfNodeKeyFanOut||(t.indexModel.linkKeyOfNodeKeyFanOut={});for(const r of this.indedLinkFieldNameList)this._createIndexFor(t.indexModel.link,r,l),"from"==r&&(t.indexModel.nodeKeyFanOut||(t.indexModel.nodeKeyFanOut={}),n=l.from,t.indexModel.nodeKeyFanOut[n]||(t.indexModel.nodeKeyFanOut[n]=[]),o=l.to,t.indexModel.nodeKeyFanOut[n].push(o),t.indexModel.linkKeyOfNodeKeyFanOut[n]||(t.indexModel.linkKeyOfNodeKeyFanOut[n]=[]),t.indexModel.linkKeyOfNodeKeyFanOut[n].push(l.key)),"to"==r&&(t.indexModel.nodeKeyFanIn||(t.indexModel.nodeKeyFanIn={}),o=l.to,t.indexModel.nodeKeyFanIn[o]||(t.indexModel.nodeKeyFanIn[o]=[]),n=l.from,t.indexModel.nodeKeyFanIn[o].push(n),t.indexModel.linkKeyOfNodeKeyFanIn[o]||(t.indexModel.linkKeyOfNodeKeyFanIn[o]=[]),t.indexModel.linkKeyOfNodeKeyFanIn[o].push(l.key))}}_createIndexFor(e,o,n){null!=n[o]&&(e[o]||(e[o]={}),e[o][n[o]]||(e[o][n[o]]=[]),e[o][n[o]].push(n))}}var module;module&&(module.exports=ModelExplorer);